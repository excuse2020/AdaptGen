class Solution {
	int digsum(int i) {
		int n1 = 0;
		while (i != 0) {
			int rem = i % 10;
			n1 = n1 + rem;
			i = i / 10;
		}
		return n1;
	}
	int maximumSum(int[] nums) {
		int max = -1;
		HashMap<Integer, List<Integer>> map = new HashMap<>();
		for (int i: nums) {	
			int j = digsum(i);
			if (!map.containsKey(j)) {
				map.put(j,new ArrayList<>());
			}
			map.get(j).add(i);
		}
		for (List<Integer> l: map.values()) {	
			Collections.sort(l);
			if (l.size() >= 2) {
				max = Math.max(max,l.get(l.size() - 1) + l.get(l.size() - 2));
			}
		}
		return max;
	}
}