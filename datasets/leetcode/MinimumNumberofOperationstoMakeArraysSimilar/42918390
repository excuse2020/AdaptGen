class Solution {
	long makeSimilar(int[] nums, int[] target) {
		Arrays.sort(nums);
		Arrays.sort(target);
		int n = nums.length;
		List<Integer> oddNums = new ArrayList<>(), evenNums = new ArrayList<>();
		List<Integer> oddTarget = new ArrayList<>(), evenTarget = new ArrayList<>();
		for (int i = 0; i < n; ++i) {
			if (nums[i] % 2 == 1) {
				oddNums.add(nums[i]);
			} 
			else {
				evenNums.add(nums[i]);
			}
			if (target[i] % 2 == 1) {
				oddTarget.add(target[i]);
			} 
			else {
				evenTarget.add(target[i]);
			}
		}
		long ans = 0;
		int i = 0;
		while (i < evenNums.size()) {
			if (evenNums.get(i) < evenTarget.get(i)) {
				ans += (evenTarget.get(i) - evenNums.get(i)) / 2;
			}
			i++;
		}
		i = 0;
		while (i < oddNums.size()) {
			if (oddNums.get(i) < oddTarget.get(i)) {
				ans += (oddTarget.get(i) - oddNums.get(i)) / 2;
			}
			i++;
		}
		return ans;
	}
}