class Solution {
	int longestSubarray(int[] nums, int limit) {
		int max = (int) -1e9, min = (int) 1e9;
		int left = 0, right = 0, ans = -1;
		while (right < nums.length) {
			max = Math.max(max,nums[right]);
			min = Math.min(min,nums[right]);
			if (max - min > limit) {
				left++;
				max = max(nums,left,right);
				min = min(nums,left,right);
			} 
			else {
				ans = Math.max(ans,right - left + 1);
			}
			right++;
		}
		return ans;
	}
	int max(int[] nums, int left, int right) {
		int max = -1;
		for (int i = left; i <= right; i++) {
			max = Math.max(max,nums[i]);
		}
		return max;
	}
	int min(int[] nums, int left, int right) {
		int min = (int) 1e9;
		for (int i = left; i <= right; i++) {
			min = Math.min(min,nums[i]);
		}
		return min;
	}
}