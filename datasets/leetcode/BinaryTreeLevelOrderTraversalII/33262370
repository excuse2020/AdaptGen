class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		Queue<TreeNode> q = new LinkedList<>();
		List<List<Integer>> list1 = new LinkedList<List<Integer>>();
		if (root == null) {
			return list1;
		}
		q.add(root);
		while (!q.isEmpty()) {
			int n = q.size();
			List<Integer> list2 = new LinkedList<>();
			for (int i = 0; i < n; i++) {
				TreeNode currNode = q.remove();
				list2.add(currNode.val);
				if (currNode.left != null) {
					q.add(currNode.left);
				}
				if (currNode.right != null) {
					q.add(currNode.right);
				}
			}
			list1.add(0,list2);
		}
		return list1;
	}
}