class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode newHead = null;
		ListNode p1 = null;
		ListNode curr = head;
		while (curr != null) {
			curr = getSigleListNode(curr);
			if (newHead == null) {
				newHead = curr;
				p1 = curr;
				if (curr != null) {
					curr = curr.next;
				}
				continue;
			}
			p1.next = curr;
			if (curr != null) {
				curr = curr.next;
			}
			p1 = p1.next;
		}
		return newHead;
	}
	ListNode getSigleListNode(ListNode curr) {
		if (curr == null) {
			return null;
		}
		ListNode p2 = curr;
		curr = curr.next;
		boolean isRepete = false;
		while (curr != null && curr.val == p2.val) {
			isRepete = true;
			curr = curr.next;
		}
		if (!isRepete) {
			return p2;
		}
		return getSigleListNode(curr);
	}
}