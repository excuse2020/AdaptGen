class Solution {
	double minimumAverage(int[] nums) {
		List<Integer> numsList = new ArrayList<Integer>();
		List<Double> avgList = new ArrayList<Double>();
		for (int i = 0; i < nums.length; i++) {
			numsList.add(nums[i]);
		}
		int noOfIterations = nums.length / 2;
		while (noOfIterations > 0) {
			Arrays.sort(nums);
			int max = nums[nums.length - 1];
			int min = nums[0];
			double avg = (double) ((min + max) / 2.0);
			avgList.add(avg);
			numsList.remove(numsList.indexOf(max));
			numsList.remove(numsList.indexOf(min));
			nums = new int[numsList.size()];
			for (int i = 0; i < numsList.size(); i++) {
				nums[i] = numsList.get(i);
			}
			noOfIterations -= 1;
		}
		avgList = avgList.stream().sorted().collect(Collectors.toList());
		Arrays.sort(avgList.toArray());
		return (double) avgList.get(0);
	}
}