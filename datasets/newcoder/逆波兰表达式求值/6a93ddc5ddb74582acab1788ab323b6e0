class Solution {
	Deque<Integer> stack = new ArrayDeque<>();
	int evalRPN(String[] tokens) {
		for (int i = 0; i != tokens.length; ++i) {
			if (tokens[i].equals("+")) {
				stack.push(stack.pop() + stack.pop());
			} 
			else if (tokens[i].equals("-")) {
				int last = stack.pop();
				stack.push(stack.pop() - last);
			} 
			else if (tokens[i].equals("*")) {
				stack.push(stack.pop() * stack.pop());
			} 
			else if (tokens[i].equals("/")) {
				int last = stack.pop();
				stack.push(stack.pop() / last);
			} 
			else {
				stack.push(Integer.parseInt(tokens[i]));
			}
		}
		if (stack.isEmpty()) {
			return 0;
		}
		return stack.peek();
	}
}