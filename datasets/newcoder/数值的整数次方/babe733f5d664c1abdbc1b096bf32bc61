class Solution {
	double Power(double base, int exponent) {
		if (exponent == 0) {
			if (base == 0) {
				throw new Exception()
			} 
			else {
				return 1;
			}
		}
		if (exponent == 1) {
			return base;
		}
		double flag = exponent > 0 ? 1 : -1;
		exponent = exponent > 0 ? exponent : exponent * -1;
		double result = powerUnsigned(base,exponent);
		return flag == 1 ? result : (1 / result);
	}
	double powerUnsigned(double base, int exponent) {
		if (exponent == 0) {
			if (base == 0) {
				throw new Exception()
			} 
			else {
				return 1;
			}
		}
		if (exponent == 1) {
			return base;
		}
		double result = powerUnsigned(base,exponent >> 1);
		result *= result;
		if ((exponent & 1) == 1) {
			result *= base;
		}
		return result;
	}
}