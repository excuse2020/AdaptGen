class Solution {
	void f(int[][] stones, Set<String> visit, int i, int j) {
		visit.add(String.valueOf(i) + " ");
		for (int[] k: stones) {	
			if (!visit.contains((String.valueOf(k[0]) + " " + String.valueOf(k[1])))) {
				if (i == k[0] || j == k[1]) {
					f(stones,visit,k[0],k[1]);
				}
			}
		}
	}
	int removeStones(int[][] stones) {
		Set<String> visit = new HashSet<>();
		int c = 0;
		for (int i = 0; i < stones.length; i++) {
			if (!visit.contains(String.valueOf(stones[i][0]) + " " + String.valueOf(stones[i][1]))) {
				c++;
				f(stones,visit,stones[i][0],stones[i][1]);
			}
		}
		return stones.length - c;
	}
}