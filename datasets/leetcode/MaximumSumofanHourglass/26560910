class Solution {
	int max = Integer.MIN_VALUE;
	int maxSum(int[][] grid) {
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (i == 0 || i == grid.length - 1 || j == 0 || j == grid[0].length - 1) {
					continue;
				}
				populate(grid,i,j);
			}
		}
		return max;
	}
	void populate(int[][] grid, int row, int column) {
		int sum = grid[row][column];
		for (int i = column - 1; i <= column + 1; i++) {
			sum += grid[row - 1][i];
		}
		for (int i = column - 1; i <= column + 1; i++) {
			sum += grid[row + 1][i];
		}
		max = Math.max(max,sum);
	}
}