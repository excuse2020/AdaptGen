class Solution {
	List<List<Integer>> res = new ArrayList<>();
	void dfs(TreeNode root, int s, int t, List<Integer> l) {
		if (root == null) {
			return;
		}
		s += root.val;
		l.add(root.val);
		if (root.left == null && root.right == null) {
			if (s == t) {
				res.add(new ArrayList<>(l));
			}
		} 
		else {
			dfs(root.left,s,t,l);
			dfs(root.right,s,t,l);
		}
		l.remove(l.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<Integer> l = new ArrayList<>();
		dfs(root,0,targetSum,l);
		return res;
	}
}