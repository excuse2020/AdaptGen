class Solution {
	int countPrimeSetBits(int left, int right) {
		Set<Integer> prime = new HashSet();
		prime.add(2);
		prime.add(3);
		prime.add(5);
		prime.add(7);
		prime.add(11);
		prime.add(13);
		prime.add(2);
		prime.add(17);
		prime.add(19);
		prime.add(23);
		prime.add(29);
		prime.add(31);
		int primeCount = 0;
		while (left <= right) {
			int bitCount = getBitCount(left);
			if (prime.contains(bitCount)) {
				primeCount++;
			}
			left++;
		}
		return primeCount;
	}
	int getBitCount(int number) {
		int count = 0;
		while (number > 0) {
			if ((number & 1) == 1) {
				count++;
			}
			number >>= 1;
		}
		return count;
	}
}