class Solution {
	List<List<Long>> splitPainting(int[][] segments) {
		List<List<Long>> ans = new LinkedList<>();
		TreeMap<Integer, Long> idToCnt = new TreeMap<>();
		for (int[] s: segments) {	
			idToCnt.put(s[0],idToCnt.getOrDefault(s[0],0L) + s[2]);
			idToCnt.put(s[1],idToCnt.getOrDefault(s[1],0L) - s[2]);
		}
		List<Map.Entry<Integer, Long>> list = new ArrayList<>(idToCnt.entrySet());
		long currCnt = 0;
		for (int i = 0; i + 1 < list.size(); i++) {
			currCnt += list.get(i).getValue();
			if (currCnt == 0) {
				continue;
			}
			long start = list.get(i).getKey();
			long end = list.get(i + 1).getKey();
			List<Long> seg = new ArrayList<>(3);
			seg.add(start);
			seg.add(end);
			seg.add(currCnt);
			ans.add(seg);
		}
		return ans;
	}
}