class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		int i = 1;
		ListNode cur = head;
		ListNode beforeNode = null;
		while (i < m) {
			if (i == m - 1) {
				beforeNode = cur;
			}
			cur = cur.next;
			i++;
		}
		ListNode pre = null;
		while (i <= n) {
			ListNode next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
			i++;
		}
		if (beforeNode != null) {
			beforeNode.next = pre;
		} 
		else {
			head = pre;
		}
		ListNode newNode = pre;
		while (newNode.next != null) {
			newNode = newNode.next;
		}
		newNode.next = cur;
		return head;
	}
}