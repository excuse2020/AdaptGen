class Solution {
	HashMap<Pair<Integer, Integer>, Double> memo = new HashMap<>();
	double dp(int a, int b) {
		if (a <= 0 && b <= 0) {
			return 0.5;
		}
		if (a <= 0) {
			return 1.0;
		}
		if (b <= 0) {
			return 0.0;
		}
		Pair<Integer, Integer> key = new Pair<>(a, b);
		if (memo.containsKey(key)) {
			return memo.get(key);
		}
		memo.put(key,0.25 * (dp(a - 4,b) + dp(a - 3,b - 1)));
		return memo.get(key);
	}
	double soupServings(int N) {
		if (N > 4451) {
			return 1.0;
		}
		N = (N + 24) / 25;
		return dp(N,N);
	}
}