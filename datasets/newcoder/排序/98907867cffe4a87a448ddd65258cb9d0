class Solution {
	int[] MySort(int[] arr) {
		if (arr == null || arr.length < 2) {
			return arr;
		} 
		else {
			quickSort(arr,0,arr.length - 1);
		}
		return arr;
	}
	int partition(int[] arr, int low, int high) {
		int pivot = arr[low];
		while (low < high) {
			while (low < high && arr[high] >= pivot) {
				high--;
			}
			arr[low] = arr[high];
			while (low < high && arr[low] <= pivot) {
				low++;
			}
			arr[high] = arr[low];
		}
		arr[low] = pivot;
		return low;
	}
	void quickSort(int[] arr, int low, int high) {
		if (low < high) {
			int pos = partition(arr,low,high);
			quickSort(arr,low,pos - 1);
			quickSort(arr,pos + 1,high);
		}
	}
}