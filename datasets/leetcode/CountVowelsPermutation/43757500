class Solution {
	int countVowelPermutation(int n) {
		long[][] dp = new long[n + 1][5];
		for (int j = 0; j < 5; j++) {
			dp[1][j] = 1;
		}
		long mod = 1000000007;
		for (int i = 2; i <= n; i++) {
			dp[i][1] = dp[i - 1][0];
			dp[i][0] = (dp[i][0] + dp[i - 1][1]) % mod;
			dp[i][2] = (dp[i][2] + dp[i - 1][1]) % mod;
			dp[i][0] = (dp[i][0] + dp[i - 1][2]) % mod;
			dp[i][1] = (dp[i][1] + dp[i - 1][2]) % mod;
			dp[i][3] = (dp[i][3] + dp[i - 1][2]) % mod;
			dp[i][4] = (dp[i][4] + dp[i - 1][2]) % mod;
			dp[i][2] = (dp[i][2] + dp[i - 1][3]) % mod;
			dp[i][4] = (dp[i][4] + dp[i - 1][3]) % mod;
			dp[i][0] = (dp[i][0] + dp[i - 1][4]) % mod;
		}
		long ans = 0;
		for (int j = 0; j < 5; j++) {
			ans = (ans + dp[n][j]) % mod;
		}
		return (int) ans;
	}
}