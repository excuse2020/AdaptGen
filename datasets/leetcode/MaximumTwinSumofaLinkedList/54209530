class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode temp = slow;
		ListNode prev = null;
		while (temp != null) {
			ListNode n = temp.next;
			temp.next = prev;
			prev = temp;
			temp = n;
		}
		ListNode head1 = head;
		ListNode head2 = prev;
		int max = 0;
		while (head2 != null) {
			max = Math.max(max,head1.val + head2.val);
			head1 = head1.next;
			head2 = head2.next;
		}
		return max;
	}
}