class Solution {
	HashMap<String, Integer> hashing(String s) {
		String[] words = s.split(" ");
		HashMap<String, Integer> hmap = new HashMap<>();
		for (String a: words) {	
			if (hmap.containsKey(a)) {
				hmap.put(a,hmap.get(a) + 1);
			} 
			else {
				hmap.put(a,1);
			}
		}
		return hmap;
	}
	String[] uncommonFromSentences(String s1, String s2) {
		List<String> res = new ArrayList<>();
		HashMap<String, Integer> hmap1 = new HashMap<>();
		HashMap<String, Integer> hmap2 = new HashMap<>();
		hmap1 = hashing(s1);
		hmap2 = hashing(s2);
		for (Map.Entry<String, Integer> mapElement: hmap1.entrySet()) {	
			if (mapElement.getValue() == 1) {
				if (!(hmap2.containsKey(mapElement.getKey()))) {
					res.add(mapElement.getKey());
				}
			}
		}
		for (Map.Entry<String, Integer> mapElement: hmap2.entrySet()) {	
			if (mapElement.getValue() == 1) {
				if (!(hmap1.containsKey(mapElement.getKey()))) {
					res.add(mapElement.getKey());
				}
			}
		}
		String[] ans = new String[res.size()];
		ans = res.toArray(ans);
		return ans;
	}
}