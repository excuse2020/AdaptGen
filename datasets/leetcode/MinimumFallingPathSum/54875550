class Solution {
	int minFallingPathSum(int[][] arr) {
		int n = arr.length;
		int dp = new int[n][n];
		for (int i = 0; i < n; i++) {
			dp[0][i] = arr[0][i];
		}
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < n; j++) {
				int left = arr[i][j];
				int righ = arr[i][j];
				int up = arr[i][j] + dp[i - 1][j];
				if (j > 0) {
					left += dp[i - 1][j - 1];
				} 
				else {
					left += 111111;
				}
				if (j < n - 1) {
					righ += dp[i - 1][j + 1];
				} 
				else {
					righ += 111111;
				}
				dp[i][j] = Math.min(left,Math.min(righ,up));
			}
		}
		int ans = 1221111;
		for (int i = 0; i < n; i++) {
			ans = Math.min(dp[n - 1][i],ans);
		}
		return ans;
	}
}