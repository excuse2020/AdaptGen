class Solution {
	int distributeCookies(int[] cookies, int k) {
		int n = cookies.length;
		int[][] dp = new int[k + 1][1 << n];
		int[] sum = new int[1 << n];
		for (int mask = 0; mask < (1 << n); mask++) {
			int total = 0;
			for (int i = 0; i < n; i++) {
				if ((mask & (1 << i)) != 0) {
					total += cookies[i];
				}
			}
			sum[mask] = total;
		}
		for (int[] row: dp) {	
			Arrays.fill(row,Integer.MAX_VALUE);
		}
		dp[0][0] = 0;
		for (int person = 1; person <= k; person++) {
			for (int mask = 0; mask < (1 << n); mask++) {
				for (int submask = mask; submask != 0; submask = (submask - 1) & mask) {
					dp[person][mask] = Math.min(dp[person][mask],Math.max(sum[submask],dp[person - 1][mask ^ submask]));
				}
			}
		}
		return dp[k][(1 << n) - 1];
	}
}