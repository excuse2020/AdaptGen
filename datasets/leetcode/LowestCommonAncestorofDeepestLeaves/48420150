class Solution {
	int depth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + Math.max(depth(root.left),depth(root.right));
	}
	TreeNode lca(TreeNode root, int d, int target) {
		if (root == null) {
			return null;
		}
		if (d == target) {
			return root;
		}
		TreeNode l = lca(root.left,d + 1,target);
		TreeNode r = lca(root.right,d + 1,target);
		if (l != null && r != null) {
			return root;
		}
		return (l != null) ? l : r;
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		int d = depth(root);
		return lca(root,1,d);
	}
}