class Solution {
	int findWinningPlayer(int[] a, int k) {
		int n = a.length;
		if (k >= n) {
			int maxP = 0;
			for (int i = 0; i < n; ++i) {
				if (a[i] > a[maxP]) {
					maxP = i;
				}
			}
			return maxP;
		} 
		else {
			Deque<int[]> q = new LinkedList<>();
			for (int i = 0; i < n; ++i) {
				q.offer(new int{i, a[i]});
			}
			int cnt = 0;
			while (true) {
				int[] x = q.poll(), y = q.poll();
				if (x[1] > y[1]) {
					q.addFirst(x);
					q.addLast(y);
					++cnt;
					if (cnt >= k) {
						return x[0];
					}
				} 
				else {
					q.addFirst(y);
					q.addLast(x);
					cnt = 1;
					if (cnt >= k) {
						return y[0];
					}
				}
			}
		}
	}
}