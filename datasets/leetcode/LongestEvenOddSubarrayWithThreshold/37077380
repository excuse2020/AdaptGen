class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int max = 0, count = 0;
		boolean firsteven = false, lasteven = false, lastodd = false;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] > threshold) {
				count = 0;
				firsteven = false;
				lasteven = false;
				lastodd = false;
				continue;
			}
			if (nums[i] % 2 == 0 && !firsteven && !lasteven && !lastodd) {
				lasteven = true;
				lastodd = false;
				firsteven = true;
				count++;
			} 
			else if (nums[i] % 2 == 0 && firsteven && lasteven) {
				count = 1;
			} 
			else if (nums[i] % 2 != 0 && lasteven) {
				lastodd = true;
				lasteven = false;
				count++;
			} 
			else if (nums[i] % 2 == 0 && lastodd) {
				lastodd = false;
				lasteven = true;
				count++;
			} 
			else {
				count = 0;
				firsteven = false;
				lasteven = false;
				lastodd = false;
			}
			max = Math.max(count,max);
		}
		return max;
	}
}