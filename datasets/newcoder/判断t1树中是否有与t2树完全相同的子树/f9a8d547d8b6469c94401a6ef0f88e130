class Solution {
	boolean isContains(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val == root2.val) {
			if (judge(root1.left,root2.left) && judge(root1.right,root2.right)) {
				return true;
			} 
			else {
				if (root1.left == null && root1.right != null) {
					return isContains(root1.right.left,root2) || isContains(root1.right.right,root2);
				} 
				else if (root1.left != null && root1.right == null) {
					return isContains(root1.left.left,root2) || isContains(root1.left.right,root2);
				} 
				else if (root1.left != null && root1.right != null) {
					return isContains(root1.left.left,root2) || isContains(root1.left.right,root2);
				} 
				else {
					return false;
				}
			}
		} 
		else {
			return isContains(root1.left,root2) || isContains(root1.right,root2);
		}
	}
	boolean judge(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val == root2.val) {
			return true;
		} 
		else {
			return false;
		}
	}
}