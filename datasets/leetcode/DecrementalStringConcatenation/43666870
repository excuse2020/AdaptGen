class Solution {
	int dp;
	int call(String[] words, int i, String ans) {
		if (i >= words.length) {
			return 0;
		}
		int n = ans.length();
	}
	int minimizeConcatenatedLength(String[] words) {
		int n = words.length;
		dp = new int[n][26][26];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < 26; j++) {
				for (int k = 0; k < 26; k++) {
					dp[i][j][k] = -1;
				}
			}
		}
		return words[0].length() + call(words,1,words[0]);
	}
	String newString(String str1, String str2) {
		if (str1.charAt(str1.length() - 1) == str2.charAt(0)) {
			return str1 + str2.substring(1);
		}
		return str1 + str2;
	}
}