class Solution {
	String removeDuplicates(String s, int k) {
		Stack<Pair<Character, Integer>> stack = new Stack<>();
		for (int i = 0; i < s.length(); i++) {
			char cc = s.charAt(i);
			if (!stack.isEmpty() && cc == stack.peek().getKey()) {
				int count = stack.pop().getValue() + 1;
				if (count < k) {
					stack.push(new Pair(cc, count));
				}
			} 
			else {
				stack.push(new Pair(cc, 1));
			}
		}
		StringBuilder rev = new StringBuilder();
		while (!stack.isEmpty()) {
			Pair<Character, Integer> p = stack.pop();
			char cc = p.getKey();
			int count = p.getValue();
			while (count > 0) {
				rev.append(cc);
				count--;
			}
		}
		return rev.reverse().toString();
	}
}