class Solution {
	int maxScore(int[] cardPoints, int k) {
		int size = cardPoints.length;
		int left = 0, right = size - k;
		int totalSum = 0;
		for (int card: cardPoints) {	
			totalSum += card;
		}
		int windowSum = 0;
		int rightIndex = 0;
		while (rightIndex <= right) {
			windowSum += cardPoints[rightIndex];
			rightIndex += 1;
		}
		int minWindowSum = totalSum + 1;
		minWindowSum = Math.min(minWindowSum,windowSum);
		right += 1;
		while (right < size) {
			windowSum += cardPoints[right] - cardPoints[left];
			minWindowSum = Math.min(minWindowSum,windowSum);
			right += 1;
			left += 1;
		}
		return totalSum - minWindowSum;
	}
}