class Solution {
	int minimumRounds(int[] tasks) {
		Map<Integer, Integer> countMap = new HashMap<Integer, Integer>();
		int result = 0;
		Integer[] item;
		for (int task: tasks) {	
			countMap.put(task,countMap.getOrDefault(task,0) + 1);
		}
		PriorityQueue<Integer[]> pq = new PriorityQueue<Integer[]>(new Comparator<Integer[]>());
		for (int key: countMap.keySet()) {	
			pq.add(new Integer{key, countMap.get(key)});
		}
		while (!pq.isEmpty()) {
			item = pq.poll();
			if (item[1] < 2) {
				return -1;
			}
			if (item[1] == 4) {
				pq.offer(new Integer{item[0], 2});
			}
			if (item[1] > 4) {
				pq.offer(new Integer{item[0], item[1] - 3});
			}
			result++;
		}
		return result;
	}
}