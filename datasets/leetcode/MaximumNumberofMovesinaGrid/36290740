class Solution {
	int maxMoves(int[][] grid) {
		int rows = grid.length;
		int cols = grid[0].length;
		int[][] dp = new int[rows][cols];
		for (int i = 0; i < rows; i++) {
			dp[i][0] = 1;
		}
		int max = 0;
		for (int col = 1; col < cols; col++) {
			for (int row = 0; row < rows; row++) {
				if (dp[row][col - 1] > 0 && grid[row][col - 1] < grid[row][col]) {
					dp[row][col] = Math.max(dp[row][col],dp[row][col - 1] + 1);
				}
				if (row > 0) {
					if (dp[row - 1][col - 1] > 0 && grid[row - 1][col - 1] < grid[row][col]) {
						dp[row][col] = Math.max(dp[row][col],dp[row - 1][col - 1] + 1);
					}
				}
				if (row < rows - 1) {
					if (dp[row + 1][col - 1] > 0 && grid[row + 1][col - 1] < grid[row][col]) {
						dp[row][col] = Math.max(dp[row][col],dp[row + 1][col - 1] + 1);
					}
				}
				max = Math.max(max,dp[row][col]);
			}
		}
		return max == 0 ? max : max - 1;
	}
}