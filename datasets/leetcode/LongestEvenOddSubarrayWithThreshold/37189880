class Solution {
	boolean isValid(int[] nums, int threshold, int l, int r) {
		if (nums[l] % 2 != 0) {
			return false;
		}
		for (int i = l; i <= r - 1; i++) {
			if (nums[i] % 2 == nums[i + 1] % 2) {
				return false;
			}
		}
		for (int i = l; i <= r; i++) {
			if (nums[i] > threshold) {
				return false;
			}
		}
		return true;
	}
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int max = 0;
		for (int l = 0; l < nums.length; l++) {
			for (int r = nums.length - 1; r >= l; r--) {
				if (isValid(nums,threshold,l,r)) {
					max = Math.max(max,r - l + 1);
				}
			}
		}
		return max;
	}
}