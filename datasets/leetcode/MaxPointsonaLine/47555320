class Solution {
	String getSlope(int[] p1, int[] p2) {
		if (p2[0] == p1[0]) {
			return p2[0] + ":";
		}
		double m = (double) (p2[1] - p1[1]) / (p2[0] - p1[0]);
		double c = p1[1] - m * p1[0];
		return m + ":";
	}
	int maxPoints(int[][] points) {
		Map<String, Set<int[]>> map = new HashMap<>();
		int max = 1;
		for (int i = 0; i < points.length; i++) {
			for (int j = i + 1; j < points.length; j++) {
				String key = getSlope(points[i],points[j]);
				map.put(key,map.getOrDefault(key,new HashSet<>()));
				map.get(key).add(points[j]);
				map.get(key).add(points[i]);
				Set s = map.get(key);
				max = Math.max(max,map.get(key).size());
			}
		}
		return max;
	}
}