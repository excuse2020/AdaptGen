class Solution {
	int uniquePathsWithObstacles(int[][] obstacleGrid) {
		int m = obstacleGrid.length;
		int n = obstacleGrid[0].length;
		int[] prev = new int[n];
		prev[0] = obstacleGrid[0][0] == 0 ? 1 : 0;
		for (int i = 1; i < n; i++) {
			prev[i] = obstacleGrid[0][i] == 0 ? prev[i - 1] : 0;
		}
		for (int i = 1; i < m; i++) {
			int[] temp = new int[n];
			temp[0] = obstacleGrid[i][0] == 0 ? prev[0] : 0;
			for (int j = 1; j < n; j++) {
				if (obstacleGrid[i][j] == 0) {
					temp[j] = prev[j] + temp[j - 1];
				} 
				else {
					temp[j] = 0;
				}
			}
			prev = temp;
		}
		return prev[n - 1];
	}
}