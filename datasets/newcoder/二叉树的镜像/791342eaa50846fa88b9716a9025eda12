class Solution {
	TreeNode Mirror(TreeNode pRoot) {
		if (pRoot == null) {
			return null;
		}
		Stack<TreeNode> s = new Stack<>();
		s.push(pRoot);
		while (!s.isEmpty()) {
			TreeNode node = s.pop();
			if (node.left != null) {
				s.push(node.left);
			}
			if (node.right != null) {
				s.push(node.right);
			}
			TreeNode temp = node.left;
			node.left = node.right;
			node.right = temp;
		}
		return pRoot;
	}
	TreeNode Mirror2(TreeNode pRoot) {
		if (pRoot == null) {
			return null;
		}
		TreeNode left = Mirror(pRoot.left);
		TreeNode right = Mirror(pRoot.right);
		pRoot.left = right;
		pRoot.right = left;
		return pRoot;
	}
}