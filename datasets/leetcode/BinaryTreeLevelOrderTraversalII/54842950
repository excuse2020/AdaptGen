class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> arr = new ArrayList<List<Integer>>();
		if (root == null) {
			return arr;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		while (!q.isEmpty()) {
			int levelsize = q.size();
			ArrayList<Integer> arr2 = new ArrayList<>();
			for (int i = 0; i < levelsize; i++) {
				TreeNode temp = q.remove();
				arr2.add(temp.val);
				if (temp.left != null) {
					q.add(temp.left);
				}
				if (temp.right != null) {
					q.add(temp.right);
				}
			}
			arr.add(arr2);
		}
		Collections.reverse(arr);
		return arr;
	}
}