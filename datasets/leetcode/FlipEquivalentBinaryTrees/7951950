class Solution {
	boolean compareTrees(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		} 
		else if (root1 == null || root2 == null) {
			return false;
		} 
		else if (root1.val == root2.val) {
			boolean normal = compareTrees(root1.left,root2.left) && compareTrees(root1.right,root2.right);
			boolean flipped = compareTrees(root1.left,root2.right) && compareTrees(root1.right,root2.left);
			return normal || flipped;
		} 
		else {
			return false;
		}
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return compareTrees(root1,root2);
	}
}