class Solution {
	double Median(ArrayList<Integer> nums1, ArrayList<Integer> nums2) {
		ArrayList<Integer> merged = new ArrayList<>();
		int n = nums1.size();
		int m = nums2.size();
		int i = 0, j = 0;
		while (i < n && j < m) {
			if (nums1.get(i) < nums2.get(j)) {
				merged.add(nums1.get(i));
				i++;
			} 
			else {
				merged.add(nums2.get(j));
				j++;
			}
		}
		while (i < n) {
			merged.add(nums1.get(i));
			i++;
		}
		while (j < m) {
			merged.add(nums2.get(j));
			j++;
		}
		int length = merged.size();
		if (length % 2 == 0) {
			int mid = length / 2;
			return (merged.get(mid - 1) + merged.get(mid)) / 2.0;
		} 
		else {
			return merged.get(length / 2);
		}
	}
}