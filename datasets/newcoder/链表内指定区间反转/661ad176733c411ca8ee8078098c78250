class Solution {
	ListNode ReverseList(ListNode head, ListNode stop) {
		ListNode prev = null, cur = head, temp = null;
		while (cur != stop) {
			temp = cur.next;
			cur.next = prev;
			prev = cur;
			cur = temp;
		}
		return prev;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode cur = head;
		ListNode f1 = null, f2 = null, f3 = null, f4 = null;
		int i = 1;
		while (cur != null) {
			if (i == 1) {
				f1 = f2 = head;
			}
			if (i == m - 1) {
				f1 = cur;
			} 
			else if (i == m) {
				f2 = cur;
			}
			if (i == n) {
				f3 = cur;
				if (cur.next != null) {
					f4 = cur.next;
				}
			}
			i++;
			cur = cur.next;
		}
		ListNode myhead = ReverseList(f2,f4);
		if (f1 == f2) {
			if (f4 != null) {
				f1.next = f4;
			}
		} 
		else {
			f1.next = f3;
			f2.next = f4;
		}
		if (f1 != f2) {
			return head;
		} 
		else if (f1 == f2) {
			return myhead;
		}
		return head;
	}
}