class Solution {
	Set<String> helper(int n) {
		if (n == 2) {
			Set<String> base = new HashSet<>();
			base.add("1/2");
			return base;
		}
		Set<String> lst = helper(n - 1);
		Set<String> ans = new HashSet<>();
		for (String s: lst) {	
			ans.add(s);
		}
		for (int i = 1; i <= n - 1; i++) {
			int temp = n;
			int a = i;
			for (int j = 2; j <= Math.min(i,n); j++) {
				while (a % j == 0 && temp % j == 0) {
					a = a / j;
					temp = temp / j;
				}
			}
			ans.add("" + a);
		}
		return ans;
	}
	List<String> simplifiedFractions(int n) {
		if (n == 1) {
			List<String> lst = new ArrayList<>();
			return lst;
		}
		Set<String> st = helper(n);
		List<String> ans = new ArrayList<>();
		for (String val: st) {	
			ans.add(val);
		}
		return ans;
	}
}