class Solution {
	int numberOfAlternatingGroups(int[] colors, int k) {
		int ans = 0;
		int n = colors.length;
		int[] left = new int[n];
		int[] right = new int[n];
		left[0] = 1;
		right[n - 1] = 1;
		for (int i = 1; i < n; i++) {
			if (colors[i] != colors[i - 1]) {
				left[i] = left[i - 1] + 1;
			} 
			else {
				left[i] = 1;
			}
			if (colors[n - 1 - i] != colors[n - i]) {
				right[n - i - 1] = right[n - i] + 1;
			} 
			else {
				right[n - i - 1] = 1;
			}
		}
		for (int i = 0; i <= n - k; i++) {
			if (left[k - 1 + i] - left[i] + 1 >= k) {
				ans++;
			}
		}
		if (colors[0] == colors[n - 1]) {
			return ans;
		}
		for (int i = n - k + 1; i < n; i++) {
			int len = left[n - 1] - left[i] + 1;
			if (len >= n - i) {
				if (len + right[0] >= k) {
					ans++;
				}
			}
		}
		return ans;
	}
}