class Solution {
	ArrayList<String> answer;
	HashSet<String> seen;
	int getMinimum(String s) {
		Stack<Character> chStack = new Stack<>();
	}
	List<String> removeInvalidParentheses(String s) {
		seen = new HashSet<String>();
		answer = new ArrayList<>();
		int toRemove = getMinimum(s);
		removeInvalidParenthesesHelper(s,toRemove);
		return answer;
	}
	void removeInvalidParenthesesHelper(String s, int toRemove) {
		if (seen.contains(s)) {
			return;
		}
		seen.add(s);
		if (toRemove == 0 && getMinimum(s) == 0) {
			answer.add(s);
		}
		if (toRemove == 0) {
			return;
		}
		for (int i = 0; i < s.length(); i++) {
			removeInvalidParenthesesHelper(s.substring(0,i) + s.substring(i + 1),toRemove - 1);
		}
	}
}