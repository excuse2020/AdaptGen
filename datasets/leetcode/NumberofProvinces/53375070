class Solution {
	int checkFrom = 0;
	boolean[] visited;
	int checkAllVisited() {
		int unvisitedIndex = -1;
		for (int i = checkFrom; i < visited.length; i++) {
			if (!visited[i]) {
				checkFrom = i;
				return i;
			}
		}
		return unvisitedIndex;
	}
	int findCircleNum(int[][] isConnected) {
		int len = isConnected.length;
		visited = new boolean[len];
		int provinces = 0;
		int start = 0;
		while (start != -1) {
			visitConnected(start,isConnected);
			provinces++;
			start = checkAllVisited();
		}
		return provinces;
	}
	void visitConnected(int currV, int[][] g) {
		visited[currV] = true;
		for (int i = 0; i < g.length; i++) {
			if (g[currV][i] != 0 && !visited[i]) {
				visitConnected(i,g);
			}
		}
	}
}