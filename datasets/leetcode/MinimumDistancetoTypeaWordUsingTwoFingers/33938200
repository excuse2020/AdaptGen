class Solution {
	int distance(char prev, char curr) {
	}
	int minimumDistance(String word) {
		HashMap<String, Integer> cache = new HashMap<>();
	}
	int type(String word, char leftFinger, char rightFinger, int i, HashMap<String, Integer> cache) {
		if (i >= word.length()) {
			return 0;
		}
		String key = leftFinger + " ";
		if (cache.containsKey(key)) {
			return cache.get(key);
		}
		int left = distance(leftFinger,word.charAt(i)) + type(word,word.charAt(i),rightFinger,i + 1,cache);
		int right = distance(rightFinger,word.charAt(i)) + type(word,leftFinger,word.charAt(i),i + 1,cache);
		cache.put(key,Math.min(left,right));
		return Math.min(left,right);
	}
}