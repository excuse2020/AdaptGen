class Solution {
	List<List<Integer>> answer = new ArrayList<>();
	List<Integer> l = new ArrayList<>();
	List<List<Integer>> closestNodes(TreeNode root, List<Integer> queries) {
		getNodes(root);
		for (int q: queries) {	
			List<Integer> sl = new ArrayList<>();
			int index = Collections.binarySearch(l,q);
			if (index >= 0) {
				sl.add(l.get(index));
				sl.add(l.get(index));
				answer.add(sl);
			} 
			else {
				index = Math.abs(index + 1);
				int min = -1, max = -1;
				if (index - 1 >= 0) {
					min = l.get(index - 1);
				}
				if (index < l.size()) {
					max = l.get(index);
				}
				sl.add(min);
				sl.add(max);
				answer.add(sl);
			}
		}
		return answer;
	}
	void getNodes(TreeNode root) {
		if (root != null) {
			getNodes(root.left);
			l.add(root.val);
			getNodes(root.right);
		}
	}
}