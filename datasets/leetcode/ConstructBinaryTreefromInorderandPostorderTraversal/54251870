class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		if (inorder.length == 0 || postorder.length == 0) {
			return null;
		}
		int elem = postorder[postorder.length - 1];
		int ind = 0;
		for (int i = 0; i < inorder.length; i++) {
			if (inorder[i] == elem) {
				ind = i;
				break;
			}
		}
		TreeNode node = new TreeNode(inorder[ind]);
		node.left = buildTree(Arrays.copyOfRange(inorder,0,ind),Arrays.copyOfRange(postorder,0,ind));
		node.right = buildTree(Arrays.copyOfRange(inorder,ind + 1,inorder.length),Arrays.copyOfRange(postorder,ind,postorder.length - 1));
		return node;
	}
}