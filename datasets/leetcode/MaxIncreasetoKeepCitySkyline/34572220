class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int sum = 0;
		int[] row = new int[grid.length];
		int[] col = new int[grid.length];
		int rowIndex = 0, columnIndex = 0;
		for (int i = 0; i < grid.length; i++) {
			int max = Integer.MIN_VALUE;
			for (int j = 0; j < grid.length; j++) {
				max = Math.max(max,grid[i][j]);
			}
			row[rowIndex] = max;
			rowIndex++;
		}
		for (int i = 0; i < grid[0].length; i++) {
			int max = Integer.MIN_VALUE;
			for (int j = 0; j < grid.length; j++) {
				max = Math.max(max,grid[j][i]);
			}
			col[columnIndex] = max;
			columnIndex++;
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				sum += Math.abs(grid[i][j] - Math.min(row[i],col[j]));
			}
		}
		return sum;
	}
}