class Solution {
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int n = price.length;
		int maxTaste = 0, currentTaste = 1;
		int low = 1, high = price[n - 1];
		while (low <= high) {
			currentTaste = (low + high) / 2;
			int taken = 0;
			int previous = -1;
			int start = 0;
			while (start < n) {
				if (previous == -1 || price[start] - previous >= currentTaste) {
					previous = price[start];
					taken += 1;
				}
				start++;
			}
			if (taken >= k) {
				maxTaste = currentTaste;
				low = currentTaste + 1;
			} 
			else {
				high = currentTaste - 1;
			}
		}
		return maxTaste;
	}
}