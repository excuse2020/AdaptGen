class Solution {
	int maximumTop(int[] nums, int k) {
		if (k == 0) {
			return nums[0];
		}
		if (nums.length == 1) {
			if (k % 2 != 0) {
				return -1;
			} 
			else {
				return nums[0];
			}
		}
		Stack<Integer> stack = new Stack<>();
		for (int i = nums.length - 1; i >= 0; i--) {
			stack.push(nums[i]);
		}
		int max = -1;
		while (k > 1 && !stack.isEmpty()) {
			max = Math.max(stack.pop(),max);
			k--;
		}
		if (!stack.isEmpty()) {
			stack.pop();
		}
		if (!stack.isEmpty()) {
			max = Math.max(max,stack.peek());
		}
		return max;
	}
}