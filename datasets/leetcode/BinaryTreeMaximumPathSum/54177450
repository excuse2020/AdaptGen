class Solution {
	int globalMax = Integer.MIN_VALUE;
	int maxPathSum(TreeNode root) {
		rec(root);
		return globalMax;
	}
	int rec(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = rec(root.left);
		int right = rec(root.right);
		int val = root.val;
		int leftPath = val + left;
		int rightPath = val + right;
		int completePath = val + left;
		int currPath = Math.max(val,leftPath);
		currPath = Math.max(currPath,rightPath);
		currPath = Math.max(currPath,completePath);
		globalMax = Math.max(currPath,globalMax);
		int returnPath = Math.max(val,leftPath);
		returnPath = Math.max(returnPath,rightPath);
		return returnPath;
	}
}