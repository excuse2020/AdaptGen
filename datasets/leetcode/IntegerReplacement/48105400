class Solution {
	int find(long n, HashMap<Long, Integer> dp) {
		if (n == 1) {
			return 0;
		}
		if (n < 0) {
			return (int) 1e9;
		}
		if (dp.containsKey(n)) {
			return dp.get(n);
		}
		int ans = 0;
		if (n % 2 == 0) {
			ans = 1 + find(n / 2,dp);
		} 
		else {
			int take = 1 + find(n - 1,dp);
			int nottake = 1 + find(n + 1,dp);
			ans = Math.min(take,nottake);
		}
		dp.put(n,ans);
		return dp.get(n);
	}
	int integerReplacement(int n) {
		HashMap<Long, Integer> dp = new HashMap();
		return find((long) n,dp);
	}
}