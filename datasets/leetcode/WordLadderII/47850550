class Solution {
	List<List<String>> findLadders(String beginWord, String endWord, List<String> wordList) {
		Set<String> set = new HashSet<>(wordList);
		Queue<List<String>> q = new LinkedList<>();
		ArrayList<String> first = new ArrayList<>();
		first.add(beginWord);
		q.add(first);
		ArrayList<String> usedOnLev = new ArrayList<>();
		usedOnLev.add(beginWord);
		int level = 0;
		List<List<String>> ans = new ArrayList<>();
		List<String> temp = q.poll();
		if (temp.size() > level) {
			level++;
			for (String word: usedOnLev) {	
				set.remove(word);
			}
			usedOnLev.clear();
		}
		String word = temp.get(temp.size() - 1);
		if (word.equals(endWord)) {
			if (ans.isEmpty()) {
				ans.add(temp);
			} 
			else if (ans.get(0).size() == temp.size()) {
				ans.add(temp);
			}
		}
		int i = 0;
		char ch;
	}
}