class Solution {
	int fun(int[] a, int[] b) {
		int cnt = 0;
		for (int i = 0; i < a.length; i++) {
			if (a[i] == b[i]) {
				cnt++;
			}
		}
		return cnt;
	}
	int fun(int i, int[][] a, int[][] b, boolean[] vis) {
		if (i == a.length) {
			return 0;
		}
		int ans = 0;
		int[] curr = a[i];
		for (int j = 0; j < b.length; j++) {
			if (vis[j]) {
				continue;
			}
			vis[j] = true;
			ans = Math.max(ans,fun(curr,b[j]) + fun(i + 1,a,b,vis));
			vis[j] = false;
		}
		return ans;
	}
	int maxCompatibilitySum(int[][] students, int[][] mentors) {
		boolean[] s = new boolean[students.length];
		return fun(0,students,mentors,s);
	}
}