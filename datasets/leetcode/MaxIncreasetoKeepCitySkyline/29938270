class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] row_max = new int[grid.length];
		int[] col_max = new int[grid.length];
		for (int i = 0; i < grid.length; i++) {
			int max = grid[i][0];
			for (int j = 1; j < grid.length; j++) {
				if (grid[i][j] > max) {
					max = grid[i][j];
				}
			}
			row_max[i] = max;
		}
		for (int i = 0; i < grid.length; i++) {
			int max = grid[0][i];
			for (int j = 1; j < grid.length; j++) {
				if (grid[j][i] > max) {
					max = grid[j][i];
				}
			}
			col_max[i] = max;
		}
		int ans = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				ans += Math.min(row_max[i],col_max[j]) - grid[i][j];
			}
		}
		return ans;
	}
}