class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	List<List<Integer>> generate(int numRows) {
		List<Integer> firstRow = new ArrayList<>();
		firstRow.add(1);
		ans.add(new ArrayList<>(firstRow));
		if (numRows == 1) {
			return ans;
		}
		List<Integer> secondRow = new ArrayList<>();
		secondRow.add(1);
		secondRow.add(1);
		ans.add(new ArrayList<>(secondRow));
		if (numRows == 2) {
			return ans;
		}
		solve(3,numRows);
		return ans;
	}
	void solve(int n, int numRows) {
		if (n > numRows) {
			return;
		}
		List<Integer> lst = new ArrayList<>();
		List<Integer> lst1 = ans.get(ans.size() - 1);
		lst.add(1);
		for (int i = 1; i < lst1.size(); i++) {
			lst.add(lst1.get(i) + lst1.get(i - 1));
		}
		lst.add(1);
		ans.add(new ArrayList<>(lst));
		solve(n + 1,numRows);
	}
}