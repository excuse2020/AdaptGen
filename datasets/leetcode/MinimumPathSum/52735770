class Solution {
	int memoization(int row, int col, int[][] grid, int[][] dp) {
		if (row == 0 && col == 0) {
			return grid[row][col];
		}
		if (row < 0 || col < 0) {
			return Integer.MAX_VALUE;
		}
		if (dp[row][col] != 0) {
			return dp[row][col];
		}
		int up = memoization(row - 1,col,grid,dp);
		int left = memoization(row,col - 1,grid,dp);
		return dp[row][col] = grid[row][col] + Math.min(up,left);
	}
	int minPathSum(int[][] grid) {
		int[][] dp = new int[grid.length][grid[0].length];
		return memoization(grid.length - 1,grid[0].length - 1,grid,dp);
	}
}