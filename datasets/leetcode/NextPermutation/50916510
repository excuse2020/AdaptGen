class Solution {
	void nextPermutation(int[] nums) {
		int breakPoint = -1;
		for (int i = nums.length - 2; i >= 0; i--) {
			if (nums[i] < nums[i + 1]) {
				breakPoint = i;
				break;
			}
		}
		if (breakPoint == -1) {
			reverse(nums,0,nums.length - 1);
			return;
		}
		for (int i = nums.length - 1; i > breakPoint; i--) {
			if (nums[i] > nums[breakPoint]) {
				int temp = nums[i];
				nums[i] = nums[breakPoint];
				nums[breakPoint] = temp;
				break;
			}
		}
		reverse(nums,breakPoint + 1,nums.length - 1);
	}
	void reverse(int[] nums, int start, int end) {
		while (start < end) {
			int temp = nums[start];
			nums[start] = nums[end];
			nums[end] = temp;
			start++;
			end--;
		}
	}
}