class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<ListNode> a1 = new Stack<>();
		Stack<ListNode> a2 = new Stack<>();
		int b1 = 0;
		while (head1 != null) {
			a1.push(head1);
			head1 = head1.next;
			b1++;
		}
		int b2 = 0;
		while (head2 != null) {
			a2.push(head2);
			head2 = head2.next;
			b2++;
		}
		int jia = 0;
		int max = Math.max(b1,b2);
		ListNode node = new ListNode(-1);
		ListNode g = node;
		ListNode head = node;
		while (max != 0) {
			int sum = 0;
			if (!a1.empty()) {
				sum += a1.pop().val;
			}
			if (!a2.empty()) {
				sum += a2.pop().val;
			}
			if (jia == 1) {
				sum += jia;
				jia = 0;
			}
			if (sum >= 10) {
				sum = sum % 10;
				jia = 1;
			}
			ListNode listNode = new ListNode(sum);
			listNode.next = node.next;
			node.next = listNode;
			max--;
			if (max == 0 && jia == 1) {
				max++;
			}
		}
		return head.next;
	}
}