class Solution {
	int findDigit(int restDigits, int decimalPlaces) {
		int val = (int) Math.ceil((double) restDigits / decimalPlaces);
		int num = (int) Math.pow(10,decimalPlaces - 1) + val - 1;
		int i = 0;
		while ((val * decimalPlaces) - i > restDigits) {
			num /= 10;
			i++;
		}
		return num % 10;
	}
	int findNthDigit(int n) {
		int currSum = 9;
		int preSum = 0;
		int i = 2;
		while (i < 10 && currSum < n) {
			preSum = currSum;
			currSum += 9 * i;
			i++;
		}
		return findDigit(n - preSum,i - 1);
	}
}