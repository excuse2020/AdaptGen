class Solution {
	int deleteGreatestValue(int[][] grid) {
		List<PriorityQueue<Integer>> list = new ArrayList<>();
		for (int i = 0; i < grid.length; i++) {
			list.add(new PriorityQueue<>());
			for (int j = 0; j < grid[i].length; j++) {
				list.get(i).add(grid[i][j]);
			}
		}
		int ans = 0;
		while (!list.isEmpty()) {
			boolean queueEmpty = false;
			int max = Integer.MIN_VALUE;
			for (int i = 0; i < grid.length; i++) {
				int e = list.get(i).poll();
				if (e > max) {
					max = e;
				}
				queueEmpty = list.get(i).isEmpty();
			}
			ans += max;
			if (queueEmpty) {
				break;
			}
		}
		return ans;
	}
}