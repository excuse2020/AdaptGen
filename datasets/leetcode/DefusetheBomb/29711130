class Solution {
	int[] decrypt(int[] code, int k) {
		int length = code.length;
		if (k >= 0) {
			return getResultIfKAboveThanZero(code,k,length);
		} 
		else {
			return getResultIfKBelowThanZero(code,k,length);
		}
	}
	int[] getResultIfKAboveThanZero(int[] code, int k, int length) {
		int[] result = new int[length];
		for (int i = 0; i < length; i++) {
			int sum = 0;
			for (int j = 1; j <= k; j++) {
				int index = j + i > length - 1 ? j + i - length : j + i;
				sum += code[index];
			}
			result[i] = sum;
		}
		return result;
	}
	int[] getResultIfKBelowThanZero(int[] code, int k, int length) {
		int[] result = new int[length];
		k = Math.abs(k);
		for (int i = 0; i < length; i++) {
			int sum = 0;
			for (int j = 1; j <= k; j++) {
				int index = i - j < 0 ? length + i - j : i - j;
				sum += code[index];
			}
			result[i] = sum;
		}
		return result;
	}
}