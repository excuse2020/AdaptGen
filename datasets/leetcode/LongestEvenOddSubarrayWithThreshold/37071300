class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int result = 0;
		for (int l = 0; l < nums.length; l++) {
			for (int r = l; r < nums.length; r++) {
				if (satisfiesCondition(nums,l,r,threshold)) {
					result = Math.max(result,r - l + 1);
				}
			}
		}
		return result;
	}
	boolean satisfiesCondition(int[] nums, int left, int right, int threshold) {
		if (nums[left] % 2 != 0) {
			return false;
		}
		for (int i = left; i <= right - 1; i++) {
			if (nums[i] % 2 == nums[i + 1] % 2) {
				return false;
			}
		}
		for (int i = left; i <= right; i++) {
			if (nums[i] > threshold) {
				return false;
			}
		}
		return true;
	}
}