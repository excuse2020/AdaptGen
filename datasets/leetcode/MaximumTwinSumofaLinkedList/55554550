class Solution {
	ListNode mid(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	int pairSum(ListNode head) {
		ListNode midnode = mid(head);
		ListNode prev = null;
		ListNode nextnode;
		while (midnode != null) {
			nextnode = midnode.next;
			midnode.next = prev;
			prev = midnode;
			midnode = nextnode;
		}
		ListNode lefthead = head;
		int maxsum = Integer.MIN_VALUE;
		while (prev != null) {
			maxsum = Math.max(maxsum,lefthead.val + prev.val);
			lefthead = lefthead.next;
			prev = prev.next;
		}
		return maxsum;
	}
}