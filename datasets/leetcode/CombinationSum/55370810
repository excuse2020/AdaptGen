class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		findCombinationSum(0,target,ans,candidates,new ArrayList<>());
		return ans;
	}
	void findCombinationSum(int ind, int target, List<List<Integer>> ans, int[] arr, List<Integer> ds) {
		if (ind == arr.length) {
			if (target == 0) {
				ans.add(new ArrayList<>(ds));
			}
			return;
		}
		if (arr[ind] <= target) {
			ds.add(arr[ind]);
			findCombinationSum(ind,target - arr[ind],ans,arr,ds);
			ds.remove(ds.size() - 1);
		}
		findCombinationSum(ind + 1,target,ans,arr,ds);
	}
}