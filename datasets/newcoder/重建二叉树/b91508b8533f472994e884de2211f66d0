class Solution {
	TreeNode reConstructBinaryTree(int[] preOrder, int[] vinOrder) {
		if (preOrder.length == 0 || vinOrder.length == 0) {
			return null;
		}
		TreeNode treeNode = new TreeNode(preOrder[0]);
		for (int i = 0; i < vinOrder.length; i++) {
			if (vinOrder[i] == preOrder[0]) {
				treeNode.left = reConstructBinaryTree(Arrays.copyOfRange(preOrder,1,i + 1),Arrays.copyOfRange(vinOrder,0,i));
				treeNode.right = reConstructBinaryTree(Arrays.copyOfRange(preOrder,i + 1,preOrder.length),Arrays.copyOfRange(vinOrder,i + 1,vinOrder.length));
				break;
			}
		}
		return treeNode;
	}
}