class Solution {
	LinkedList<Integer> path = new LinkedList<>();
	ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
	ArrayList<ArrayList<Integer>> combine(int n, int k) {
		getComination(n,k,1);
		return res;
	}
	void getComination(int n, int k, int startIndex) {
		if (path.size() == k) {
			res.add(new ArrayList(path));
		}
		for (int i = startIndex; i <= n; ++i) {
			path.add(i);
			getComination(n,k,i + 1);
			path.removeLast();
		}
	}
}