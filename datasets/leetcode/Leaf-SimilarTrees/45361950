class Solution {
	void generateLeafSequence(TreeNode root, List<Integer> sequence) {
		if (root.left == null && root.right == null) {
			sequence.add(root.val);
		}
		if (root.left != null) {
			generateLeafSequence(root.left,sequence);
		}
		if (root.right != null) {
			generateLeafSequence(root.right,sequence);
		}
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		List<Integer> seq1 = new ArrayList<>();
		List<Integer> seq2 = new ArrayList<>();
		generateLeafSequence(root1,seq1);
		generateLeafSequence(root2,seq2);
		if (seq1.size() != seq2.size()) {
			return false;
		}
		for (int i = 0; i < seq1.size(); i++) {
			if (seq1.get(i) != seq2.get(i)) {
				return false;
			}
		}
		return true;
	}
}