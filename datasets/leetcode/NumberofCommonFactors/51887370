class Solution {
	int a, b;
	int _1_commonFactors(int a, int b) {
		Set<Integer> af = new HashSet<>();
		Set<Integer> bf = new HashSet<>();
		af.add(a);
		for (int i = 1; i <= a / 2; i++) {
			if (a % i == 0) {
				af.add(i);
			}
		}
		bf.add(b);
		for (int i = 1; i <= b / 2; i++) {
			if (b % i == 0) {
				bf.add(i);
			}
		}
		System.out.println(af.toString());
		System.out.println(bf.toString());
		int count = 0;
		for (int f: af) {	
			if (bf.contains(f)) {
				count++;
			}
		}
		return count;
	}
	int _2_commonFactors(int a, int b) {
		int count = 0;
		for (int i = 1; i <= Math.min(a,b); i++) {
			if (a % i == 0 && b % i == 0) {
				count++;
			}
		}
		return count;
	}
	int _3_commonFactors(int a, int b) {
		return (int) IntStream.rangeClosed(1,Math.min(a,b)).parallel().filter((d) -> {a % d == 0 && b % d == 0}).count();
	}
	int commonFactors(int a, int b) {
		this.a = a;
		this.b = b;
		return f3();
	}
	int f1() {
		return _1_commonFactors(a,b);
	}
	int f2() {
		return _2_commonFactors(a,b);
	}
	int f3() {
		return _3_commonFactors(a,b);
	}
}