class Solution {
	boolean isValid(int n, int sum) {
		if (n < 1 || sum <= 0) {
			return false;
		}
		int div = 10;
		int rem = n % div;
		int currSum = n / div + rem;
		while (n > 1 && sum > 0) {
			rem = n % div;
			currSum = n / div + rem;
			if (currSum == sum) {
				return true;
			} 
			else {
				if (n / div == 0) {
					return false;
				}
				if (isValid(n / div,sum - rem)) {
					return true;
				}
			}
			div = div * 10;
		}
		return false;
	}
	int punishmentNumber(int n) {
		int pNum = 0;
		for (int i = 1; i <= n; i++) {
			if (i * i == i || isValid(i * i,i)) {
				pNum += i * i;
			}
		}
		return pNum;
	}
}