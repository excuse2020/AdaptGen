class Solution {
	int minEatingSpeed(int[] piles, int h) {
		int lo = 1;
		int max = piles[0];
		for (int val: piles) {	
			max = Math.max(max,val);
		}
		int ans = -1;
		int hi = max;
		while (lo <= hi) {
			int mid = lo + (hi - lo) / 2;
			long sum = 0;
			for (int pile: piles) {	
				sum += (long) Math.ceil((double) pile / mid);
			}
			if (sum <= h) {
				ans = mid;
				hi = mid - 1;
			} 
			else {
				lo = mid + 1;
			}
		}
		return ans != -1 ? ans : lo;
	}
}