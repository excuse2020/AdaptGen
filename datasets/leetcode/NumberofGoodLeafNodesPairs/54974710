class Solution {
	int CountPairs(TreeNode root, int distance) {
	}
	void CreateGraph(TreeNode r, TreeNode parent) {
		g[r].Add(parent);
		if (r.left != null) {
			g[r.left] = byte[];
			g[r].Add(r.left);
			CreateGraph(r.left,r);
		}
		if (r.right != null) {
			g[r.right] = byte[];
			g[r].Add(r.right);
			CreateGraph(r.right,r);
		}
		if (r.left == null && r.right == null) {
			leafNodes.Add(r);
		}
	}
	void FindGoodPairs(TreeNode r, int leftDistance) {
		if (visited.Contains(r) || leftDistance < 0) {
			return;
		}
		visited.Add(r);
		if (leafNodes.Contains(r)) {
			++goodPairs;
		}
		adj(g[r]);
		FindGoodPairs(adj,leftDistance - 1);
	}
}