class Solution {
	void leaf(TreeNode root1, ArrayList<Integer> l) {
		if (root1 == null) {
			return;
		}
		if (root1.left == null && root1.right == null) {
			l.add(root1.val);
		}
		leaf(root1.left,l);
		leaf(root1.right,l);
	}
	void leaf1(TreeNode root2, ArrayList<Integer> l1) {
		if (root2 == null) {
			return;
		}
		if (root2.left == null && root2.right == null) {
			l1.add(root2.val);
		}
		leaf1(root2.left,l1);
		leaf1(root2.right,l1);
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		if ((root1 == null && root2 == null) || root1 == null || root2 == null) {
			return true;
		}
		ArrayList<Integer> l = new ArrayList<>();
		ArrayList<Integer> l1 = new ArrayList<>();
		leaf(root1,l);
		leaf1(root2,l1);
		if (l.equals(l1)) {
			return true;
		} 
		else {
			return false;
		}
	}
}