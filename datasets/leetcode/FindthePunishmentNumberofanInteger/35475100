class Solution {
	boolean checkNumber(int n) {
		int n1 = n * n;
		String ns = Integer.toString(n1);
		int l = ns.length();
		int bitLe = (int) Math.pow(2,l - 1);
		for (int i = 0; i < bitLe; i++) {
			List<Integer> k = new ArrayList<>();
			for (int j = 0; j < l; j++) {
				if ((i & (1 << j)) > 0) {
					k.add(j);
				}
			}
			int sum = 0;
			int prev = 0;
			if (!k.isEmpty()) {
				for (int sub: k) {	
					sum += Integer.parseInt(ns.substring(prev,sub + 1));
					prev = sub + 1;
				}
				sum += Integer.parseInt(ns.substring(prev,l));
			}
			if (sum == n) {
				return true;
			}
		}
		return false;
	}
	int punishmentNumber(int n) {
		int sum = 1;
		for (int i = 2; i <= n; i++) {
			if (checkNumber(i)) {
				sum += (i * i);
			}
		}
		return sum;
	}
}