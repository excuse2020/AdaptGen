class Solution {
	int goodNodes(TreeNode root) {
		Stack<TreeNode> stack = new Stack<>();
		Stack<Integer> maxStack = new Stack<>();
		TreeNode current = root;
		stack.push(current);
		maxStack.push(current.val);
		int count = 0;
		while (!stack.isEmpty()) {
			current = stack.pop();
			int currentMax = maxStack.pop();
			if (current.val >= currentMax) {
				currentMax = current.val;
				count++;
			}
			if (current.left != null) {
				stack.push(current.left);
				maxStack.push(currentMax);
			}
			if (current.right != null) {
				stack.push(current.right);
				maxStack.push(currentMax);
			}
		}
		return count;
	}
}