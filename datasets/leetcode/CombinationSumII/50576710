class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		List<List<Integer>> ans = new ArrayList<>();
		helper(0,target,candidates,ans,new ArrayList<>());
		return ans;
	}
	void helper(int idx, int target, int[] arr, List<List<Integer>> ans, List<Integer> temp) {
		if (target == 0) {
			ans.add(new ArrayList<>(temp));
			return;
		}
		for (int i = idx; i < arr.length && arr[i] <= target; i++) {
			if (i == idx || arr[i] != arr[i - 1]) {
				temp.add(arr[i]);
				helper(i + 1,target - arr[i],arr,ans,temp);
				temp.remove(temp.size() - 1);
			}
		}
	}
}