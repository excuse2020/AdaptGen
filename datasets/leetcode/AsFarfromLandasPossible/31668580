class Solution {
	int maxDistance(int[][] grid) {
		int res = new int[grid.length + 2][grid.length + 2], max = -1;
		for (int i: res) {	
			Arrays.fill(i,grid.length * 2 + 1);
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if (grid[i][j] != 1) {
					res[i + 1][j + 1] = Math.min(res[i + 1][j + 1],Math.min(res[i][j + 1] + 1,res[i + 1][j] + 1));
				} 
				else {
					res[i + 1][j + 1] = 0;
				}
			}
		}
		for (int i = grid.length - 1; i >= 0; i--) {
			for (int j = grid.length - 1; j >= 0; j--) {
				if (grid[i][j] != 1) {
					res[i + 1][j + 1] = Math.min(res[i + 1][j + 1],Math.min(res[i + 2][j + 1] + 1,res[i + 1][j + 2] + 1));
					max = Math.max(max,res[i + 1][j + 1]);
				} 
				else {
					res[i + 1][j + 1] = 0;
				}
			}
		}
		return max == grid.length * 2 + 1 ? -1 : max;
	}
}