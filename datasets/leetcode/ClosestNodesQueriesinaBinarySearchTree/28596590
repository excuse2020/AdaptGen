class Solution {
	List<List<Integer>> closestNodes(TreeNode root, List<Integer> queries) {
		TreeSet<Integer> tr = new TreeSet<Integer>();
		traverse(tr,root);
		List<List<Integer>> res = new ArrayList<List<Integer>>();
		for (int i = 0; i < queries.size(); i++) {
			int temp = queries.get(i);
			List<Integer> tempList = new ArrayList<Integer>();
			Integer floor = tr.floor(temp);
			Integer ceiling = tr.ceiling(temp);
			if (floor == null) {
				tempList.add(-1);
			} 
			else {
				tempList.add(floor);
			}
			if (ceiling == null) {
				tempList.add(-1);
			} 
			else {
				tempList.add(ceiling);
			}
			res.add(tempList);
		}
		return res;
	}
	void traverse(TreeSet<Integer> tr, TreeNode root) {
		if (root != null) {
			tr.add(root.val);
			traverse(tr,root.left);
			traverse(tr,root.right);
		}
	}
}