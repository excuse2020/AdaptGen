class Solution {
	int countZeros(String str, int s, int e) {
		int count = 0;
		int i = s;
	}
	int longestSubsequence(String s, int k) {
		String t = Integer.toBinaryString(k);
		int slen = s.length();
		int tlen = t.length();
		for (int size = tlen; size >= 0; size--) {
			for (int i = slen - size, j = slen - 1; i >= 0; i--, j--) {
				String suffix = s.substring(i,j + 1);
				int suffixValue = Integer.parseInt(suffix,2);
				if (suffixValue <= k) {
					int zeros = countZeros(s,0,i);
					return zeros + j - i + 1;
				}
			}
		}
		return 0;
	}
}