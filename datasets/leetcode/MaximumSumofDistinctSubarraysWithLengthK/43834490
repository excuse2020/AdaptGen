class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		if (nums.length == 0) {
			return 0;
		}
		int left = 0;
		int right = 0;
		long sum = 0;
		long max = 0;
		HashSet<Integer> set = new HashSet<>();
		while (right < nums.length) {
			if (!set.contains(nums[right]) && set.size() < k) {
				set.add(nums[right]);
				sum += nums[right];
				right++;
			} 
			else {
				set.remove(nums[left]);
				sum -= nums[left];
				left++;
			}
			if (set.size() == k) {
				max = Math.max(max,sum);
			}
		}
		return max;
	}
}