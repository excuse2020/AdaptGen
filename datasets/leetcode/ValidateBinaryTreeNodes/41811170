class Solution {
	boolean validateBinaryTreeNodes(int n, int[] leftChild, int[] rightChild) {
		boolean[] visited = new boolean[n];
		int root = 0;
		for (int i = 0; i < n; i++) {
			int l = leftChild[i], r = rightChild[i];
			if (l == root || r == root) {
				if (!visited[i]) {
					root = i;
				} 
				else {
					return false;
				}
			}
			if (l != -1) {
				if (visited[l]) {
					return false;
				}
				visited[l] = true;
			}
			if (r != -1) {
				if (visited[r]) {
					return false;
				}
				visited[r] = true;
			}
		}
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (!visited[i]) {
				count++;
			}
			if (count > 1) {
				return false;
			}
		}
		return true;
	}
}