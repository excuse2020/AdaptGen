class Solution {
	int M = 1000000007;
	int finder(int[] nums, int ind, int k, int[][] dp) {
		if (ind == nums.length) {
			return k;
		}
		if (dp[ind][k] != -1) {
			return dp[ind][k];
		}
		if (k == 1) {
			if (nums[ind] == 1) {
				return dp[ind][k] = finder(nums,ind + 1,1,dp) % M;
			} 
			else {
				return dp[ind][k] = (finder(nums,ind + 1,0,dp) + finder(nums,ind + 1,1,dp)) % M;
			}
		} 
		else {
			return dp[ind][k] = finder(nums,ind + 1,k + nums[ind],dp) % M;
		}
	}
	int numberOfGoodSubarraySplits(int[] nums) {
		int dp = new int[nums.length][2];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return finder(nums,0,0,dp);
	}
}