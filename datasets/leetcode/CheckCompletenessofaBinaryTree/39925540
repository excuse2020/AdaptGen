class Solution {
	void helper(TreeNode root, StringBuilder s) {
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		while (!q.isEmpty()) {
			int size = q.size();
			for (int i = 0; i < size; i++) {
				TreeNode curr = q.poll();
				if (curr == null) {
					s.append("null,");
				} 
				else {
					s.append(curr.val + ",");
					q.add(curr.left);
					q.add(curr.right);
				}
			}
		}
	}
	boolean isCompleteTree(TreeNode root) {
		StringBuilder s = new StringBuilder();
		helper(root,s);
		System.out.println(s);
		String arr = s.toString().split(",");
		int len = arr.length - 1;
		while (arr[len].equals("null")) {
			len--;
		}
		for (int i = 0; i <= len; i++) {
			if (arr[i].equals("null")) {
				return false;
			}
		}
		return true;
	}
}