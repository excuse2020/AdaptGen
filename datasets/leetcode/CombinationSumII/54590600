class Solution {
	List<List<Integer>> list = new ArrayList<>();
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		helper(candidates,0,target,new ArrayList<>());
		return list;
	}
	void helper(int[] candidates, int start, int target, List<Integer> currentList) {
		if (target == 0) {
			list.add(new ArrayList<>(currentList));
			return;
		}
		if (target < 0) {
			return;
		}
		for (int i = start; i < candidates.length; i++) {
			if (i > start && candidates[i] == candidates[i - 1]) {
				continue;
			}
			currentList.add(candidates[i]);
			helper(candidates,i + 1,target - candidates[i],currentList);
			currentList.remove(currentList.size() - 1);
		}
	}
}