class Solution {
	boolean recursive(int n) {
		if (n == 0) {
			return false;
		}
		if (n == 1) {
			return true;
		}
		for (int i = 1; i * i <= n; i++) {
			int square = i * i;
			if (square <= n) {
				if (recursive(n - square) == false) {
					return true;
				}
			}
		}
		return false;
	}
	boolean tabulation(int ind) {
		boolean[] dp = new boolean[ind + 1];
		for (int n = 1; n <= ind; n++) {
			for (int i = 1; i * i <= n; i++) {
				if (dp[n - (i * i)] == false) {
					dp[n] = true;
					break;
				}
			}
		}
		return dp[ind];
	}
	boolean winnerSquareGame(int n) {
		return tabulation(n);
	}
}