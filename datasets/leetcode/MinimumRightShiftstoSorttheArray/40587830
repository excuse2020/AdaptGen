class Solution {
	int minimumRightShifts(List<Integer> nums) {
		int len = nums.size();
		if (len == 1) {
			return 0;
		}
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < len; i++) {
			min = Math.min(min,nums.get(i));
		}
		int minI = 0;
		for (int i = 0; i < len; i++) {
			if (nums.get(i) == min) {
				minI = i;
			}
		}
		for (int i = minI + 1; i < nums.size(); i++) {
			if (nums.get(i) < nums.get(i - 1)) {
				return -1;
			}
		}
		for (int i = 0; i < minI; i++) {
			if (i == 0) {
				if (nums.get(i) < nums.get(nums.size() - 1)) {
					return -1;
				}
			} 
			else if (nums.get(i) < nums.get(i - 1)) {
				return -1;
			}
		}
		return (nums.size() - minI) % nums.size();
	}
}