class Solution {
	String DecimalToBinary(int num) {
		StringBuffer sb = new StringBuffer("");
		while (0 != num) {
			sb.append(num % 2);
			num /= 2;
		}
		sb.reverse();
		String ans = new String(sb);
		while (ans.length() != 8) {
			ans = "0" + ans;
		}
		return ans;
	}
	String IPtoNum(String ip) {
		StringBuffer sb = new StringBuffer("");
		String[] strs = ip.split("\\.");
		for (String str: strs) {	
			sb.append(DecimalToBinary(Integer.valueOf(str)));
		}
		String tmpStr = new String(sb);
		char[] chrs = tmpStr.toCharArray();
		long ans = 0l;
		int account = 0;
		for (int i = chrs.length - 1; i > -1; i--) {
			if (Integer.valueOf(chrs[i] + "") == 1) {
				ans += ((long) Math.pow(2,account));
			}
			account++;
		}
		return String.valueOf(ans);
	}
}