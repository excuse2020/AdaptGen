class Solution {
	int maxSum(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		int top = 0;
		int bottom = 2;
		int left = 0;
		int right = 2;
		int max = 0;
		while (right < m && bottom < n) {
			int sum = 0;
			for (int i = top; i <= bottom; i++) {
				for (int j = left; j <= right; j++) {
					if (i != top + 1) {
						sum += grid[i][j];
					}
				}
			}
			sum += grid[top + 1][left + 1];
			max = Math.max(max,sum);
			left++;
			right++;
			if (right == m) {
				top++;
				bottom++;
				left = 0;
				right = 2;
			}
		}
		return max;
	}
}