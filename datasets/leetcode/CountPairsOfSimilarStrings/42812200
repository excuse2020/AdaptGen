class Solution {
	String makeKey(String str) {
		String key = "";
		int[] alphabet = new int[26];
		for (int i = 0; i < str.length(); i++) {
			int ind = str.charAt(i) - 97;
			alphabet[ind] = 1;
		}
		for (int i = 0; i < alphabet.length; i++) {
			if (alphabet[i] != 0) {
				key += (char) (i + 97);
			}
		}
		return key;
	}
	int similarPairs(String[] words) {
		int count = 0;
		Map<String, Integer> map = new HashMap<>();
		for (int i = 0; i < words.length; i++) {
			String key = makeKey(words[i]);
			map.put(key,map.getOrDefault(key,0) + 1);
		}
		for (Map.Entry<String, Integer> pairs: map.entrySet()) {	
			int val = pairs.getValue();
			int sum = (val * (val - 1)) / 2;
			count += sum;
		}
		return count;
	}
}