class Solution {
	int mod = 1000000007;
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		long maxRowGap = horizontalCuts[0];
		long maxColGap = verticalCuts[0];
		int m = horizontalCuts.length;
		int n = verticalCuts.length;
		for (int i = 1; i < m; i++) {
			maxRowGap = Math.max(maxRowGap,horizontalCuts[i] - horizontalCuts[i - 1]);
		}
		maxRowGap = Math.max(maxRowGap,h - horizontalCuts[m - 1]);
		for (int i = 1; i < n; i++) {
			maxColGap = Math.max(maxColGap,verticalCuts[i] - verticalCuts[i - 1]);
		}
		maxColGap = Math.max(maxColGap,w - verticalCuts[n - 1]);
		long ans = (maxColGap % mod) * (maxRowGap % mod);
		ans %= mod;
		return (int) ans;
	}
}