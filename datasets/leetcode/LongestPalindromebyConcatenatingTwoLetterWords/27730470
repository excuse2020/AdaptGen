class Solution {
	int longestPalindrome(String[] words) {
		HashMap<String, Integer> map = new HashMap<>();
		for (String s: words) {	
			map.merge(s,1,);
			StringBuilder sb = new StringBuilder(s);
		}
		int cnt = 0;
		boolean b = true;
		for (String s: map.keySet()) {	
			StringBuilder sb = new StringBuilder(s);
			sb.reverse();
			String t = sb.toString();
			if (t.equals(s) && b) {
				b = false;
				cnt += 2;
			}
			if (map.containsKey(t)) {
				if (t.equals(s)) {
					if ((map.get(t) & 1) == 1) {
						cnt += ((map.get(t)) - 1) * 2;
					} 
					else {
						cnt += map.get(t) * 2;
					}
				} 
				else {
					cnt += Math.min(map.get(s),map.get(t)) * 2;
				}
			}
		}
		return cnt;
	}
}