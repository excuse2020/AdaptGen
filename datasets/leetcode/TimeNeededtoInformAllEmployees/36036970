class Solution {
	int dfs(int headID, int[] informTime, HashMap<Integer, ArrayList<Integer>> map) {
		int prev = 0;
		if (!map.containsKey(headID)) {
			return prev;
		}
		ArrayList<Integer> aa = map.get(headID);
		for (int i = 0; i < aa.size(); i++) {
			prev = Math.max(prev,dfs(aa.get(i),informTime,map));
		}
		return prev + informTime[headID];
	}
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
		for (int i = 0; i < manager.length; i++) {
			if (!map.containsKey(manager[i])) {
				map.put(manager[i],new ArrayList<>());
			}
			map.get(manager[i]).add(i);
		}
		return dfs(headID,informTime,map);
	}
}