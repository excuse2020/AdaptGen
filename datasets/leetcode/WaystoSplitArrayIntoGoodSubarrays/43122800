class Solution {
	int numberOfGoodSubarraySplits(int[] nums) {
		int MOD = (int) (1e9 + 7);
		int[] dp = new int[nums.length];
		for (int i = 0; i < nums.length; ++i) {
			if (i == 0) {
				dp[i] = nums[i] == 1 ? 1 : 0;
			} 
			else {
				if (nums[i] == 0) {
					dp[i] = dp[i - 1];
				} 
				else {
					int count = 1;
					int j;
					for (j = i - 1; j >= 0; j--) {
						if (nums[j] == 0) {
							count++;
						} 
						else {
							break;
						}
					}
					if (j != -1) {
						while (count-- > 0) {
							dp[i] = (dp[i] + dp[j]) % MOD;
						}
					} 
					else {
						dp[i] = 1;
					}
				}
			}
		}
		return dp[nums.length - 1];
	}
}