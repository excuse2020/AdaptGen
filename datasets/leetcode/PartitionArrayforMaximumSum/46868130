class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int i, start, n = arr.length;
		int[] dp = new int[n + 1];
		dp[n - 1] = arr[n - 1];
		for (start = n - 2; start >= 0; start--) {
			int maxNum = arr[start], result = 0;
			for (i = start; i < start + k && i < n; i++) {
				maxNum = Math.max(maxNum,arr[i]);
				int currRes = (i - start + 1) * maxNum + dp[i + 1];
				result = Math.max(result,currRes);
			}
			dp[start] = result;
		}
		return dp[0];
	}
}