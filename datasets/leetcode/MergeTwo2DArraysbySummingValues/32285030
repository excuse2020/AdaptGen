class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		int total = nums1.length + nums2.length;
		int[][] arr = new int[total][2];
		int l = 0;
		int i = 0, j = 0;
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i][0] == nums2[j][0]) {
				arr[l][0] = nums1[i][0];
				arr[l][1] = nums1[i][1] + nums2[j][1];
				i++;
				j++;
			} 
			else if (nums1[i][0] <= nums2[j][0]) {
				arr[l][0] = nums1[i][0];
				arr[l][1] = nums1[i][1];
				i++;
			} 
			else if (nums1[i][0] >= nums2[j][0]) {
				arr[l][0] = nums2[j][0];
				arr[l][1] = nums2[j][1];
				j++;
			}
			l++;
		}
		if (i < nums1.length) {
			for (int m = i; m < nums1.length; m++) {
				arr[l][0] = nums1[m][0];
				arr[l][1] = nums1[m][1];
				l++;
			}
		} 
		else if (j < nums2.length) {
			for (int m = j; m < nums2.length; m++) {
				arr[l][0] = nums2[m][0];
				arr[l][1] = nums2[m][1];
				l++;
			}
		}
		for (int m = 0; m < arr.length; m++) {
			if (arr[m][0] == 0) {
				return Arrays.copyOfRange(arr,0,m);
			}
		}
		return arr;
	}
}