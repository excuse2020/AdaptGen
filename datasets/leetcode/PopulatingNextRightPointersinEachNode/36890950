class Solution {
	Node connect(Node root) {
		if (root == null) {
			return root;
		}
		Queue<Node> queue = new LinkedList<>();
		queue.add(root);
		while (queue.size() > 0) {
			Deque<Node> dq = new ArrayDeque<>();
			int length = queue.size();
			for (int i = 0; i < length; i++) {
				Node curr = queue.poll();
				dq.addLast(curr);
				if (curr.left != null) {
					queue.add(curr.left);
				}
				if (curr.right != null) {
					queue.add(curr.right);
				}
			}
			while (dq.size() > 1) {
				Node popped = dq.removeFirst();
				popped.next = dq.getFirst();
			}
			Node popped = dq.removeFirst();
			popped.next = null;
		}
		return root;
	}
}