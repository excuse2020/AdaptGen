class Solution {
	void dfs(int src, int[][] isConnected, boolean[] vis) {
		int[] nbrArr = isConnected[src];
		for (int idx = 0; idx < nbrArr.length; idx++) {
			if (nbrArr[idx] == 0 || vis[idx] || idx == src) {
				continue;
			}
			vis[idx] = true;
			dfs(idx,isConnected,vis);
		}
	}
	int findCircleNum(int[][] isConnected) {
		int cities = isConnected.length;
		boolean[] vis = new boolean[cities];
		int count = 0;
		for (int i = 0; i < cities; i++) {
			if (vis[i]) {
				continue;
			}
			count++;
			vis[i] = true;
			dfs(i,isConnected,vis);
		}
		return count;
	}
}