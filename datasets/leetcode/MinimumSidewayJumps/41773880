class Solution {
	int minSideJumps(int[] obstacles) {
		int n = obstacles.length, dp1 = 1, dp2 = 0, dp3 = 1, max = 1000000;
		for (int i = 1; i < n; i++) {
			if (obstacles[i] == 1) {
				dp1 = max;
				dp2 = Math.min(dp2,dp3 + 1);
				dp3 = Math.min(dp3,dp2 + 1);
			}
			if (obstacles[i] == 2) {
				dp2 = max;
				dp1 = Math.min(dp1,dp3 + 1);
				dp3 = Math.min(dp3,dp1 + 1);
			}
			if (obstacles[i] == 3) {
				dp3 = max;
				dp1 = Math.min(dp1,dp2 + 1);
				dp2 = Math.min(dp2,dp1 + 1);
			}
			if (obstacles[i] == 0) {
				dp1 = Math.min(dp1,Math.min(dp2,dp3) + 1);
				dp2 = Math.min(dp2,Math.min(dp1,dp3) + 1);
				dp3 = Math.min(dp3,Math.min(dp2,dp1) + 1);
			}
		}
		return Math.min(dp1,Math.min(dp2,dp3));
	}
}