class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode prev = null;
		ListNode curr = slow;
		while (curr != null) {
			ListNode temp = curr.next;
			curr.next = prev;
			prev = curr;
			curr = temp;
		}
		int max = 0;
		ListNode h1 = head;
		ListNode h2 = prev;
		while (h1 != null && h2 != null) {
			int twinSum = h1.val + h2.val;
			if (twinSum > max) {
				max = twinSum;
			}
			h1 = h1.next;
			h2 = h2.next;
		}
		return max;
	}
}