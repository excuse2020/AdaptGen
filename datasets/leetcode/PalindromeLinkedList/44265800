class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode reversedSecondHalf = reverse(slow);
		while (reversedSecondHalf != null) {
			if (head.val != reversedSecondHalf.val) {
				return false;
			}
			head = head.next;
			reversedSecondHalf = reversedSecondHalf.next;
		}
		return true;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		ListNode current = head;
		ListNode next = null;
		while (current != null) {
			next = current.next;
			current.next = prev;
			prev = current;
			current = next;
		}
		return prev;
	}
}