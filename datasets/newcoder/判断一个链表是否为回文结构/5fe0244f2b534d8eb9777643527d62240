class Solution {
	boolean isPail(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode cur = head;
		ListNode pre = head;
		while (pre != null && pre.next != null) {
			cur = cur.next;
			pre = pre.next.next;
		}
		cur = reversalList(cur);
		ListNode node = head;
		while (cur != null) {
			if (node.val != cur.val) {
				return false;
			}
			node = node.next;
			cur = cur.next;
		}
		return true;
	}
	ListNode reversalList(ListNode head) {
		Stack<ListNode> stack = new Stack<>();
		while (head != null) {
			stack.push(head);
			head = head.next;
		}
		head = stack.pop();
		ListNode cur = head;
		while (!stack.isEmpty()) {
			ListNode node = stack.pop();
			node.next = null;
			cur.next = node;
			cur = cur.next;
		}
		return head;
	}
}