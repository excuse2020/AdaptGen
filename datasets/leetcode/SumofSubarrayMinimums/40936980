class Solution {
	int MOD = 1_000_000_007;
	long count(int k, int[] arr, int n) {
		long left = 0;
		long right = 0;
		int i = k - 1;
		while (i >= 0 && arr[k] < arr[i]) {
			left++;
			i--;
		}
		i = k + 1;
		while (i < n && arr[k] <= arr[i]) {
			right++;
			i++;
		}
		return ((left + 1) * (right + 1)) % MOD;
	}
	int sumSubarrayMins(int[] arr) {
		long sum = 0;
		int n = arr.length;
		for (int i = 0; i < n; i++) {
			long subarrayCount = count(i,arr,n);
			sum = (sum + (subarrayCount * arr[i]) % MOD) % MOD;
		}
		return (int) sum;
	}
}