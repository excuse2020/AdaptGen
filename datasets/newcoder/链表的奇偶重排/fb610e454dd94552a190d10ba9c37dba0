class Solution {
	ListNode oddEvenList(ListNode head) {
		Stack<ListNode> a1 = new Stack<>();
		Stack<ListNode> a2 = new Stack<>();
		int i = 0;
		ListNode node = head;
		while (node != null) {
			i++;
			if (i % 2 != 0) {
				a1.push(node);
			}
			if (i % 2 == 0) {
				a2.push(node);
			}
			node = node.next;
		}
		ListNode listNode = new ListNode(-1);
		ListNode a = listNode;
		while (!a2.empty()) {
			ListNode c = new ListNode(a2.pop().val);
			c.next = listNode.next;
			listNode.next = c;
		}
		while (!a1.empty()) {
			ListNode c = new ListNode(a1.pop().val);
			c.next = listNode.next;
			listNode.next = c;
		}
		return a.next;
	}
}