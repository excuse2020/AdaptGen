class Solution {
	int mod = (int) (1e9 + 7);
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		long max1 = 0;
		long max2 = 0;
		for (int i = 1; i < horizontalCuts.length; i++) {
			max1 = Math.max(max1,horizontalCuts[i] - horizontalCuts[i - 1]);
		}
		max1 = Math.max(max1,h - horizontalCuts[horizontalCuts.length - 1]);
		max1 = Math.max(max1,horizontalCuts[0]);
		for (int i = 1; i < verticalCuts.length; i++) {
			max2 = Math.max(max2,verticalCuts[i] - verticalCuts[i - 1]);
		}
		max2 = Math.max(max2,w - verticalCuts[verticalCuts.length - 1]);
		max2 = Math.max(max2,verticalCuts[0]);
		return (int) ((max1 % mod) % mod * (max2 % mod) % mod) % mod;
	}
}