class Solution {
	int longestPalindrome(String[] words) {
		Map<String, Integer> map = new HashMap<>();
		int count = 0;
		for (int i = 0; i < words.length; i++) {
			String rev = words[i].charAt(1) + "";
			if (map.containsKey(rev) && map.get(rev) > 0) {
				count += 2 * 2;
				map.put(rev,map.get(rev) - 1);
				if (map.get(rev) == 0) {
					map.remove(rev);
				}
			} 
			else {
				map.put(words[i],map.getOrDefault(words[i],0) + 1);
			}
		}
		for (Map.Entry<String, Integer> m: map.entrySet()) {	
			if (m.getKey().charAt(0) == m.getKey().charAt(1)) {
				count += 2;
				break;
			}
		}
		return count;
	}
}