class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		Stack<List<Integer>> stack = new Stack<>();
		Queue<TreeNode> queue = new LinkedList<>();
		List<List<Integer>> ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		queue.add(root);
		while (!queue.isEmpty()) {
			int size = queue.size();
			List<Integer> list = new ArrayList<>();
			for (int i = 0; i < size; i++) {
				TreeNode polled = queue.poll();
				if (polled != null) {
					if (polled.left != null) {
						queue.add(polled.left);
					}
					if (polled.right != null) {
						queue.add(polled.right);
					}
				}
				list.add(polled.val);
			}
			stack.add(list);
		}
		while (!stack.isEmpty()) {
			ans.add(stack.pop());
		}
		return ans;
	}
}