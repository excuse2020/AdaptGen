class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode node = head;
		ListNode pre = null;
		ListNode next = null;
		ListNode nextIndex = null;
		int i = 1;
		while (node != null) {
			head = node;
			ListNode newNode = node.next;
			if (i >= m && i <= n) {
				node.next = pre;
				pre = node;
				if (i == n) {
					if (next == null) {
						next = pre;
						nextIndex = next;
					} 
					else {
						nextIndex.next = pre;
					}
				}
			} 
			else {
				node.next = null;
				if (next == null) {
					next = node;
					nextIndex = next;
				} 
				else {
					while (nextIndex.next != null) {
						nextIndex = nextIndex.next;
					}
					nextIndex.next = node;
					nextIndex = nextIndex.next;
				}
			}
			node = newNode;
			i++;
		}
		return next;
	}
}