class Solution {
	char[] chs = null;
	int n;
	ArrayList<String> res = new ArrayList<>();
	void dfs(int idx, int x, int y) {
		if (x == n && y == n) {
			res.add(new String(chs));
			return;
		}
		if (x < n) {
			chs[idx] = '(';
			dfs(idx + 1,x + 1,y);
		}
		if (y < x) {
			chs[idx] = ')';
			dfs(idx + 1,x,y + 1);
		}
	}
	ArrayList<String> generateParenthesis(int n) {
		if (n == 0) {
			return res;
		}
		this.n = n;
		chs = new char[n + n];
		dfs(0,0,0);
		return res;
	}
}