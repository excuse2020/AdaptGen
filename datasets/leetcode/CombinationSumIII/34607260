class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> subset = new ArrayList<>();
		ArrayList<Integer> current = new ArrayList<>();
		generateSubset(1,9,current,subset,k,n);
		return subset;
	}
	void generateSubset(int start, int end, ArrayList<Integer> current, List<List<Integer>> subset, int k, int target) {
		if (target == 0 && current.size() == k) {
			subset.add(new ArrayList(current));
		}
		for (int i = start; i <= end; i++) {
			current.add(i);
			generateSubset(i + 1,end,current,subset,k,target - i);
			current.remove(current.size() - 1);
		}
	}
}