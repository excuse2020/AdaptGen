class Solution {
	int findMin(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int low = 0, high = nums.length - 1, n = nums.length;
		if (nums[low] < nums[high]) {
			return nums[low];
		}
		while (low < high) {
			int mid = low + (high - low) / 2;
			int prev = (mid + n - 1) % n;
			int next = (mid + 1) % n;
			if (nums[mid] < nums[prev] && nums[mid] < nums[next]) {
				return nums[mid];
			} 
			else if (nums[mid] >= nums[low] && nums[high] >= nums[mid]) {
				break;
			} 
			else if (nums[mid] >= nums[low]) {
				low = mid + 1;
			} 
			else if (nums[mid] <= nums[high]) {
				high = mid - 1;
			}
		}
		if (nums[low] > nums[high]) {
			return nums[high];
		}
		return nums[low];
	}
}