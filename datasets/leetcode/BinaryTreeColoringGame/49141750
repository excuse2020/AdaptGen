class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		if (root == null) {
			return false;
		}
		if (root.val == x) {
			int left = getCount(root.left);
			int right = getCount(root.right);
			int par = n - left;
			if (left + right < par || left > 1 + right || right > 1 + left) {
				return true;
			}
			return false;
		}
		return btreeGameWinningMove(root.left,n,x) || btreeGameWinningMove(root.right,n,x);
	}
	int getCount(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return 1 + getCount(node.left);
	}
}