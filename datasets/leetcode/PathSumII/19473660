class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> subans = new ArrayList<>();
		sol(root,targetSum,ans,subans,0);
		return ans;
	}
	void sol(TreeNode root, int target, List<List<Integer>> ans, List<Integer> subans, int ssf) {
		if (root == null) {
			return;
		}
		ssf = ssf + root.val;
		subans.add(root.val);
		if (root.left == null && root.right == null) {
			if (target == ssf) {
				if ((subans.size() != 0)) {
					ans.add(new ArrayList<>(subans));
				}
			}
		}
		sol(root.left,target,ans,subans,ssf);
		sol(root.right,target,ans,subans,ssf);
		subans.remove(subans.size() - 1);
	}
}