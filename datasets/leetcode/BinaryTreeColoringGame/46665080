class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode nodeX = findNode(root,x);
		int leftNodes = countNodes(nodeX.left);
		int rightNodes = countNodes(nodeX.right);
		int parentNodes = n - leftNodes;
		return leftNodes > n / 2 || rightNodes > n / 2 || parentNodes > n / 2;
	}
	int countNodes(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return 1 + countNodes(node.left);
	}
	TreeNode findNode(TreeNode node, int x) {
		if (node == null || node.val == x) {
			return node;
		}
		TreeNode left = findNode(node.left,x);
		TreeNode right = findNode(node.right,x);
		return left != null ? left : right;
	}
}