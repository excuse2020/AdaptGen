class Solution {
	int[] dp;
	int calc_min(String s, int i) {
		if (dp[i] != 0) {
			return dp[i];
		}
		int arr = new int[26];
		ArrayList<Integer> true_arr = new ArrayList<Integer>();
		int j = i;
	}
	boolean checkIfSame(int[] arr) {
		int seen = -1;
		for (int i: arr) {	
			if (i != 0) {
				if (seen == -1) {
					seen = i;
				} 
				else {
					if (seen != i) {
						return false;
					}
				}
			}
		}
		return true;
	}
	int minimumSubstringsInPartition(String s) {
		dp = new int[s.length() + 1];
		dp[s.length()] = 0;
		dp[s.length() - 1] = 1;
		for (int i = s.length() - 2; i >= 0; i--) {
			dp[i] = calc_min(s,i);
		}
		return dp[0];
	}
}