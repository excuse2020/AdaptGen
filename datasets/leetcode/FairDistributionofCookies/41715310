class Solution {
	int bag_sum;
	int bags;
	int[] cookies;
	int max_value = Integer.MAX_VALUE;
	int min_value = Integer.MIN_VALUE;
	int total_cookies;
	int distributeCookies(int[] cookies, int k) {
		total_cookies = cookies.length;
		this.cookies = cookies;
		bags = k;
		bag_sum = new int[bags];
		Arrays.fill(bag_sum,0);
		return get_min_unfairness(0);
	}
	int get_min_unfairness(int current) {
		if (current == total_cookies) {
			int ans = min_value;
			for (int i = 0; i < bag_sum.length; i++) {
				ans = Math.max(ans,bag_sum[i]);
			}
			return ans;
		} 
		else {
			int ans = max_value;
			for (int i = 0; i < bags; i++) {
				bag_sum[i] += cookies[current];
				ans = Math.min(ans,get_min_unfairness(current + 1));
				bag_sum[i] -= cookies[current];
			}
			return ans;
		}
	}
}