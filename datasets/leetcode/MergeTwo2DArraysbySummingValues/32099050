class Solution {
	int[][] mergeArrays(int[][] n1, int[][] n2) {
		int i = 0, j = 0;
		int n = n1.length, m = n2.length;
		ArrayList<List<Integer>> list = new ArrayList<>();
		while (i < n && j < m) {
			List<Integer> l1 = new ArrayList<>();
			if (n1[i][0] < n2[j][0]) {
				l1.add(n1[i][0]);
				l1.add(n1[i][1]);
				i++;
			} 
			else if (n1[i][0] > n2[j][0]) {
				l1.add(n2[j][0]);
				l1.add(n2[j][1]);
				j++;
			} 
			else {
				l1.add(n1[i][0]);
				int tmp = n1[i][1] + n2[j][1];
				l1.add(tmp);
				i++;
				j++;
			}
			list.add(l1);
		}
		if (i < n) {
			while (i < n) {
				List<Integer> l1 = new ArrayList<>();
				l1.add(n1[i][0]);
				l1.add(n1[i][1]);
				list.add(l1);
				i++;
			}
		} 
		else {
			while (j < m) {
				List<Integer> l1 = new ArrayList<>();
				l1.add(n2[j][0]);
				l1.add(n2[j][1]);
				list.add(l1);
				j++;
			}
		}
		int[][] arr = list.stream().map((l) -> {l.stream().mapToInt().toArray()}).toArray();
		return arr;
	}
}