class Solution {
	boolean hasPathSum(TreeNode root, int pathVal) {
		Stack<TreeNode> nodes = new Stack<>();
		Stack<Integer> sumOfPath = new Stack<>();
		if (root == null) {
			return false;
		}
		nodes.add(root);
		sumOfPath.add(root.val);
		while (!nodes.isEmpty()) {
			TreeNode node = nodes.pop();
			int tempSum = sumOfPath.pop();
			if (node.right == null && node.left == null && tempSum == pathVal) {
				return true;
			}
			if (node.right != null) {
				nodes.push(node.right);
				sumOfPath.push(node.right.val + tempSum);
			}
			if (node.left != null) {
				nodes.push(node.left);
				sumOfPath.push(node.left.val + tempSum);
			}
		}
		return false;
	}
}