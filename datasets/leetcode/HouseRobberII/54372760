class Solution {
	int call(int nums) {
		int dp = new int[nums.length];
		dp[0] = nums[0];
		for (int i = 1; i < nums.length; i++) {
			int l = nums[i];
			if (i - 2 >= 0) {
				l = dp[i - 2] + nums[i];
			}
			int r = dp[i - 1];
			dp[i] = Math.max(l,r);
		}
		return dp[nums.length - 1];
	}
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		int ef = new int[n - 1];
		int el = new int[n - 1];
		for (int i = 0; i < n; i++) {
			if (i < n - 1) {
				el[i] = nums[i];
			}
			if (i > 0) {
				ef[i - 1] = nums[i];
			}
		}
		return Math.max(call(ef),call(el));
	}
}