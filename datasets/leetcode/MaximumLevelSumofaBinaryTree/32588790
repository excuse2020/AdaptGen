class Solution {
	int maxLevelSum(TreeNode root) {
		if (root.left == null && root.right == null) {
			return root.val;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		int max = -99999, sum = 0, level = 0, count = 0;
		while (!(q.isEmpty())) {
			sum = 0;
			int siz = q.size();
			List<Integer> l = new ArrayList<>();
			for (int i = 0; i < siz; i++) {
				TreeNode curr = q.poll();
				l.add(curr.val);
				if (curr.left != null) {
					q.add(curr.left);
				}
				if (curr.right != null) {
					q.add(curr.right);
				}
			}
			++count;
			for (int va: l) {	
				sum += va;
			}
			if (sum > max) {
				max = sum;
				level = count;
			}
		}
		return level;
	}
}