class Solution {
	List<List<Integer>> findWinners(int[][] matches) {
		HashMap<Integer, Integer> winners = new HashMap<>();
		HashMap<Integer, Integer> losers = new HashMap<>();
		List<Integer> win = new ArrayList<>();
		List<Integer> lose = new ArrayList<>();
		for (int[] num: matches) {	
			int n1 = num[0];
			int n2 = num[1];
			win.add(n1);
			lose.add(n2);
			winners.put(n1,winners.getOrDefault(n1,0) + 1);
			losers.put(n2,losers.getOrDefault(n2,0) + 1);
		}
		Set<Integer> ans1 = new TreeSet<>();
		Set<Integer> ans2 = new TreeSet<>();
		List<List<Integer>> result = new ArrayList<>();
		for (int i: win) {	
			if (!losers.containsKey(i) && !ans1.contains(i)) {
				ans1.add(i);
			}
		}
		for (int i: lose) {	
			if (losers.containsKey(i) && losers.get(i) == 1 && !ans2.contains(i)) {
				ans2.add(i);
			}
		}
		List<Integer> ls1 = new ArrayList<>();
		List<Integer> ls2 = new ArrayList<>();
		for (int i: ans1) {	
			ls1.add(i);
		}
		for (int i: ans2) {	
			ls2.add(i);
		}
		result.add(ls1);
		result.add(ls2);
		return result;
	}
}