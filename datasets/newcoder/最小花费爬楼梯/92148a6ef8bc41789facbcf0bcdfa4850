class Solution {
	int minCostClimbingStairs(int[] cost) {
		int len = cost.length;
		int[] mark = new int[len];
		return Math.min(minExpense(cost,0,len,mark),minExpense(cost,1,len,mark));
	}
	int minExpense(int[] cost, int cur, int len, int[] mark) {
		if (cur >= len) {
			return 0;
		}
		if (mark[cur] != 0) {
			return mark[cur];
		}
		int firstExpense = cost[cur] + minExpense(cost,cur + 1,len,mark);
		int secondExpense = cost[cur] + minExpense(cost,cur + 2,len,mark);
		mark[cur] = Math.min(firstExpense,secondExpense);
		return mark[cur];
	}
}