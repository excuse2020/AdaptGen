class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode temp = getNode(root,x);
		int a = helper(root,x);
		int b = helper(temp.right,-1);
		int c = helper(temp.left,-1);
		int max = Math.max(a,Math.max(b,c));
		return max > n - max;
	}
	TreeNode getNode(TreeNode root, int x) {
		if (root == null) {
			return null;
		}
		if (root.val == x) {
			return root;
		}
		TreeNode left = getNode(root.left,x);
		TreeNode right = getNode(root.right,x);
		return left == null ? right : left;
	}
	int helper(TreeNode root, int x) {
		if (root == null) {
			return 0;
		}
		if (root.val == x) {
			return 0;
		}
		return 1 + helper(root.left,x);
	}
}