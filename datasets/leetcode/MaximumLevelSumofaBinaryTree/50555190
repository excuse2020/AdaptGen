class Solution {
	int maxLevelSum(TreeNode root) {
		if (root == null) {
			return 1;
		}
		int maxSum = Integer.MIN_VALUE;
		int level = 1;
		int maxSumAtLevel = 1;
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(root);
		while (!queue.isEmpty()) {
			int size = queue.size();
			int sum = 0;
			for (int i = 0; i < size; i++) {
				TreeNode curr = queue.poll();
				sum += curr.val;
				if (curr.left != null) {
					queue.offer(curr.left);
				}
				if (curr.right != null) {
					queue.offer(curr.right);
				}
			}
			if (sum > maxSum) {
				maxSumAtLevel = level;
				maxSum = sum;
			}
			level++;
		}
		return maxSumAtLevel;
	}
}