class Solution {
	int minSizeSubarray(int[] nums, int target) {
		int n = nums.length;
		int sum_Of_Given_Array = 0;
		for (int m: nums) {	
			sum_Of_Given_Array += m;
		}
		int m = (target / sum_Of_Given_Array) + 2;
		int ans = Integer.MAX_VALUE;
		boolean found = false;
		int sum = nums[0];
		int j = 0;
		int i = 0;
		while (i < n * m) {
			if (sum == target) {
				ans = Math.min(ans,i - j + 1);
				found = true;
				i++;
				sum += nums[i % n];
			} 
			else if (sum > target) {
				if (j < i) {
					sum -= nums[j % n];
					j++;
				} 
				else {
					i++;
					sum += nums[i % n];
				}
			} 
			else if (sum < target) {
				i++;
				sum += nums[i % n];
			}
		}
		if (found) {
			return ans;
		}
		return -1;
	}
}