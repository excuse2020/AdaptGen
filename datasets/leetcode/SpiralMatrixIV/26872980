class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] arr = new int[m][n];
		for (int i = 0; i < m; i++) {
			Arrays.fill(arr[i],-1);
		}
		ListNode curr = head;
		int minrow = 0;
		int mincol = 0;
		int maxrow = m - 1;
		int maxcol = n - 1;
		int count = 0;
		while (curr != null && count < m * n) {
			for (int i = mincol; i <= maxcol && curr != null && count < m * n; i++) {
				arr[minrow][i] = curr.val;
				curr = curr.next;
				count++;
			}
			minrow++;
			for (int i = minrow; i <= maxrow && curr != null && count < m * n; i++) {
				arr[i][maxcol] = curr.val;
				curr = curr.next;
				count++;
			}
			maxcol--;
			for (int i = maxcol; i >= mincol && curr != null && count < m * n; i--) {
				arr[maxrow][i] = curr.val;
				curr = curr.next;
				count++;
			}
			maxrow--;
			for (int i = maxrow; i >= minrow && curr != null && count < m * n; i--) {
				arr[i][mincol] = curr.val;
				curr = curr.next;
				count++;
			}
			mincol++;
		}
		return arr;
	}
}