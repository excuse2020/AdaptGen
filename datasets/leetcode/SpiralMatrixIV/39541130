class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int arr = new int[m * n];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = -1;
		}
		int i = 0;
		while (head != null) {
			arr[i] = head.val;
			i++;
			head = head.next;
		}
		int ans = new int[m][n];
		int t = 0, b = m - 1, l = 0, r = n - 1;
		int c = 0;
		while (t <= b && l <= r) {
			for (i = l; i <= r; i++) {
				ans[t][i] = arr[c];
				c++;
			}
			t++;
			for (i = t; i <= b; i++) {
				ans[i][r] = arr[c];
				c++;
			}
			r--;
			if (t <= b) {
				for (i = r; i >= l; i--) {
					ans[b][i] = arr[c];
					c++;
				}
				b--;
			}
			if (l <= r) {
				for (i = b; i >= t; i--) {
					ans[i][l] = arr[c];
					c++;
				}
				l++;
			}
		}
		return ans;
	}
}