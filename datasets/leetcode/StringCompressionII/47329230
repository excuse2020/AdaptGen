class Solution {
	int getLengthOfOptimalCompression(String s, int k) {
		int n = s.length();
		int[][] temp = new int[110][110];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= n; j++) {
				temp[i][j] = 9999;
			}
		}
		temp[0][0] = 0;
		for (int i = 1; i <= n; i++) {
			for (int j = 0; j <= k; j++) {
				int count = 0, deleted = 0;
				for (int l = i; l >= 1; l--) {
					if (s.charAt(l - 1) == s.charAt(i - 1)) {
						count++;
					} 
					else {
						deleted++;
					}
					if (j - deleted >= 0) {
						temp[i][j] = Math.min(temp[i][j],temp[l - 1][j - deleted] + 1);
					}
				}
				if (j > 0) {
					temp[i][j] = Math.min(temp[i][j],temp[i - 1][j - 1]);
				}
			}
		}
		return temp[n][k];
	}
}