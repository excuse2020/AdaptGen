class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		ListNode rev1 = reverse(head1);
		ListNode rev2 = reverse(head2);
		int carry = 0;
		ListNode dummy = new ListNode(0);
		ListNode cur = dummy;
		while (rev1 != null || rev2 != null || carry != 0) {
			int total = carry;
			if (rev1 != null) {
				total += rev1.val;
			}
			if (rev2 != null) {
				total += rev2.val;
			}
			int val = total % 10;
			carry = total / 10;
			cur.next = new ListNode(val);
			cur = cur.next;
			if (rev1 != null) {
				rev1 = rev1.next;
			}
			if (rev2 != null) {
				rev2 = rev2.next;
			}
		}
		return reverse(dummy.next);
	}
	ListNode reverse(ListNode list) {
		ListNode prev = null;
		ListNode cur = list;
		ListNode next;
		while (cur != null) {
			next = cur.next;
			cur.next = prev;
			prev = cur;
			cur = next;
		}
		return prev;
	}
}