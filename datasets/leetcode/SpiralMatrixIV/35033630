class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] res = new int[m][n];
		for (int i = 0; i < res.length; i++) {
			for (int j = 0; j < res[i].length; j++) {
				res[i][j] = -1;
			}
		}
		int iB = 0;
		int iL = res.length - 1;
		int jB = 0;
		int jL = res[0].length - 1;
		ListNode current = head;
		while (true) {
			for (int j = jB; j <= jL; j++) {
				res[iB][j] = current.val;
				if (current.next != null) {
					current = current.next;
				} 
				else {
					return res;
				}
			}
			iB++;
			for (int i = iB; i <= iL; i++) {
				res[i][jL] = current.val;
				if (current.next != null) {
					current = current.next;
				} 
				else {
					return res;
				}
			}
			jL--;
			for (int j = jL; j >= jB; j--) {
				res[iL][j] = current.val;
				if (current.next != null) {
					current = current.next;
				} 
				else {
					return res;
				}
			}
			iL--;
			for (int i = iL; i >= iB; i--) {
				res[i][jB] = current.val;
				if (current.next != null) {
					current = current.next;
				} 
				else {
					return res;
				}
			}
			jB++;
		}
	}
}