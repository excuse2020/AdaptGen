class Solution {
	void catchFish(int[][] grid, int i, int j, int[] res) {
		if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] == 0) {
			return;
		}
		res[0] += grid[i][j];
		grid[i][j] = 0;
		catchFish(grid,i,j + 1,res);
		catchFish(grid,i,j - 1,res);
		catchFish(grid,i + 1,j,res);
		catchFish(grid,i - 1,j,res);
	}
	int findMaxFish(int[][] grid) {
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				if (grid[i][j] != 0) {
					int res = new int[1];
					catchFish(grid,i,j,res);
					sum = Math.max(sum,res[0]);
				}
			}
		}
		return sum;
	}
}