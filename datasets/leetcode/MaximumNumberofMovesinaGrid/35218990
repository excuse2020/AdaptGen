class Solution {
	int maxMoves(int[][] grid) {
		int n = grid.length, m = grid[0].length;
		int[][] dp = new int[n][m];
		for (int[] d: dp) {	
			Arrays.fill(d,Integer.MIN_VALUE);
		}
		for (int i = 0; i < n; i++) {
			dp[i][0] = 0;
		}
		int ret = 0;
		for (int j = 1; j < m; j++) {
			for (int i = 0; i < n; i++) {
				if (grid[i][j] > grid[i][j - 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i][j - 1] + 1);
				}
				if (i > 0 && grid[i][j] > grid[i - 1][j - 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i - 1][j - 1] + 1);
				}
				if (i < n - 1 && grid[i][j] > grid[i + 1][j - 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i + 1][j - 1] + 1);
				}
				ret = Math.max(ret,dp[i][j]);
			}
		}
		return ret;
	}
}