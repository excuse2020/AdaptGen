class Solution {
	boolean haveConflict(String[] event1, String[] event2) {
		int[] e1 = new int[2], e2 = new int[2];
		return overlap(event1,event2);
	}
	boolean overlap(String[] first, String[] second) {
		int min_end = Math.min(Integer.parseInt(splitAndMerge(first[1])),Integer.parseInt(splitAndMerge(second[1])));
		int max_start = Math.max(Integer.parseInt(splitAndMerge(first[0])),Integer.parseInt(splitAndMerge(second[0])));
		return max_start <= min_end;
	}
	String splitAndMerge(String time) {
		String[] part = time.split(":");
		StringBuilder split = new StringBuilder();
		split.append(part[0]);
		split.append(part[1]);
		return split.toString();
	}
}