class Solution {
	TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {
		if (root == p || root == q) {
			return root;
		}
		if (p.val < q.val) {
			if (root.val >= p.val && root.val <= q.val) {
				return root;
			} 
			else if (root.val >= q.val) {
				return LCA(root.left,p,q);
			} 
			else {
				return LCA(root.right,p,q);
			}
		} 
		else {
			if (root.val >= q.val && root.val <= p.val) {
				return root;
			} 
			else if (root.val >= p.val) {
				return LCA(root.left,p,q);
			} 
			else {
				return LCA(root.right,p,q);
			}
		}
	}
	TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		return LCA(root,p,q);
	}
}