class Solution {
	int longestBeautifulSubstring(String s) {
		int n = s.length();
		if (n < 5) {
			return 0;
		}
		int cnt = 1, maxlen = 0;
		HashSet<Character> set = new HashSet<>();
		set.add(s.charAt(0));
		for (int i = 1; i < n; i++) {
			if (s.charAt(i) >= s.charAt(i - 1)) {
				cnt++;
				set.add(s.charAt(i));
			} 
			else {
				if (set.size() == 5) {
					maxlen = Math.max(maxlen,cnt);
				}
				set.clear();
				cnt = 1;
				set.add(s.charAt(i));
			}
		}
		if (set.size() == 5) {
			maxlen = Math.max(maxlen,cnt);
		}
		return maxlen;
	}
}