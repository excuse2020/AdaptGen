class Solution {
	ListNode merge2(ListNode list1, ListNode list2) {
		ListNode ans = new ListNode(0);
		ListNode ptr = ans;
		while (list1 != null || list2 != null) {
			if (list1 == null) {
				ptr.next = list2;
				return ans.next;
			}
			if (list2 == null) {
				ptr.next = list1;
				return ans.next;
			}
			if (list1.val < list2.val) {
				ptr.next = list1;
				list1 = list1.next;
			} 
			else {
				ptr.next = list2;
				list2 = list2.next;
			}
			ptr = ptr.next;
		}
		return ans.next;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists == null || lists.size() == 0) {
			return null;
		}
		int len = lists.size();
		if (len == 1) {
			return lists.get(0);
		}
		ArrayList<ListNode> ans = new ArrayList();
		for (int i = 0; i < len; i += 2) {
			if (i == len - 1) {
				ans.add(lists.get(i));
				break;
			}
			ans.add(merge2(lists.get(i),lists.get(i + 1)));
		}
		return mergeKLists(ans);
	}
}