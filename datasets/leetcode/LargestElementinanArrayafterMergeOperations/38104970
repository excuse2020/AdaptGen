class Solution {
	long maxArrayValue(int[] nums) {
		Stack<Long> st = new Stack<>();
		Stack<Long> st1 = new Stack<>();
		if (nums.length == 1) {
			return nums[0];
		}
		long max = 0;
		st.push((long) nums[0]);
		for (int i = 1; i < nums.length; i++) {
			if (st.peek() <= nums[i]) {
				st.push(st.pop() + nums[i]);
				max = Math.max(st.peek(),max);
			} 
			else {
				st.push((long) nums[i]);
				max = Math.max(st.peek(),max);
			}
		}
		st1.push((long) nums[nums.length - 1]);
		for (int i = nums.length - 2; i >= 0; i--) {
			if (st1.peek() >= nums[i]) {
				st1.push(st1.pop() + nums[i]);
				max = Math.max(st1.peek(),max);
			} 
			else {
				st1.push((long) nums[i]);
				max = Math.max(st1.peek(),max);
			}
		}
		return max;
	}
}