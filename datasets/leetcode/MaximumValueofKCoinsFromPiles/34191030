class Solution {
	int getAnswer(int i, List<List<Integer>> piles, int k, int[][] dp) {
		if (k == 0 || i >= piles.size()) {
			return 0;
		}
		if (dp[i][k] != -1) {
			return dp[i][k];
		}
		int sum = 0, ans = Integer.MIN_VALUE;
		ans = Math.max(ans,getAnswer(i + 1,piles,k,dp));
		for (int j = 0; j < piles.get(i).size(); j++) {
			sum += piles.get(i).get(j);
			if (k - j >= 0) {
				ans = Math.max(ans,sum + getAnswer(i + 1,piles,k - j,dp));
			}
		}
		return dp[i][k] = ans;
	}
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		int l = piles.size();
		int[][] dp = new int[l][k + 1];
		for (int[] a: dp) {	
			Arrays.fill(a,-1);
		}
		return getAnswer(0,piles,k,dp);
	}
}