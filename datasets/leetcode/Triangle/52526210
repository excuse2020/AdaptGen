class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		int n = triangle.size(), dp = new int[n][n];
		List<Integer> nthrow = triangle.get(n - 1);
		for (int i = 0; i <= n - 1; i++) {
			dp[n - 1][i] = nthrow.get(i);
		}
		solve(n - 2,triangle,dp);
		return dp[0][0];
	}
	void solve(int i, List<List<Integer>> triangle, int dp) {
		if (i < 0) {
			return;
		}
		List<Integer> row = triangle.get(i);
		for (int j = 0; j <= i; j++) {
			dp[i][j] = Math.min(dp[i + 1][j],dp[i + 1][j + 1]) + row.get(j);
		}
		solve(i - 1,triangle,dp);
	}
}