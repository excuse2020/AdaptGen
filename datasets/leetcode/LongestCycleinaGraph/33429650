class Solution {
	int longestCycle(int[] edges) {
		int n = edges.length;
		Integer[] lastPosition = new Integer[n];
		int maxLength = -1, position = 0;
		for (int i = 0; i < n; i++) {
			if (lastPosition[i] == null) {
				int node = i, cycleStart = position;
				while (node != -1 && lastPosition[node] == null) {
					lastPosition[node] = position++;
					node = edges[node];
				}
				if (node == -1) {
					continue;
				}
				if (lastPosition[node] < cycleStart) {
					continue;
				}
				maxLength = Math.max(maxLength,position - lastPosition[node]);
			}
		}
		return maxLength;
	}
}