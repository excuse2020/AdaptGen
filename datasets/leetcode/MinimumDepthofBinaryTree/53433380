class Solution {
	int findMinDepth(TreeNode root, int currentDepth, int minDepth) {
		if (root == null) {
			return Integer.MAX_VALUE;
		}
		if (root.left == null && root.right == null) {
			return currentDepth;
		}
		currentDepth = currentDepth + 1;
		minDepth = Math.min(minDepth,findMinDepth(root.left,currentDepth,minDepth));
		minDepth = Math.min(minDepth,findMinDepth(root.right,currentDepth,minDepth));
		return minDepth;
	}
	int minDepth(TreeNode root) {
		int currentDepth = 1;
		int minDepth = Integer.MAX_VALUE;
		if (root == null) {
			return 0;
		}
		if (root.right == null && root.left == null) {
			return (1);
		}
		return (findMinDepth(root,currentDepth,minDepth));
	}
}