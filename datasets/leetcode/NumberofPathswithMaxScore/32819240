class Solution {
	int M = (int) 1e9 + 7;
	int[] pathsWithMaxScore(List<String> board) {
		int[] ans = new int[2];
		int r = board.size(), c = board.get(0).length();
		int[][] sdp = new int[r][c];
		int[][] pdp = new int[r][c];
		for (int[] d: sdp) {	
			Arrays.fill(d,-1);
		}
		solve(board,r - 1,c - 1,sdp,pdp);
		ans[0] = sdp[r - 1][c - 1];
		ans[1] = pdp[r - 1][c - 1];
		return ans;
	}
	int solve(List<String> board, int i, int j, int[][] sdp, int[][] pdp) {
		if (i == 0 && j == 0) {
			pdp[i][j] = 1;
			return sdp[i][j] = 0;
		}
		if (sdp[i][j] != -1) {
			return sdp[i][j];
		}
		int val = 0;
	}
}