class Solution {
	boolean validateStackSequences(int[] pushed, int[] popped) {
		Stack<Integer> s = new Stack<>();
		int i = 0, j = 0;
		while (i < pushed.length && j < popped.length) {
			if (!s.isEmpty() && s.peek() == popped[j]) {
				s.pop();
				j++;
			} 
			else if (pushed[i] != popped[j]) {
				s.push(pushed[i++]);
			} 
			else if (pushed[i] == popped[j]) {
				i++;
				j++;
			} 
			else {
				return false;
			}
		}
		if (i < pushed.length) {
			return true;
		}
		while (j < popped.length) {
			if (s.peek() == popped[j++]) {
				s.pop();
			} 
			else {
				return false;
			}
		}
		return true;
	}
}