class Solution {
	TreeNode pre;
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return null;
		}
		middle(pRootOfTree);
		while (pRootOfTree.left != null) {
			pRootOfTree = pRootOfTree.left;
		}
		return pRootOfTree;
	}
	void middle(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return;
		}
		middle(pRootOfTree.left);
		if (pre == null) {
			pre = pRootOfTree;
		} 
		else {
			pre.right = pRootOfTree;
			pRootOfTree.left = pre;
			pre = pRootOfTree;
		}
		middle(pRootOfTree.right);
	}
}