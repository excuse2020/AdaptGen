class Solution {
	List<List<Integer>> threeSum(int[] n) {
		Arrays.sort(n);
		List<List<Integer>> list = new ArrayList<>();
		for (int i = 0; i < n.length - 2; i++) {
			if (i == 0 || (i > 0 && n[i] != n[i - 1])) {
				int j = i + 1;
				int k = n.length - 1;
				while (j < k) {
					if ((n[j] + n[k]) == -(n[i])) {
						ArrayList<Integer> inside = new ArrayList<>();
						inside.add(n[i]);
						inside.add(n[j]);
						inside.add(n[k]);
						list.add(inside);
						while (j < k && n[j] == n[j + 1]) {
							j++;
						}
						while (j < k && n[k] == n[k - 1]) {
							k--;
						}
						k--;
						j++;
					} 
					else if ((n[j] + n[k]) > -(n[i])) {
						k--;
					} 
					else if ((n[j] + n[k]) < -(n[i])) {
						j++;
					}
				}
			}
		}
		return list;
	}
}