class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		TreeNode head = pRoot;
		ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
		if (head == null) {
			return res;
		}
		Queue<TreeNode> temp = new LinkedList<TreeNode>();
		temp.offer(head);
		TreeNode p;
		while (!temp.isEmpty()) {
			ArrayList<Integer> row = new ArrayList<Integer>();
			int n = temp.size();
			for (int i = 0; i < n; i++) {
				p = temp.poll();
				row.add(p.val);
				if (p.left != null) {
					temp.offer(p.left);
				}
				if (p.right != null) {
					temp.offer(p.right);
				}
			}
			res.add(row);
		}
		return res;
	}
}