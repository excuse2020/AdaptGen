class Solution {
	ListNode copyList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode res = new ListNode(head.val);
		head = head.next;
		ListNode now = res;
		while (head != null) {
			now.next = new ListNode(head.val);
			head = head.next;
			now = now.next;
		}
		return res;
	}
	boolean isPail(ListNode head) {
		if (head == null) {
			return true;
		}
		ListNode rev = reverseList(copyList(head));
		while (head != null) {
			if (head.val != rev.val) {
				return false;
			}
			head = head.next;
			rev = rev.next;
		}
		return true;
	}
	ListNode reverseList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode las = null;
		ListNode nex = head.next;
		head.next = las;
		while (nex != null) {
			las = head;
			head = nex;
			nex = head.next;
			head.next = las;
		}
		return head;
	}
}