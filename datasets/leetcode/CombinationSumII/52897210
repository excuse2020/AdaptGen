class Solution {
	List<List<Integer>> res = new ArrayList<>();
	List<List<Integer>> combinationSum2(int[] c, int target) {
		Arrays.sort(c);
		util(c,target,new ArrayList<>(),0);
		return res;
	}
	void util(int[] c, int target, List<Integer> list, int index) {
		if (target == 0) {
			List<Integer> l = new ArrayList<>(list);
			Collections.sort(l);
			if (!res.contains(l)) {
				res.add(new ArrayList<>(l));
			}
			return;
		}
		if (index == c.length || target < 0) {
			return;
		}
		for (int i = index; i < c.length; i++) {
			if (i > index && c[i] == c[i - 1]) {
				continue;
			}
			list.add(c[i]);
			util(c,target - c[i],list,i + 1);
			list.remove(list.size() - 1);
		}
	}
}