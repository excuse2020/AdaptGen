class Solution {
	boolean IsPopOrder(int[] pushV, int[] popV) {
		if (pushV.length == 0 && popV.length == 0) {
			return true;
		}
		if (pushV.length != popV.length) {
			return false;
		}
		Stack<Integer> stack = new Stack<>();
		int i, j;
		for (i = 0, j = 0; i < pushV.length; i++) {
			if (pushV[i] != popV[j]) {
				if (!stack.isEmpty() && stack.peek() == popV[j]) {
					stack.pop();
					j++;
					i--;
				} 
				else {
					stack.push(pushV[i]);
				}
			} 
			else {
				j++;
			}
		}
		while (!stack.isEmpty()) {
			int temp = stack.pop();
			if (temp != popV[j]) {
				return false;
			}
			j++;
		}
		return true;
	}
}