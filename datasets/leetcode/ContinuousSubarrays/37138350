class Solution {
	long continuousSubarrays(int[] nums) {
		long ans = 0;
		TreeMap<Integer, Integer> st = new TreeMap<>();
		for (int i = 0, j = 0; i <= j && j < nums.length; j++) {
			st.put(nums[j],st.getOrDefault(nums[j],0) + 1);
			for (; i <= j && !st.isEmpty() && st.lastEntry().getKey() - st.firstEntry().getKey() > 2; ) {
				st.put(nums[i],st.get(nums[i]) - 1);
				if (st.get(nums[i]) == 0) {
					st.remove(nums[i]);
				}
				i++;
			}
			ans += j - i + 1;
		}
		return ans;
	}
}