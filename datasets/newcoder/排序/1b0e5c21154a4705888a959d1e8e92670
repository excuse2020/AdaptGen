class Solution {
	int[] MySort(int[] arr) {
		sortHelp(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] arr, int low, int high) {
		int m = arr[low];
		while (low < high) {
			while (low < high && arr[high] >= m) {
				high--;
			}
			swap(arr,low,high);
			while (low < high && arr[low] <= m) {
				low++;
			}
			if (low < high) {
				swap(arr,low,high);
			}
		}
		return low;
	}
	void sortHelp(int[] arr, int low, int high) {
		if (low < high) {
			int mkey = partition(arr,low,high);
			sortHelp(arr,low,mkey - 1);
			sortHelp(arr,mkey + 1,high);
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}