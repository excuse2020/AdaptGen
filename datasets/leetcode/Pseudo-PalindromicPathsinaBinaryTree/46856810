class Solution {
	int paths = 0;
	void dfs(TreeNode node, int[] counter, int numOdd) {
		if (node == null) {
			return;
		}
		if (++counter[node.val] % 2 == 1) {
			numOdd++;
		} 
		else {
			numOdd--;
		}
		if (node.left == null && node.right == null && numOdd <= 1) {
			paths++;
		}
		dfs(node.left,counter,numOdd);
		dfs(node.right,counter,numOdd);
		counter[node.val]--;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] counter = new int[10];
		int numOdd = 0;
		dfs(root,counter,numOdd);
		return paths;
	}
}