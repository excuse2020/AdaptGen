class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int i = horizontalCut.length - 1, j = verticalCut.length - 1;
		int horizontalSegments = 1, verticalSegments = 1;
		long cost = 0;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[i] > verticalCut[j]) {
				cost += horizontalCut[i] * verticalSegments;
				horizontalSegments++;
				i--;
			} 
			else {
				cost += verticalCut[j] * horizontalSegments;
				verticalSegments++;
				j--;
			}
		}
		while (i >= 0) {
			cost += horizontalCut[i] * verticalSegments;
			i--;
		}
		while (j >= 0) {
			cost += verticalCut[j] * horizontalSegments;
			j--;
		}
		return cost;
	}
}