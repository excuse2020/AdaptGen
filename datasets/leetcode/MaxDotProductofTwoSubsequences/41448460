class Solution {
	Long[][] dp;
	int n, m;
	int maxDotProduct(int[] nums1, int[] nums2) {
		this.n = nums1.length;
		this.m = nums2.length;
		this.dp = new Long[n][m];
		return (int) solve(0,nums1,0,nums2);
	}
	long solve(int i, int[] nums1, int j, int[] nums2) {
		if (i >= n || j >= m) {
			return Integer.MIN_VALUE;
		}
		if (dp[i][j] != null) {
			return dp[i][j];
		}
		long ans1 = (nums1[i] * nums2[j]) + Math.max(0,solve(i + 1,nums1,j + 1,nums2));
		long ans2 = solve(i + 1,nums1,j,nums2);
		long ans3 = solve(i,nums1,j + 1,nums2);
		return dp[i][j] = Math.max(ans1,Math.max(ans2,ans3));
	}
}