class Solution {
	int countFreqOfSmallestChar(String s) {
		int count = 0;
		char c;
	}
	int[] numSmallerByFrequency(String[] queries, String[] words) {
		int[] arrQ = new int[queries.length], arrW = new int[words.length];
		for (int i = 0; i < queries.length; i++) {
			arrQ[i] = countFreqOfSmallestChar(queries[i]);
		}
		for (int i = 0; i < words.length; i++) {
			arrW[i] = countFreqOfSmallestChar(words[i]);
		}
		Map<Integer, Integer> map = new TreeMap<>();
		int prev = 0;
		for (int n: arrW) {	
			map.put(n,map.getOrDefault(n,0) + 1);
		}
		for (int key: map.keySet()) {	
			map.put(key,map.getOrDefault(prev,0) + map.get(key));
			prev = key;
		}
		for (int i = 0; i < arrQ.length; i++) {
			int n = arrQ[i], count = 0;
			for (int key: map.keySet()) {	
				if (key <= n) {
					count = map.get(key);
				} 
				else {
					break;
				}
			}
			arrQ[i] = arrW.length - count;
		}
		return arrQ;
	}
}