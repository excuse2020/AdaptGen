class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int[] merged = new int[nums1.length + nums2.length];
		int index1 = 0, index2 = 0, index = 0;
		while (index1 < nums1.length && index2 < nums2.length) {
			if (nums1[index1] <= nums2[index2]) {
				merged[index] = nums1[index1];
				index++;
				index1++;
			} 
			else {
				merged[index] = nums2[index2];
				index++;
				index2++;
			}
		}
		while (index1 < nums1.length) {
			merged[index] = nums1[index1];
			index++;
			index1++;
		}
		while (index2 < nums2.length) {
			merged[index] = nums2[index2];
			index++;
			index2++;
		}
		if (merged.length % 2 != 0) {
			return merged[merged.length / 2];
		} 
		else {
			return (double) (merged[merged.length / 2 - 1] + merged[merged.length / 2]) / 2;
		}
	}
}