class Solution {
	TreeNode createTree(int in, int si, int ei) {
		if (si > ei) {
			return null;
		}
		int mid = (si + ei) / 2;
		TreeNode nn = new TreeNode();
		nn.val = in[mid];
		nn.left = createTree(in,si,mid - 1);
		nn.right = createTree(in,mid + 1,ei);
		return nn;
	}
	TreeNode sortedListToBST(ListNode head) {
		int c = 0;
		ListNode temp = head;
		while (temp != null) {
			c++;
			temp = temp.next;
		}
		int arr = new int[c];
		int i = 0;
		ListNode cur = head;
		while (cur != null) {
			arr[i++] = cur.val;
			cur = cur.next;
		}
		return createTree(arr,0,arr.length - 1);
	}
}