class Solution {
	int pairSum(ListNode head) {
		ListNode hare = head;
		ListNode tortoise = head;
		while (hare != null && hare.next != null) {
			hare = hare.next.next;
			tortoise = tortoise.next;
		}
		ListNode temp = reverse(tortoise);
		hare = head;
		int sum = 0;
		int max = 0;
		while (temp != null) {
			sum = 0;
			sum = temp.val + hare.val;
			if (sum > max) {
				max = sum;
			}
			temp = temp.next;
			hare = hare.next;
		}
		return max;
	}
	ListNode reverse(ListNode temp) {
		ListNode prev = null;
		while (temp != null) {
			ListNode front = temp.next;
			temp.next = prev;
			prev = temp;
			temp = front;
		}
		return prev;
	}
}