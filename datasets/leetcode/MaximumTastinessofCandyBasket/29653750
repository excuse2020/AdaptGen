class Solution {
	boolean can(int a, int k, int mid) {
		int last = 0;
		k--;
		for (int i = 1; i < a.length && k > 0; i++) {
			if (a[i] - a[last] >= mid) {
				last = i;
				k--;
			}
		}
		return k == 0;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int max = (int) 1e9;
		int min = 0;
		int ans = 0;
		while (max >= min) {
			int mid = (max + min) / 2;
			if (can(price,k,mid)) {
				ans = mid;
				min = mid + 1;
			} 
			else {
				max = mid - 1;
			}
		}
		return ans;
	}
}