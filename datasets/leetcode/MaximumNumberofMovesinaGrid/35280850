class Solution {
	int maxMoves(int[][] grid) {
		int max = 0;
		int r = grid.length, c = grid[0].length;
		int[][] dp = new int[r][c];
		for (int j = 1; j < c; j++) {
			for (int i = 0; i < r; i++) {
				int curr = grid[i][j];
				int prev = -1;
				if (i - 1 >= 0 && grid[i - 1][j - 1] < curr) {
					prev = Math.max(dp[i - 1][j - 1],prev);
				}
				if (i + 1 < r && grid[i + 1][j - 1] < curr) {
					prev = Math.max(dp[i + 1][j - 1],prev);
				}
				if (grid[i][j - 1] < curr) {
					prev = Math.max(dp[i][j - 1],prev);
				}
				dp[i][j] += prev + 1;
			}
		}
		int ans = 0;
		for (int j = 0; j < c; j++) {
			for (int i = 0; i < r; i++) {
				if (dp[i][j] == j) {
					ans = j;
				}
			}
		}
		return ans;
	}
}