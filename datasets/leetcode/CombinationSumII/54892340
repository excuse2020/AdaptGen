class Solution {
	void check(int index, int target, int arr, ArrayList<Integer> ds, List<List<Integer>> ans) {
		if (target == 0) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		int n = arr.length;
		for (int i = index; i < n; i++) {
			if (i > index && arr[i] == arr[i - 1]) {
				continue;
			}
			if (arr[i] > target) {
				break;
			}
			ds.add(arr[i]);
			check(i + 1,target - arr[i],arr,ds,ans);
			ds.remove(ds.size() - 1);
		}
	}
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> res = new ArrayList<>();
		Arrays.sort(candidates);
		check(0,target,candidates,new ArrayList<>(),res);
		return res;
	}
}