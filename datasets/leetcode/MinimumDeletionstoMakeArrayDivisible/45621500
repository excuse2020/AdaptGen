class Solution {
	boolean checks(int[] numsDivide, int key) {
		for (int i: numsDivide) {	
			if (i % key != 0) {
				return false;
			}
		}
		return true;
	}
	int gcd(int a, int b) {
		if (a == 0) {
			return b;
		}
		return gcd(b % a,a);
	}
	int minOperations(int[] nums, int[] numsDivide) {
		Arrays.sort(numsDivide);
		int val = numsDivide[0];
		for (int i = 1; i < numsDivide.length; i++) {
			val = gcd(val,numsDivide[i]);
		}
		Arrays.sort(nums);
		int cnt = 0;
		if (nums[0] > val) {
			return -1;
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] > val) {
				break;
			}
			if (val % nums[i] != 0) {
				cnt++;
			} 
			else {
				break;
			}
		}
		return cnt == nums.length ? -1 : cnt;
	}
}