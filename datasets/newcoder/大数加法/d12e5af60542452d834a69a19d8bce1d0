class Solution {
	String solve(String s, String t) {
		if (s.length() == 0 || t.length() == 0) {
			return s + t;
		}
		int m = s.length();
		int n = t.length();
		int i = m - 1;
		int j = n - 1;
		LinkedList<Integer> stack = new LinkedList<>();
		StringBuffer res = new StringBuffer();
		int enter = 0;
		while (i >= 0 || j >= 0) {
			int sv = 0;
			if (i >= 0) {
				sv = s.charAt(i) - '0';
				i--;
			}
			int tv = 0;
			if (j >= 0) {
				tv = t.charAt(j) - '0';
				j--;
			}
			int temp = sv + tv;
			enter = temp >= 10 ? 1 : 0;
			stack.push(temp % 10);
		}
		if (enter > 0) {
			stack.push(enter);
		}
		while (!stack.isEmpty()) {
			int value = stack.pop();
			res.append(value);
		}
		return res.toString();
	}
}