class Solution {
	int ans = 0;
	int findInMountainArray(int target, MountainArray mountainArr) {
		boolean isValueFound = false;
		if (!isValueFound) {
			int start = 0;
			int end = peekValueFinder(mountainArr);
			while (start <= end) {
				int mid = start + (end - start) / 2;
				int midValue = mountainArr.get(mid);
				if (target == midValue) {
					isValueFound = true;
					return mid;
				} 
				else if (target > midValue) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			}
		}
		if (!isValueFound) {
			int start = peekValueFinder(mountainArr) + 1;
			int end = ans - 1;
			while (start <= end) {
				int mid = start + (end - start) / 2;
				int midValue = mountainArr.get(mid);
				if (target == midValue) {
					isValueFound = true;
					return mid;
				} 
				else if (target < midValue) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			}
		}
		return -1;
	}
	void main(String args) {
	}
	int peekValueFinder(MountainArray mountainArr) {
		int length = mountainArr.length();
		ans = length;
		int start = 0;
		int end = length - 1;
		int ans = -1;
		while (start < end) {
			int mid = start + (end - start) / 2;
			if (mountainArr.get(mid) < mountainArr.get(mid + 1)) {
				start = mid + 1;
			} 
			else {
				ans = mid;
				end = mid;
			}
		}
		return ans;
	}
}