class Solution {
	String largestNumber(int[] cost, int target) {
		int dp = new int[10][target + 1];
		int i, j = 0;
		int MIN = -1;
		for (i = 0; i < 10; i++) {
			for (j = 0; j <= target; j++) {
				dp[i][j] = MIN;
			}
		}
		for (i = 0; i < 10; i++) {
			dp[i][0] = 0;
		}
		for (int num = 1; num <= 9; num++) {
			for (int t = 1; t <= target; t++) {
				if (cost[num - 1] <= t) {
					int max = -1;
					for (j = 1; j <= num; j++) {
						if (dp[j][t - cost[num - 1]] != MIN) {
							max = Math.max(dp[j][t - cost[num - 1]],max);
						}
					}
					if (max != -1) {
						dp[num][t] = 1 + max;
					}
				}
			}
		}
		int m = -1;
		for (i = 9; i >= 1; i--) {
			if (dp[i][target] > m) {
				j = i;
				m = dp[i][target];
			}
		}
		if (m == -1) {
			return "0";
		}
		String x = "";
		while (m != 0) {
			for (i = 9; i >= 1; i--) {
				if (dp[i][target] == m) {
					x = x + i;
					break;
				}
			}
			m--;
			target = target - cost[i - 1];
		}
		return x;
	}
}