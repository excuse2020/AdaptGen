class Solution {
	int maxPoints(int[][] points) {
		int pointLen = points.length;
		if (pointLen <= 2) {
			return pointLen;
		}
		int res = 2;
		for (int i = 0; i < points.length; i++) {
			Map<Double, Integer> cnt = new HashMap<>();
			for (int j = 0; j < points.length; j++) {
				if (i != j) {
					int[] pointI = points[i];
					int[] pointII = points[j];
					Double angle = Math.atan2(pointII[1] - pointI[1],pointII[0] - pointI[0]);
					cnt.put(angle,cnt.getOrDefault(angle,0) + 1);
				}
			}
			for (Double k: cnt.keySet()) {	
				res = Math.max(res,cnt.get(k) + 1);
			}
		}
		return res;
	}
}