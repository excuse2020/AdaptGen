class Solution {
	int find(int l, int h, int key, int[] nums) {
		while (l <= h) {
			int mid = (l + h) / 2;
			if (nums[mid] == key) {
				return mid;
			}
			if (key < nums[mid]) {
				h = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		return -1;
	}
	int longestSquareStreak(int[] nums) {
		Arrays.sort(nums);
		int longest = -1;
		int n = nums.length;
		for (int i = 0; i < n; i++) {
			int j = i, length = 1;
			while (j < nums.length) {
				int newIdx = find(j + 1,n - 1,nums[j] * nums[j],nums);
				if (newIdx != -1) {
					j = newIdx;
					length++;
				} 
				else {
					break;
				}
			}
			if (length > 1 && length > longest) {
				longest = length;
			}
		}
		return longest;
	}
}