class Solution {
	boolean dfs(char[][] matrix, int row, int col, int index, char[] words) {
		if (row < 0 || row >= matrix.length || col < 0 || col >= matrix[0].length || matrix[row][col] != words[index]) {
			return false;
		}
		if (index == words.length - 1) {
			return true;
		}
		char tmp = matrix[row][col];
		matrix[row][col] = '#';
		boolean res = dfs(matrix,row - 1,col,index + 1,words) || dfs(matrix,row,col - 1,index + 1,words);
		matrix[row][col] = tmp;
		return res;
	}
	boolean hasPath(char[][] matrix, String word) {
		if (matrix.length == 0 && matrix[0].length == 0) {
			return false;
		}
		char[] words = word.toCharArray();
		for (int row = 0; row < matrix.length; row++) {
			for (int col = 0; col < matrix[0].length; col++) {
				if (dfs(matrix,row,col,0,words)) {
					return true;
				}
			}
		}
		return false;
	}
}