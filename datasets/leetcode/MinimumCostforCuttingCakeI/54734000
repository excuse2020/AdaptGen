class Solution {
	int minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int i = m - 2, j = n - 2;
		int rowCount = 1, colCount = 1, res = 0;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[i] > verticalCut[j]) {
				res += horizontalCut[i] * colCount;
				rowCount++;
				i--;
			} 
			else {
				res += verticalCut[j] * rowCount;
				colCount++;
				j--;
			}
		}
		while (i >= 0) {
			res += horizontalCut[i] * colCount;
			rowCount++;
			i--;
		}
		while (j >= 0) {
			res += verticalCut[j] * rowCount;
			colCount++;
			j--;
		}
		return res;
	}
}