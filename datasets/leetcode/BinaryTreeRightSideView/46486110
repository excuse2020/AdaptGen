class Solution {
	List<Integer> rightSideView(TreeNode root) {
		Queue<TreeNode> q = new ArrayDeque<>();
		ArrayList<Integer> ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		q.offer(root);
		while (!q.isEmpty()) {
			int n = q.size();
			ArrayList<Integer> l = new ArrayList<>();
			for (int i = 0; i < n; i++) {
				l.add(q.peek().val);
				if (q.peek().left != null) {
					q.offer(q.peek().left);
				}
				if (q.peek().right != null) {
					q.offer(q.peek().right);
				}
				q.poll();
			}
			ans.add(l.get(l.size() - 1));
		}
		return ans;
	}
}