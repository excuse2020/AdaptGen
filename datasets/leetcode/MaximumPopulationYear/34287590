class Solution {
	int getSmallestYear(int[][] logs) {
		Map<Integer, Integer> yearCounts = initD(logs);
		int smallestYear = Integer.MAX_VALUE;
		int maxPopulation = Integer.MIN_VALUE;
		List<Integer> years = yearCounts.keySet().stream().collect(Collectors.toList());
		Collections.sort(years);
		for (int year: years) {	
			int population = yearCounts.get(year);
			if (population > maxPopulation) {
				smallestYear = year;
				maxPopulation = population;
			}
		}
		return smallestYear;
	}
	Map<Integer, Integer> initD(int[][] logs) {
		Map<Integer, Integer> d = new HashMap<>();
		for (int[] log: logs) {	
			for (int i = log[0]; i < log[1]; i++) {
				d.put(i,d.getOrDefault(i,0) + 1);
			}
		}
		return d;
	}
	int maximumPopulation(int[][] logs) {
		return getSmallestYear(logs);
	}
}