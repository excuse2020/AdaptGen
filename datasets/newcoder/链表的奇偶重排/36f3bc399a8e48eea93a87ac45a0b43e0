class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null || head.next == null || head.next.next == null) {
			return head;
		}
		ListNode head1 = head;
		ListNode head2 = head.next;
		ListNode node1 = head;
		ListNode node2 = head.next;
		ListNode node3 = head.next.next;
		int i = 3;
		while (node3 != null) {
			if ((i % 2) == 1) {
				node1.next = node3;
				node1 = node3;
			} 
			else {
				node2.next = node3;
				node2 = node3;
			}
			i++;
			node3 = node3.next;
		}
		node2.next = null;
		node1.next = head2;
		return head1;
	}
}