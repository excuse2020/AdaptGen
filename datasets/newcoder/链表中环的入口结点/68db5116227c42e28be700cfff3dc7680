class Solution {
	ListNode EntryNodeOfLoop(ListNode pHead) {
		ListNode meetingNode = MeetNode(pHead);
		if (meetingNode == null) {
			return null;
		}
		int nodesInLoop = 1;
		ListNode p1 = meetingNode;
		while (p1.next != meetingNode) {
			p1 = p1.next;
			++nodesInLoop;
		}
		p1 = pHead;
		for (int i = 0; i < nodesInLoop; ++i) {
			p1 = p1.next;
		}
		ListNode p2 = pHead;
		while (p1 != p2) {
			p1 = p1.next;
			p2 = p2.next;
		}
		return p1;
	}
	ListNode MeetNode(ListNode pHead) {
		if (pHead == null) {
			return null;
		}
		ListNode pslow = pHead.next;
		if (pHead.next == null) {
			return null;
		}
		ListNode pfast = pslow.next;
		while (pfast != null && pslow != null) {
			if (pfast == pslow) {
				return pfast;
			}
			pslow = pslow.next;
			pfast = pfast.next;
			if (pfast != null) {
				pfast = pfast.next;
			}
		}
		return null;
	}
}