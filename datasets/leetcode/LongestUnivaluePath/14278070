class Solution {
	int Lpath = 0;
	int longestUnivaluePath(TreeNode root) {
		pathCalculator(root);
		return Lpath;
	}
	int pathCalculator(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = pathCalculator(root.left);
		int right = pathCalculator(root.right);
		int Tleft = 0, Tright = 0;
		if (root.left != null && root.left.val == root.val) {
			Tleft += left + 1;
		}
		if (root.right != null && root.right.val == root.val) {
			Tright += right + 1;
		}
		Lpath = Math.max(Lpath,Tleft + Tright);
		return Math.max(Tleft,Tright);
	}
}