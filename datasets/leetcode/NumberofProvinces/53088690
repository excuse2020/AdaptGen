class Solution {
	int[][] m;
	boolean[] visited;
	void dfs(int i) {
		visited[i] = true;
		for (int j = 0; j < m.length; j++) {
			if (m[i][j] == 1 && visited[j] == false) {
				dfs(j);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		m = isConnected;
		int n = isConnected.length;
		visited = new boolean[n];
		for (int i = 0; i < n; i++) {
			visited[i] = false;
		}
		List<Integer> adj = new ArrayList<>();
		int c = 0;
		for (int i = 0; i < n; i++) {
			if (visited[i] == false) {
				dfs(i);
				c++;
			}
		}
		return c;
	}
}