class Solution {
	int maxScore(List<List<Integer>> grid) {
		int n = grid.size();
		int m = grid.get(0).size();
		Pair[][] mat = new Pair[n][m];
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				Pair p = new Pair();
				p.f = grid.get(i).get(j);
				p.s = 0;
				if (i >= 1) {
					Pair p1 = mat[i - 1][j];
					p.s = Math.max(p.f - p1.f + p1.s,p.s);
					max = Math.max(max,p.f - p1.f + p1.s);
				}
				if (j >= 1) {
					Pair p1 = mat[i][j - 1];
					p.s = Math.max(p.f - p1.f + p1.s,p.s);
					max = Math.max(max,p.f - p1.f + p1.s);
				}
				mat[i][j] = p;
			}
		}
		return max;
	}
	class Pair {
		int f;
		int s;
	}
}