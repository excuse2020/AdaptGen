class Solution {
	int lowestCommonAncestor(TreeNode root, int o1, int o2) {
		return postTreeTravel(root,o1,o2);
	}
	int postTreeTravel(TreeNode root, int o1, int o2) {
		if (root == null) {
			return -1;
		}
		int left = postTreeTravel(root.left,o1,o2);
		int right = postTreeTravel(root.right,o1,o2);
		if (left != -1 && right != -1) {
			return root.val;
		} 
		else if (left != -1 || right != -1) {
			if (o1 == root.val || o2 == root.val) {
				return root.val;
			}
			return left == -1 ? right : left;
		}
		if (o1 == root.val || o2 == root.val) {
			return root.val;
		}
		return -1;
	}
}