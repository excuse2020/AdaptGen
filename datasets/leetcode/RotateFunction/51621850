class Solution {
	int maxRotateFunction(int[] arr) {
		int n = arr.length;
		int prefix = new int[n];
		int suffix = new int[n];
		prefix[0] = arr[0];
		for (int i = 1; i < n; i++) {
			prefix[i] = arr[i] + prefix[i - 1];
		}
		suffix[n - 1] = arr[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			suffix[i] = arr[i] + suffix[i + 1];
		}
		int x = 0;
		for (int i = 0; i < n; i++) {
			x += i * arr[i];
		}
		int ans = x;
		for (int k = 1; k < n; k++) {
			int idx = (n - k);
			x += prefix[idx - 1] + ((idx + 1 < n) ? suffix[idx + 1] : 0);
			x -= (n - 1) * arr[idx];
			ans = Math.max(ans,x);
		}
		return ans;
	}
}