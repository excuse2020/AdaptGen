class Solution {
	int countSubarrays(int[] nums, int k) {
		int pos = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == k) {
				pos = i;
			}
		}
		for (int i = 0; i < nums.length; i++) {
			nums[i] = nums[i] == k ? 0 : (nums[i] > k ? 1 : -1);
		}
		for (int i = 1; i < nums.length; i++) {
			nums[i] += nums[i - 1];
		}
		Map<Integer, Integer> cnt = new HashMap<>();
		cnt.put(0,1);
		for (int i = 0; i < pos; i++) {
			Integer get = cnt.get(nums[i]);
			if (get == null) {
				get = 0;
			}
			cnt.put(nums[i],get + 1);
		}
		int ans = 0;
		for (int i = pos; i < nums.length; i++) {
			Integer a = cnt.get(nums[i]), b = cnt.get(nums[i] - 1);
			if (a == null) {
				a = 0;
			}
			if (b == null) {
				b = 0;
			}
			ans += a + b;
		}
		return ans;
	}
}