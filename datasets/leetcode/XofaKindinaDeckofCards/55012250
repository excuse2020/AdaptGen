class Solution {
	int[] distinctCounts(int[] deck) {
		Map<Integer, Integer> counts = new HashMap<>();
		for (int n: deck) {	
			counts.merge(n,1,);
		}
		return counts.values().stream().distinct().mapToInt().toArray();
	}
	int gcd(int a, int b) {
		return a == 0 ? b : gcd(b % a,a);
	}
	int gcd(int[] deck) {
		int result = deck[0];
		for (int i = 1; i < deck.length && result != 1; ++i) {
			result = gcd(result,deck[i]);
		}
		return result;
	}
	boolean hasGroupsSizeX(int[] deck) {
		return gcd(distinctCounts(deck)) > 1;
	}
}