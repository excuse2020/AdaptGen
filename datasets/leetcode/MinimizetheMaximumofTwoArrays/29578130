class Solution {
	long gcd(int a, int b) {
		if (a == 0) {
			return b;
		}
		return gcd(b % a,a);
	}
	long lcm(int a, int b) {
		return (a / gcd(a,b)) * b;
	}
	int minimizeSet(int D1, int D2, int C1, int C2) {
		long lcm = lcm(D1,D2);
		int start = C1 + C2;
		int end = Integer.MAX_VALUE;
		while (start < end) {
			int mid = start + (end - start) / 2;
			Boolean c1 = (mid - mid / D1) >= C1;
			Boolean c2 = (mid - mid / D2) >= C2;
			Boolean c3 = (mid - mid / lcm) >= C1 + C2;
			if (c1 && c2) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return start;
	}
}