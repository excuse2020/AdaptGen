class Solution {
	long makeSimilar(int[] nums, int[] target) {
		Arrays.sort(nums);
		Arrays.sort(target);
		long count = 0;
		int i = 0;
		int j = 0;
		while (i < nums.length && j < nums.length) {
			while (i < nums.length - 1 && nums[i] % 2 != 0) {
				i = i + 1;
			}
			while (j < nums.length - 1 && target[j] % 2 != 0) {
				j = j + 1;
			}
			if ((i == nums.length - 1 || j == nums.length - 1) && (nums[i] % 2 != 0 || target[j] % 2 != 0)) {
				break;
			}
			count = count + (int) Math.abs(nums[i] - target[j]);
			i = i + 1;
			j = j + 1;
		}
		i = 0;
		j = 0;
		while (i < nums.length && j < nums.length) {
			while (i < nums.length - 1 && nums[i] % 2 == 0) {
				i = i + 1;
			}
			while (j < nums.length - 1 && target[j] % 2 == 0) {
				j = j + 1;
			}
			if ((i == nums.length - 1 || j == nums.length - 1) && (nums[i] % 2 == 0 || target[j] % 2 == 0)) {
				break;
			}
			count = count + (int) Math.abs(nums[i] - target[j]);
			i = i + 1;
			j = j + 1;
		}
		return count / 4;
	}
}