class Solution {
	void dfs(TreeNode root, List<Integer> cur, List<List<Integer>> res, int target, int curSum) {
		if (root == null) {
			return;
		}
		curSum += root.val;
		cur.add(root.val);
		if (curSum == target && root.left == null && root.right == null) {
			res.add(new ArrayList<>(cur));
		}
		dfs(root.left,cur,res,target,curSum);
		dfs(root.right,cur,res,target,curSum);
		cur.remove(cur.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> res = new ArrayList<>();
		dfs(root,new ArrayList<>(),res,targetSum,0);
		return res;
	}
}