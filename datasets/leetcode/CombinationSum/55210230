class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> temp = new ArrayList<>();
		sum(0,candidates,target,ans,temp);
		return ans;
	}
	void sum(int index, int[] candidates, int target, List<List<Integer>> ans, List<Integer> temp) {
		if (target == 0) {
			ans.add(new ArrayList<>(temp));
			return;
		}
		if (index == candidates.length || target < 0) {
			return;
		}
		temp.add(candidates[index]);
		sum(index,candidates,target - candidates[index],ans,temp);
		temp.remove(temp.size() - 1);
		sum(index + 1,candidates,target,ans,temp);
	}
}