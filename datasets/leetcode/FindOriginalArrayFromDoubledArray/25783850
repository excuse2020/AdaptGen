class Solution {
	int[] findOriginalArray(int[] changed) {
		int n = changed.length;
		if (n % 2 != 0) {
			return new int[0];
		}
		Arrays.sort(changed);
		int[] res = new int[n / 2];
		Map<Integer, Integer> map = new HashMap<>();
		for (int num: changed) {	
			map.put(num,map.getOrDefault(num,0) + 1);
		}
		int i = 0;
		for (int num: changed) {	
			if (map.get(num) == 0 || num == 0) {
				continue;
			}
			if (!map.containsKey(num * 2) || map.get(num * 2) == 0) {
				return new int[0];
			}
			map.put(num,map.get(num) - 1);
			map.put(num * 2,map.get(num * 2) - 1);
			res[i++] = num;
		}
		return res;
	}
}