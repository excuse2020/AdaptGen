class Solution {
	List<String> help(List<String> res, HashMap<Character, String> map, StringBuilder sb, String digits, int start) {
		if (sb.length() == digits.length()) {
			res.add(sb.toString());
			return res;
		}
		String letters = map.get(digits.charAt(start));
		for (int i = 0; i < letters.length(); i++) {
			sb.append(letters.charAt(i));
			res = help(res,map,sb,digits,start + 1);
			sb.setLength(sb.length() - 1);
		}
		return res;
	}
	List<String> letterCombinations(String digits) {
		List<String> result = new ArrayList<>();
		if (digits == null || digits.length() == 0) {
			return result;
		}
		HashMap<Character, String> map = new HashMap<>();
	}
}