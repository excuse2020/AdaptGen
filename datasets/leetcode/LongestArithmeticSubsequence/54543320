class Solution {
	int helper(int[] nums, int index, int diff, int[][] dp) {
		if (dp[index][diff + 500] != -1) {
			return dp[index][diff + 500];
		}
		int ans = 1;
		for (int i = index + 1; i < nums.length; i++) {
			if (nums[i] - nums[index] == diff) {
				ans = Math.max(1 + helper(nums,i,diff,dp),ans);
			}
		}
		return dp[index][diff + 500] = ans;
	}
	int longestArithSeqLength(int[] nums) {
		int n = nums.length;
		int[][] dp = new int[n][1002];
		for (int[] arr: dp) {	
			Arrays.fill(arr,-1);
		}
		int ans = 0;
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j < n; j++) {
				ans = Math.max(1 + helper(nums,j,nums[j] - nums[i],dp),ans);
			}
		}
		return ans;
	}
}