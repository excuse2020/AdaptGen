class Solution {
	int[] getSignCount(int[] nums) {
		int[] signCount = new int[2];
		for (int num: nums) {	
			if (num < 0) {
				signCount[0]++;
			} 
			else if (num == 0) {
				signCount[1]++;
			}
		}
		return signCount;
	}
	long maxStrength(int[] nums) {
		Arrays.sort(nums);
		int[] signCount = getSignCount(nums);
		long maxStrength = 1L;
		boolean multiplied = false;
		boolean hasOddNegatives = signCount[0] % 2 == 1;
		for (int num: nums) {	
			if (num < 0) {
				if (!hasOddNegatives || (hasOddNegatives && signCount[0] > 1)) {
					maxStrength *= num;
					signCount[0]--;
					multiplied = true;
				}
			} 
			else if (num > 0) {
				maxStrength *= num;
				multiplied = true;
			}
		}
		return multiplied ? maxStrength : signCount[1] == 0 ? nums[0] : 0;
	}
}