class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		solve(root,targetSum,ans,new ArrayList<>());
		return ans;
	}
	void solve(TreeNode root, int target, List<List<Integer>> ans, List<Integer> ls) {
		if (root == null) {
			return;
		}
		ls.add(root.val);
		if (root.left == null && root.right == null && root.val == target) {
			ans.add(new ArrayList<>(ls));
		} 
		else {
			solve(root.left,target - root.val,ans,ls);
			solve(root.right,target - root.val,ans,ls);
		}
		ls.remove(ls.size() - 1);
	}
}