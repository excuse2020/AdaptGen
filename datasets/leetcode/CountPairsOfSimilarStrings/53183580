class Solution {
	TreeSet<Character> getCharTreeSet(String s) {
		int sN = s.length();
		TreeSet<Character> charTreeSet = new TreeSet<>();
		for (int i = 0; i < sN; i++) {
			charTreeSet.add(s.charAt(i));
		}
		return charTreeSet;
	}
	int similarPairs(String[] words) {
		Map<TreeSet<Character>, Integer> m = new HashMap<>();
		int pairs = 0;
		for (String w: words) {	
			TreeSet<Character> s = getCharTreeSet(w);
			m.put(s,m.getOrDefault(s,0) + 1);
		}
		for (TreeSet<Character> s: m.keySet()) {	
			int val = m.get(s);
			if (val > 1) {
				pairs += (val * (val - 1)) / 2;
			}
		}
		return pairs;
	}
}