class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		var map = new HashMap<Integer, Integer>();
		long max = 0;
		long sum = 0;
		for (int i = 0; i < nums.length; i++) {
			map.merge(nums[i],1,);
			sum += nums[i];
			if (i > (k - 1)) {
				Integer occur = map.get(nums[i - k]);
				if (occur > 1) {
					map.put(nums[i - k],--occur);
				} 
				else {
					map.remove(nums[i - k]);
				}
				sum -= nums[i - k];
			}
			if (map.size() == k) {
				max = Math.max(sum,max);
			}
		}
		return max;
	}
}