class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Set<Integer> set = new HashSet<>();
		long maxSum = 0;
		long currSum = 0;
		int r = 0;
		for (int l = 0; l < nums.length; l++) {
			while (r < nums.length && !set.contains(nums[r]) && set.size() < k) {
				set.add(nums[r]);
				currSum += nums[r];
				r++;
			}
			if (set.size() == k) {
				maxSum = Math.max(maxSum,currSum);
			}
			set.remove(nums[l]);
			currSum -= nums[l];
		}
		return maxSum;
	}
}