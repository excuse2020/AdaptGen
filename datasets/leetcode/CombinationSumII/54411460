class Solution {
	void calculate(int ind, int[] candidates, int target, List<List<Integer>> ans, List<Integer> result) {
		if (target == 0) {
			ans.add(new ArrayList<>(result));
		}
		for (int i = ind; i < candidates.length; i++) {
			if (i > ind && candidates[i] == candidates[i - 1]) {
				continue;
			}
			if (candidates[i] > target) {
				break;
			}
			result.add(candidates[i]);
			calculate(i + 1,candidates,target - candidates[i],ans,result);
			result.remove(result.size() - 1);
		}
	}
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		HashSet<String> hset = new HashSet<String>();
		Arrays.sort(candidates);
		calculate(0,candidates,target,ans,new ArrayList<Integer>());
		return ans;
	}
}