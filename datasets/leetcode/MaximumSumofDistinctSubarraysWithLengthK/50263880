class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int n = nums.length;
		long ans = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		long sum = 0;
		int l = 0;
		for (int i = 0; i < n; i++) {
			if (l + k == i) {
				sum -= nums[l];
				map.put(nums[l],map.get(nums[l]) - 1);
				if (map.get(nums[l]) == 0) {
					map.remove(nums[l]);
				}
				l++;
			}
			sum += nums[i];
			map.put(nums[i],map.getOrDefault(nums[i],0) + 1);
			if (map.size() == k) {
				ans = Math.max(ans,sum);
			}
		}
		return ans;
	}
}