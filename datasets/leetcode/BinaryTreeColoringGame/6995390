class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode node = findNode(root,x);
		n /= 2;
		int l = countNodes(node.left);
		if (l > n) {
			return true;
		}
		int r = countNodes(node.right);
		if (r > n) {
			return true;
		}
		int p = countNodes(node);
		if (p > n) {
			return false;
		}
		return true;
	}
	int countNodes(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return countNodes(node.left) + countNodes(node.right);
	}
	TreeNode findNode(TreeNode node, int x) {
		if (node == null || node.val == x) {
			return node;
		}
		TreeNode l = findNode(node.left,x);
		TreeNode r = findNode(node.right,x);
		return l == null ? r : l;
	}
}