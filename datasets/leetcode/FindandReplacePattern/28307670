class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> ans = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			if (isomorphic(words[i]).equals(isomorphic(pattern))) {
				ans.add(words[i]);
			}
		}
		return ans;
	}
	String isomorphic(String s) {
		HashMap<Character, Integer> map = new HashMap<>();
		StringBuilder str = new StringBuilder("");
		for (int i = 0; i < s.length(); i++) {
			char ch = s.charAt(i);
			if (!map.containsKey(ch)) {
				map.put(ch,i);
			}
			str.append(Integer.toString(map.get(ch)));
		}
		return str.toString();
	}
}