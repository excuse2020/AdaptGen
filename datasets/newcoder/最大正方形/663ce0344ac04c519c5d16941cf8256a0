class Solution {
	int solve(char[][] matrix) {
		if (matrix == null || matrix.length == 0) {
			return 0;
		}
		int height = matrix.length;
		int width = matrix[0].length;
		int[][] dp = new int[height][width];
		int maxSize = 0;
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				if (i == 0 || j == 0) {
					if (matrix[i][j] == '1') {
						dp[i][j] = 1;
					}
					continue;
				}
				if (matrix[i][j] == '1') {
					dp[i][j] = Math.min(dp[i - 1][j],Math.min(dp[i - 1][j - 1],dp[i][j - 1])) + 1;
					maxSize = Math.max(maxSize,dp[i][j]);
				}
			}
		}
		return maxSize * maxSize;
	}
}