class Solution {
	TreeNode find(TreeNode root, int n1, int n2) {
		if (root == null) {
			return root;
		}
		if (root.val == n1 || root.val == n2) {
			return root;
		}
		TreeNode node1 = find(root.left,n1,n2);
		TreeNode node2 = find(root.right,n1,n2);
		if (node1 != null && node2 != null) {
			return root;
		}
		return node1 == null ? node2 : node1;
	}
	boolean generate(TreeNode root, int val, StringBuilder s) {
		if (root == null) {
			return false;
		}
		if (root.val == val) {
			return true;
		}
	}
	String getDirections(TreeNode root, int start, int dest) {
		TreeNode r = find(root,start,dest);
		System.out.println(r.val);
		StringBuilder s = new StringBuilder();
		StringBuilder temp = new StringBuilder();
		StringBuilder res = new StringBuilder();
		generate(r,start,s);
		generate(r,dest,temp);
		int i = 0;
	}
}