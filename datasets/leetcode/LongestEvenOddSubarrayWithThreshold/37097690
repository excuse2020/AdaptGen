class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int i = 0;
		int max = 0;
		for (; i < nums.length; i++) {
			if (nums[i] % 2 == 0 && nums[i] <= threshold) {
				int l = i + 1;
				int count = 1;
				while (l < nums.length && nums[l] <= threshold) {
					if (nums[l] % 2 == 1 && nums[l - 1] % 2 == 0) {
						l++;
						i++;
						count++;
					} 
					else if (nums[l] % 2 == 0 && nums[l - 1] % 2 == 1) {
						l++;
						i++;
						count++;
					} 
					else {
						max = Math.max(count,max);
						break;
					}
				}
				max = Math.max(count,max);
			}
		}
		return max;
	}
}