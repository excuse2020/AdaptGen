class Solution {
	long findMaxGap(int[] arr, int l) {
		if (arr.length == 0) {
			return arr.length;
		}
		Arrays.sort(arr);
		long maxGap = 1L;
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] - arr[i - 1] > maxGap) {
				maxGap = arr[i] - arr[i - 1];
			}
		}
		if (l - arr[arr.length - 1] > maxGap) {
			maxGap = l - arr[arr.length - 1];
		}
		if (arr[0] - 0 > maxGap) {
			maxGap = arr[0] - 0;
		}
		return maxGap;
	}
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		long res = findMaxGap(horizontalCuts,h) * findMaxGap(verticalCuts,w);
		return (int) (res % ((long) Math.pow(10,9) + 7));
	}
}