class Solution {
	int longestCycle(int[] edges) {
		int res = -1;
		boolean[] visited = new boolean[edges.length];
		for (int i = 0; i < edges.length; i++) {
			if (visited[i]) {
				continue;
			}
			HashMap<Integer, Integer> hmap = new HashMap<>();
			for (int idx = i, dist = 0; idx != -1; idx = edges[idx]) {
				if (hmap.containsKey(idx)) {
					res = Math.max(res,dist - hmap.get(idx));
					break;
				}
				if (visited[idx]) {
					break;
				}
				visited[idx] = true;
				hmap.put(idx,dist++);
			}
		}
		return res;
	}
}