class Solution {
	int MOD = 1000000007;
	int numRollsToTarget(int n, int k, int target) {
		int[][] dp = new int[n + 1][target + 1];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return numRollsToTarget(n,k,target,dp);
	}
	int numRollsToTarget(int n, int k, int target, int[][] dp) {
		if (n == 0) {
			if (target == 0) {
				return 1;
			} 
			else {
				return 0;
			}
		} 
		else if (target <= 0) {
			return 0;
		}
		if (dp[n][target] != -1) {
			return dp[n][target];
		}
		int ways = 0;
		for (int i = 1; i <= k; i++) {
			ways = (ways + numRollsToTarget(n - 1,k,target - i,dp)) % MOD;
		}
		return dp[n][target] = ways;
	}
}