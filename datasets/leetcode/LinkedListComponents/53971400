class Solution {
	boolean check(int[] nums, int val) {
		int start = 0;
		int end = nums.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (nums[mid] == val) {
				return true;
			} 
			else if (nums[mid] < val) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return false;
	}
	int numComponents(ListNode head, int[] nums) {
		int count = 0;
		Arrays.sort(nums);
		boolean flag = false;
		while (head != null) {
			if (check(nums,head.val)) {
				if (!flag) {
					count++;
					flag = true;
				}
			} 
			else {
				flag = false;
			}
			head = head.next;
		}
		return count;
	}
}