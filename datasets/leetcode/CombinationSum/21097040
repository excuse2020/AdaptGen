class Solution {
	List<List<Integer>> result;
	List<List<Integer>> combinationSum(int[] ar, int target) {
		result = new ArrayList<>();
		getSum(ar,target,0,new ArrayList<>());
		return result;
	}
	void getSum(int ar, int target, int ind, List<Integer> lst) {
		if (ind >= ar.length) {
			return;
		}
		if (target < 0) {
			return;
		}
		if (target == 0) {
			result.add(new ArrayList<>(lst));
			return;
		}
		int val = ar[ind];
		List<Integer> inc = new ArrayList<>(lst);
		inc.add(val);
		getSum(ar,target - val,ind,inc);
		getSum(ar,target,ind + 1,lst);
	}
}