class Solution {
	int MOD = (int) (1e9 + 7);
	long[][][] dp;
	int count(String num1, String num2, int min_sum, int max_sum) {
		dp = new long[23][401][2];
		for (int i = 0; i < 23; i++) {
			for (int j = 0; j < 401; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		long upper = solve(0,0,true,min_sum,max_sum,num2);
		for (int i = 0; i < 23; i++) {
			for (int j = 0; j < 401; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		long lower = solve(0,0,true,min_sum,max_sum,num1);
		int sum = 0;
	}
	long solve(int idx, int sum, boolean tight, int min_sum, int max_sum, String s) {
		if (idx == s.length()) {
			return (sum >= min_sum && sum <= max_sum) ? 1 : 0;
		}
		if (dp[idx][sum][tight ? 1 : 0] != -1) {
			return dp[idx][sum][tight ? 1 : 0];
		}
		long ans = 0;
		int i = 0;
	}
}