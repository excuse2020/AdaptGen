class Solution {
	void in(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		in(root.left,list);
		list.add(root.val);
		in(root.right,list);
	}
	void post(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		post(root.left,list);
		post(root.right,list);
		list.add(root.val);
	}
	void pre(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		pre(root.left,list);
		pre(root.right,list);
	}
	int[][] threeOrders(TreeNode root) {
		List<Integer> preList = new ArrayList<>();
		List<Integer> inList = new ArrayList<>();
		List<Integer> postList = new ArrayList<>();
		pre(root,preList);
		in(root,inList);
		post(root,postList);
		int[][] result = new int[3][preList.size()];
		for (int i = 0; i < preList.size(); i++) {
			result[0][i] = preList.get(i);
			result[1][i] = inList.get(i);
			result[2][i] = postList.get(i);
		}
		return result;
	}
}