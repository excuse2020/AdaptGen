class Solution {
	int minProcessingTime(List<Integer> processTime, List<Integer> task) {
		Collections.sort(task);
		Collections.sort(processTime);
		int max = 0;
		int i = 0;
		int j = task.size() - 1;
		while (i < processTime.size() && j < task.size()) {
			int lcmax = 0;
			lcmax = Math.max(lcmax,processTime.get(i) + task.get(j));
			lcmax = Math.max(lcmax,processTime.get(i) + task.get(j - 1));
			lcmax = Math.max(lcmax,processTime.get(i) + task.get(j - 2));
			lcmax = Math.max(lcmax,processTime.get(i) + task.get(j - 3));
			max = Math.max(max,lcmax);
			i++;
			j -= 4;
		}
		return max;
	}
}