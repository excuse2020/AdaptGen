class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int n = grid.length;
		int[][] res = new int[2][n];
		int output = 0;
		for (int i = 0; i < grid.length; i++) {
			int max = -1;
			for (int j = 0; j < grid[i].length; j++) {
				max = Math.max(max,grid[i][j]);
			}
			res[0][i] = max;
		}
		for (int i = 0; i < grid.length; i++) {
			int max = -1;
			for (int j = 0; j < grid[i].length; j++) {
				max = Math.max(max,grid[j][i]);
			}
			res[1][i] = max;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				output += (Math.min(res[0][i],res[1][j])) - grid[i][j];
			}
		}
		return output;
	}
}