class Solution {
	int func(List<List<Integer>> piles, int i, int k, int[][] dp) {
		if (dp[i][k] > 0) {
			return dp[i][k];
		}
		if (i == piles.size() || k == 0) {
			return 0;
		}
		int res = func(piles,i + 1,k,dp);
		int curr = 0;
		for (int j = 0; j < piles.get(i).size() && j < k; j++) {
			curr += piles.get(i).get(j);
			res = (int) Math.max(res,func(piles,i + 1,k - j,dp) + curr);
		}
		dp[i][k] = res;
		return res;
	}
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		int n = piles.size();
		int[][] dp = new int[n + 1][k + 1];
		return func(piles,0,k,dp);
	}
}