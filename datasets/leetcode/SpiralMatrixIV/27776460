class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] arr = new int[m][n];
		int up = m * n;
		int count = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				arr[i][j] = -1;
			}
		}
		ListNode ptr = head;
		int i = 0, j = 0, jb = 0, ib = 0;
		while (ptr != null && ptr.val != -1) {
			if (count >= up) {
				break;
			}
			while (j < n) {
				arr[i][j] = ptr.val;
				if (ptr.next != null) {
					ptr = ptr.next;
				} 
				else {
					ptr.val = -1;
				}
				j++;
				count++;
			}
			i++;
			j--;
			n--;
			if (count >= up) {
				break;
			}
			while (i < m) {
				arr[i][j] = ptr.val;
				if (ptr.next != null) {
					ptr = ptr.next;
				} 
				else {
					ptr.val = -1;
				}
				i++;
				count++;
			}
			j--;
			i--;
			m--;
			if (count >= up) {
				break;
			}
			while (j >= jb) {
				arr[i][j] = ptr.val;
				if (ptr.next != null) {
					ptr = ptr.next;
				} 
				else {
					ptr.val = -1;
				}
				j--;
				count++;
			}
			i--;
			j++;
			jb++;
			if (count >= up) {
				break;
			}
			while (i > ib) {
				arr[i][j] = ptr.val;
				if (ptr.next != null) {
					ptr = ptr.next;
				} 
				else {
					ptr.val = -1;
				}
				i--;
				count++;
			}
			j++;
			i++;
			ib++;
		}
		return arr;
	}
}