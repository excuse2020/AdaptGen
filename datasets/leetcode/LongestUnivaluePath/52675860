class Solution {
	int path = 0;
	int helper(TreeNode node) {
		if (node == null) {
			return 0;
		}
		int left = helper(node.left);
		int right = helper(node.right);
		int leftPath = 0;
		int rightPath = 0;
		if (node.left != null && node.left.val == node.val) {
			leftPath = left + 1;
		}
		if (node.right != null && node.right.val == node.val) {
			rightPath = right + 1;
		}
		path = Math.max(path,leftPath + rightPath);
		return Math.max(leftPath,rightPath);
	}
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		helper(root);
		return path;
	}
}