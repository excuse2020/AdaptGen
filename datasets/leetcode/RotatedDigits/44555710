class Solution {
	int rotatedDigits(int n) {
		int[] dp = new int[100000];
		dp[3] = -1;
		dp[4] = -1;
		dp[7] = -1;
		dp[2] = 1;
		dp[5] = 1;
		dp[6] = 1;
		dp[9] = 1;
		int count = 0;
		for (int i = 1; i <= n; i++) {
			int m = i / 10, r = i % 10;
			if (dp[m] == 0) {
				if (dp[r] == 0) {
					dp[i] = 0;
				} 
				else if (dp[r] == 1) {
					dp[i] = 1;
					count++;
				} 
				else {
					dp[i] = -1;
				}
			} 
			else if (dp[m] == 1) {
				if (dp[r] != -1) {
					dp[i] = 1;
					count++;
				} 
				else {
					dp[i] = -1;
				}
			} 
			else {
				dp[i] = -1;
			}
		}
		return count;
	}
}