class Solution {
	int getSum(int n, boolean[] arr) {
		int sum = 0;
		for (int i = 2; i <= n / 2; i++) {
			if (arr[i]) {
				while (n % i == 0) {
					sum += i;
					n /= i;
				}
			}
		}
		if (n > 1) {
			sum += n;
		}
		return sum;
	}
	void seive(int n, boolean[] arr) {
		arr[0] = false;
		arr[1] = false;
		for (int prime = 2; prime * prime <= n; prime++) {
			if (arr[prime]) {
				for (int fact = 2 * prime; fact <= n; fact += prime) {
					arr[fact] = false;
				}
			}
		}
	}
	int smallestValue(int n) {
		if (n <= 5) {
			return n;
		}
		boolean[] arr = new boolean[n + 1];
		Arrays.fill(arr,true);
		seive(n,arr);
		while (!arr[n]) {
			int sum = getSum(n,arr);
			if (arr[sum]) {
				return sum;
			}
			if (sum == n) {
				break;
			}
			n = sum;
		}
		return n;
	}
}