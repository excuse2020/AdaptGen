class Solution {
	List<String> alertNames(String[] keyName, String[] keyTime) {
		List<String> ans = new ArrayList();
		Map<String, List<String>> map = new HashMap();
		for (int i = 0; i < keyName.length; i++) {
			map.computeIfAbsent(keyName[i],(x) -> {new ArrayList()}).add(keyTime[i]);
		}
		for (String key: map.keySet()) {	
			List<String> temp = map.get(key);
			if (temp.size() < 3) {
				continue;
			}
			Collections.sort(temp,new Comparator<String>());
			for (int i = 0; i < temp.size() - 2; i++) {
				if (temp.get(i).substring(0,2).equals("23") && temp.get(i + 2).substring(0,2).equals("00")) {
					continue;
				}
				if (timeDiff(temp.get(i),temp.get(i + 2)) <= 60) {
					ans.add(key);
					break;
				}
			}
		}
		Collections.sort(ans);
		return ans;
	}
	int timeDiff(String s2, String s1) {
		int hour1 = Integer.parseInt(s1.substring(0,2));
		int minute1 = Integer.parseInt(s1.substring(3));
		int hour2 = Integer.parseInt(s2.substring(0,2));
		int minute2 = Integer.parseInt(s2.substring(3));
		return hour1 * 60 + minute1 - hour2 * 60 - minute2;
	}
}