class Solution {
	int knightDialer(int n) {
		long mod = 1000000007;
		long[] dp = new long[10];
		Arrays.fill(dp,1);
		int ans = 0;
		for (int i = 1; i < n; i++) {
			long[] temp = new long[10];
			temp[0] = (dp[4] + dp[6]) % mod;
			temp[1] = (dp[8] + dp[6]) % mod;
			temp[2] = (dp[7] + dp[9]) % mod;
			temp[3] = (dp[4] + dp[8]) % mod;
			temp[4] = (((dp[3] + dp[9]) % mod) + dp[0]) % mod;
			temp[6] = (((dp[7] + dp[1]) % mod) + dp[0]) % mod;
			temp[7] = (dp[2] + dp[6]) % mod;
			temp[8] = (dp[3] + dp[1]) % mod;
			temp[9] = (dp[4] + dp[2]) % mod;
			dp = temp;
		}
		for (long val: dp) {	
			ans = (int) ((ans + val) % mod);
		}
		return ans;
	}
}