class Solution {
	int display(int[] matrix) {
		int ans = matrix[0];
		for (int i = 0; i < matrix.length; i++) {
			ans = java.lang.Math.min(ans,matrix[i]);
		}
		return ans;
	}
	void find(int[][] mat) {
		for (int row = mat.length - 2; row >= 0; row--) {
			for (int col = 0; col < mat[0].length; col++) {
				int val = mat[row][col];
				int min = mat[row + 1][col];
				if (col - 1 >= 0) {
					min = java.lang.Math.min(min,mat[row + 1][col - 1]);
				}
				if (col + 1 <= mat[0].length - 1) {
					min = java.lang.Math.min(min,mat[row + 1][col + 1]);
				}
				mat[row][col] = val + min;
			}
		}
	}
	int minFallingPathSum(int[][] matrix) {
		find(matrix);
		return display(matrix[0]);
	}
}