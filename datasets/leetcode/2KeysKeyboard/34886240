class Solution {
	int minSteps(int n) {
		if (n <= 1) {
			return 0;
		}
		if (n == 2) {
			return 2;
		}
		List<Integer> fac = new ArrayList<>();
		for (int i = 1; i <= n / 2; i++) {
			if (n % i == 0) {
				fac.add(i);
			}
		}
		if (fac.size() == 1) {
			return n;
		}
		int r = 1, k = 1, temp = 1;
		while (temp < n) {
			if (fac.contains(k)) {
				r++;
				temp = temp + k;
				if (fac.contains(temp)) {
					k = temp;
					r++;
				}
			} 
			else {
				temp = temp + k;
				r++;
				if (fac.contains(temp)) {
					k = temp;
					r++;
				}
			}
		}
		return r;
	}
}