class Solution {
	int pairSum(ListNode head) {
		if (head == null || head.next == null) {
			return 0;
		}
		ListNode temp = head;
		int len = 0;
		while (temp != null) {
			len++;
			temp = temp.next;
		}
		temp = head;
		ListNode prev = null;
		while (temp != null) {
			ListNode curr = new ListNode(temp.val);
			curr.next = prev;
			prev = curr;
			temp = temp.next;
		}
		temp = head;
		ListNode reversed = prev;
		int mid = len / 2;
		int max = Integer.MIN_VALUE;
		while (mid > 0) {
			int currSum = temp.val + reversed.val;
			max = Math.max(max,currSum);
			temp = temp.next;
			reversed = reversed.next;
			mid--;
		}
		return max;
	}
}