class Solution {
	int closestMeetingNode(int[] edges, int node1, int node2) {
		Map<Integer, Integer> map = new HashMap<>();
		Map<Integer, Integer> map2 = new HashMap<>();
		int dist = 1;
		for (int i = node1; edges[i] != -1 && !map.containsKey(edges[i]); i = edges[i]) {
			map.put(edges[i],dist);
			dist++;
		}
		dist = 1;
		for (int i = node2; edges[i] != -1 && !map2.containsKey(edges[i]); i = edges[i]) {
			map2.put(edges[i],dist);
			dist++;
		}
		int maxDist = Integer.MAX_VALUE;
		int op = -1;
		map.put(node1,0);
		map2.put(node2,0);
		for (int key: map.keySet()) {	
			if (map2.containsKey(key)) {
				int max = Math.max(map.get(key),map2.get(key));
				if (maxDist > max) {
					maxDist = max;
					op = key;
				} 
				else if (maxDist == max) {
					op = Math.min(op,key);
				}
			}
		}
		return maxDist == Integer.MAX_VALUE ? -1 : op;
	}
}