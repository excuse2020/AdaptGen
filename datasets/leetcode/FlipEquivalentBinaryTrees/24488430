class Solution {
	boolean flip(TreeNode root1, TreeNode root2) {
		if (root1 != null && root2 != null) {
			if (root1.val != root2.val) {
				return false;
			} 
			else {
				boolean left = flip(root1.left,root2.left);
				boolean right;
				if (left == true) {
					right = flip(root1.right,root2.right);
					if (right == true) {
						return true;
					} 
					else {
						return false;
					}
				} 
				else {
					TreeNode temp = root2.left;
					root2.left = root2.right;
					root2.right = temp;
					left = flip(root1.left,root2.left);
					if (left == true) {
						right = flip(root1.right,root2.right);
						if (right == true) {
							return true;
						} 
						else {
							return false;
						}
					} 
					else {
						return false;
					}
				}
			}
		} 
		else if (root1 == null && root2 == null) {
			return true;
		} 
		else {
			return false;
		}
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		} 
		else if (root1 == null || root2 == null) {
			return false;
		} 
		else {
			return flip(root1,root2);
		}
	}
}