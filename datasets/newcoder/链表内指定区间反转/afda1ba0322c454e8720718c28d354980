class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		int i = 1;
		int j = 0;
		int[] tempData = new int[(n - m) + 1];
		int tempDataI = 0;
		ListNode tempNode = head;
		while (tempNode != null) {
			if (i >= m && i <= n) {
				tempData[tempDataI] = tempNode.val;
				tempDataI++;
			}
			tempNode = tempNode.next;
			i++;
		}
		ListNode resultTemp = head;
		j = tempData.length - 1;
		int resultI = 1;
		while (resultTemp != null) {
			if (resultI >= m && resultI <= n) {
				resultTemp.val = tempData[j];
				j--;
			}
			resultTemp = resultTemp.next;
			resultI++;
		}
		return head;
	}
}