class Solution {
	int maxScore(List<List<Integer>> grid) {
		int m = grid.size();
		int n = grid.get(0).size();
		int[][] maxi = new int[m][n];
		maxi[m - 1][n - 1] = -1;
		for (int i = m - 1; i >= 0; i--) {
			for (int j = n - 1; j >= 0; j--) {
				if (i < m - 1) {
					maxi[i][j] = Math.max(maxi[i][j],maxi[i + 1][j]);
				}
				if (j < n - 1) {
					maxi[i][j] = Math.max(maxi[i][j],maxi[i][j + 1]);
				}
				maxi[i][j] = Math.max(maxi[i][j],grid.get(i).get(j));
			}
		}
		int res = (int) (-1e9);
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i < m - 1) {
					res = Math.max(res,maxi[i + 1][j] - grid.get(i).get(j));
				}
				if (j < n - 1) {
					res = Math.max(res,maxi[i][j + 1] - grid.get(i).get(j));
				}
			}
		}
		return res;
	}
}