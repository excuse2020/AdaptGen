class Solution {
	boolean IsBalanced_Solution(TreeNode root) {
		if (root == null) {
			return true;
		}
		return compare(root.left,root.right);
	}
	boolean compare(TreeNode p, TreeNode q) {
		if (p != null && !compare(p.left,p.right)) {
			return false;
		}
		if (q != null && !compare(q.left,q.right)) {
			return false;
		}
		return Math.abs(depth(p) - depth(q)) <= 1;
	}
	int depth(TreeNode root) {
		return root == null ? 0 : Math.max(depth(root.left),depth(root.right)) + 1;
	}
}