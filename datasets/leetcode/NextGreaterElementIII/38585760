class Solution {
	int nextGreaterElement(int n) {
		char ch = (Integer.toString(n)).toCharArray();
		int i = ch.length - 2;
		while (i >= 0 && ch[i] >= ch[i + 1]) {
			i--;
		}
		if (i == -1) {
			return -1;
		}
		int j = ch.length - 1;
		while (ch[j] <= ch[i]) {
			j--;
		}
		swap(ch,i,j);
		StringBuilder sb = new StringBuilder();
		for (int k = 0; k <= i; k++) {
			sb.append(ch[k]);
		}
		for (int k = ch.length - 1; k > i; k--) {
			sb.append(ch[k]);
		}
		long num = Long.parseLong(sb.toString());
		if (num > Integer.MAX_VALUE) {
			return -1;
		} 
		else {
			return (int) num;
		}
	}
	void swap(char arr, int i, int j) {
		char temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}