class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		TreeNode nodeArr = new TreeNode[100001];
		boolean child = new boolean[100001];
		for (int desc: descriptions) {	
			int parentVal = desc[0];
			int childVal = desc[1];
			boolean isLeft = desc[2] == 1;
			if (nodeArr[parentVal] == null) {
				nodeArr[parentVal] = new TreeNode(parentVal);
			}
			if (nodeArr[childVal] == null) {
				nodeArr[childVal] = new TreeNode(childVal);
			}
			if (isLeft) {
				nodeArr[parentVal].left = nodeArr[childVal];
			} 
			else {
				nodeArr[parentVal].right = nodeArr[childVal];
			}
			child[childVal] = true;
		}
		for (int desc: descriptions) {	
			if (!child[desc[0]]) {
				return nodeArr[desc[0]];
			}
		}
		return null;
	}
}