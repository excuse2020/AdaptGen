class Solution {
	int[] FindGreatestSumOfSubArray(int[] array) {
		int[] sum1 = new int[array.length];
		sum1[0] = array[0];
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		int low = 0;
		map.put(sum1[0],low);
		int maxValue = array[0];
		for (int i = 1; i < array.length; i++) {
			if (sum1[i - 1] >= 0) {
				sum1[i] = sum1[i - 1] + array[i];
			} 
			else {
				if (sum1[i - 1] + array[i] > array[i]) {
					sum1[i] = sum1[i - 1] + array[i];
				} 
				else {
					sum1[i] = array[i];
					low = i;
				}
			}
			map.put(sum1[i],low);
			maxValue = maxValue > sum1[i] ? maxValue : sum1[i];
		}
		int high = sum1[0];
		for (int ele = 0; ele < sum1.length; ele++) {
			if (sum1[ele] == maxValue) {
				high = ele;
			}
		}
		return Arrays.copyOfRange(array,map.get(maxValue),high + 1);
	}
}