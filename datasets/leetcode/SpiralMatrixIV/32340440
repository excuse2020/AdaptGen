class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		ListNode temp = head;
		int ans = new int[m][n];
		for (int[] a: ans) {	
			Arrays.fill(a,-1);
		}
		int tne = m * n;
		int count = 0;
		int minCol = 0;
		int minRow = 0;
		int maxCol = n;
		int maxRow = m;
		while (count < tne && temp != null) {
			for (int i = minRow, j = minCol; j < maxCol; j++) {
				if (temp != null) {
					ans[i][j] = temp.val;
					temp = temp.next;
					count++;
				}
			}
			++minRow;
			for (int i = minRow, j = maxCol - 1; i < maxRow; i++) {
				if (temp != null) {
					ans[i][j] = temp.val;
					temp = temp.next;
					count++;
				}
			}
			--maxCol;
			for (int i = maxRow - 1, j = maxCol - 1; j >= minCol; j--) {
				if (temp != null) {
					ans[i][j] = temp.val;
					temp = temp.next;
					count++;
				}
			}
			--maxRow;
			for (int i = maxRow - 1, j = minCol; i >= minRow; i--) {
				if (temp != null) {
					ans[i][j] = temp.val;
					temp = temp.next;
					count++;
				}
			}
			++minCol;
		}
		return ans;
	}
}