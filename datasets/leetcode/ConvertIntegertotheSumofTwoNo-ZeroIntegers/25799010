class Solution {
	int[] getNoZeroIntegers(int n) {
		int[] ans = new int[2];
		int a, b;
		for (int i = 1; i <= n; i++) {
			a = i;
			b = n - i;
			if (isNoZeroInteger(a) && isNoZeroInteger(b)) {
				ans[0] = a;
				ans[1] = b;
				break;
			}
		}
		return ans;
	}
	boolean isNoZeroInteger(int n) {
		if (n == 0) {
			return false;
		}
		while (n > 0) {
			int rem = n % 10;
			if (rem == 0) {
				return false;
			}
			n /= 10;
		}
		return true;
	}
}
class Solution {
	int[] getNoZeroIntegers(int n) {
		int[] ans = new int[2];
		int a, b;
		for (int i = 1; i <= n; i++) {
			a = i;
			b = n - i;
			if (isNoZeroInteger(a) && isNoZeroInteger(b)) {
				ans[0] = a;
				ans[1] = b;
				break;
			}
		}
		return ans;
	}
	boolean isNoZeroInteger(int n) {
		if (n == 0) {
			return false;
		}
		while (n > 0) {
			int rem = n % 10;
			if (rem == 0) {
				return false;
			}
			n /= 10;
		}
		return true;
	}
}