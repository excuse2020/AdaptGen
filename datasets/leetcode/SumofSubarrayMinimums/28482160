class Solution {
	int sumSubarrayMins(int[] arr) {
		ArrayList<Integer> listR = new ArrayList<>();
		ArrayList<Integer> listL = new ArrayList<>();
		Stack<Integer> st = new Stack<>();
		long result = 0;
		for (int i = 0; i < arr.length; i++) {
			while (!st.isEmpty() && arr[st.peek()] > arr[i]) {
				st.pop();
			}
			if (!st.isEmpty()) {
				listL.add(i - st.peek());
			} 
			else {
				listL.add(i + 1);
			}
			st.push(i);
		}
		st.clear();
		for (int i = arr.length - 1; i >= 0; i--) {
			while (!st.isEmpty() && arr[st.peek()] >= arr[i]) {
				st.pop();
			}
			if (!st.isEmpty()) {
				listR.add(st.peek() - i);
			} 
			else {
				listR.add(arr.length - i);
			}
			st.push(i);
		}
		for (int i = 0, j = arr.length - 1; i < arr.length && j >= 0; i++, j--) {
			long total = (listL.get(i) * listR.get(j)) % 1000000007;
			total = (total * arr[i]) % 1000000007;
			result = (result + total) % 1000000007;
		}
		return (int) result % 1000000007;
	}
}