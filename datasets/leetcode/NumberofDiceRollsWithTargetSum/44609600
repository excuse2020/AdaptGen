class Solution {
	int numRollsToTarget(int n, int k, int target) {
		int dp = new int[n + 1][target + 1];
		return solve(n,k,target,dp);
	}
	int solve(int n, int k, int target, int[][] dp) {
		if (target < 0 || n < 0) {
			return 0;
		}
		if (k * n < target) {
			return 0;
		}
		if (k * n == target) {
			return 1;
		}
		if (target < n) {
			return 0;
		}
		if (target == n) {
			return 1;
		}
		if (dp[n][target] != 0) {
			return dp[n][target];
		}
		long sum = 0;
		for (int i = 1; i <= k; i++) {
			sum += solve(n - 1,k,target - i,dp);
		}
		sum %= 1000000007;
		dp[n][target] = (int) sum;
		return dp[n][target];
	}
}