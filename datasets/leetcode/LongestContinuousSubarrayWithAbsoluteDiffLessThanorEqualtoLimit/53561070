class Solution {
	int longestSubarray(int[] nums, int limit) {
		int l = 0;
		PriorityQueue<Integer> minQ = new PriorityQueue<>(), maxQ = new PriorityQueue<>(Comparator.reverseOrder());
		int longest = 0;
		for (int r = 0; r < nums.length; r++) {
			minQ.offer(nums[r]);
			maxQ.offer(nums[r]);
			while (maxQ.peek() - minQ.peek() > limit) {
				maxQ.remove(nums[l]);
				minQ.remove(nums[l]);
				l++;
			}
			longest = Math.max(longest,r - l + 1);
		}
		return longest;
	}
}