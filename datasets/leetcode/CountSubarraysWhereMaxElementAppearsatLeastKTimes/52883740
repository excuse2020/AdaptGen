class Solution {
	long countSubarrays(int[] nums, int k) {
		int max = 0;
		for (Integer i: nums) {	
			max = Math.max(max,i);
		}
		long n = nums.length;
		return ((n * (n + 1)) / 2) - help(nums,k - 1,max);
	}
	long help(int[] nums, int k, int elem) {
		int l = 0;
		int r = 0;
		int n = nums.length;
		int cnt = 0;
		long ans = 0;
		while (r < n) {
			if (nums[r] == elem) {
				cnt++;
			}
			while (cnt > k) {
				if (nums[l] == elem) {
					cnt--;
				}
				l++;
			}
			ans += (r - l + 1);
			r++;
		}
		return ans;
	}
}