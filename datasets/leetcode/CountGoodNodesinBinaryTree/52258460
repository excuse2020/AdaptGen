class Solution {
	int countGoodNodes(TreeNode root, int count, int parentValue, int greatValue) {
		if (root == null) {
			return 0;
		}
		if ((root.right == null) && (root.left == null)) {
			if (root.val >= greatValue) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		if ((root.val >= greatValue)) {
			count = 1;
			return (countGoodNodes(root.left,count,root.val,root.val) + countGoodNodes(root.right,count,root.val,root.val));
		} 
		else {
			count = 0;
			return (countGoodNodes(root.left,count,root.val,greatValue) + countGoodNodes(root.right,count,root.val,greatValue));
		}
	}
	int goodNodes(TreeNode root) {
		int count = 0;
		int result = countGoodNodes(root,count,-1,root.val);
		return result;
	}
}