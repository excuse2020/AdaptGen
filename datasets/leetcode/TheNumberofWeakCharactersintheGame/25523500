class Solution {
	int numberOfWeakCharacters(int[][] properties) {
		int count = 0;
		Arrays.sort(properties,(a, b) -> {(a[0] == b[0]) ? Integer.compare(b[1],a[1]) : Integer.compare(a[0],b[0])});
		int n = properties.length;
		Stack<Integer> s1 = new Stack<>();
		Stack<Integer> s2 = new Stack<>();
		for (int i = 0; i < n; i++) {
			int x = properties[i][0];
			int y = properties[i][1];
			if (s1.isEmpty()) {
				s1.push(x);
				s2.push(y);
			} 
			else if (s1.peek() < x && s2.peek() < y) {
				while (!s1.isEmpty() && !s2.isEmpty()) {
					if (s1.peek() >= x || s2.peek() >= y) {
						break;
					}
					s1.pop();
					s2.pop();
					count++;
				}
				s1.push(x);
				s2.push(y);
			} 
			else {
				s1.push(x);
				s2.push(y);
			}
		}
		return count;
	}
}