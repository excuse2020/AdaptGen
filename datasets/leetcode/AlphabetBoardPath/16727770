class Solution {
	String alphabetBoardPath(String target) {
		if (target.length() == 0) {
			return "";
		}
		int sourceRow = 0, sourceCol = 0;
		StringBuilder path = new StringBuilder();
		for (char c: target.toCharArray()) {	
			int position = c - 97;
			int targetRow = position / 5;
			int targetCol = position % 5;
			if (targetCol < sourceCol) {
				path.append(helper("L",sourceCol - targetCol));
			}
			if (targetRow < sourceRow) {
				path.append(helper("U",sourceRow - targetRow));
			}
			if (targetRow > sourceRow) {
				path.append(helper("D",targetRow - sourceRow));
			}
			if (targetCol > sourceCol) {
				path.append(helper("R",targetCol - sourceCol));
			}
			path.append("!");
			sourceRow = targetRow;
			sourceCol = targetCol;
		}
		return path.toString();
	}
	StringBuilder helper(String dir, int time) {
		StringBuilder path = new StringBuilder();
		for (int i = 0; i < time; i++) {
			path.append(dir);
		}
		return path;
	}
}