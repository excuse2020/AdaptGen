class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		head1 = reverseList(head1);
		head2 = reverseList(head2);
		ListNode dummy = new ListNode(0);
		ListNode curr = dummy;
		int carry = 0;
		while (head1 != null || head2 != null || carry != 0) {
			int val1 = head1 != null ? head1.val : 0;
			int val2 = head2 != null ? head2.val : 0;
			int sum = val1 + val2;
			carry = sum / 10;
			ListNode newNode = new ListNode(sum % 10);
			curr.next = newNode;
			curr = newNode;
			if (head1 != null) {
				head1 = head1.next;
			}
			if (head2 != null) {
				head2 = head2.next;
			}
		}
		return reverseList(dummy.next);
	}
	ListNode reverseList(ListNode head) {
		ListNode prev = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = prev;
			prev = head;
			head = next;
		}
		return prev;
	}
}