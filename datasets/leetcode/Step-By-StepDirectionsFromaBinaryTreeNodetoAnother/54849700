class Solution {
	boolean dfs(TreeNode node, int val, StringBuilder current) {
		if (node == null) {
			return false;
		}
		if (node.val == val) {
			return true;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		StringBuilder toStart = new StringBuilder();
		StringBuilder toEnd = new StringBuilder();
		dfs(root,startValue,toStart);
		dfs(root,destValue,toEnd);
		int i = 0;
		int minLen = Math.min(toStart.length(),toEnd.length());
		while (i < minLen) {
			if (toStart.charAt(i) != toEnd.charAt(i)) {
				break;
			}
			i++;
		}
		toStart.ensureCapacity(toStart.length() - i + toEnd.length() - i);
		toStart.delete(0,i);
		int j = 0;
	}
}