class Solution {
	int dfs(TreeNode root, int depth, AtomicBoolean isBalanced) {
		if (!isBalanced.get()) {
			return -1;
		}
		if (root == null) {
			return depth - 1;
		}
		int left = dfs(root.left,depth + 1,isBalanced);
		int right = dfs(root.right,depth + 1,isBalanced);
		if (Math.abs(left - right) > 1) {
			isBalanced.set(false);
		}
		return Math.max(left,right);
	}
	boolean isBalanced(TreeNode root) {
		if (root == null) {
			return true;
		}
		AtomicBoolean isBalanced = new AtomicBoolean(true);
		dfs(root,1,isBalanced);
		return isBalanced.get();
	}
}