class Solution {
	boolean divideArray(int[] nums) {
		Map<Integer, Integer> map = new HashMap<>();
		for (int num: nums) {	
			map.put(num,map.getOrDefault(num,0) + 1);
		}
		for (int val: map.values()) {	
			if (val % 2 != 0) {
				return false;
			}
		}
		return true;
	}
}
class Solution {
	boolean divideArray(int[] nums) {
		Arrays.sort(nums);
		int count = 1;
		for (int i = 1; i < nums.length; i++) {
			if (nums[i - 1] == nums[i]) {
				count++;
			} 
			else {
				if (count % 2 != 0) {
					return false;
				}
				count = 1;
			}
		}
		return true;
	}
}
class Solution {
	boolean divideArray(int[] nums) {
		Arrays.sort(nums);
		for (int i = 0; i < nums.length; i += 2) {
			if (nums[i] != nums[i + 1]) {
				return false;
			}
		}
		return true;
	}
}