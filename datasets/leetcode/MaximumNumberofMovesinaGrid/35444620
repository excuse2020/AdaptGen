class Solution {
	int maxMoves(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		boolean[][] dp = new boolean[m + 1][n + 1];
		int max = 0;
		for (int i = 0; i < m; i++) {
			dp[i][0] = true;
		}
		for (int i = 0; i < n - 1; i++) {
			for (int j = 0; j < m; j++) {
				if (dp[j][i]) {
					if (j - 1 >= 0 && grid[j][i] < grid[j - 1][i + 1]) {
						dp[j - 1][i + 1] = true;
						max = i + 1;
					}
					if (j + 1 < m && grid[j][i] < grid[j + 1][i + 1]) {
						dp[j + 1][i + 1] = true;
						max = i + 1;
					}
					if (grid[j][i] < grid[j][i + 1]) {
						dp[j][i + 1] = true;
						max = i + 1;
					}
				}
			}
		}
		return max;
	}
}