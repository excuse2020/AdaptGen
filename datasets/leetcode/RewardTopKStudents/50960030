class Solution {
	List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] report, int[] student_id, int k) {
		Set<String> positive = new HashSet<>(Arrays.asList(positive_feedback));
		Set<String> negative = new HashSet<>(Arrays.asList(negative_feedback));
		Map<Integer, Integer> hm = new HashMap<>();
		for (int i = 0; i < student_id.length; i++) {
			List<String> words = Arrays.asList(report[i].split(" "));
			int marks = 0;
			long posCount = words.stream().filter().count();
			long negCount = words.stream().filter().count();
			marks = (int) ((3 * posCount) - (negCount));
			hm.put(student_id[i],marks);
		}
		return hm.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()).thenComparing(Map.Entry.comparingByKey())).limit(k).map().collect(Collectors.toList());
	}
}