class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		LinkedList<Integer> queue = new LinkedList<>();
		if (size == 0) {
			return new ArrayList<>();
		}
		ArrayList<Integer> res = new ArrayList<>();
		for (int i = 0; i < num.length; i++) {
			int n = num[i];
			if (i >= size && num[i - size] == queue.peekFirst()) {
				queue.pollFirst();
			}
			while (!queue.isEmpty() && n >= queue.peekLast()) {
				queue.pollLast();
			}
			queue.offerLast(n);
			if (i >= (size - 1)) {
				res.add(queue.peekFirst());
			}
		}
		return res;
	}
}