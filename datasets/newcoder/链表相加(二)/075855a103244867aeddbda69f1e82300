class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		LinkedList<Integer> list1 = new LinkedList<>();
		LinkedList<Integer> list2 = new LinkedList<>();
		putData(list1,head1);
		putData(list2,head2);
		ListNode newNode = null;
		ListNode head = null;
		int carry = 0;
		while (!list1.isEmpty() || !list2.isEmpty()) {
			int x = (list1.isEmpty()) ? 0 : list1.pop();
			int y = (list2.isEmpty()) ? 0 : list2.pop();
			int sum = x + y;
			carry = sum / 10;
			newNode = new ListNode(sum % 10);
			newNode.next = head;
			head = newNode;
		}
		return head;
	}
	void putData(LinkedList<Integer> s1, ListNode head1) {
		if (s1 == null) {
			s1 = new LinkedList<>();
		}
		while (head1 != null) {
			s1.push(head1.val);
			head1 = head1.next;
		}
	}
}