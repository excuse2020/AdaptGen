class Solution {
	int[] arr;
	int[][] minJumps;
	int n;
	int minSideJumps(int[] arr) {
		this.n = arr.length;
		this.arr = arr;
		this.minJumps = new int[n][3];
		for (int i = 0; i < n; i++) {
			this.arr[i] -= 1;
			this.minJumps[i][0] = 1000000;
			this.minJumps[i][1] = 1000000;
			this.minJumps[i][2] = 1000000;
		}
		return solve(0,1);
	}
	int solve(int i, int j) {
		if (i >= n - 1) {
			return 0;
		}
		if (i < 0 || j < 0 || j > 2 || arr[i] == j) {
			return 1000000;
		}
		if (minJumps[i][j] != 1000000) {
			return minJumps[i][j];
		}
		if (i + 1 < n && arr[i + 1] != j) {
			minJumps[i][j] = Math.min(minJumps[i][j],solve(i + 1,j));
		}
		if (j == 0) {
			if (arr[i] != 1) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,1) + 1);
			}
			if (arr[i] != 2) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,2) + 1);
			}
		} 
		else if (j == 1) {
			if (arr[i] != 0) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,0) + 1);
			}
			if (arr[i] != 2) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,2) + 1);
			}
		} 
		else if (j == 2) {
			if (arr[i] != 1) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,1) + 1);
			}
			if (arr[i] != 0) {
				minJumps[i][j] = Math.min(minJumps[i][j],solve(i,0) + 1);
			}
		}
		return minJumps[i][j];
	}
}