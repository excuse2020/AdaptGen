class Solution {
	int ans = Integer.MAX_VALUE;
	Set<String> visited = new HashSet<>();
	void dfs(String word, String endWord, Set<String> words, int lengthOfChain, List<String> chain) {
		if (word.equals(endWord)) {
			System.out.println(chain);
			ans = Math.min(ans,lengthOfChain);
			return;
		}
		visited.add(word);
		int j = 0;
		char[] arr = word.toCharArray();
		char k;
	}
	int ladderLength(String beginWord, String endWord, List<String> wordList) {
		Set<String> words = new HashSet<>(wordList);
		dfs(beginWord,endWord,words,1,new ArrayList<>(Arrays.asList(beginWord)));
		return ans == Integer.MAX_VALUE ? 0 : ans;
	}
}