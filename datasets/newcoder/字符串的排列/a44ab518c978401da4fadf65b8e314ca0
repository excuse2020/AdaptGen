class Solution {
	ArrayList<String> Permutation(String str) {
		ArrayList<String> ret = new ArrayList<>();
		if (str == null || str.length() == 0) {
			return ret;
		}
		perm(0,str.toCharArray(),ret);
		List<String> res = ret.stream().distinct().sorted().collect(Collectors.toList());
		return new ArrayList<>(res);
	}
	void perm(int pos, char[] a, ArrayList<String> ret) {
		if (pos + 1 == a.length) {
			ret.add(new String(a));
			return;
		}
		for (int i = pos; i < a.length; ++i) {
			char tmp = a[i];
			a[i] = a[pos];
			a[pos] = tmp;
			perm(pos + 1,a,ret);
			tmp = a[i];
			a[i] = a[pos];
			a[pos] = tmp;
		}
	}
}