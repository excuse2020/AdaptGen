class Solution {
	int matrixSum(int[][] arr) {
		ArrayList<ArrayList<Integer>> list = new ArrayList<>();
		for (int i = 0; i < arr.length; ++i) {
			list.add(new ArrayList<>());
		}
		for (int i = 0; i < arr.length; ++i) {
			for (int j = 0; j < arr[0].length; ++j) {
				list.get(i).add(arr[i][j]);
			}
		}
		int ans = 0;
		int test = arr[0].length;
		while (test-- > 0) {
			PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
			for (int i = 0; i < list.size(); ++i) {
				int max = 0;
				for (int j = 0; j < list.get(i).size(); ++j) {
					max = Math.max(max,list.get(i).get(j));
				}
				pq.add(max);
				list.get(i).remove(Integer.valueOf(max));
			}
			int temp = pq.remove();
			ans += temp;
		}
		return ans;
	}
}