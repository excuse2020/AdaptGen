class Solution {
	int longestPath = 0;
	int dfs(TreeNode node) {
		if (node == null) {
			return -1;
		}
		int leftPath = dfs(node.left);
		int rightPath = dfs(node.right);
		if (node.left == null || node.val != node.left.val) {
			leftPath = 0;
		}
		if (node.right == null || node.val != node.right.val) {
			rightPath = 0;
		}
		longestPath = Math.max(longestPath,leftPath + rightPath);
		return Math.max(leftPath,rightPath) + 1;
	}
	int longestUnivaluePath(TreeNode root) {
		dfs(root);
		return longestPath;
	}
}