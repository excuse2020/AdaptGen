class Solution {
	int isPossible(int potions, int spell, long target) {
		int start = 0;
		int end = potions.length - 1;
		int mid = 0;
		long spellValue = 0;
		int idx = potions.length;
		while (start <= end) {
			spellValue = spell;
			mid = start + (end - start) / 2;
			spellValue *= potions[mid];
			if (spellValue >= target) {
				idx = mid;
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		return potions.length - idx;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		for (int i = 0; i < spells.length; i++) {
			spells[i] = isPossible(potions,spells[i],success);
		}
		return spells;
	}
}