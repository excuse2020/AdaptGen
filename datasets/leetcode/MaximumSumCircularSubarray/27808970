class Solution {
	int maxSubarraySumCircular(int[] arr) {
		int n = arr.length;
		int max_normal = maxSum(arr);
		if (max_normal < 0) {
			return max_normal;
		}
		int arr_sum = 0;
		for (int i = 0; i < n; i++) {
			arr_sum += arr[i];
			arr[i] = -arr[i];
		}
		int max_circular = arr_sum + maxSum(arr);
		return Math.max(max_normal,max_circular);
	}
	int maxSum(int[] arr) {
		int n = arr.length;
		int res = arr[0];
		int curr = 0;
		for (int i = 0; i < n; i++) {
			curr = Math.max(curr + arr[i],arr[i]);
			res = Math.max(res,curr);
		}
		return res;
	}
}