class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> stack = new Stack<>();
		for (int i = 0; i < tokens.length; i++) {
			if (tokens[i].equals("+")) {
				int val1 = stack.pop();
				int val2 = stack.pop();
				int calc = val2 + val1;
				stack.push(calc);
			} 
			else if (tokens[i].equals("-")) {
				int val1 = stack.pop();
				int val2 = stack.pop();
				int calc = val2 - val1;
				stack.push(calc);
			} 
			else if (tokens[i].equals("*")) {
				int val1 = stack.pop();
				int val2 = stack.pop();
				int calc = val2 * val1;
				stack.push(calc);
			} 
			else if (tokens[i].equals("/")) {
				int val1 = stack.pop();
				int val2 = stack.pop();
				int calc = val2 / val1;
				stack.push(calc);
			} 
			else {
				int insert = Integer.parseInt(tokens[i]);
				stack.push(insert);
			}
		}
		int result = stack.pop();
		return result;
	}
}