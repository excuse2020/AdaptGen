class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return head;
		}
		int len = 0;
		ListNode temp = head;
		while (temp != null) {
			len++;
			temp = temp.next;
		}
		ListNode headNode = new ListNode(-1);
		ListNode headNode2 = new ListNode(-2);
		ListNode headTemp = headNode;
		ListNode headTemp2 = headNode2;
		ListNode curNode = head;
		for (int i = 1; i <= len; i++) {
			if (i % 2 != 0) {
				headTemp.next = curNode;
				headTemp = curNode;
			} 
			else {
				headTemp2.next = curNode;
				headTemp2 = curNode;
			}
			curNode = curNode.next;
		}
		headTemp2.next = null;
		headTemp.next = headNode2.next;
		return headNode.next;
	}
}