class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		ListNode tmp;
		ListNode tmpsmall;
		ListNode pStart;
		ListNode pOther;
		ListNode headnext;
		int oth, sn;
		if (pHead1 != null && pHead2 == null) {
			pStart = pHead1;
			pOther = pHead2;
		} 
		else if (pHead1 != null && pHead1.val <= pHead2.val) {
			pStart = pHead1;
			pOther = pHead2;
		} 
		else {
			pStart = pHead2;
			pOther = pHead1;
		}
		if (pStart == null) {
			return null;
		}
		ListNode res = pStart;
		while (true) {
			if (pStart.next == null && pOther == null) {
				break;
			}
			if (pOther == null) {
				tmp = pOther;
				tmpsmall = pStart.next;
			} 
			else if (pStart.next == null) {
				tmp = pStart.next;
				tmpsmall = pOther;
			} 
			else if (pOther.val <= pStart.next.val) {
				tmp = pStart.next;
				tmpsmall = pOther;
			} 
			else {
				tmp = pOther;
				tmpsmall = pStart.next;
			}
			pStart.next = tmpsmall;
			pStart = pStart.next;
			pOther = tmp;
		}
		return res;
	}
}