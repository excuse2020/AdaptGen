class Solution {
	boolean validateStackSequences(int[] pushed, int[] popped) {
		Stack<Integer> stack = new Stack<>();
		int i = 0, j = 0;
		while (i < pushed.length || j < pushed.length) {
			while (i < pushed.length && j < pushed.length && pushed[i] != popped[j]) {
				stack.push(pushed[i]);
				i++;
			}
			if (i != pushed.length) {
				stack.push(pushed[i]);
				i++;
			}
			while (!stack.isEmpty() && stack.peek() == popped[j]) {
				stack.pop();
				if (j < pushed.length) {
					j++;
				}
			}
			if (i == pushed.length && !stack.isEmpty()) {
				return false;
			}
		}
		if (j == pushed.length && stack.isEmpty()) {
			return true;
		}
		return false;
	}
}