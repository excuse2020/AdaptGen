class Solution {
	boolean isValid(String s, int maxLetters) {
		Set<Character> set = new HashSet<>();
		for (char c: s.toCharArray()) {	
			set.add(c);
			if (set.size() > maxLetters) {
				return false;
			}
		}
		return true;
	}
	int maxFreq(String s, int maxLetters, int minSize, int maxSize) {
		Map<String, Integer> map = new HashMap<>();
		int max = 0;
		for (int i = 0; i < s.length() - minSize + 1; i++) {
			String subStr = s.substring(i,i + minSize);
			if (isValid(subStr,maxLetters)) {
				map.put(subStr,map.getOrDefault(subStr,0) + 1);
				max = Math.max(max,map.get(subStr));
			}
		}
		return max;
	}
}