class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		int diagonals = 0;
		int arrSize = 0;
		for (int i = 0; i < nums.size(); i++) {
			diagonals = Math.max(i + nums.get(i).size(),diagonals);
			arrSize += nums.get(i).size();
		}
		List<List<Integer>> buckets = new ArrayList<>();
		for (int i = 0; i < diagonals; i++) {
			buckets.add(new ArrayList<Integer>());
		}
		for (int i = 0; i < nums.size(); i++) {
			for (int j = 0; j < nums.get(i).size(); j++) {
				int num_idx = i + j;
				int num = nums.get(i).get(j);
				buckets.get(num_idx).add(num);
			}
		}
		int ans = new int[arrSize];
		int idx = 0;
		for (int i = 0; i < buckets.size(); i++) {
			for (int j = buckets.get(i).size() - 1; j >= 0; j--) {
				ans[idx++] = buckets.get(i).get(j);
			}
		}
		return ans;
	}
}