class Solution {
	int minimumArea(int[][] grid) {
		int min = Integer.MAX_VALUE;
		int l = Integer.MAX_VALUE;
		int max = 0;
		int r = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					min = j;
					break;
				}
			}
			l = Math.min(min,l);
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = grid[0].length - 1; j >= 0; j--) {
				if (grid[i][j] == 1) {
					max = j;
					break;
				}
			}
			r = Math.max(max,r);
		}
		int p = -1;
		int q = -1;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					p = i;
					break;
				}
			}
			if (p != -1) {
				break;
			}
		}
		for (int i = grid.length - 1; i >= 0; i--) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					q = i;
					break;
				}
			}
			if (q != -1) {
				break;
			}
		}
		int ans = (r - l + 1) * (q - p + 1);
		return ans;
	}
}