class Solution {
	int[] deckRevealedIncreasing(int[] deck) {
		int n = deck.length;
		int[] result = new int[n];
		Queue<Integer> firstQueue = new PriorityQueue<>((a, b) -> {b - a});
		for (int card: deck) {	
			firstQueue.add(card);
		}
		Deque<Integer> resQueue = new ArrayDeque<>();
		resQueue.offer(firstQueue.poll());
		while (!firstQueue.isEmpty()) {
			resQueue.offer(resQueue.poll());
			resQueue.offer(firstQueue.poll());
		}
		int index = n - 1;
		while (!resQueue.isEmpty()) {
			result[index--] = resQueue.poll();
		}
		return result;
	}
}