class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		Set<List<Integer>> hashset = new HashSet<>();
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				Set<Long> set = new HashSet<>();
				for (int k = j + 1; k < nums.length; k++) {
					long sum = (nums[i] + nums[j]);
					sum += nums[k];
					long required = target - sum;
					if (set.contains(required)) {
						List<Integer> list = new ArrayList<>();
						list.add(nums[i]);
						list.add(nums[k]);
						list.add(nums[j]);
						list.add((int) required);
						list.sort();
						hashset.add(list);
					}
					set.add((long) nums[k]);
				}
			}
		}
		List<List<Integer>> result = new ArrayList<>(hashset);
		return result;
	}
}