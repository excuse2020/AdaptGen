class Solution {
	boolean isPalindrome(String cur) {
		if (cur.charAt(0) == cur.charAt(1)) {
			return true;
		}
		return false;
	}
	int longestPalindrome(String[] words) {
		Map<String, Integer> map = new HashMap<>();
		int len = 0;
		for (int i = 0; i < words.length; i++) {
			String cur = words[i];
			String cur_rev = cur.charAt(1) + "";
			if (map.containsKey(cur_rev)) {
				len += 4;
				map.put(cur_rev,map.get(cur_rev) - 1);
				if (map.get(cur_rev) == 0) {
					map.remove(cur_rev);
				}
			} 
			else {
				map.put(cur,map.getOrDefault(cur,0) + 1);
			}
		}
		for (String k: map.keySet()) {	
			if (isPalindrome(k)) {
				len += 2;
				break;
			}
		}
		return len;
	}
}