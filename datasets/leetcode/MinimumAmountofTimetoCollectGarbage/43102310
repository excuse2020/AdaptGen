class Solution {
	int calculateTime(int travel, HashMap<Integer, Integer> garbage) {
		if (garbage.size() == 0) {
			return 0;
		}
		int i = 0, ans = 0;
		for (Map.Entry<Integer, Integer> x: garbage.entrySet()) {	
			int garbage_loc = x.getKey();
			int garbage_qty = x.getValue();
			while (garbage_loc != 0 && i < garbage_loc) {
				ans += travel[i];
				i++;
			}
			ans += garbage_qty;
		}
		return ans;
	}
	int garbageCollection(String[] garbage, int[] travel) {
		HashMap<Integer, Integer> metal = new HashMap<>();
		HashMap<Integer, Integer> paper = new HashMap<>();
		HashMap<Integer, Integer> glass = new HashMap<>();
		int i = 0;
		String curr_word = garbage[i];
		int j = 0;
		char curr_char = curr_word.charAt(j);
	}
}