class Solution {
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		List<ListNode> tempList = new ArrayList<>();
		for (int i = 0; i < lists.size(); i++) {
			if (lists.get(i) != null) {
				ListNode temp = lists.get(i);
				tempList.add(temp);
			}
		}
		ListNode virtual = new ListNode(-1);
		ListNode temp = virtual;
		while (!tempList.isEmpty()) {
			ListNode minNode = tempList.get(0);
			int minIndex = 0;
			for (int i = 0; i < tempList.size(); i++) {
				if (tempList.get(i).val < minNode.val) {
					minNode = tempList.get(i);
					minIndex = i;
				}
			}
			temp.next = minNode;
			temp = temp.next;
			if (tempList.get(minIndex).next == null) {
				tempList.remove(tempList.get(minIndex));
			} 
			else {
				tempList.set(minIndex,tempList.get(minIndex).next);
			}
		}
		return virtual.next;
	}
}