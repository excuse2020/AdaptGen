class Solution {
	int findHours(int arr, int time) {
		int totalH = 0;
		for (int i = 0; i < arr.length; i++) {
			totalH += Math.ceil((double) (arr[i]) / (double) (time));
		}
		return totalH;
	}
	int minEatingSpeed(int[] piles, int h) {
		int n = piles.length;
		int max = Integer.MAX_VALUE;
		for (int i = 0; i < n; i++) {
			max = Math.max(piles[i],max);
		}
		int low = 0;
		int high = max;
		while (low <= high) {
			int mid = (low + high) / 2;
			int reqTime = findHours(piles,mid);
			if (reqTime <= h) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
}