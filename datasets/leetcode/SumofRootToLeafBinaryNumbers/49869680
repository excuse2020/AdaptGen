class Solution {
	ArrayList<StringBuffer> ar = new ArrayList<>();
	void helper(TreeNode root, StringBuffer str, ArrayList<StringBuffer> ar) {
		if (root.left == null && root.right == null) {
			str.append(root.val);
			ar.add(new StringBuffer(str));
			System.out.print(str);
			str.deleteCharAt(str.length() - 1);
			System.out.println(" " + str);
			return;
		}
		str.append(root.val);
		if (root.left != null) {
			helper(root.left,str,ar);
		}
		if (root.right != null) {
			helper(root.right,str,ar);
		}
		str.deleteCharAt(str.length() - 1);
	}
	int sumRootToLeaf(TreeNode root) {
		helper(root,new StringBuffer(),ar);
		int sum = 0;
		Iterator<StringBuffer> iterator = ar.iterator();
		while (iterator.hasNext()) {
			StringBuffer element = iterator.next();
			sum += Integer.parseInt(element.toString(),2);
		}
		return sum;
	}
}