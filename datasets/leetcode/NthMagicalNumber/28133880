class Solution {
	long gcd(int A, int B) {
		if (B == 0) {
			return (long) A;
		}
		return gcd(B,A % B);
	}
	int nthMagicalNumber(int n, int a, int b) {
		int mod = 1000000007;
		long low = 2;
		long high = (long) n * Math.min(a,b);
		long LCM = ((long) a * b) / gcd(a,b);
		long ans = -1;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			long count = (mid / a) + (mid / b) - (mid / LCM);
			if (count >= n) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return (int) (ans % mod);
	}
}