class Solution {
	int[] group, profits;
	int mod = 1000000007;
	int n, minProfit;
	int find(int i, int count, int profit) {
		if (i == group.length) {
			return profit >= minProfit ? 1 : 0;
		}
		int totalWays = find(i + 1,count,profit);
		if (count + group[i] <= n) {
			totalWays += find(i + 1,count + group[i],profit + profits[i]);
		}
		return totalWays % mod;
	}
	int profitableSchemes(int n, int minProfit, int[] group, int[] profits) {
		this.n = n;
		this.minProfit = minProfit;
		this.group = group;
		this.profits = profits;
		return find(0,0,0);
	}
}