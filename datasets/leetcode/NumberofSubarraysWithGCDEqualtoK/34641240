class Solution {
	int gcd(int a, int b) {
		if (a == 0) {
			return b;
		}
		if (b == 0) {
			return a;
		}
		if (a == b) {
			return b;
		}
		while (a != b) {
			if (a == 0) {
				return b;
			}
			if (b == 0) {
				return a;
			}
			if (a == b) {
				return b;
			}
			if (a > b) {
				a = a % b;
			} 
			else {
				b = b % a;
			}
		}
		return a;
	}
	int subarrayGCD(int[] nums, int k) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			int hcf = 0;
			for (int j = i; j < nums.length; j++) {
				hcf = gcd(hcf,nums[j]);
				if (hcf == k) {
					count++;
				}
				if (hcf < k) {
					break;
				}
			}
		}
		return count;
	}
}