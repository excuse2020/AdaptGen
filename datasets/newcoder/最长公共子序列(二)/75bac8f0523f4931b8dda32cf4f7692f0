class Solution {
	String LCS(String s1, String s2) {
		char[] ch1 = s1.toCharArray();
		char[] ch2 = s2.toCharArray();
		int[][] dp = new int[s1.length() + 1][s2.length() + 1];
		for (int i = 1; i <= s1.length(); i++) {
			for (int j = 1; j <= s2.length(); j++) {
				if (ch1[i - 1] == ch2[j - 1]) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
				} 
				else {
					dp[i][j] = Math.max(dp[i][j - 1],dp[i - 1][j]);
				}
			}
		}
		if (dp[s1.length()][s2.length()] == 0) {
			return "-1";
		}
		String res = "";
		for (int i = s1.length(), j = s2.length(); i >= 1 && j >= 1; ) {
			if (ch1[i - 1] == ch2[j - 1]) {
				res = ch1[i - 1] + res;
				i--;
				j--;
			} 
			else if (dp[i][j - 1] >= dp[i - 1][j]) {
				j--;
			} 
			else if (dp[i][j - 1] < dp[i - 1][j]) {
				i--;
			}
		}
		return res;
	}
}