class Solution {
	int[] getFreqArray(int num) {
		int[] freqOfnum = new int[10];
		while (num > 0) {
			freqOfnum[num % 10] += 1;
			num /= 10;
		}
		return freqOfnum;
	}
	boolean reorderedPowerOf2(int n) {
		int[] freqOfN = new int[10];
		int sizeofN = 0;
		while (n > 0) {
			freqOfN[n % 10] += 1;
			n /= 10;
		}
		for (int i = 0; i < 31; i++) {
			if (Arrays.equals(freqOfN,getFreqArray((int) Math.pow(2,i)))) {
				return true;
			}
		}
		return false;
	}
}