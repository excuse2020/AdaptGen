class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> path = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		preorder(ans,path,root,targetSum);
		return ans;
	}
	void preorder(List<List<Integer>> ans, List<Integer> path, TreeNode root, int sum) {
		if (root == null) {
			return;
		}
		sum -= root.val;
		path.add(root.val);
		if (root.right == null && root.left == null && sum == 0) {
			ans.add(path);
		}
		preorder(ans,new ArrayList<>(path),root.left,sum);
		preorder(ans,new ArrayList<>(path),root.right,sum);
	}
}