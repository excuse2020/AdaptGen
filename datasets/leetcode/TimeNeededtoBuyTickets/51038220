class Solution {
	int timeRequiredToBuy(int[] tickets, int k) {
		int n = tickets.length;
		int time = 0;
		Queue<Integer> queue = new LinkedList<>();
		for (int i = 0; i < n; i++) {
			if (tickets[i] > 0) {
				queue.add(tickets[i]);
			}
		}
		while (queue.size() > 0) {
			int ticketsLeft = queue.poll() - 1;
			time++;
			if (k == 0 && ticketsLeft == 0) {
				break;
			}
			if (k > 0) {
				k--;
			} 
			else {
				k = queue.size();
			}
			if (ticketsLeft > 0) {
				queue.add(ticketsLeft);
			}
		}
		return time;
	}
}