class Solution {
	void backtrack(int size, List<Integer> output, ArrayList<ArrayList<Integer>> res, int first) {
		if (first == size) {
			res.add(new ArrayList<Integer>(output));
			return;
		}
		for (int i = first; i < size; i++) {
			Collections.swap(output,first,i);
			backtrack(size,output,res,first + 1);
			Collections.swap(output,first,i);
		}
	}
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		ArrayList<ArrayList<Integer>> res = new ArrayList<>();
		List<Integer> output = new ArrayList<>();
		Arrays.sort(num);
		int size = num.length;
		for (int n: num) {	
			output.add(n);
		}
		backtrack(size,output,res,0);
		return res;
	}
}