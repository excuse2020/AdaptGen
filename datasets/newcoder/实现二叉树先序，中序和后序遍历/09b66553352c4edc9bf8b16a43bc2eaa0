class Solution {
	void bac(ArrayList arry, TreeNode node) {
		if (node == null) {
			return;
		}
		bac(arry,node.left);
		bac(arry,node.right);
		arry.add(node.val);
	}
	void mid(ArrayList arry, TreeNode node) {
		if (node == null) {
			return;
		}
		mid(arry,node.left);
		arry.add(node.val);
		mid(arry,node.right);
	}
	void per(ArrayList arry, TreeNode node) {
		if (node == null) {
			return;
		}
		arry.add(node.val);
		per(arry,node.left);
		per(arry,node.right);
	}
	int[][] threeOrders(TreeNode root) {
		ArrayList array = new ArrayList();
		per(array,root);
		mid(array,root);
		bac(array,root);
		int[][] a = new int[3][array.size() / 3];
		int j = 0;
		int k = 0;
		for (int i = 0; i < array.size(); i++) {
			a[j][k] = (Integer) array.get(i);
			if (k >= array.size() / 3 - 1) {
				j++;
				k = 0;
			} 
			else {
				k++;
			}
		}
		return a;
	}
}