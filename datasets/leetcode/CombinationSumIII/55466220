class Solution {
	void combinationSum(int index, int k, int n, int sum, List<Integer> list, List<List<Integer>> ans) {
		if (index > 9) {
			if (list.size() == k && sum == n) {
				ans.add(new ArrayList<>(list));
			}
			return;
		}
		list.add(index);
		combinationSum(index + 1,k,n,sum + index,list,ans);
		list.remove(list.size() - 1);
		combinationSum(index + 1,k,n,sum,list,ans);
	}
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> emptyList = new ArrayList<Integer>();
		combinationSum(1,k,n,0,emptyList,ans);
		return ans;
	}
}