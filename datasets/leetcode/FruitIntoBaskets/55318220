class Solution {
	int totalFruit(int[] fruits) {
		if (fruits.length == 0) {
			return 0;
		}
		int max = Integer.MIN_VALUE;
		int fruitCount = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		int left = 0;
		int right = 0;
		while (right < fruits.length) {
			map.put(fruits[right],map.getOrDefault(fruits[right],0) + 1);
			while (left < right && map.size() > 2) {
				map.put(fruits[left],map.get(fruits[left]) - 1);
				if (map.get(fruits[left]) == 0) {
					map.remove(fruits[left]);
				}
				left++;
			}
			if ((right - left + 1) > max) {
				max = right - left + 1;
				fruitCount = 0;
				for (Map.Entry<Integer, Integer> key: map.entrySet()) {	
					fruitCount += key.getValue();
				}
			}
			right++;
		}
		return fruitCount;
	}
}