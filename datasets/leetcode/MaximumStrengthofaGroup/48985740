class Solution {
	long maxStrength(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int zeros = 0;
		int nve = 0;
		int maxNve = Integer.MIN_VALUE;
		int maxNveIdx = -1;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < 0) {
				nve++;
				if (maxNve < nums[i]) {
					maxNve = nums[i];
					maxNveIdx = i;
				}
			} 
			else if (nums[i] == 0) {
				zeros++;
			}
		}
		if (zeros + nve == nums.length && nve <= 1 && zeros > 0) {
			return 0;
		}
		long product = 1;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] != 0 && (nve % 2 == 0 || maxNveIdx != i)) {
				product *= nums[i];
			}
		}
		return product;
	}
}