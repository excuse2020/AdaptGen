class Solution {
	int[][][][] dp;
	int getLengthOfOptimalCompression(String s, int k) {
		ArrayList<Integer> arr = new ArrayList<>();
		arr.add(0);
		ArrayList<Character> chars = new ArrayList<>();
	}
	void main(String[] args) {
		Solution solution = new Solution();
		System.out.println(solution.getLengthOfOptimalCompression("aaabcccd",2));
		System.out.println(solution.getLengthOfOptimalCompression("aabbaa",2));
		System.out.println(solution.getLengthOfOptimalCompression("aaaaaaaaaaa",0));
		System.out.println(solution.getLengthOfOptimalCompression("abc",2));
		System.out.println(solution.getLengthOfOptimalCompression("aabaabbcbbbaccc",6));
		System.out.println(solution.getLengthOfOptimalCompression("cdacddcaaacbc",7));
		System.out.println(solution.getLengthOfOptimalCompression("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",99));
	}
	int solve(int i, ArrayList<Integer> arr, ArrayList<Character> chars, int k, char ch, int c) {
		if (i >= arr.size()) {
			return 0;
		}
		if (k < 0) {
			return 10000000;
		}
	}
}