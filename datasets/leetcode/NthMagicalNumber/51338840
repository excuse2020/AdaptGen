class Solution {
	int nthMagicalNumber(int n, int a, int b) {
		int A = a;
		int B = b;
		long mod = (long) (Math.pow(10,9) + 7);
		long start = Math.min(a,b);
		long end = (long) n * Math.min(a,b);
		while (B > 0) {
			int tmp = A;
			A = B;
			B = tmp % B;
		}
		long lcm = (a * b) / A;
		long mid;
		while (start < end) {
			mid = start + (end - start) / 2;
			if (mid / a + mid / b - mid / lcm >= n) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return (int) (start % mod);
	}
}