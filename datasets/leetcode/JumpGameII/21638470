class Solution {
	int jump(int[] nums) {
		int n = nums.length;
		int[] dp = new int[n];
		Arrays.fill(dp,-1);
		return solve(nums,0,n - 1,dp);
	}
	int solve(int[] arr, int idx, int lastIdx, int[] dp) {
		if (idx == lastIdx) {
			return dp[idx] = 0;
		}
		if (dp[idx] != -1) {
			return dp[idx];
		}
		int res = Integer.MAX_VALUE;
		for (int i = 1; i <= arr[idx]; i++) {
			int s_res = Integer.MAX_VALUE;
			if (idx + i <= lastIdx) {
				s_res = Math.min(s_res,solve(arr,idx + i,lastIdx,dp));
			}
			if (s_res != Integer.MAX_VALUE && s_res + 1 < res) {
				res = s_res + 1;
			}
		}
		return dp[idx] = res;
	}
}