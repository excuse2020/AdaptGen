class Solution {
	void backtrack(List<List<Integer>> ans, List<Integer> help, int[] nums) {
		if (help.size() == nums.length) {
			ans.add(new ArrayList<>(help));
		} 
		else {
			for (int i = 0; i < nums.length; i++) {
				if (help.contains(nums[i])) {
					continue;
				}
				help.add(nums[i]);
				backtrack(ans,help,nums);
				help.remove(help.size() - 1);
			}
		}
	}
	List<List<Integer>> permute(int[] nums) {
		List<List<Integer>> ans = new ArrayList<>();
		backtrack(ans,new ArrayList<>(),nums);
		return ans;
	}
}