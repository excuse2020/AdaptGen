class Solution {
	String longestPalindrome(String s) {
		String reverse = new String();
		for (int i = 0; i < s.length(); i++) {
			reverse = s.charAt(i) + reverse;
		}
		int t = new int[s.length() + 1][s.length() + 1];
		int max = Integer.MIN_VALUE, endingIndex = -1, n = s.length();
		for (int i = 1; i < t.length; i++) {
			for (int j = 1; j < t[0].length; j++) {
				if (s.charAt(i - 1) == reverse.charAt(j - 1)) {
					t[i][j] = t[i - 1][j - 1] + 1;
				}
				if (t[i][j] > max && i - t[i][j] == n - j) {
					max = t[i][j];
					endingIndex = i;
				}
			}
		}
		if (endingIndex == -1) {
			return "";
		}
		return s.substring(endingIndex - max,endingIndex);
	}
}