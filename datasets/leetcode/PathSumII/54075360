class Solution {
	void parseTree(TreeNode root, int targetSum, int total, List<Integer> subList, List<List<Integer>> output) {
		if (root == null) {
			return;
		}
		total = total + root.val;
		subList.add(root.val);
		if (root.left == null && root.right == null && total == targetSum) {
			output.add(new ArrayList<>(subList));
		}
		parseTree(root.left,targetSum,total,subList,output);
		parseTree(root.right,targetSum,total,subList,output);
		subList.remove(subList.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> output = new ArrayList<>();
		parseTree(root,targetSum,0,new ArrayList<>(),output);
		return output;
	}
}