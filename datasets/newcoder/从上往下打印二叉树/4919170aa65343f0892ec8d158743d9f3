class Solution {
	ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
		ArrayList<Integer> res = new ArrayList();
		ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
		if (root == null) {
			return res;
		}
		traverse(root,temp,1);
		for (int i = 0; i < temp.size(); i++) {
			for (int j = 0; j < temp.get(i).size(); j++) {
				res.add(temp.get(i).get(j));
			}
		}
		return res;
	}
	void traverse(TreeNode root, ArrayList<ArrayList<Integer>> res, int depth) {
		if (root != null) {
			if (res.size() < depth) {
				ArrayList<Integer> row = new ArrayList();
				res.add(row);
				row.add(root.val);
			} 
			else {
				ArrayList<Integer> row = res.get(depth - 1);
				row.add(root.val);
			}
		} 
		else {
			return;
		}
		traverse(root.left,res,depth + 1);
		traverse(root.right,res,depth + 1);
	}
}