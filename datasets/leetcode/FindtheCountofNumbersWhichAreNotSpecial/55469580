class Solution {
	int nonSpecialCount(int l, int r) {
		int lim = (int) Math.sqrt(r);
		boolean prime = new boolean[lim + 1];
		Arrays.fill(prime,true);
		prime[0] = prime[1] = false;
		for (int i = 2; i * i <= lim; i++) {
			if (prime[i]) {
				for (int j = i * i; j <= lim; j += i) {
					prime[j] = false;
				}
			}
		}
		int count = 0;
		for (int i = 2; i <= lim; i++) {
			if (prime[i]) {
				int square = i * i;
				if (square >= l && square <= r) {
					count++;
				}
			}
		}
		return (r - l + 1 - count);
	}
}