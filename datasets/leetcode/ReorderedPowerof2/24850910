class Solution {
	boolean checkNumber(long n) {
		int i = 1;
		int data = 0;
		while (data <= n) {
			data = (int) Math.pow(2,i);
			String s = Integer.toString(data);
			char[] chars = s.toCharArray();
			Arrays.sort(chars);
			String sorted = new String(chars);
			StringBuilder sb = new StringBuilder(sorted);
			sb.reverse();
			long newData = Long.parseLong(sb.toString());
			if (newData == n) {
				return true;
			}
			i++;
		}
		return false;
	}
	boolean reorderedPowerOf2(int n) {
		if (n == 1) {
			return true;
		}
		String s = Integer.toString(n);
		int l = s.length();
		char[] chars = s.toCharArray();
		Arrays.sort(chars);
		String sorted = new String(chars);
		StringBuilder sb = new StringBuilder(sorted);
		sb.reverse();
		int sortedNumber = Integer.parseInt(sb.toString());
		return checkNumber((long) sortedNumber);
	}
}