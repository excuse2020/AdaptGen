class Solution {
	int check(int[] currPoints, int[] currCenter) {
		int x = currPoints[0] - currCenter[0];
		int y = currPoints[1] - currCenter[1];
		return x * x + y * y;
	}
	int[] countPoints(int[][] points, int[][] queries) {
		int n = queries.length;
		int[] ans = new int[n];
		for (int i = 0; i < n; i++) {
			int count = 0;
			int radiusSquare = queries[i][2] * queries[i][2];
			for (int pt = 0; pt < points.length; pt++) {
				int[] currPoints = points[pt];
				if (check(currPoints,queries[i]) <= radiusSquare) {
					count++;
				}
			}
			ans[i] = count;
		}
		return ans;
	}
}