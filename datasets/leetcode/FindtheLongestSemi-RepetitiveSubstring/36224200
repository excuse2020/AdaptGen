class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		int maxLen = 1;
		Set<String> ss = new HashSet<>();
		for (int i = 0; i < s.length(); i++) {
			for (int j = i + 1; j <= s.length(); j++) {
				String sub = s.substring(i,j);
				ss.add(sub);
			}
		}
		Collections.sort(new ArrayList<String>(ss),Comparator.comparingInt().reversed());
		for (String str: ss) {	
			if (repetitive(str)) {
				maxLen = Math.max(maxLen,str.length());
			}
		}
		return maxLen;
	}
	boolean repetitive(String str) {
		boolean flag = false;
		int i = 1;
		char c = str.charAt(i);
		int cd;
	}
}