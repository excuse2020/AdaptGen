class Solution {
	int semiOrderedPermutation(int[] nums) {
		if (nums == null || nums.length == 0) {
			return 0;
		}
		if (nums[0] == 1 && nums[nums.length - 1] == nums.length) {
			return 0;
		}
		int x_index_1 = 0, y_index_n = 0, n = nums.length;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				x_index_1 = i;
			} 
			else if (nums[i] == nums.length) {
				y_index_n = i;
			}
		}
		int sum = 0;
		if (x_index_1 < y_index_n) {
			sum = x_index_1 + (n - y_index_n);
		} 
		else if (x_index_1 > y_index_n) {
			sum = x_index_1 + (n - y_index_n) - 1;
		}
		return sum;
	}
}