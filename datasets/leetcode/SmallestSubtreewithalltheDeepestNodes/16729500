class Solution {
	TreeNode root1;
	int depth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int l = depth(root.left);
		int r = depth(root.right);
		int th = Math.max(l,r) + 1;
		return th;
	}
	int helper(TreeNode root, int level, int last) {
		if (root == null) {
			return last;
		}
		int l = helper(root.left,level,last + 1);
		int r = helper(root.right,level,last + 1);
		if (l == level && r == level) {
			root1 = root;
		}
		return Math.max(l,r);
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		int d = depth(root);
		helper(root,d,0);
		return root1;
	}
}