class Solution {
	int solve(int x, int y, int m, int n, int[][] dp) {
		if (x == m && y == n) {
			return 1;
		}
		if (dp[x][y] != 0) {
			return dp[x][y];
		}
		int count = 0;
		if (x + 1 <= m) {
			count += solve(x + 1,y,m,n,dp);
		}
		if (y + 1 <= n) {
			count += solve(x,y + 1,m,n,dp);
		}
		dp[x][y] = count;
		return count;
	}
	int uniquePaths(int m, int n) {
		int[][] dp = new int[m][n];
		return solve(0,0,m - 1,n - 1,dp);
	}
}