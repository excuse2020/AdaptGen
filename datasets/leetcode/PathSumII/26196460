class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	int target;
	void helper(TreeNode root, ArrayList<Integer> al, int sum) {
		ArrayList<Integer> temp = new ArrayList<>(al);
		temp.add(root.val);
		if (target == sum && root.left == null && root.right == null) {
			System.out.println(temp + " ");
			ans.add(new ArrayList<Integer>(temp));
		}
		if (root.left != null) {
			helper(root.left,temp,sum + root.left.val);
		}
		if (root.right != null) {
			helper(root.right,temp,sum + root.right.val);
		}
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		target = targetSum;
		if (root == null) {
			return ans;
		}
		helper(root,new ArrayList<>(),root.val);
		return ans;
	}
}