class Solution {
	void duplicateZeros(int[] arr) {
		if (arr == null || arr.length == 0) {
			return;
		}
		int len = arr.length;
		int zeros = 0, last = 0;
		for (int i = 0; i < len; i++) {
			int newPos = (zeros + i);
			if (newPos > len - 1) {
				last = i - 1;
				break;
			}
			if (arr[i] == 0) {
				zeros++;
			}
			arr[i] += newPos * 10;
		}
		for (int i = last; i >= 0; i--) {
			int newPos = arr[i] / 10;
			int newVal = arr[i] % 10;
			if (newVal == 0) {
				arr[newPos] = 0;
				if (newPos < len - 1) {
					arr[newPos + 1] = 0;
				}
			} 
			else {
				arr[newPos] = newVal;
			}
		}
		for (int i = last + 1; i < len; i++) {
			arr[i] = arr[i] % 10;
		}
	}
}