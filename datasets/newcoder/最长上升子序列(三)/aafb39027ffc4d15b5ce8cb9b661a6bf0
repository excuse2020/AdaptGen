class Solution {
	int[] LIS(int[] arr) {
		int[] tail = new int[arr.length];
		int[] dp = new int[arr.length];
		tail[0] = arr[0];
		int end = 0;
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] > tail[end]) {
				tail[++end] = arr[i];
				dp[i] = end;
			} 
			else {
				int l = 0;
				int r = end - 1;
				while (l <= r) {
					int mid = (l + r) / 2;
					if (arr[i] > tail[mid] && arr[i] <= tail[mid + 1]) {
						l = mid + 1;
						break;
					} 
					else if (arr[i] > tail[mid]) {
						l = mid + 1;
					} 
					else {
						r = mid - 1;
					}
				}
				tail[l] = arr[i];
				dp[i] = l;
			}
		}
		int[] res = new int[end + 1];
		int i = arr.length - 1;
		for (; i >= 0 && end >= 0; i--) {
			if (dp[i] == end) {
				res[end] = arr[i];
				end--;
			}
		}
		return res;
	}
}