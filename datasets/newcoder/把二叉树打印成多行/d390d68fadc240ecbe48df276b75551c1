class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		ArrayList<ArrayList<Integer>> lists = new ArrayList<>();
		if (pRoot == null) {
			return lists;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(pRoot);
		queue.offer(null);
		ArrayList<Integer> list = new ArrayList<>();
		while (!queue.isEmpty()) {
			TreeNode node = queue.poll();
			if (node == null) {
				if (!queue.isEmpty()) {
					queue.offer(null);
				}
				lists.add(list);
				list = new ArrayList<Integer>();
			} 
			else {
				if (node.left != null) {
					queue.offer(node.left);
				}
				if (node.right != null) {
					queue.offer(node.right);
				}
				list.add(node.val);
			}
		}
		return lists;
	}
}