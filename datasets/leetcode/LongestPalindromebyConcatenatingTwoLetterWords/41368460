class Solution {
	int longestPalindrome(String[] words) {
		int ans = 0;
		HashMap<String, Integer> map = new HashMap<>();
		for (String s: words) {	
			map.put(s,map.getOrDefault(s,0) + 1);
		}
		int c = 0;
		for (String s: map.keySet()) {	
			String s2 = reverse(s);
			if (s.equals(s2)) {
				int val = map.get(s);
				if (val % 2 != 0) {
					val -= 1;
					c = 1;
				}
				ans += 2 * val;
				map.put(s,0);
			} 
			else if (map.containsKey(s2)) {
				int freq = Math.min(map.get(s),map.get(s2));
				ans += (4 * freq);
				map.put(s,0);
				map.put(s2,0);
			}
		}
		return c == 1 ? ans + 2 : ans;
	}
	String reverse(String str) {
		StringBuilder sb = new StringBuilder(str);
		return sb.reverse().toString();
	}
}