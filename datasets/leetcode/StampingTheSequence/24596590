class Solution {
	boolean canWeReplace(int p, char[] tr, char[] s) {
		int i = 0;
	}
	int countOfStar(char[] tr) {
		int c = 0;
		int i = 0;
	}
	int[] movesToStamp(String stamp, String target) {
		char[] st = stamp.toCharArray();
		char[] tr = target.toCharArray();
		List<Integer> temp = new ArrayList<>();
		int[] visited = new int[tr.length];
		boolean starall = true;
		while (starall) {
			boolean replaced = false;
			for (int i = 0; i <= tr.length - st.length; i++) {
				if (visited[i] != 1 && canWeReplace(i,tr,st)) {
					replace(i,tr,st);
					replaced = true;
					int count = countOfStar(tr);
					visited[i] = 1;
					temp.add(i);
					if (count == tr.length) {
						starall = false;
						break;
					}
				}
			}
			if (!replaced) {
				return new int[0];
			}
		}
		int[] ans = new int[temp.size()];
		int c = temp.size() - 1;
		for (int i: temp) {	
			ans[c--] = i;
		}
		return ans;
	}
	void replace(int p, char[] tr, char[] s) {
		int i = 0;
	}
}