class Solution {
	List<List<Integer>> al = new ArrayList<>();
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		solve(root,"",0,targetSum);
		return al;
	}
	void solve(TreeNode root, String s, int sum, int target) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			sum = sum + root.val;
			s = s + ",";
			if (sum == target) {
				String[] str = s.split(",");
				List<String> a = new ArrayList<>(Arrays.asList(str));
				List<Integer> ans = new ArrayList<>();
				for (int i = 1; i < a.size(); i++) {
					ans.add(Integer.valueOf(a.get(i)));
				}
				al.add(ans);
			}
			return;
		}
		solve(root.left,s + ",",sum + root.val,target);
		solve(root.right,s + ",",sum + root.val,target);
	}
}