class Solution {
	int numSubmatrixSumTarget(int[][] matrix, int target) {
		int r = matrix.length;
		int c = matrix[0].length;
		int res = 0;
		for (int i = 0; i < r; i++) {
			for (int j = 1; j < c; j++) {
				matrix[i][j] += matrix[i][j - 1];
			}
		}
		for (int sp = 0; sp < c; sp++) {
			for (int j = sp; j < c; j++) {
				int sum = 0;
				HashMap<Integer, Integer> map = new HashMap<>();
				map.put(0,1);
				for (int row = 0; row < r; row++) {
					sum += matrix[row][j] - (sp > 0 ? matrix[row][sp - 1] : 0);
					if (map.containsKey(sum - target)) {
						res += map.get(sum - target);
					}
					map.put(sum,map.getOrDefault(sum,0) + 1);
				}
			}
		}
		return res;
	}
}