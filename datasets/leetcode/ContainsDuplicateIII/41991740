class Solution {
	boolean containsNearbyAlmostDuplicate(int[] nums, int indexDiff, int valueDiff) {
		if (nums == null || nums.length < 2 || indexDiff <= 0) {
			return false;
		}
		TreeSet<Long> set = new TreeSet<>();
		for (int i = 0; i < nums.length; i++) {
			long num = (long) nums[i];
			Long successor = set.ceiling(num);
			if (successor != null && successor - num <= valueDiff) {
				return true;
			}
			Long predecessor = set.floor(num);
			if (predecessor != null && num - predecessor <= valueDiff) {
				return true;
			}
			set.add(num);
			if (i >= indexDiff) {
				set.remove((long) nums[i - indexDiff]);
			}
		}
		return false;
	}
}