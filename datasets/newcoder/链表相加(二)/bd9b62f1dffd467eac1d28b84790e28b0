class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode num1 = reverse(head1);
		ListNode num2 = reverse(head2);
		ListNode hair = new ListNode(0);
		ListNode pointer = hair;
		int res = 0;
		while (num1 != null || num2 != null) {
			int sum = 0;
			if (num1 == null) {
				sum = res + num2.val;
				num2 = num2.next;
			} 
			else if (num2 == null) {
				sum = res + num1.val;
				num1 = num1.next;
			} 
			else {
				sum = res + num1.val;
				num1 = num1.next;
				num2 = num2.next;
			}
			int val = sum % 10;
			res = sum / 10;
			ListNode current = new ListNode(val);
			pointer.next = current;
			pointer = pointer.next;
		}
		if (res > 0) {
			pointer.next = new ListNode(res);
		}
		return reverse(hair.next);
	}
	ListNode reverse(ListNode head) {
		ListNode pre = null;
		ListNode current = head;
		while (current != null) {
			ListNode next = current.next;
			current.next = pre;
			pre = current;
			current = next;
		}
		return pre;
	}
}