class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		int fuel = startFuel;
		int ans = 0;
		for (int i = 0; i < stations.length; i++) {
			while (!pq.isEmpty() && fuel < stations[i][0]) {
				fuel += pq.poll();
				ans++;
			}
			if (stations[i][0] > fuel) {
				return -1;
			}
			pq.offer(stations[i][1]);
		}
		while (!pq.isEmpty() && fuel < target) {
			fuel += pq.poll();
			ans++;
		}
		if (fuel >= target) {
			return ans;
		}
		return -1;
	}
}