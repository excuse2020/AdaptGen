class Solution {
	int canEatInTime(int[] piles, int mid) {
		int hours = 0;
		for (int pile: piles) {	
			hours += Math.ceil((double) pile / mid);
		}
		return hours;
	}
	int minEatingSpeed(int[] piles, int h) {
		int minspeed = 1;
		int maxspeed = Integer.MIN_VALUE;
		for (int pile: piles) {	
			maxspeed = Math.max(pile,maxspeed);
		}
		while (minspeed < maxspeed) {
			int mid = minspeed + (maxspeed - minspeed) / 2;
			if (canEatInTime(piles,mid) > h) {
				minspeed = mid + 1;
			} 
			else {
				maxspeed = mid;
			}
		}
		return minspeed;
	}
}