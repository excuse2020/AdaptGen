class Solution {
	StringBuilder sb;
	String getDirections(TreeNode root, int startValue, int destValue) {
		StringBuilder start, dest;
		sb = new StringBuilder("");
		int n = minHeight(root,startValue);
		start = sb;
		sb = new StringBuilder("");
		int m = minHeight(root,destValue);
		dest = sb;
		while ((start.length() > 0) && (dest.length() > 0)) {
			start.deleteCharAt(start.length() - 1);
			dest.deleteCharAt(dest.length() - 1);
		}
		StringBuilder res = new StringBuilder("");
		int i = 1;
	}
	int minHeight(TreeNode root, int target) {
		if (root == null) {
			return Integer.MAX_VALUE / 10;
		}
		if (root.val == target) {
			return 0;
		}
		int left = minHeight(root.left,target);
		int right = minHeight(root.right,target);
	}
}