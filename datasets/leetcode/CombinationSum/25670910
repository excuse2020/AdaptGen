class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		finalCombo(0,candidates,target,ans,new ArrayList<>());
		return ans;
	}
	void finalCombo(int ind, int[] candidates, int target, List<List<Integer>> ans, List<Integer> ds) {
		if (ind == candidates.length || target == 0) {
			if (target == 0) {
				ans.add(new ArrayList<>(ds));
			}
			return;
		}
		if (candidates[ind] <= target) {
			ds.add(candidates[ind]);
			finalCombo(ind,candidates,target - candidates[ind],ans,ds);
			ds.remove(ds.size() - 1);
		}
		finalCombo(ind + 1,candidates,target,ans,ds);
	}
}