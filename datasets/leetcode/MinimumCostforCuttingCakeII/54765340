class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		int i = m - 2;
		int j = n - 2;
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int r = 1;
		int c = 1;
		long ans = 0;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[i] > verticalCut[j]) {
				ans += horizontalCut[i] * c;
				r++;
				i--;
			} 
			else {
				ans += verticalCut[j] * r;
				j--;
				c++;
			}
		}
		while (i >= 0) {
			ans += horizontalCut[i] * c;
			r++;
			i--;
		}
		while (j >= 0) {
			ans += verticalCut[j] * r;
			c++;
			j--;
		}
		return ans;
	}
}