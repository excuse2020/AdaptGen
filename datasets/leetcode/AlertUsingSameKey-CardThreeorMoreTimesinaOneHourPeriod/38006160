class Solution {
	List<String> alertNames(String[] keyName, String[] keyTime) {
		Map<String, List<Integer>> logTimes = new HashMap<>();
		for (int i = 0; i < keyTime.length; i++) {
			String name = keyName[i];
			String timeStr = keyTime[i];
			int time = getMinutes(timeStr);
			logTimes.putIfAbsent(name,new ArrayList<>());
			logTimes.get(name).add(time);
		}
		TreeSet<String> overUsedNames = new TreeSet<>();
		for (String name: logTimes.keySet()) {	
			List<Integer> times = logTimes.get(name);
			Collections.sort(times);
			for (int i = 0; i < times.size() - 2; i++) {
				int thirdLogTime = times.get(i + 2);
				int currLogTime = times.get(i);
				if (thirdLogTime - currLogTime <= 60) {
					overUsedNames.add(name);
					break;
				}
			}
		}
		return new ArrayList<>(overUsedNames);
	}
	int getMinutes(String time) {
		String[] timeArr = time.split(":");
		int hour = Integer.valueOf(timeArr[0]);
		int minute = Integer.valueOf(timeArr[1]);
		return hour * 60 + minute;
	}
}