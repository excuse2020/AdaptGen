class Solution {
	int result = 0;
	void dfs(List<String> arr, String path, int idx) {
		boolean unique = isUnique(path);
		if (unique) {
			result = Math.max(path.length(),result);
		}
		if (idx == arr.size() || !unique) {
			return;
		}
		for (int i = idx; i < arr.size(); i++) {
			dfs(arr,path + arr.get(i),i + 1);
		}
	}
	boolean isUnique(String path) {
		Set<Character> s = new HashSet<>();
		for (char c: path.toCharArray()) {	
			if (s.contains(c)) {
				return false;
			}
			s.add(c);
		}
		return true;
	}
	int maxLength(List<String> arr) {
		if (arr == null || arr.size() == 0) {
			return 0;
		}
		dfs(arr,"",0);
		return result;
	}
}