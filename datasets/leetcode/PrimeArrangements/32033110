class Solution {
	int N = (int) (Math.pow(10,9) + 7);
	int numPrimeArrangements(int n) {
		var sieve = new boolean[n + 1];
		int cnt = 0;
		for (int i = 2; i <= n; i++) {
			if (!sieve[i]) {
				for (int j = i; j <= n; sieve[j] = true, j += i) {
				}
				cnt++;
			}
		}
		long primePermutations = 1, nonPrimePermutations = 1;
		for (int i = 1; i <= cnt; primePermutations *= i, primePermutations %= N, i++) {
		}
		for (int i = 1; i <= n - cnt; nonPrimePermutations *= i, nonPrimePermutations %= N, i++) {
		}
		return (int) ((primePermutations * nonPrimePermutations) % N);
	}
}