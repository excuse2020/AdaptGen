class Solution {
	int maxIncreaseKeepingSkyline(int[][] nums) {
		int sum = 0;
		for (int a = 0; a < nums.length; a++) {
			int colMax = Integer.MIN_VALUE;
			for (int k = 0; k < nums.length; k++) {
				if (nums[k][a] > colMax) {
					colMax = nums[k][a];
				}
			}
			for (int i = 0; i < nums.length; i++) {
				int rowMax = Integer.MIN_VALUE;
				for (int j = 0; j < nums.length; j++) {
					if (nums[i][j] > rowMax) {
						rowMax = nums[i][j];
					}
				}
				int secondMax = 0;
				if (rowMax > colMax) {
					secondMax = colMax;
				} 
				else if (colMax > rowMax) {
					secondMax = rowMax;
				} 
				else {
					secondMax = rowMax;
				}
				if (nums[i][a] < secondMax) {
					sum = sum + (secondMax - nums[i][a]);
				}
			}
		}
		return sum;
	}
}