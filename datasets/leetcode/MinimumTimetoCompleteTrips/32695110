class Solution {
	long binarySearch(long lo, long hi, int time, int totalTrips) {
		while (lo < hi) {
			long mid = (lo + hi) / 2, sum = 0;
			for (int i: time) {	
				sum += (mid / i);
			}
			if (sum >= totalTrips) {
				hi = mid;
			} 
			else {
				lo = mid + 1;
			}
		}
		return hi;
	}
	long minimumTime(int[] time, int totalTrips) {
		Arrays.sort(time);
		long hi = (long) Arrays.stream(time).max().getAsInt();
		return binarySearch(0,hi * (long) totalTrips,time,totalTrips);
	}
}