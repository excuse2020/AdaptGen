class Solution {
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (nums[i] < 10 && nums[j] < 10) {
					if (isCoPrime(nums[i],nums[j])) {
						count++;
					}
				} 
				else if (nums[i] > 10 && nums[j] > 10) {
					String firstDigit = nums[i] + "";
					String lastDigit = nums[j] + "";
					int x = Integer.parseInt(firstDigit.charAt(0) + "");
					int y = Integer.parseInt(lastDigit.charAt(lastDigit.length() - 1) + "");
					if (isCoPrime(x,y)) {
						count++;
					}
				} 
				else if (nums[i] > 10 && nums[j] < 10) {
					String firstDigit = nums[i] + "";
					int x = Integer.parseInt(firstDigit.charAt(0) + "");
					int y = nums[j];
					if (isCoPrime(x,y)) {
						count++;
					}
				} 
				else if (nums[i] < 10 && nums[j] > 10) {
					String lastDigit = nums[j] + "";
					int y = Integer.parseInt(lastDigit.charAt(lastDigit.length() - 1) + "");
					int x = nums[i];
					if (isCoPrime(x,y)) {
						count++;
					}
				}
			}
		}
		return count;
	}
	boolean isCoPrime(int x, int y) {
		int r = 0;
		int a = x > y ? x : y;
		int b = x < y ? x : y;
		r = b;
		while (a % b != 0) {
			r = a % b;
			a = b;
			b = r;
		}
		if (r == 1) {
			return true;
		}
		return false;
	}
}