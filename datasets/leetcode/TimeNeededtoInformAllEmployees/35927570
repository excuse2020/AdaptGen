class Solution {
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		List<Integer>[] graph = new ArrayList[n];
		for (int i = 0; i < n; i++) {
			graph[i] = new ArrayList();
		}
		for (int i = 0; i < n; i++) {
			if (manager[i] != -1) {
				graph[manager[i]].add(i);
			}
		}
		Queue<int[]> q = new LinkedList();
		q.add(new int{headID, 0});
		int ans = 0;
		while (!q.isEmpty()) {
			int size = q.size();
			while (size-- > 0) {
				int[] top = q.poll();
				int u = top[0], w = top[1];
				ans = Math.max(ans,w);
				for (int v: graph[u]) {	
					q.add(new int{v, w + informTime[u]});
				}
			}
		}
		return ans;
	}
}