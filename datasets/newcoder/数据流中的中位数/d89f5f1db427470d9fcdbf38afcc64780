class Solution {
	int N = 0;
	PriorityQueue<Integer> left = new Comparator<Integer>();
	PriorityQueue<Integer> right = new PriorityQueue<>();
	Double GetMedian() {
		if ((N & 1) == 0) {
			return (left.peek() + right.peek()) / 2.0;
		} 
		else {
			return (double) left.peek();
		}
	}
	void Insert(Integer num) {
		if ((N & 1) == 0) {
			right.offer(num);
			left.offer(right.poll());
		} 
		else {
			left.offer(num);
			right.offer(left.poll());
		}
		N++;
	}
}