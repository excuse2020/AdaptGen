class Solution {
	void Union(int ch1, int ch2, int[] parent) {
		int p_ch1 = find(ch1,parent);
		int p_ch2 = find(ch2,parent);
		if (p_ch1 != p_ch2) {
			int max_p = Math.max(p_ch1,p_ch2);
			int min_p = Math.min(p_ch1,p_ch2);
			parent[max_p] = min_p;
		}
	}
	int find(int ch, int[] parent) {
		if (parent[ch] == -1) {
			return ch;
		}
		return find(parent[ch],parent);
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		int parent = new int[26];
		for (int i = 0; i < 26; i++) {
			parent[i] = -1;
		}
		int n = s1.length();
		int i = 0;
	}
}