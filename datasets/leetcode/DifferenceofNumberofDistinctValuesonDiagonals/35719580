class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int cl = grid[0].length;
		int rw = grid.length;
		int[][] arr = new int[grid.length][grid[0].length];
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				HashSet<Integer> stl = new HashSet<>();
				HashSet<Integer> sbr = new HashSet<>();
				int r = i + 1;
				int c = j + 1;
				while (r < rw && c < cl) {
					sbr.add(grid[r][c]);
					r++;
					c++;
				}
				int r1 = i - 1;
				int c1 = j - 1;
				while (r1 >= 0 && c1 >= 0) {
					stl.add(grid[r1][c1]);
					r1--;
					c1--;
				}
				arr[i][j] = Math.abs(stl.size() - sbr.size());
			}
		}
		return arr;
	}
}