class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer>((o1, o2) -> {o2.compareTo(o1)});
		ArrayList<Integer> res = new ArrayList<Integer>();
		if (num.length == 0 || size <= 0 || size > num.length) {
			return res;
		}
		for (int i = 0; i < size; i++) {
			maxHeap.add(num[i]);
		}
		res.add(maxHeap.peek());
		int count = size;
		while (count < num.length) {
			maxHeap.remove(num[count - size]);
			maxHeap.add(num[count]);
			count++;
			res.add(maxHeap.peek());
		}
		return res;
	}
}