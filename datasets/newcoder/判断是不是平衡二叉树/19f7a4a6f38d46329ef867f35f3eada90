class Solution {
	boolean IsBalanced_Solution(TreeNode pRoot) {
		if (pRoot == null) {
			return true;
		}
		int left = deep(pRoot.left);
		int right = deep(pRoot.right);
		int r = Math.abs(left - right);
		return r <= 1 && IsBalanced_Solution(pRoot.left) && IsBalanced_Solution(pRoot.right) ? true : false;
	}
	int deep(TreeNode pRoot) {
		if (pRoot == null) {
			return 0;
		}
		int r = 1 + Math.max(deep(pRoot.left),deep(pRoot.right));
		return r;
	}
}