class Solution {
	TreeNode createTree(List<Integer> list, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = (start + end) / 2;
		TreeNode newNode = new TreeNode(list.get(mid));
		newNode.left = createTree(list,start,mid - 1);
		newNode.right = createTree(list,mid + 1,end);
		return newNode;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> list = new ArrayList<>();
		while (head != null) {
			list.add(head.val);
			head = head.next;
		}
		int start = 0, end = list.size() - 1;
		return createTree(list,start,end);
	}
}