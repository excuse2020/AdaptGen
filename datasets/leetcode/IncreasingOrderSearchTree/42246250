class Solution {
	void helper(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		helper(root.left,list);
		list.add(root.val);
		helper(root.right,list);
	}
	TreeNode increasingBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		helper(root,list);
		return makeBST(list);
	}
	TreeNode makeBST(List<Integer> list) {
		TreeNode temp1 = new TreeNode(-1);
		TreeNode newRoot = temp1;
		for (int i = 0; i < list.size(); i++) {
			TreeNode temp2 = new TreeNode(list.get(i));
			temp1.right = temp2;
			temp1 = temp1.right;
		}
		return newRoot.right;
	}
}