class Solution {
	int alternatingSubarray(int[] nums) {
		int max_result = 0;
		for (int i = 0; i < nums.length; i++) {
			ArrayList<Integer> ans = new ArrayList<>();
			for (int j = i; j < nums.length; j++) {
				if (i == j) {
					ans.add(nums[j]);
				} 
				else if (ans.size() % 2 != 0 && nums[j] - ans.get(ans.size() - 1) == 1) {
					ans.add(nums[j]);
				} 
				else if (ans.size() % 2 == 0 && nums[j] - ans.get(ans.size() - 1) == -1) {
					ans.add(nums[j]);
				} 
				else {
					break;
				}
			}
			max_result = Math.max(max_result,ans.size());
		}
		if (max_result == 1) {
			return -1;
		} 
		else {
			return max_result;
		}
	}
}