class Solution {
	StringBuilder stb = new StringBuilder();
	TreeNode LCA(TreeNode root, int p, int q) {
		if (root == null) {
			return null;
		}
		if (root.val == p || root.val == q) {
			return root;
		}
		TreeNode left = LCA(root.left,p,q);
		TreeNode right = LCA(root.right,p,q);
		if (left == null) {
			return right;
		} 
		else if (right == null) {
			return left;
		} 
		else {
			return root;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		if (root == null) {
			return "";
		}
		TreeNode LCAnode = LCA(root,startValue,destValue);
		pathfinder(LCAnode,stb,startValue);
		String left = stb.toString();
		stb.setLength(0);
		pathfinder(LCAnode,stb,destValue);
		String right = stb.toString();
		int i = 0;
	}
	boolean pathfinder(TreeNode LCA, StringBuilder stb, int value) {
		if (LCA == null) {
			return false;
		}
		if (LCA.val == value) {
			return true;
		}
	}
}