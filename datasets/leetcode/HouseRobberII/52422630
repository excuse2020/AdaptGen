class Solution {
	int calculateLoots(int[] nums, int startIndex, int endIndex) {
		int secondPrevious = 0;
		int previous = 0;
		int current = previous;
		for (int i = startIndex; i < endIndex; i++) {
			current = Math.max(secondPrevious + nums[i],previous);
			secondPrevious = previous;
			previous = current;
		}
		return current;
	}
	int rob(int[] nums) {
		if (nums.length < 2) {
			return nums[0];
		}
		int skipLastHouseLoots = calculateLoots(nums,0,nums.length - 1);
		int skipFirstHouseLoots = calculateLoots(nums,1,nums.length);
		return Math.max(skipLastHouseLoots,skipFirstHouseLoots);
	}
}