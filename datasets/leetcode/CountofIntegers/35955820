class Solution {
	int mod = 1000_000_007;
	int count(String num1, String num2, int min_sum, int max_sum) {
		int[][] dp = new int[23][max_sum + 1];
		for (int i = 0; i < 10 && i <= max_sum; i++) {
			dp[0][i] = 1;
		}
		for (int i = 1; i < 23; i++) {
			dp[i][0] = dp[i - 1][0];
			for (int j = 1; j <= max_sum; j++) {
				for (int k = 0; k < 10; k++) {
					if (j - k >= 0) {
						dp[i][j] = (dp[i][j] + dp[i - 1][j - k]) % mod;
					}
				}
			}
		}
		return (((helper(num2,max_sum,dp,true) - helper(num2,min_sum - 1,dp,true)) % mod) + mod) % mod;
	}
	int helper(String num, int maxSum, int[][] dp, boolean flag) {
		int n = num.length();
		int[] preSum = new int[n + 1];
		char[] chars = num.toCharArray();
		int i = 0;
	}
}