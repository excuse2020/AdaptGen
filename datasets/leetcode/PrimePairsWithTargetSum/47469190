class Solution {
	boolean[] primes;
	void findAllPrimes(int n) {
		primes = new boolean[n + 1];
		Arrays.fill(primes,true);
		primes[0] = false;
		primes[1] = false;
		for (int i = 2; i < Math.sqrt(n); i++) {
			for (int p = 2; p < n; p++) {
				int out = p * i;
				if (out > n) {
					break;
				}
				primes[out] = false;
			}
		}
	}
	List<List<Integer>> findPrimePairs(int n) {
		findAllPrimes(n);
		List<List<Integer>> lst = new LinkedList<>();
		for (int i = 1; i <= n / 2; i++) {
			int y = n - i;
			if (primes[i] && primes[y]) {
				lst.add(List.of(i,y));
			}
		}
		return lst;
	}
}