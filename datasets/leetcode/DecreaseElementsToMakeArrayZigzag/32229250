class Solution {
	int getMinNumberOfMoves(int[] nums) {
		int minCondTwo = 0, minCondOne = 0;
		int onLeft, onRight;
		for (int i = 0; i < nums.length; i++) {
			if (i % 2 == 0) {
				onLeft = i == 0 ? 0 : nums[i - 1] <= nums[i] ? nums[i] + 1 - nums[i - 1] : 0;
				onRight = i == nums.length - 1 ? 0 : nums[i] >= nums[i + 1] ? nums[i] + 1 - nums[i + 1] : 0;
				minCondTwo += Math.max(onLeft,onRight);
			} 
			else {
				onLeft = nums[i - 1] > nums[i] ? 0 : nums[i] + 1 - nums[i - 1];
				onRight = i == nums.length - 1 ? 0 : nums[i + 1] > nums[i] ? 0 : nums[i] + 1 - nums[i + 1];
				minCondOne += Math.max(onLeft,onRight);
			}
		}
		return Math.min(minCondOne,minCondTwo);
	}
	int movesToMakeZigzag(int[] nums) {
		int moves = 0;
		if (nums.length > 2) {
			moves = getMinNumberOfMoves(nums);
		} 
		else if (nums.length == 2) {
			moves = nums[0] != nums[1] ? 0 : 1;
		}
		return moves;
	}
}