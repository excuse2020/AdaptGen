class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int n = grid.length, ans = 0;
		int[] mr = new int[n];
		int[] mc = new int[n];
		for (int i = 0; i < n; i++) {
			int mx1 = Integer.MIN_VALUE, mx2 = Integer.MIN_VALUE;
			for (int j = 0; j < n; j++) {
				mx1 = Math.max(mx1,grid[i][j]);
				mx2 = Math.max(mx2,grid[j][i]);
			}
			mr[i] = mx1;
			mc[i] = mx2;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] != mr[i] && grid[i][j] != mc[j]) {
					ans += Math.min(mr[i],mc[j]) - grid[i][j];
				}
			}
		}
		return ans;
	}
}