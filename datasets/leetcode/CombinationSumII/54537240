class Solution {
	List<List<Integer>> combinationSum2(int[] arr, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(arr);
		solve(arr,0,ans,target,new ArrayList<>());
		return ans;
	}
	void solve(int[] arr, int ind, List<List<Integer>> res, int target, List<Integer> ds) {
		if (target == 0) {
			res.add(new ArrayList<>(ds));
			return;
		}
		for (int i = ind; i < arr.length; i++) {
			if (i != ind && arr[i] == arr[i - 1]) {
				continue;
			}
			if (target >= arr[i]) {
				ds.add(arr[i]);
				solve(arr,i + 1,res,target - arr[i],ds);
				ds.remove(ds.size() - 1);
			}
		}
	}
}