class Solution {
	int getSuccessfulPairs(int spell, int[] potions, long success) {
		int left = 0;
		int right = potions.length - 1;
		int count = 0;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			if ((long) spell * potions[mid] >= success) {
				count = potions.length - mid;
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return count;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int[] pairs = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			int spell = spells[i];
			pairs[i] = getSuccessfulPairs(spell,potions,success);
		}
		return pairs;
	}
}