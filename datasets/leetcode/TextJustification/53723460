class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		List<String> result = new ArrayList<>();
		int index = 0;
		while (index < words.length) {
			int totalChars = words[index].length();
			int last = index + 1;
			while (last < words.length) {
				if (totalChars + 1 > maxWidth) {
					break;
				}
				totalChars += 1 + words[last].length();
				last++;
			}
			StringBuilder sb = new StringBuilder();
			int diff = last - index;
			if (last == words.length || diff == 0) {
				for (int i = index; i < last; i++) {
					sb.append(words[i]);
					if (i != last - 1) {
						sb.append(" ");
					}
				}
				for (int i = sb.length(); i < maxWidth; i++) {
					sb.append(" ");
				}
			} 
			else {
				int spaces = (maxWidth - totalChars) / diff;
				int extraSpaces = (maxWidth - totalChars) % diff;
				for (int i = index; i < last; i++) {
					sb.append(words[i]);
					if (i != last - 1) {
						for (int j = 0; j <= (spaces + ((i - index) < extraSpaces ? 1 : 0)); j++) {
							sb.append(" ");
						}
					}
				}
			}
			result.add(sb.toString());
			index = last;
		}
		return result;
	}
}