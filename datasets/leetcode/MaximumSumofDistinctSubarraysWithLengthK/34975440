class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long sum = 0;
		long max = 0;
		int start = 0;
		Set<Integer> set = new HashSet<>();
		for (int end = 0; end < nums.length; end++) {
			sum += nums[end];
			while (set.contains(nums[end])) {
				sum -= nums[start];
				set.remove(nums[start]);
				start++;
			}
			if (end - start + 1 == k) {
				max = Math.max(max,sum);
				sum -= nums[start];
				set.remove(nums[start]);
				start++;
			}
			set.add(nums[end]);
		}
		return max;
	}
}