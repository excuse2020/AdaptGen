class Solution {
	int minPathCost(int[][] grid, int[][] moveCost) {
		int m = grid.length;
		int n = grid[0].length;
		int[][] dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			Arrays.fill(dp[i],Integer.MAX_VALUE);
		}
		for (int i = m - 1; i >= 0; i--) {
			int min = Integer.MAX_VALUE;
			for (int j = 0; j < n; j++) {
				if (i == m - 1) {
					dp[i][j] = grid[i][j];
					continue;
				} 
				else {
					int[] arr = moveCost[grid[i][j]];
					for (int k = 0; k < arr.length; k++) {
						dp[i][j] = Math.min(dp[i][j],grid[i][j] + arr[k]);
					}
				}
			}
		}
		int ans = Integer.MAX_VALUE;
		for (int j = 0; j < n; j++) {
			ans = Math.min(ans,dp[0][j]);
		}
		return ans;
	}
}