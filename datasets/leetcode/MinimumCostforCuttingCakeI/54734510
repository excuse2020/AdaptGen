class Solution {
	int minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int totalCost = 0;
		int horizontal_segments = 1;
		int vertical_segments = 1;
		int h_index = horizontalCut.length - 1;
		int v_index = verticalCut.length - 1;
		while (h_index >= 0 || v_index >= 0) {
			if ((h_index >= 0 && (v_index < 0 || horizontalCut[h_index] > verticalCut[v_index]))) {
				totalCost += (vertical_segments * horizontalCut[h_index]);
				horizontal_segments++;
				h_index--;
			} 
			else {
				totalCost += (horizontal_segments * verticalCut[v_index]);
				vertical_segments++;
				v_index--;
			}
		}
		return totalCost;
	}
}