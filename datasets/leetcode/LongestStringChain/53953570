class Solution {
	int longestStrChain(String[] words) {
		int n = words.length;
		HashMap<String, Integer> hm = new HashMap<>();
		for (String s: words) {	
			hm.put(s,1);
		}
		Arrays.sort(words,(a, b) -> {Integer.compare(a.length(),b.length())});
		int maxlen = 0;
		for (int i = 0; i < words.length; i++) {
			String word = words[i];
			for (int j = 0; j < word.length(); j++) {
				StringBuilder sb = new StringBuilder(word);
				String key = (sb.deleteCharAt(j)).toString();
				if (hm.containsKey(key) && (hm.get(word) < (hm.get(key) + 1))) {
					hm.put(word,hm.get(key) + 1);
				}
			}
			maxlen = Math.max(maxlen,hm.get(word));
		}
		return maxlen;
	}
}