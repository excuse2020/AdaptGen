class Solution {
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int k) {
		ArrayList<Integer> list = new ArrayList<>();
		if (input == null || input.length == 0 || k > input.length || k == 0) {
			return list;
		}
		int[] arr = new int[k + 1];
		for (int i = 1; i < k + 1; i++) {
			arr[i] = input[i - 1];
		}
		buildMaxHeap(arr,k + 1);
		for (int i = k; i < input.length; i++) {
			if (input[i] < arr[1]) {
				arr[1] = input[i];
				adjustDown(arr,1,k + 1);
			}
		}
		for (int i = 1; i < arr.length; i++) {
			list.add(arr[i]);
		}
		return list;
	}
	void adjustDown(int[] arr, int k, int length) {
		arr[0] = arr[k];
		for (int i = 2 * k; i <= length; i *= 2) {
			if (i < length - 1 && arr[i] < arr[i + 1]) {
				i++;
			}
			if (i > length - 1 || arr[0] >= arr[i]) {
				break;
			} 
			else {
				arr[k] = arr[i];
				k = i;
			}
		}
		arr[k] = arr[0];
	}
	void buildMaxHeap(int[] arr, int length) {
		if (arr == null || arr.length == 0 || arr.length == 1) {
			return;
		}
		for (int i = (length - 1) / 2; i > 0; i--) {
			adjustDown(arr,i,arr.length);
		}
	}
}