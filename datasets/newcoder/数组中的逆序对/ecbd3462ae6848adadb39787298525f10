class Solution {
	int res = 0;
	int InversePairs(int[] array) {
		sort(array,0,array.length - 1);
		return res;
	}
	void merge(int[] array, int l, int mid, int r) {
		int i = l;
		int j = mid + 1;
		int t = 0;
		int[] temp = new int[r - l + 1];
		while (i <= mid && j <= r) {
			if (array[i] <= array[j]) {
				temp[t++] = array[i++];
			} 
			else {
				res += (mid - i + 1);
				res = res % 1000000007;
				temp[t++] = array[j++];
			}
		}
		while (i <= mid) {
			temp[t++] = array[i++];
		}
		while (j <= r) {
			temp[t++] = array[j++];
		}
		System.arraycopy(temp,0,array,l,temp.length);
	}
	void sort(int[] array, int l, int r) {
		if (array.length == 0 || l == r) {
			return;
		}
		int mid = l + (r - l) / 2;
		sort(array,l,mid);
		sort(array,mid + 1,r);
		merge(array,l,mid,r);
	}
}