class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null || pHead2 == null) {
			return null;
		}
		if (pHead1 == pHead2) {
			return pHead1;
		}
		Stack<ListNode> visited1 = new Stack<ListNode>();
		Stack<ListNode> visited2 = new Stack<ListNode>();
		ListNode pointer1 = pHead1;
		while (pointer1 != null) {
			visited1.push(pointer1);
			pointer1 = pointer1.next;
		}
		ListNode pointer2 = pHead2;
		while (pointer2 != null) {
			visited2.push(pointer2);
			pointer2 = pointer2.next;
		}
		ListNode theLastSameNodeFromEnd = null;
		pointer1 = visited1.pop();
		pointer2 = visited2.pop();
		while (pointer1 == pointer2) {
			theLastSameNodeFromEnd = pointer1;
			if (visited1.empty() || visited2.empty()) {
				break;
			}
			pointer1 = visited1.pop();
			pointer2 = visited2.pop();
		}
		return theLastSameNodeFromEnd;
	}
}