class Solution {
	int hammingWt(int num) {
		int wt = 0;
		while (num > 0) {
			wt++;
			num = num & (num - 1);
		}
		return wt;
	}
	int[] sortByBits(int[] arr) {
		int n = arr.length;
		int result = new int[n];
		PriorityQueue<Integer> minHeap = new PriorityQueue<>(new Comparator<Integer>());
		int ind = 0;
		for (int i = 0; i < n; i++) {
			minHeap.add(arr[i]);
		}
		while (minHeap.size() > 0) {
			int num = minHeap.poll();
			result[ind++] = num;
		}
		return result;
	}
}