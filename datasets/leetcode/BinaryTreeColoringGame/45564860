class Solution {
	TreeNode c;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		c = null;
		recur(root,x);
		int l = dfs(c.left);
		int r = dfs(c.right);
		int z = n - l;
		if (z > n - z) {
			return true;
		}
		if (l > n - l) {
			return true;
		}
		if (r > n - r) {
			return true;
		}
		return false;
	}
	int dfs(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = dfs(root.left);
		int right = dfs(root.right);
		return left + right;
	}
	void recur(TreeNode root, int x) {
		if (root == null) {
			return;
		}
		if (root.val == x) {
			c = root;
			return;
		}
		recur(root.left,x);
		if (c != null) {
			return;
		}
		recur(root.right,x);
	}
}