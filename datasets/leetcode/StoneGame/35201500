class Solution {
	boolean stoneGame(int[] arr) {
		int n = arr.length, total = 0, k = n / 2, sum = 0, l = n - 1;
		int[] pref = new int[n / 2 + 1];
		int[] suf = new int[n / 2 + 1];
		for (int i = 0; i < k; i++) {
			sum += arr[i];
			pref[i] = sum;
			total += arr[i];
		}
		sum = 0;
		for (int i = 1; i <= k; i++) {
			sum += arr[l];
			suf[i] = sum;
			total += arr[l];
			l--;
		}
		int max = 0;
		for (int i = 0; i < k; i++) {
			int cur = pref[i] + suf[k - 1 - i];
			max = Math.max(max,cur);
		}
		max = Math.max(max,suf[k]);
		return max * 2 > total;
	}
}