class Solution {
	int minPathCost(int[][] grid, int[][] moveCost) {
		int row = grid.length;
		int col = grid[0].length;
		int result = (int) 1e8;
		int[][] dp = new int[row][col];
		for (int j = 0; j < col; j++) {
			dp[0][j] = grid[0][j];
		}
		for (int r = 1; r < row; r++) {
			for (int c = 0; c < col; c++) {
				int mini = (int) 1e8;
				for (int j = 0; j < col; j++) {
					mini = Math.min(mini,dp[r - 1][j] + moveCost[grid[r - 1][j]][c]);
				}
				dp[r][c] = grid[r][c] + mini;
			}
		}
		for (int tem: dp[row - 1]) {	
			result = Math.min(tem,result);
		}
		return result;
	}
}