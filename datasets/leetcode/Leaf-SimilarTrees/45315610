class Solution {
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		Queue<Integer> q = new LinkedList<Integer>();
		traverse(root1,q,false);
		return traverse(root2,q,true) && q.isEmpty();
	}
	boolean traverse(TreeNode root, Queue<Integer> q, boolean flag) {
		if (root == null) {
			return true;
		}
		if (root.left == null && root.right == null) {
			if (!flag) {
				q.add(root.val);
			} 
			else if (q.size() == 0 || q.poll() != root.val) {
				return false;
			} 
			else {
				return true;
			}
		}
		return traverse(root.left,q,flag) && traverse(root.right,q,flag);
	}
}