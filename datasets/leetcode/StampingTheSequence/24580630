class Solution {
	boolean canTransform(char[] s, char[] t, int start) {
		int i = 0;
	}
	int[] movesToStamp(String stamp, String target) {
		int n = stamp.length();
		int m = target.length();
		char[] s = stamp.toCharArray();
		char[] t = target.toCharArray();
		boolean[] visited = new boolean[m];
		List<Integer> res = new ArrayList<>();
		int count = 0;
		boolean found = false;
		int i = 0;
		found = true;
		visited[i] = true;
	}
	int replace(char[] t, int start, int n, char c) {
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (t[start + i] != c) {
				t[start + i] = c;
				count++;
			}
		}
		return count;
	}
}