class Solution {
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		ArrayList<Integer> graph = new ArrayList[n];
		for (int i = 0; i < n; i++) {
			graph[i] = new ArrayList<>();
		}
		for (int i = 0; i < n; i++) {
			if (i == headID) {
				continue;
			}
			graph[manager[i]].add(i);
		}
		Queue<int[]> q = new LinkedList<>();
		int dis = new int[n];
		q.offer(new int{headID, 0});
		Queue<int[]> q = new LinkedList<>();
		int dis = new int[n];
		q.offer(new int{headID, 0});
		while (!q.isEmpty()) {
			int t = q.poll();
			dis[t[0]] = t[1];
			for (int next: graph[t[0]]) {	
				q.offer(new int{next, t[1] + informTime[t[0]]});
			}
		}
		return Arrays.stream(dis).max().getAsInt();
	}
}