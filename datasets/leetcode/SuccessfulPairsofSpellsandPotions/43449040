class Solution {
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		List<Integer> res = new LinkedList<>();
		for (int i = 0; i < spells.length; i++) {
			long spell = (long) spells[i];
			int left = 0;
			int right = potions.length - 1;
			int count = 0;
			int mid = 0;
			while (left <= right) {
				mid = left + (right - left + 1) / 2;
				if (spell * potions[mid] >= success) {
					right = mid - 1;
					count = potions.length - 1 + 1;
				} 
				else {
					left = mid + 1;
				}
			}
			res.add(count);
		}
		return res.stream().mapToInt().toArray();
	}
}