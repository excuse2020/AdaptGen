class Solution {
	int find(int[] a, int low, int high, int K) {
		int pivot = partition(a,low,high);
		if (pivot + 1 < K) {
			return find(a,pivot + 1,high,K);
		} 
		else if (pivot + 1 > K) {
			return find(a,low,pivot - 1,K);
		} 
		else {
			return a[pivot];
		}
	}
	int findKth(int[] a, int n, int K) {
		return find(a,0,n - 1,K);
	}
	int partition(int[] a, int low, int high) {
		int pivotValue = a[low];
		while (low < high) {
			while (low < high && a[high] <= pivotValue) {
				high--;
			}
			a[low] = a[high];
			while (low < high && a[low] >= pivotValue) {
				low++;
			}
			a[high] = a[low];
		}
		a[low] = pivotValue;
		return low;
	}
}