class Solution {
	void combination(int index, int target, int candidates, ArrayList<Integer> ar, List<List<Integer>> finalans) {
		if (index >= candidates.length) {
			if (target == 0) {
				finalans.add(new ArrayList<>(ar));
			}
			return;
		}
		if (candidates[index] <= target) {
			ar.add(candidates[index]);
			combination(index,target - candidates[index],candidates,ar,finalans);
			ar.remove(ar.size() - 1);
		}
		combination(index + 1,target,candidates,ar,finalans);
	}
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> finalans = new ArrayList<>();
		combination(0,target,candidates,new ArrayList<>(),finalans);
		return finalans;
	}
}