class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		HashMap<Integer, Integer> hash = new HashMap<>();
		long sum = 0;
		int j = 0;
		long max = 0;
		for (int i = 0; i < nums.length; i++) {
			while (j < nums.length && (hash.size() >= k || hash.containsKey(nums[i]))) {
				sum = sum - nums[j];
				hash.remove(nums[j]);
				j++;
			}
			hash.put(nums[i],hash.getOrDefault(nums[i],0) + 1);
			sum = sum + nums[i];
			if (hash.size() == k) {
				max = Math.max(sum,max);
			}
		}
		return max;
	}
}