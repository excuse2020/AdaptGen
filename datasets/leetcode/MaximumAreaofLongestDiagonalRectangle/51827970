class Solution {
	int areaOfMaxDiagonal(int[][] dimensions) {
		Map<String, Integer> map = new HashMap<>();
		Map<String, Double> map2 = new HashMap<>();
		double maxDiagonal = Double.MIN_VALUE;
		for (int[] i: dimensions) {	
			map.put(i[0] + "",i[0] * i[1]);
			double diagonal = Math.sqrt((i[0] * i[0]) + (i[1] * i[1]));
			map2.put(i[0] + "",diagonal);
			maxDiagonal = Math.max(diagonal,maxDiagonal);
		}
		double finalMaxDiagonal = maxDiagonal;
		Set<String> keys = map2.entrySet().stream().filter((x) -> {x.getValue() == finalMaxDiagonal}).map((x) -> {x.getKey()}).collect(Collectors.toSet());
		int maxArea = Integer.MIN_VALUE;
		for (String s: keys) {	
			maxArea = Math.max(maxArea,map.get(s));
		}
		return maxArea;
	}
}