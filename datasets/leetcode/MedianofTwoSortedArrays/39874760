class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int n1 = nums1.length, n2 = nums2.length, i = 0, j = 0, k = 0;
		int res = new int[n1 + n2];
		while (i < n1 && j < n2) {
			if (nums1[i] > nums2[j]) {
				res[k] = nums2[j];
				j++;
				k++;
			} 
			else {
				res[k] = nums1[i];
				i++;
				k++;
			}
		}
		if (i == n1 && j < n2) {
			for (int l = j; l < n2; l++) {
				res[k] = nums2[l];
				k++;
			}
		}
		if (j == n2 && i < n1) {
			for (int l = i; l < n1; l++) {
				res[k] = nums1[l];
				k++;
			}
		}
		if ((n1 + n2) % 2 == 0) {
			return (double) (res[(n1 + n2) / 2] + res[((n1 + n2) / 2) - 1]) / 2;
		} 
		else {
			return (double) res[(n1 + n2) / 2];
		}
	}
}