class Solution {
	int helper(int k, int n, int[][] dp) {
		if (n == 0 || n == 1 || k == 1) {
			return n;
		}
		int minMoves = Integer.MAX_VALUE;
		if (dp[k][n] != -1) {
			return dp[k][n];
		}
		for (int i = 1; i <= n; i++) {
			minMoves = Math.min(minMoves,1 + Math.max(helper(k - 1,i - 1,dp),helper(k,n - i,dp)));
		}
		dp[k][n] = minMoves;
		return minMoves;
	}
	int twoEggDrop(int n) {
		int[][] dp = new int[3][n + 1];
		for (int i = 0; i < 3; i++) {
			Arrays.fill(dp[i],-1);
		}
		return helper(2,n,dp);
	}
}