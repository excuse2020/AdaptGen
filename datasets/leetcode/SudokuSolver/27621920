class Solution {
	char[][] res_board;
	boolean backtrack(char[][] board, int i, int j) {
		int m = 9, n = 9;
		if (j == n) {
			return backtrack(board,i + 1,0);
		}
		if (i == m) {
			res_board = board;
			return true;
		}
	}
	boolean isValid(char[][] board, int r, int c, char n) {
		for (int i = 0; i < 9; i++) {
			if (board[r][i] == n) {
				return false;
			}
			if (board[i][c] == n) {
				return false;
			}
			if (board[(r / 3) * 3 + i / 3][(c / 3) * 3 + i % 3] == n) {
				return false;
			}
		}
		return true;
	}
	void solveSudoku(char[][] board) {
		backtrack(board,0,0);
		board = res_board;
	}
}