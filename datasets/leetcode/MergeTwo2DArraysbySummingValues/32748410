class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		int one = 0, sec = 0;
		int n = nums1.length, m = nums2.length;
		while (one < n && sec < m) {
			ArrayList<Integer> temp = new ArrayList<>();
			if (nums1[one][0] < nums2[sec][0]) {
				temp.add(nums1[one][0]);
				temp.add(nums1[one][1]);
				one++;
			} 
			else if (nums1[one][0] > nums2[sec][0]) {
				temp.add(nums2[sec][0]);
				temp.add(nums2[sec][1]);
				sec++;
			} 
			else {
				temp.add(nums1[one][0]);
				temp.add(nums1[one][1] + nums2[sec][1]);
				one++;
				sec++;
			}
			ans.add(temp);
		}
		while (one < n) {
			ArrayList<Integer> temp = new ArrayList<>();
			temp.add(nums1[one][0]);
			temp.add(nums1[one][1]);
			ans.add(temp);
			one++;
		}
		while (sec < m) {
			ArrayList<Integer> temp = new ArrayList<>();
			temp.add(nums2[sec][0]);
			temp.add(nums2[sec][1]);
			ans.add(temp);
			sec++;
		}
		int res = new int[ans.size()][2];
		int i = 0;
		for (ArrayList<Integer> t: ans) {	
			res[i][0] = t.get(0);
			res[i][1] = t.get(1);
			i++;
		}
		return res;
	}
}