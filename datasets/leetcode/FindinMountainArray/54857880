class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int start = 0, end = mountainArr.length() - 1, mid = 0, peak = 0;
		while (start <= end) {
			mid = start + (end - start) / 2;
			if (mountainArr.get(mid) <= mountainArr.get(mid + 1)) {
				start = mid + 1;
			} 
			else if (mountainArr.get(mid) <= mountainArr.get(mid - 1)) {
				end = mid - 1;
			} 
			else {
				peak = mid;
				break;
			}
		}
		start = 0;
		end = peak;
		mid = 0;
		while (start <= end) {
			mid = start + (end - start) / 2;
			if (target == mountainArr.get(mid)) {
				return mid;
			} 
			else if (target <= mountainArr.get(mid)) {
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		start = peak + 1;
		end = mountainArr.length() - 1;
		mid = 0;
		while (start <= end) {
			mid = start + (end - start) / 2;
			if (target == mountainArr.get(mid)) {
				return mid;
			} 
			else if (target <= mountainArr.get(mid)) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return -1;
	}
}