class Solution {
	boolean canBuild(int ind, String s, char[][] board) {
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length; j++) {
				if (board[i][j] == s.charAt(ind)) {
					if (finallyBuild(ind,s,i,j,board)) {
						return true;
					}
				}
			}
		}
		return false;
	}
	boolean finallyBuild(int ind, String s, int i, int j, char[][] board) {
		if (ind == s.length()) {
			return true;
		}
		if (i < 0 || j < 0 || i >= board.length || j >= board[0].length) {
			return false;
		}
	}
	List<String> findWords(char[][] board, String[] words) {
		List<String> ans = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			String s = words[i];
			if (canBuild(0,s,board)) {
				ans.add(s);
			}
		}
		return ans;
	}
}