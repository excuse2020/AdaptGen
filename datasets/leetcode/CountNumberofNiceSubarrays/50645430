class Solution {
	int atmost(int[] nums, int k) {
		@r int i = 0;
		@r int j = 0;
		@r int ans = 0;
		@r int countOdd = 0;
		@r int n = nums.length;
		while (j < n) {
			if (nums[j] % 2 != 0) {
				countOdd++;
				while (countOdd > k) {
					if (nums[i] % 2 != 0) {
						countOdd--;
						i++;
						ans += j - i + 1;
						j++;
						return ans;
					} 
					else {
					}
				}
			} 
			else {
			}
		}
	}
	int numberOfSubarrays(int[] nums, int k) {
		return atmost(nums,k) - atmost(nums,k - 1);
	}
}