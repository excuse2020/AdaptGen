class Solution {
	int minOperations(int[] nums) {
		int flipCount = 0;
		int result = 0;
		int k = 3;
		int n = nums.length;
		Deque<Integer> dq = new ArrayDeque<>();
		for (int i = 0; i < n; i++) {
			if (i >= k) {
				flipCount -= dq.getFirst();
				dq.removeFirst();
			}
			if (flipCount % 2 == nums[i]) {
				if (i + k > n) {
					return -1;
				}
				flipCount++;
				result++;
				dq.addLast(1);
			} 
			else {
				dq.addLast(0);
			}
		}
		return result;
	}
}