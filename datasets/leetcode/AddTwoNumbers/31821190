class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		return helper(l1,l2,0);
	}
	ListNode helper(ListNode l1, ListNode l2, int carry) {
		if (l1 == null && l2 == null && carry == 0) {
			return null;
		}
		ListNode node = new ListNode();
		if (l1 == null && l2 == null && carry != 0) {
			node.val = carry;
			node.next = null;
			return node;
		}
		if (l1 == null) {
			node.val = l2.val + carry;
			if (node.val > 9) {
				carry = node.val / 10;
				node.val = node.val % 10;
			} 
			else {
				carry = 0;
			}
			node.next = helper(null,l2.next,carry);
		} 
		else if (l2 == null) {
			node.val = l1.val + carry;
			if (node.val > 9) {
				carry = node.val / 10;
				node.val = node.val % 10;
			} 
			else {
				carry = 0;
			}
			node.next = helper(l1.next,null,carry);
		} 
		else {
			node.val = l1.val + l2.val;
			if (node.val > 9) {
				carry = node.val / 10;
				node.val = node.val % 10;
			} 
			else {
				carry = 0;
			}
			node.next = helper(l1.next,l2.next,carry);
		}
		return node;
	}
}