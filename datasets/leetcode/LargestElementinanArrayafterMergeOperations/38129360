class Solution {
	ArrayList<Long> temp;
	void helper(int start, int nums) {
		int n = nums.length;
		if (start < 0) {
			return;
		}
		long Sum = nums[start];
		start -= 1;
		while (start >= 0 && Sum >= nums[start]) {
			Sum += nums[start];
			start -= 1;
		}
		temp.add(Sum);
		helper(start,nums);
	}
	long maxArrayValue(int[] nums) {
		int n = nums.length;
		long Sum = 0;
		if (n == 1) {
			return Long.valueOf(nums[0]);
		}
		temp = new ArrayList<>();
		helper(n - 1,nums);
		if (temp.size() == 1) {
			return temp.get(0);
		}
		for (int i = 0; i < temp.size(); i++) {
			Sum = Math.max(Sum,temp.get(i));
		}
		return Sum;
	}
}