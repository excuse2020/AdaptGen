class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int n1 = nums1.length;
		int n2 = nums2.length;
		int[] nums3 = new int[n1 + n2];
		int i = 0;
		int j = 0;
		int k = 0;
		while (i < n1 && j < n2) {
			if (nums1[i] > nums2[j]) {
				nums3[k] = nums2[j];
				k++;
				j++;
			} 
			else {
				nums3[k] = nums1[i];
				k++;
				i++;
			}
		}
		while (i < n1) {
			nums3[k] = nums1[i];
			k++;
			i++;
		}
		while (j < n2) {
			nums3[k] = nums2[j];
			k++;
			j++;
		}
		k = nums3.length - 1;
		double ans = 0;
		if (k % 2 == 0) {
			t ans = nums3[k / 2];
		} 
		else {
			t ans = (double) (nums3[k / 2] + nums3[(k / 2) + 1]) / 2.0;
		}
		return ans;
	}
}