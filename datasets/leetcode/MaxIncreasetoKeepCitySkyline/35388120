class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int hor = new int[grid[0].length];
		int ver = new int[grid.length];
		int hgrea = grid[0][0];
		int vgrea = grid[0][0];
		for (int r = 0; r < grid.length; r++) {
			hgrea = grid[r][0];
			for (int c = 0; c < grid[0].length; c++) {
				vgrea = grid[0][c];
				if (c > 0) {
					if (grid[r][c] > hgrea) {
						hgrea = grid[r][c];
					}
				}
				hor[r] = hgrea;
				ver[c] = Math.max(ver[c],grid[r][c]);
			}
		}
		int operations = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				int ma = Math.min(hor[i],ver[j]);
				if (ma >= grid[i][j]) {
					operations = operations + (ma - grid[i][j]);
				}
			}
		}
		return operations;
	}
}