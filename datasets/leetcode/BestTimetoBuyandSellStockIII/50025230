class Solution {
	int maxProfit(int[] arr) {
		int n = arr.length;
		int dp = new int[n + 1][4 + 1];
		for (int i = 0; i <= n; i++) {
			Arrays.fill(dp[i],-1);
		}
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= 4; j++) {
				if (i == n || j == 4) {
					dp[i][j] = 0;
				}
			}
		}
		for (int i = n - 1; i >= 0; i--) {
			for (int j = 3; j >= 0; j--) {
				int profit = 0;
				if (j % 2 == 0) {
					profit = Math.max(dp[i + 1][j + 1] - arr[i],dp[i + 1][j]);
				} 
				else {
					profit = Math.max(dp[i + 1][j + 1] + arr[i],dp[i + 1][j]);
				}
				dp[i][j] = profit;
			}
		}
		return dp[0][0];
	}
}