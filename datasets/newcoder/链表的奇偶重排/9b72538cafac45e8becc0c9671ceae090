class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode prenode = new ListNode(1);
		ListNode tmp = head;
		int i = 1;
		Deque<ListNode> dq = new LinkedList<>();
		while (tmp != null) {
			if (i % 2 == 1) {
				prenode.next = tmp;
				prenode = tmp;
			} 
			else {
				dq.add(tmp);
			}
			tmp = tmp.next;
			i++;
		}
		System.out.println(dq.size());
		while (!dq.isEmpty()) {
			prenode.next = dq.poll();
			System.out.println(prenode.next.val);
			prenode = prenode.next;
		}
		prenode.next = null;
		return head;
	}
}