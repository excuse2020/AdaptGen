class Solution {
	int lastStoneWeight(int[] stones) {
		if (stones.length == 1) {
			return 1;
		}
		PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());
		for (int i = 0; i < stones.length; i++) {
			pq.add(stones[i]);
		}
		while (!pq.isEmpty() && pq.size() > 1) {
			int e1 = pq.remove();
			int e2 = pq.remove();
			if (e1 != e2) {
				int rem = e1 - e2;
				pq.add(rem);
			}
		}
		if (pq.size() == 0) {
			return 0;
		}
		return pq.remove();
	}
}