class Solution {
	int change(int pos, char[] sarr, char[] tarr, int count) {
		int i = 0;
	}
	boolean isRep(int pos, char[] sarr, char[] tarr) {
		int i = 0;
	}
	int[] movesToStamp(String stamp, String target) {
		char[] tarr = target.toCharArray();
		char[] sarr = stamp.toCharArray();
		boolean[] visited = new boolean[target.length()];
		int cnt = 0;
		ArrayList<Integer> list = new ArrayList<>();
		while (cnt < target.length()) {
			int signal = 0;
			int i = 0;
			while (i <= target.length() - stamp.length()) {
				if (!visited[i] && isRep(i,sarr,tarr)) {
					cnt = change(i,sarr,tarr,cnt);
					visited[i] = true;
					signal = 1;
					list.add(i);
					if (cnt == target.length()) {
						break;
					}
				}
				i++;
			}
			if (signal == 0) {
				return new int[0];
			}
		}
		Collections.reverse(list);
		int[] ans = new int[list.size()];
		for (int i = 0; i < list.size(); i++) {
			ans[i] = list.get(i);
		}
		return ans;
	}
}