class Solution {
	long helper(int start, int[][] questions, long[] dp) {
		if (start >= questions.length) {
			return 0;
		}
		if (dp[start] != -1) {
			return dp[start];
		}
		int[] curr = questions[start];
		int points = curr[0];
		int brainPower = curr[1] + 1;
		long pick = points + helper(start + brainPower,questions,dp);
		long notPick = 0 + helper(start + 1,questions,dp);
		return dp[start] = Math.max(notPick,pick);
	}
	long mostPoints(int[][] questions) {
		long[] dp = new long[questions.length];
		for (int i = 0; i < questions.length; i++) {
			dp[i] = -1;
		}
		return helper(0,questions,dp);
	}
}