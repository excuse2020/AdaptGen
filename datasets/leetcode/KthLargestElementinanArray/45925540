class Solution {
	int findKthLargest(int[] nums, int k) {
		int largest = Integer.MIN_VALUE;
		int smallest = Integer.MAX_VALUE;
		for (int i: nums) {	
			smallest = Math.min(i,smallest);
			largest = Math.max(i,largest);
		}
		if (largest < 0) {
			largest = 0;
		}
		if (smallest < 0) {
			smallest = (-1 * smallest);
		}
		int posCount = new int[largest + 1];
		int negCount = new int[smallest + 1];
		for (int i: nums) {	
			if (i < 0) {
				negCount[(i * -1)]++;
			} 
			else {
				posCount[i]++;
			}
		}
		int i = posCount.length - 1;
		int kthLargest = 0;
		while (k != 0) {
			if (i < 0) {
				break;
			}
			if (posCount[i] > 0) {
				kthLargest = i;
				posCount[i]--;
				k--;
			}
			if (posCount[i] <= 0) {
				i--;
			}
		}
		if (k != 0) {
			int j = 0;
			while (k != 0) {
				if (j == negCount.length) {
					break;
				}
				if (negCount[j] > 0) {
					kthLargest = j;
					negCount[j]--;
					k--;
				}
				if (negCount[j] <= 0) {
					j++;
				}
			}
			kthLargest = (-1 * kthLargest);
		}
		return kthLargest;
	}
}