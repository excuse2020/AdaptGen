class Solution {
	TreeNode invertTree(TreeNode root) {
		if (root == null) {
			return null;
		}
		LinkedList<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		while (!queue.isEmpty()) {
			int size = queue.size();
			for (int i = 0; i < size; i++) {
				TreeNode tmp = queue.poll();
				if (tmp.right != null) {
					queue.add(tmp.right);
				}
				if (tmp.left != null) {
					queue.add(tmp.left);
				}
				TreeNode dummy = tmp.right;
				tmp.right = tmp.left;
				tmp.left = dummy;
			}
		}
		return root;
	}
}