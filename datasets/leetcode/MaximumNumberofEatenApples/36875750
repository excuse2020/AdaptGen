class Solution {
	int eatenApples(int[] apples, int[] days) {
		PriorityQueue<int[]> pq = new PriorityQueue<>(new Comparator<int[]>());
		int N = apples.length;
		int ans = 0;
		for (int i = 0; i < N; i++) {
			pq.add(new int{apples[i], i + days[i]});
			while (pq.size() > 0) {
				int[] cur = pq.poll();
				if (cur[0] == 0 || cur[1] <= i) {
					continue;
				}
				cur[0]--;
				ans++;
				if (cur[0] > 0) {
					pq.add(cur);
				}
				break;
			}
		}
		int i = N;
		while (pq.size() > 0) {
			int[] cur = pq.poll();
			if (cur[0] == 0 || cur[1] <= i) {
				continue;
			}
			cur[0]--;
			ans++;
			i += 1;
			if (cur[0] > 0) {
				pq.add(cur);
			}
		}
		return ans;
	}
}