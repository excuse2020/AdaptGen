class Solution {
	void mid(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		mid(root.left,list);
		list.add(root.val);
		mid(root.right,list);
	}
	void post(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		post(root.left,list);
		post(root.right,list);
		list.add(root.val);
	}
	void pre(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		pre(root.left,list);
		pre(root.right,list);
	}
	int[][] threeOrders(TreeNode root) {
		ArrayList<Integer> list1 = new ArrayList<>();
		ArrayList<Integer> list2 = new ArrayList<>();
		ArrayList<Integer> list3 = new ArrayList<>();
		pre(root,list1);
		mid(root,list2);
		post(root,list3);
		int arr = new int[3][list1.size()];
		for (int i = 0; i < list1.size(); i++) {
			arr[0][i] = list1.get(i);
			arr[1][i] = list2.get(i);
			arr[2][i] = list3.get(i);
		}
		return arr;
	}
}