class Solution {
	List<Integer> findSubstring(String s, String[] words) {
		List<Integer> ans = new ArrayList<>();
		for (int i = 0; i < s.length(); i++) {
			if (isSubstring(s,words,i)) {
				ans.add(i);
			}
		}
		return ans;
	}
	boolean isSubstring(String s, String[] words, int idx) {
		boolean[] checked = new boolean[words.length];
		int n = words.length;
		while (n > 0) {
			int prevIdx = idx;
			for (int i = 0; i < words.length; i++) {
				int ei = idx + words[i].length();
				if (!checked[i] && ei <= s.length() && words[i].compareTo(s.substring(idx,ei)) == 0) {
					checked[i] = true;
					idx += words[i].length();
					n--;
				}
			}
			if (idx == prevIdx) {
				return false;
			}
		}
		return true;
	}
}