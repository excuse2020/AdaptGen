class Solution {
	int firstMissingPositive(int[] nums) {
		int len = nums.length, curr = 0;
		while (curr < len) {
			int exp = curr + 1;
			if (nums[curr] == exp || nums[curr] < 1 || nums[curr] > len) {
				curr += 1;
			} 
			else {
				int before = nums[curr];
				swap(nums,curr);
				int after = nums[curr];
				if (before == after) {
					curr += 1;
				}
			}
		}
		int i;
		for (i = 0; i < len; i++) {
			if (i + 1 != nums[i]) {
				return i + 1;
			}
		}
		return i + 1;
	}
	void swap(int[] nums, int pos) {
		int val = nums[nums[pos] - 1];
		nums[nums[pos] - 1] = nums[pos];
		nums[pos] = val;
		return;
	}
}