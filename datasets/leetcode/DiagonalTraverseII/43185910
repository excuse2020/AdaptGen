class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		int len = 0;
		int len0 = 0;
		int n = nums.size();
		for (int i = 0; i < n; i++) {
			List<Integer> temp = nums.get(i);
			int m = temp.size();
			len0 += m;
			len = Math.max(len,m + i);
		}
		int[] cnt = new int[len];
		for (int i = 0; i < n; i++) {
			List<Integer> temp = nums.get(i);
			int m = temp.size();
			for (int j = 0; j < m; j++) {
				cnt[i + j]++;
			}
		}
		for (int i = 1; i < len; i++) {
			cnt[i] += cnt[i - 1];
		}
		int[] pre = new int[len];
		int[] res = new int[len0];
		for (int i = n - 1; i >= 0; i--) {
			List<Integer> temp = nums.get(i);
			int m = temp.size();
			for (int j = 0; j < m; j++) {
				int l = i + j;
				int idx = (l > 0 ? cnt[l - 1] : 0) + pre[l];
				res[idx] = temp.get(j);
				pre[l]++;
			}
		}
		return res;
	}
}