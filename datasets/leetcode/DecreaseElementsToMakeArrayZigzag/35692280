class Solution {
	int movesToMakeZigzag(int[] a) {
		int movesOdd = 0;
		int movesEven = 0;
		if (a.length == 1) {
			return 0;
		}
		int nums = new int[a.length];
		for (int i = 0; i < a.length; i++) {
			nums[i] = a[i];
		}
		for (int i = 1; i < a.length; i = i + 2) {
			if (i + 1 < a.length) {
				if (a[i - 1] <= a[i] && a[i] >= a[i + 1]) {
					movesOdd += (a[i] - Math.min(a[i - 1],a[i + 1]) + 1);
					a[i] = a[i] - Math.min(a[i - 1],a[i + 1]);
				} 
				else if (a[i - 1] <= a[i]) {
					movesOdd += (a[i] - a[i - 1] + 1);
					a[i] = a[i] - a[i - 1];
				} 
				else if (a[i + 1] <= a[i]) {
					movesOdd += (a[i] - a[i + 1] + 1);
					a[i] = a[i] - a[i + 1];
				}
			} 
			else {
				if (a[i - 1] <= a[i]) {
					movesOdd += a[i] - a[i - 1] + 1;
					a[i] = a[i] - a[i - 1];
				}
			}
		}
		for (int i = 0; i < a.length; i++) {
			a[i] = nums[i];
		}
		for (int i = 0; i < a.length; i = i + 2) {
			if (i - 1 >= 0 && i + 1 < a.length) {
				if (a[i - 1] <= a[i] && a[i] >= a[i + 1]) {
					movesEven += a[i] - Math.min(a[i - 1],a[i + 1]) + 1;
					a[i] = a[i] - Math.min(a[i - 1],a[i + 1]);
				} 
				else if (a[i - 1] <= a[i]) {
					movesEven += (a[i] - a[i - 1] + 1);
					a[i] = a[i] - a[i - 1];
				} 
				else if (a[i + 1] <= a[i]) {
					movesEven += (a[i] - a[i + 1] + 1);
					a[i] = a[i] - a[i + 1];
				}
			} 
			else {
				if (i - 1 >= 0) {
					if (a[i - 1] <= a[i]) {
						movesEven += a[i] - a[i - 1] + 1;
						a[i] = a[i] - a[i - 1];
					}
				} 
				else {
					if (a[i + 1] <= a[i]) {
						movesEven += a[i] - a[i + 1] + 1;
						a[i] = a[i] - a[i + 1];
					}
				}
			}
		}
		return Math.min(movesOdd,movesEven);
	}
}