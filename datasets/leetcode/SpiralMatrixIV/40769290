class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] arr = new int[m][n];
		int startrow = 0;
		int endrow = m - 1;
		int startcol = 0;
		int endcol = n - 1;
		while (startrow <= endrow && startcol <= endcol) {
			for (int i = startcol; i <= endcol; i++) {
				if (head != null) {
					arr[startrow][i] = head.val;
					head = head.next;
				} 
				else {
					arr[startrow][i] = -1;
				}
			}
			for (int i = startrow + 1; i <= endrow; i++) {
				if (head != null) {
					arr[i][endcol] = head.val;
					head = head.next;
				} 
				else {
					arr[i][endcol] = -1;
				}
			}
			for (int i = endcol - 1; i >= startcol; i--) {
				if (startrow == endrow) {
					break;
				}
				if (head != null) {
					arr[endrow][i] = head.val;
					head = head.next;
				} 
				else {
					arr[endrow][i] = -1;
				}
			}
			for (int i = endrow - 1; i >= startrow + 1; i--) {
				if (startcol == endcol) {
					break;
				}
				if (head != null) {
					arr[i][startcol] = head.val;
					head = head.next;
				} 
				else {
					arr[i][startcol] = -1;
				}
			}
			startrow++;
			startcol++;
			endrow--;
			endcol--;
		}
		return arr;
	}
}