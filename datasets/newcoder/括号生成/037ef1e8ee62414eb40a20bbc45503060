class Solution {
	ArrayList<String> result;
	ArrayList<String> generateParenthesis(int n) {
		result = new ArrayList<String>();
		StringBuilder sb = new StringBuilder();
		solution(sb,n,n);
		return result;
	}
	void solution(StringBuilder s, int left, int right) {
		if (left == 0 && right == 0) {
			result.add(s.toString());
			return;
		} 
		else {
			if (left == right) {
				s.append("(");
				left--;
				solution(s,left,right);
				s.deleteCharAt(s.length() - 1);
				left++;
			} 
			else if (left < right) {
				if (left != 0) {
					s.append("(");
					left--;
					solution(s,left,right);
					s.deleteCharAt(s.length() - 1);
					left++;
				}
				if (right != 0) {
					s.append(")");
					right--;
					solution(s,left,right);
					s.deleteCharAt(s.length() - 1);
					right++;
				}
			}
		}
	}
}