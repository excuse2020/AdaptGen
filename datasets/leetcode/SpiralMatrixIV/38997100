class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int result = new int[m][n];
		int left = 0;
		int right = n - 1;
		int top = 0;
		int bottom = m - 1;
		ListNode temp = head;
		while (left <= right && top <= bottom) {
			for (int i = left; i <= right; i++) {
				if (temp != null) {
					result[top][i] = temp.val;
					temp = temp.next;
				} 
				else {
					result[top][i] = -1;
				}
			}
			top++;
			for (int j = top; j <= bottom; j++) {
				if (temp != null) {
					result[j][right] = temp.val;
					temp = temp.next;
				} 
				else {
					result[j][right] = -1;
				}
			}
			right--;
			if (top <= bottom) {
				for (int x = right; x >= left; x--) {
					if (temp != null) {
						result[bottom][x] = temp.val;
						temp = temp.next;
					} 
					else {
						result[bottom][x] = -1;
					}
				}
				bottom--;
			}
			if (left <= right) {
				for (int w = bottom; w >= top; w--) {
					if (temp != null) {
						result[w][left] = temp.val;
						temp = temp.next;
					} 
					else {
						result[w][left] = -1;
					}
				}
				left++;
			}
		}
		return result;
	}
}