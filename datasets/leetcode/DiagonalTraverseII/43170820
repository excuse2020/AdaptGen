class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		int maxSum = 0;
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int i = nums.size() - 1; i >= 0; i--) {
			List<Integer> row = nums.get(i);
			for (int j = row.size() - 1; j >= 0; j--) {
				int sum = i + j;
				maxSum = Math.max(maxSum,sum);
				List<Integer> list = map.getOrDefault(sum,new ArrayList<>());
				list.add(row.get(j));
				map.put(sum,list);
			}
		}
		List<Integer> ls = new ArrayList<>();
		for (int i = 0; i <= maxSum; i++) {
			List<Integer> list = map.get(i);
			for (int num: list) {	
				ls.add(num);
			}
		}
		Integer[] array = ls.toArray(new Integer[0]);
		int[] arr = new int[array.length];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = array[i].intValue();
		}
		return arr;
	}
}