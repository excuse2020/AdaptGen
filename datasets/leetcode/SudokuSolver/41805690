class Solution {
	int check = 0;
	boolean isvalid(char[][] board, int row, int col, char ch) {
		for (int i = 0; i < 9; i++) {
			if (board[i][col] == ch) {
				return false;
			}
		}
		for (int j = 0; j < 9; j++) {
			if (board[row][j] == ch) {
				return false;
			}
		}
		int rstart = row / 3 * 3;
		int cstart = col / 3 * 3;
		for (int i = rstart; i < rstart + 3; i++) {
			for (int j = cstart; j < cstart + 3; j++) {
				if (board[i][j] == ch) {
					return false;
				}
			}
		}
		return true;
	}
	void solve(char[][] board, int row, int col) {
		check = 1;
		return;
	}
	void solveSudoku(char[][] board) {
		solve(board,0,0);
		check = 0;
	}
}