class Solution {
	int minCost(int n, int[] cuts) {
		Arrays.sort(cuts);
		List<Integer> list = new ArrayList<>();
		list.add(0);
		for (int cut: cuts) {	
			list.add(cut);
		}
		list.add(n);
		int m = list.size();
		int[][] dp = new int[m][m];
		for (int i = 0; i + 1 < m; i++) {
			Arrays.fill(dp[i],Integer.MAX_VALUE);
			dp[i][i + 1] = 0;
		}
		for (int len = 3; len <= m; len++) {
			for (int i = 0; i + len - 1 < m; i++) {
				int j = i + len - 1;
				for (int k = i + 1; k < j; k++) {
					dp[i][j] = Math.min(dp[i][j],list.get(j) - list.get(i) + dp[i][k] + dp[k][j]);
				}
			}
		}
		return dp[0][m - 1];
	}
}