class Solution2 {
	int getLongestPalindrome(String A, int n) {
		if (n < 2) {
			return 1;
		}
		int maxLen = 1;
		char[] cs = A.toCharArray();
		for (int i = 0; i < n - 1; i++) {
			int len1 = getPalindromeCenterLen(cs,n,i,i);
			int len2 = getPalindromeCenterLen(cs,n,i,i + 1);
			len1 = Math.max(len1,len2);
			if (len1 > maxLen) {
				maxLen = len1;
			}
		}
		return maxLen;
	}
	int getPalindromeCenterLen(char[] cs, int len, int left, int right) {
		int i = left;
		int j = right;
		while (i >= 0 && j < len) {
			if (cs[i] == cs[j]) {
				i--;
				j++;
			} 
			else {
				break;
			}
		}
		return j - i;
	}
}