class Solution {
	int find(int i, int j, int[][] dp, String s, String t) {
		if (j < 0) {
			return 1;
		}
		if (i < 0 || j > i) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (s.charAt(i) == t.charAt(j)) {
			return dp[i][j] = find(i - 1,j - 1,dp,s,t) + find(i - 1,j,dp,s,t);
		}
		return dp[i][j] = find(i - 1,j,dp,s,t);
	}
	int numDistinct(String s, String t) {
		int[][] dp = new int[s.length()][t.length()];
		for (int[] a: dp) {	
			Arrays.fill(a,-1);
		}
		return find(s.length() - 1,t.length() - 1,dp,s,t);
	}
}