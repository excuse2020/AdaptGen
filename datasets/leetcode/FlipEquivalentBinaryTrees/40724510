class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return util2(root1,root2);
	}
	boolean util2(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		} 
		else if (root1 == null && root2 != null) {
			return false;
		} 
		else if (root1 != null && root2 == null) {
			return false;
		} 
		else if (root1.val != root2.val) {
			return false;
		}
		boolean case1 = (util2(root1.left,root2.left) && util2(root1.right,root2.right));
		if (case1) {
			return case1;
		}
		boolean case2 = (util2(root1.right,root2.left) && util2(root1.left,root2.right));
		return case2;
	}
}