class Solution {
	int helper(int[] arr, int target) {
		HashMap<Integer, Integer> map = new HashMap<>();
		map.put(0,1);
		int count = 0, sum = 0;
		for (int i = 0; i < arr.length; i++) {
			sum += arr[i];
			count += map.getOrDefault(sum - target,0);
			map.put(sum,map.getOrDefault(sum,0) + 1);
		}
		return count;
	}
	int numSubmatrixSumTarget(int[][] arr, int target) {
		int n = arr.length;
		int m = arr[0].length;
		int count = 0;
		for (int i = 0; i < n; i++) {
			int[] temp = new int[m];
			for (int row = i; row < n; row++) {
				for (int col = 0; col < m; col++) {
					temp[col] += arr[row][col];
				}
				count += helper(temp,target);
			}
		}
		return count;
	}
}