class Solution {
	TreeNode balance(int start, int end, List<Integer> l) {
		if (start > end) {
			return null;
		}
		int mid = (start + end) / 2;
		TreeNode root = new TreeNode(l.get(mid));
		root.left = balance(start,mid - 1,l);
		root.right = balance(mid + 1,end,l);
		return root;
	}
	TreeNode balanceBST(TreeNode root) {
		List<Integer> l = new ArrayList<>();
		inorder(root,l);
		return balance(0,l.size() - 1,l);
	}
	void inorder(TreeNode root, List<Integer> l) {
		if (root == null) {
			return;
		}
		inorder(root.left,l);
		l.add(root.val);
		inorder(root.right,l);
	}
}