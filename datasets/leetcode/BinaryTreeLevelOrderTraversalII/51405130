class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> l = new ArrayList<>();
		Queue<TreeNode> q = new LinkedList<>();
		List<List<Integer>> ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		q.add(root);
		while (!q.isEmpty()) {
			int level = q.size();
			List<Integer> subList = new ArrayList<>();
			for (int i = 0; i < level; i++) {
				if (q.peek().left != null) {
					q.add(q.peek().left);
				}
				if (q.peek().right != null) {
					q.add(q.peek().right);
				}
				subList.add(q.poll().val);
			}
			l.add(subList);
		}
		for (int i = l.size() - 1; i >= 0; i--) {
			ans.add(l.get(i));
		}
		return ans;
	}
}