class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(candidates);
		findCombinations(0,target,candidates,ans,new ArrayList<>());
		return ans;
	}
	void findCombinations(int index, int target, int arr, List<List<Integer>> ans, List<Integer> output) {
		if (target == 0) {
			ans.add(new ArrayList<>(output));
			return;
		}
		for (int i = index; i < arr.length; i++) {
			if (i > index && arr[i] == arr[i - 1]) {
				continue;
			}
			if (arr[i] <= target) {
				output.add(arr[i]);
				findCombinations(i + 1,target - arr[i],arr,ans,output);
				output.remove(output.size() - 1);
			}
		}
	}
}