class Solution {
	int numberOfPaths(int[][] grid, int k) {
		int m = grid.length, n = grid[0].length, MOD = 1000000007;
		int[][][] dp = new int[m][n][k];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 && j == 0) {
					dp[i][j][grid[i][j] % k] = 1;
				} 
				else {
					if (i > 0) {
						for (int x = 0; x < k; x++) {
							dp[i][j][(x + grid[i][j] % k) % k] = (dp[i][j][(x + grid[i][j] % k) % k] % MOD + dp[i - 1][j][x] % MOD) % MOD;
						}
					}
					if (j > 0) {
						for (int x = 0; x < k; x++) {
							dp[i][j][(x + grid[i][j] % k) % k] = (dp[i][j][(x + grid[i][j] % k) % k] % MOD + dp[i][j - 1][x] % MOD) % MOD;
						}
					}
				}
			}
		}
		return dp[m - 1][n - 1][0] % MOD;
	}
}