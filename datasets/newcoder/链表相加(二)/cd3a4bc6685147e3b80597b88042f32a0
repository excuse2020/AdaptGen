class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode l1 = reverse(head1), l2 = reverse(head2);
		ListNode dummy = new ListNode(0);
		ListNode tmp = dummy;
		int t = 0;
		while (l1 != null || l2 != null) {
			int a = l1 != null ? l1.val : 0;
			int b = l2 != null ? l2.val : 0;
			t = a + b;
			tmp.next = new ListNode(t % 10);
			t /= 10;
			tmp = tmp.next;
			if (l1 != null) {
				l1 = l1.next;
			}
			if (l2 != null) {
				l2 = l2.next;
			}
		}
		if (t > 0) {
			tmp.next = new ListNode(t);
		}
		return reverse(dummy.next);
	}
	ListNode reverse(ListNode root) {
		ListNode prev = null, cur = root;
		while (cur != null) {
			ListNode tmp = cur.next;
			cur.next = prev;
			prev = cur;
			cur = tmp;
		}
		return prev;
	}
}