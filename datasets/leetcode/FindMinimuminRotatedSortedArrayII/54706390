class Solution {
	int findMin(int[] nums) {
		int pivot = findPivot(nums,0,nums.length - 1);
		return pivot == -1 ? nums[0] : nums[pivot + 1];
	}
	int findPivot(int[] nums, int low, int high) {
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (mid < high && nums[mid] > nums[mid + 1]) {
				return mid;
			}
			if (mid > low && nums[mid] < nums[mid - 1]) {
				return mid - 1;
			}
			if (nums[low] == nums[mid] && nums[mid] == nums[high]) {
				if (low < high && nums[low] > nums[low + 1]) {
					return low;
				}
				low++;
				if (high > low && nums[high] < nums[high - 1]) {
					return high - 1;
				}
				high--;
			} 
			else if (nums[low] <= nums[mid]) {
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return -1;
	}
}