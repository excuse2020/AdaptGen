class Solution {
	int maxMoney(int currentHouse, int[] houses, int[] dp) {
		if (currentHouse == houses.length) {
			return 0;
		}
		if (currentHouse > houses.length) {
			return 0;
		}
		if (dp[currentHouse] != 0) {
			return dp[currentHouse];
		}
		int robHouse = maxMoney(currentHouse + 2,houses,dp) + houses[currentHouse];
		int leaveHouse = maxMoney(currentHouse + 1,houses,dp);
		return dp[currentHouse] = Math.max(robHouse,leaveHouse);
	}
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		return Math.max(maxMoney(0,Arrays.copyOfRange(nums,1,n),new int[n]),maxMoney(0,Arrays.copyOfRange(nums,0,n - 1),new int[n]));
	}
}