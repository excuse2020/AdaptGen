class Solution {
	void findNode(TreeNode root, int val, List<Integer> list) {
		if (root.val == val) {
			list.add(val);
		} 
		else if (val > root.val) {
			list.add(root.val);
			findNode(root.right,val,list);
		} 
		else {
			list.add(root.val);
			findNode(root.left,val,list);
		}
	}
	int lowestCommonAncestor(TreeNode root, int p, int q) {
		List<Integer> list1 = new ArrayList<Integer>();
		List<Integer> list2 = new ArrayList<Integer>();
		findNode(root,p,list1);
		findNode(root,q,list2);
		list1.addAll(list2);
		list2.addAll(list1);
		for (int i = list1.size() - 1; i >= 0; i--) {
			if (list1.get(i).equals(list2.get(i))) {
				return list1.get(i);
			}
		}
		return 0;
	}
}