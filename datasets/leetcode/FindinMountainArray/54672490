class Solution {
	int binary(MountainArray arr, int target, int start, int end, boolean isAsc) {
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (isAsc) {
				if (target > arr.get(mid)) {
					start = mid + 1;
				} 
				else if (target < arr.get(mid)) {
					end = mid - 1;
				} 
				else {
					return mid;
				}
			} 
			else {
				if (target > arr.get(mid)) {
					end = mid - 1;
				} 
				else if (target < arr.get(mid)) {
					start = mid + 1;
				} 
				else {
					return mid;
				}
			}
		}
		return -1;
	}
	int findInMountainArray(int target, MountainArray arr) {
		int start = 0;
		int end = arr.length() - 1;
		int ans = -1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (arr.get(mid) < arr.get(mid + 1)) {
				start = mid + 1;
			} 
			else if (arr.get(mid) > arr.get(mid + 1)) {
				ans = mid;
				end = mid - 1;
			}
		}
		System.out.println("peak is found at " + ans);
		int left = binary(arr,target,0,ans,true);
		if (left == -1) {
			int right = binary(arr,target,ans,arr.length() - 1,false);
			return right;
		}
		return left;
	}
}