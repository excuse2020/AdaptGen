class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		long maxHorizontalDiff = maxDifference(horizontalCuts,h);
		long maxVerticalDiff = maxDifference(verticalCuts,w);
		return (int) (maxHorizontalDiff % 1000000007 * maxVerticalDiff % 1000000007) % 1000000007;
	}
	int maxDifference(int[] arr, int length) {
		Arrays.sort(arr);
		int n = arr.length;
		int tempDiff = 0;
		int maxDiff = 0;
		for (int i = 0; i <= n - 1; i++) {
			if (i == 0) {
				tempDiff = arr[i] - 0;
			} 
			else {
				tempDiff = arr[i] - arr[i - 1];
			}
			if (tempDiff > maxDiff) {
				maxDiff = tempDiff;
			}
		}
		tempDiff = length - arr[n - 1];
		if (tempDiff > maxDiff) {
			maxDiff = tempDiff;
		}
		return maxDiff;
	}
}