class Solution {
	void reverse(ListNode head) {
		if (head == null) {
			return;
		}
		ListNode pre = null, cur = head;
		while (cur != null) {
			ListNode tmp = cur.next;
			cur.next = pre;
			pre = cur;
			cur = tmp;
		}
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head == null || head.next == null || m == n) {
			return head;
		}
		ListNode dummy = new ListNode(-1);
		dummy.val = -1;
		dummy.next = head;
		ListNode ll = dummy, lr, rl = dummy, rr;
		for (int i = 0; i < m - 1; i++) {
			ll = ll.next;
		}
		lr = ll.next;
		for (int i = 0; i < n; i++) {
			rl = rl.next;
		}
		rr = rl.next;
		rl.next = null;
		reverse(lr);
		ll.next = rl;
		lr.next = rr;
		return dummy.next;
	}
}