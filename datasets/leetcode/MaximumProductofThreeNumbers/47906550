class Solution {
	void QS(int[] arr, int low, int high) {
		if (low >= high) {
			return;
		}
		int s = low;
		int e = high;
		int m = s + (e - s) / 2;
		int pivot = arr[m];
		while (s <= e) {
			while (arr[s] < pivot) {
				s++;
			}
			while (arr[e] > pivot) {
				e--;
			}
			if (s <= e) {
				int temp = arr[s];
				arr[s] = arr[e];
				arr[e] = temp;
				s++;
				e--;
			}
		}
		QS(arr,low,e);
		QS(arr,s,high);
	}
	int maximumProduct(int[] nums) {
		int ans1 = 1;
		int ans2 = 1;
		QS(nums,0,nums.length - 1);
		ans2 = nums[0] * nums[1];
		for (int i = nums.length - 1; i >= nums.length - 3; i--) {
			ans1 *= nums[i];
		}
		return Math.max(ans1,ans2);
	}
}