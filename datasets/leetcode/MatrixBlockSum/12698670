class Solution {
	int[][] matrixBlockSum(int[][] mat, int k) {
		for (int i = 1; i < mat.length; i++) {
			for (int j = 0; j < mat[0].length; j++) {
				mat[i][j] += mat[i - 1][j];
			}
		}
		for (int i = 0; i < mat.length; i++) {
			for (int j = 1; j < mat[0].length; j++) {
				mat[i][j] += mat[i][j - 1];
			}
		}
		int[][] array = new int[mat.length][mat[0].length];
		for (int i = 0; i < mat.length; i++) {
			for (int j = 0; j < mat[0].length; j++) {
				int right = Math.min(j + k,mat[0].length - 1);
				int down = Math.min(i + k,mat.length - 1);
				array[i][j] += mat[down][right];
				down = i - k;
				if (down >= 0) {
					array[i][j] -= mat[down][right];
				}
				right = j - k;
				if (right >= 0) {
					down = Math.min(i + k,mat.length - 1);
					array[i][j] -= mat[down][right];
				}
				down = i - k;
				right = j - k;
				if (down >= 0 && right >= 0) {
					array[i][j] += mat[down][right];
				}
			}
		}
		return array;
	}
}