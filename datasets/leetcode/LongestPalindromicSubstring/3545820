class Solution {
	String longestPalindrome(String s) {
		if (s.length() == 0) {
			return "";
		}
		boolean[][] dp = new boolean[s.length()][s.length()];
		int start = 0, end = 0;
		for (int i = 0; i < s.length(); ++i) {
			for (int j = i; j >= 0; --j) {
				boolean startEqEnd = s.charAt(j) == s.charAt(i);
				if (i == j) {
					dp[i][j] = true;
				} 
				else if (i - j == 1) {
					dp[i][j] = startEqEnd;
				} 
				else if (startEqEnd && dp[i - 1][j + 1]) {
					dp[i][j] = true;
				}
				if (dp[i][j] && i - j > end - start) {
					end = i;
					start = j;
				}
			}
		}
		return s.substring(start,end + 1);
	}
}