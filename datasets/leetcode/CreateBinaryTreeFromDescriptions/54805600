class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		Map<Integer, TreeNode> map = new HashMap<>();
		for (int[] node: descriptions) {	
			makeParent(map,node);
		}
		for (int[] node: descriptions) {	
			if (map.containsKey(node[1])) {
				map.remove(node[1]);
			}
		}
		return map.values().iterator().next();
	}
	void makeParent(Map<Integer, TreeNode> map, int[] node) {
		TreeNode p = map.get(node[0]);
		if (p == null) {
			p = new TreeNode();
			p.val = node[0];
			map.put(node[0],p);
		}
		TreeNode child = map.get(node[1]);
		if (child == null) {
			child = new TreeNode();
			child.val = node[1];
			map.put(node[1],child);
		}
		if (node[2] == 1) {
			p.left = child;
		} 
		else {
			p.right = child;
		}
	}
}