class Solution {
	int[] countSubTrees(int n, int[][] edges, String labels) {
		int[] ans = new int[n];
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int[] edge: edges) {	
			int a = edge[0];
			int b = edge[1];
			if (!map.containsKey(a)) {
				map.put(a,new ArrayList<>());
			}
			if (!map.containsKey(b)) {
				map.put(b,new ArrayList<>());
			}
			map.get(a).add(b);
			map.get(b).add(a);
		}
		dfs(0,-1,map,labels,ans);
		return ans;
	}
	int[] dfs(int node, int parent, Map<Integer, List<Integer>> map, String labels, int[] ans) {
		int[] count = new int[26];
	}
}