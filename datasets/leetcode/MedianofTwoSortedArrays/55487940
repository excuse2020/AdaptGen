class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int n1 = nums1.length;
		int n2 = nums2.length;
		int ind1 = (n1 + n2) / 2;
		int ind2 = ind1 - 1;
		int m1 = -1;
		int m2 = -1;
		int l1 = 0;
		int l2 = 0;
		int cnt = 0;
		while (l1 < n1 && l2 < n2) {
			if (nums1[l1] < nums2[l2]) {
				if (cnt == ind1) {
					m1 = nums1[l1];
				}
				if (cnt == ind2) {
					m2 = nums1[l1];
				}
				cnt++;
				l1++;
			} 
			else {
				if (cnt == ind1) {
					m1 = nums2[l2];
				}
				if (cnt == ind2) {
					m2 = nums2[l2];
				}
				cnt++;
				l2++;
			}
		}
		while (l1 < n1) {
			if (cnt == ind1) {
				m1 = nums1[l1];
			}
			if (cnt == ind2) {
				m2 = nums1[l1];
			}
			cnt++;
			l1++;
		}
		while (l2 < n2) {
			if (cnt == ind1) {
				m1 = nums2[l2];
			}
			if (cnt == ind2) {
				m2 = nums2[l2];
			}
			cnt++;
			l2++;
		}
		System.out.println(m1);
		System.out.println(m2);
		if ((n1 + n2) % 2 == 0) {
			return (m1 + m2) / 2.0;
		} 
		else {
			return m1;
		}
	}
}