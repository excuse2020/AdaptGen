class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head == null || head.next == null) {
			return head;
		}
		Stack<ListNode> st = new Stack<>();
		ListNode op = head, temp;
		if (m == 1) {
			for (int i = m - 1; i < n; i++) {
				st.add(op);
				op = op.next;
			}
			head = st.pop();
			temp = head;
			while (!st.isEmpty()) {
				temp.next = st.pop();
				temp = temp.next;
			}
			temp.next = op;
		} 
		else {
			for (int i = 0; i < m - 2; i++) {
				op = op.next;
				System.out.println(op.val);
			}
			for (int i = m - 1; i < n; i++) {
				temp = op.next;
				st.add(temp);
				op.next = temp.next;
			}
			temp = op.next;
			while (!st.isEmpty()) {
				op.next = st.pop();
				op = op.next;
			}
			op.next = temp;
		}
		return head;
	}
}