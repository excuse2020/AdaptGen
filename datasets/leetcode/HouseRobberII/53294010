class Solution {
	int helper(int[] a, int start, int end) {
		int[] dp = new int[a.length];
		dp[start] = a[start];
		for (int i = start + 1; i <= end; i++) {
			dp[i] = i == 1 ? Math.max(dp[i - 1],a[i]) : Math.max(a[i] + dp[i - 2],dp[i - 1]);
		}
		return dp[end];
	}
	int rob(int[] a) {
		int n = a.length;
		if (n == 0) {
			return 0;
		}
		if (n == 1) {
			return a[0];
		}
		return Math.max(helper(a,0,n - 2),helper(a,1,n - 1));
	}
}