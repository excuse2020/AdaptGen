class Solution {
	ListNode reverse(ListNode head, ListNode tail) {
		ListNode cur = tail;
		while (head != tail) {
			ListNode tmp = head.next;
			head.next = cur;
			cur = head;
			head = tmp;
		}
		return cur;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode node = new ListNode(-1);
		node.next = head;
		ListNode pre = node;
		int length = n - m;
		while (m > 1) {
			m--;
			pre = pre.next;
		}
		ListNode left = pre.next;
		ListNode tail = left;
		while (length >= 0) {
			length--;
			tail = tail.next;
		}
		pre.next = reverse(left,tail);
		return node.next;
	}
}