class Solution {
	ListNode mergeTwoLists(ListNode elem1, ListNode elem2) {
		if (elem1 == null && elem2 == null) {
			return elem1;
		}
		ListNode ln;
		ListNode cp = new ListNode();
		ln = cp;
		while (elem1 != null && elem2 != null) {
			if (elem1.val < elem2.val) {
				cp.val = elem1.val;
				elem1 = elem1.next;
			} 
			else {
				cp.val = elem2.val;
				elem2 = elem2.next;
			}
			cp.next = new ListNode();
			cp = cp.next;
		}
		if (elem1 != null) {
			while (elem1 != null) {
				cp.val = elem1.val;
				if (elem1.next == null) {
					break;
				}
				cp.next = new ListNode();
				cp = cp.next;
				elem1 = elem1.next;
			}
		}
		if (elem2 != null) {
			while (elem2 != null) {
				cp.val = elem2.val;
				if (elem2.next == null) {
					break;
				}
				cp.next = new ListNode();
				cp = cp.next;
				elem2 = elem2.next;
			}
		}
		return ln;
	}
}