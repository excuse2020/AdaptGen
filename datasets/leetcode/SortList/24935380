class Solution {
	ListNode getMid(ListNode head) {
		ListNode slow = head, fast = head;
		while (fast.next != null && fast.next.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		ListNode mid = slow.next;
		slow.next = null;
		return mid;
	}
	ListNode merge(ListNode list1, ListNode list2) {
		ListNode dummy = new ListNode();
		ListNode tmp = dummy;
		while (list1 != null && list2 != null) {
			if (list1.val < list2.val) {
				tmp.next = list1;
				list1 = list1.next;
				tmp = tmp.next;
			} 
			else {
				tmp.next = list2;
				list2 = list2.next;
				tmp = tmp.next;
			}
		}
		tmp.next = (list1 != null) ? list1 : list2;
		return dummy.next;
	}
	ListNode sortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode mid = getMid(head);
		return merge(sortList(head),sortList(mid));
	}
}