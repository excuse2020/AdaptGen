class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		if (root == null) {
			return ans;
		}
		Queue<TreeNode> q = new LinkedList<TreeNode>();
		q.add(root);
		while (q.size() > 0) {
			List<Integer> sub = new ArrayList<Integer>();
			int s = q.size();
			for (int i = 0; i < s; i++) {
				if (q.peek().left != null) {
					q.add(q.peek().left);
				}
				if (q.peek().right != null) {
					q.add(q.peek().right);
				}
				sub.add(q.remove().val);
			}
			ans.add(sub);
		}
		Collections.reverse(ans);
		return ans;
	}
}