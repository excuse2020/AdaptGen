class Solution {
	int findKth(int[] a, int n, int K) {
		int left = 0;
		int right = a.length - 1;
		quickSort(a,left,right);
		return a[a.length - K];
	}
	void quickSort(int[] a, int start, int end) {
		int left = start;
		int right = end;
		if (left >= right) {
			return;
		}
		int res = a[left];
		while (left < right) {
			while (left < right && res <= a[right]) {
				right--;
			}
			swap(a,left,right);
			while (left < right && a[left] <= res) {
				left++;
			}
			swap(a,left,right);
		}
		quickSort(a,start,left - 1);
		quickSort(a,left + 1,end);
	}
	void swap(int[] a, int left, int right) {
		int temp = a[left];
		a[left] = a[right];
		a[right] = temp;
	}
}