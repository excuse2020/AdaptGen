class Solution {
	int countDistinctIntegers(int[] nums) {
		int[] arr = new int[2 * nums.length];
		int ans = reverse(nums);
		Set<Integer> set = new HashSet<>();
		int k = 0;
		for (int i = 0; i < arr.length; i++) {
			if (i < nums.length) {
				arr[i] = nums[i];
			} 
			else {
				arr[i] = ans[k];
				k++;
			}
		}
		for (int i = 0; i < arr.length; i++) {
			set.add(arr[i]);
		}
		return set.size();
	}
	int[] reverse(int[] arr) {
		int[] revarr = new int[arr.length];
		for (int i = 0; i < arr.length; i++) {
			int num = arr[i];
			int rn = 0;
			while (num != 0) {
				rn = (rn * 10) + (num % 10);
				num /= 10;
			}
			revarr[i] = rn;
		}
		return revarr;
	}
}