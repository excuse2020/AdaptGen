class Solution {
	void dfs(int[][] graph, int node, boolean[] visited) {
		visited[node] = true;
		for (int i = 0; i < graph[node].length; i += 1) {
			if (graph[node][i] == 1 && !visited[i]) {
				dfs(graph,i,visited);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int connected = 0;
		boolean[] visited = new boolean[isConnected.length];
		for (int i = 0; i < isConnected.length; i += 1) {
			if (!visited[i]) {
				dfs(isConnected,i,visited);
				connected += 1;
			}
		}
		return connected;
	}
}