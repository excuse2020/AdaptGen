class Solution {
	void dfs(int[][] isConnected, boolean[] visited, int curr) {
		visited[curr] = true;
		for (int i = 0; i < visited.length; i++) {
			if (i == curr || isConnected[curr][i] == 0 || visited[i]) {
				continue;
			}
			dfs(isConnected,visited,i);
		}
	}
	int findCircleNum(int[][] isConnected) {
		int sum = 0;
		int n = isConnected.length;
		boolean[] visited = new boolean[n];
		for (int i = 0; i < n; i++) {
			if (!visited[i]) {
				dfs(isConnected,visited,i);
				sum++;
			}
		}
		return sum;
	}
}