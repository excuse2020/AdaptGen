class Solution {
	int helper(int i, int j, int rows, int cols, int[][] flag, int threshold) {
		if (i < 0 || i >= rows || j < 0 || j >= cols || flag[i][j] == 1 || numSum(i) + numSum(j) > threshold) {
			return 0;
		}
		flag[i][j] = 1;
		return helper(i + 1,j,rows,cols,flag,threshold) + helper(i - 1,j,rows,cols,flag,threshold);
	}
	int movingCount(int threshold, int rows, int cols) {
		int[][] flag = new int[rows][cols];
		return helper(0,0,rows,cols,flag,threshold);
	}
	int numSum(int num) {
		int sum = 0;
		while (num > 0) {
			sum += num % 10;
			num /= 10;
		}
		return sum;
	}
}