class Solution {
	int f(int i, int j, String s, int[][] dp) {
		if (i > j) {
			return 0;
		}
		int ans = (int) 1e9;
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int k = i;
	}
	int minimumBeautifulSubstrings(String s) {
		int[][] dp = new int[s.length()][s.length()];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		int anssss = f(0,s.length() - 1,s,dp);
		if (anssss == (int) 1e9) {
			return -1;
		} 
		else {
			return anssss;
		}
	}
	boolean pof(String x) {
		int xx = Integer.parseInt(x,2);
		while (xx > 1) {
			if (xx % 5 == 0) {
				xx = xx / 5;
			} 
			else {
				return false;
			}
		}
		if (xx == 1) {
			return true;
		} 
		else {
			return false;
		}
	}
}