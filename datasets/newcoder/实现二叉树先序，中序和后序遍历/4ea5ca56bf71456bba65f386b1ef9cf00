class Solution {
	ArrayList<Integer> list = new ArrayList<>();
	void mid(TreeNode root) {
		if (root == null) {
			return;
		}
		mid(root.left);
		list.add(root.val);
		mid(root.right);
	}
	void post(TreeNode root) {
		if (root == null) {
			return;
		}
		post(root.left);
		post(root.right);
		list.add(root.val);
	}
	void pre(TreeNode root) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		pre(root.left);
		pre(root.right);
	}
	int[][] threeOrders(TreeNode root) {
		pre(root);
		mid(root);
		post(root);
		int[][] ans = new int[3][list.size() / 3];
		int index = 0;
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < ans[0].length; j++) {
				ans[i][j] = list.get(index++);
			}
		}
		return ans;
	}
}