class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		if (n % 2 == 0) {
			return new ArrayList<TreeNode>();
		}
		Map<Integer, ArrayList<TreeNode>> dp = new HashMap<>();
		dp.put(1,new ArrayList<TreeNode>());
		for (int i = 3; i <= n; i += 2) {
			dp.put(i,new ArrayList<TreeNode>());
			for (int j = 2; j <= i; j += 2) {
				for (TreeNode node: dp.get(i - j)) {	
					for (TreeNode node1: dp.get(i - (i - j + 1))) {	
						dp.get(i).add(new TreeNode(0, node, node1));
					}
				}
			}
		}
		return dp.get(n);
	}
}