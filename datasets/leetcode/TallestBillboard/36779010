class Solution {
	int helper(int[] rods, int i, int diff, int sum, int[][] memo) {
		if (i == rods.length) {
			if (diff == 0) {
				return 0;
			}
			return Integer.MIN_VALUE;
		}
		if (memo[i][diff + sum] != -1) {
			return memo[i][diff + sum];
		}
		int max = helper(rods,i + 1,diff,sum,memo);
		max = Math.max(max,helper(rods,i + 1,diff - rods[i],sum,memo));
		max = Math.max(max,rods[i] + helper(rods,i + 1,diff + rods[i],sum,memo));
		return memo[i][diff + sum] = max;
	}
	int tallestBillboard(int[] rods) {
		int sum = 0;
		for (int rod: rods) {	
			sum += rod;
		}
		int[][] memo = new int[rods.length][2 * sum + 1];
		for (int[] row: memo) {	
			Arrays.fill(row,-1);
		}
		return helper(rods,0,0,sum,memo);
	}
}