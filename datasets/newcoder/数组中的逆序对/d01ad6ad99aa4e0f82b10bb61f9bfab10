class Solution {
	int ans = 0;
	int InversePairs(int[] array) {
		mergeSort(array,0,array.length - 1);
		return ans;
	}
	void merge(int[] arr, int left, int mid, int right) {
		int[] temp = new int[right - left + 1];
		int i = left;
		int j = mid + 1;
		int k = 0;
		while (i <= mid && j <= right) {
			if (arr[i] < arr[j]) {
				temp[k++] = arr[i++];
			} 
			else {
				temp[k++] = arr[j++];
				ans = (ans + mid - i + 1) % 1000000007;
			}
		}
		while (i <= mid) {
			temp[k++] = arr[i++];
		}
		while (j <= right) {
			temp[k++] = arr[j++];
		}
		int t = 0;
		while (left <= right) {
			arr[left++] = temp[t++];
		}
	}
	void mergeSort(int[] a, int left, int right) {
		if (left < right) {
			int mid = (left + right) / 2;
			mergeSort(a,left,mid);
			mergeSort(a,mid + 1,right);
			merge(a,left,mid,right);
		}
	}
}