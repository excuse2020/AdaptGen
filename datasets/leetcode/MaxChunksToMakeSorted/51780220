class Solution {
	int chunks;
	boolean[] found;
	boolean allIndicesFound(int i, int[] arr) {
		int j = i - 1;
		for (j = i - 1; j >= 0; j--) {
			if (found[j]) {
				break;
			}
		}
		Set<Integer> ste = new HashSet<>();
		for (int k = j + 1; k <= i; k++) {
			ste.add(arr[k]);
		}
		for (int k = j + 1; k <= i; k++) {
			if (!ste.contains(k)) {
				return false;
			}
		}
		return true;
	}
	int maxChunksToSorted(int[] arr) {
		found = new boolean[arr.length];
		chunks = 0;
		int i = 1;
		if (arr[0] == 0) {
			found[0] = true;
			chunks += 1;
		}
		while (i < arr.length) {
			if (found[i - 1] && i == arr[i]) {
				found[i] = true;
				chunks += 1;
				i += 1;
				continue;
			}
			boolean flag = allIndicesFound(i,arr);
			if (flag) {
				found[i] = true;
				chunks += 1;
			}
			i += 1;
		}
		return chunks;
	}
}