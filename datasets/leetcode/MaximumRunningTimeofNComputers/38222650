class Solution {
	boolean isPossible(int batteries, long time, int computers) {
		long totalTime = 0;
		for (long bTime: batteries) {	
			if (bTime < time) {
				totalTime += bTime;
			} 
			else {
				totalTime += time;
			}
		}
		return (totalTime >= time * computers);
	}
	long maxRunTime(int n, int[] batteries) {
		long low = 0, high = 0;
		int sz = batteries.length;
		for (int i = 0; i < sz; i++) {
			high += batteries[i];
		}
		long ans = 0;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (isPossible(batteries,mid,n)) {
				ans = mid;
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return ans;
	}
}