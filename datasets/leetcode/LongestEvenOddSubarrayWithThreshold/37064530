class Solution {
	int longestAlternatingSubarray(int[] arr, int t) {
		int n = arr.length;
		int max = 0, curr = 0;
		for (int i = 0; i < n; i++) {
			if (i != n - 1) {
				if (arr[i] <= t && arr[i + 1] <= t && arr[i] % 2 == 0 && arr[i + 1] % 2 != 0) {
					curr += 2;
					i++;
				} 
				else if (arr[i] <= t && arr[i + 1] > t && arr[i] % 2 == 0 && arr[i + 1] % 2 != 0) {
					curr++;
					if (curr > max) {
						max = curr;
					}
					curr = 0;
					i++;
				} 
				else if (arr[i] <= t && arr[i + 1] <= t && arr[i] % 2 == 0 && arr[i + 1] % 2 == 0) {
					curr++;
					if (curr > max) {
						max = curr;
					}
					curr = 0;
				} 
				else if (arr[i] <= t && arr[i + 1] > t && arr[i] % 2 == 0 && arr[i + 1] % 2 == 0) {
					curr++;
					if (curr > max) {
						max = curr;
					}
					curr = 0;
				} 
				else {
					curr = 0;
				}
			} 
			else if (i == n - 1) {
				if (arr[i] % 2 == 0 && arr[i] <= t) {
					curr++;
				}
			}
			if (curr > max) {
				max = curr;
			}
		}
		return max;
	}
}