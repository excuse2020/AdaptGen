class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int top = 0;
		int right = n - 1;
		int left = 0;
		int bottom = m - 1;
		int arr = new int[m][n];
		for (int[] ar: arr) {	
			Arrays.fill(ar,-1);
		}
		while (top <= bottom && right >= left) {
			for (int i = left; i <= right; i++) {
				if (head != null) {
					arr[top][i] = head.val;
					head = head.next;
				}
			}
			top++;
			for (int i = top; i <= bottom; i++) {
				if (head != null) {
					arr[i][right] = head.val;
					head = head.next;
				}
			}
			right--;
			if (top <= bottom) {
				for (int i = right; i >= left; i--) {
					if (head != null) {
						arr[bottom][i] = head.val;
						head = head.next;
					}
				}
				bottom--;
			}
			if (right >= left) {
				for (int i = bottom; i >= top; i--) {
					if (head != null) {
						arr[i][left] = head.val;
						head = head.next;
					}
				}
				left++;
			}
		}
		return arr;
	}
}