class Solution {
	int maxStep = 0;
	void count(int steps, int i, int j, int[][] matrix, int last) {
		if (i < 0 || i >= matrix.length || j < 0 || j >= matrix[0].length || matrix[i][j] <= last) {
			return;
		}
		int cur = matrix[i][j];
		matrix[i][j] = -1;
		maxStep = Math.max(steps,maxStep);
		count(steps + 1,i + 1,j,matrix,cur);
		count(steps + 1,i - 1,j,matrix,cur);
		count(steps + 1,i,j + 1,matrix,cur);
		count(steps + 1,i,j - 1,matrix,cur);
		matrix[i][j] = cur;
	}
	int solve(int[][] matrix) {
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				count(1,i,j,matrix,-1);
			}
		}
		return maxStep;
	}
}