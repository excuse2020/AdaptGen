class Solution {
	RandomListNode Clone(RandomListNode pHead) {
		if (pHead == null) {
			return null;
		}
		ArrayList<RandomListNode> originList = new ArrayList<>();
		ArrayList<RandomListNode> originRandomList = new ArrayList<>();
		ArrayList<RandomListNode> cloneList = new ArrayList<>();
		while (pHead != null) {
			RandomListNode clone = new RandomListNode(pHead.label);
			originList.add(pHead);
			originRandomList.add(pHead.random);
			cloneList.add(clone);
			pHead = pHead.next;
		}
		for (int i = 0; i < originList.size(); i++) {
			if (originRandomList.get(i) != null) {
				int index = originList.indexOf(originRandomList.get(i));
				cloneList.get(i).random = cloneList.get(index);
			} 
			else {
				cloneList.get(i).random = null;
			}
			if (i < originList.size() - 1) {
				cloneList.get(i).next = cloneList.get(i + 1);
			} 
			else {
				cloneList.get(i).next = null;
			}
		}
		return cloneList.get(0);
	}
}