class Solution {
	String helper(int num, int n) {
		String ans = "";
		int prev = -1;
		int len = 0;
		while (num > 0) {
			len++;
			ans = (num % 2) + ans;
			if (prev == -1) {
				prev = num % 2;
			} 
			else {
				if (prev == 0 && num % 2 == 0) {
					return "";
				}
				prev = num % 2;
			}
			num /= 2;
		}
		if (n - len >= 2) {
			return "";
		}
		if (n - len == 1) {
			ans = "0" + ans;
		}
		return ans;
	}
	List<String> validStrings(int n) {
		int len = (int) Math.pow(2,n) - 1;
		List<String> ans = new ArrayList<>();
		if (n == 1) {
			return Arrays.asList(new String{"0", "1"});
		}
		for (int i = 0; i <= len; i++) {
			String s = helper(i,n);
			if (s != "") {
				ans.add(new String(s));
			}
		}
		return ans;
	}
}