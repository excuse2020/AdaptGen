class Solution {
	long maxRunTime(int n, int[] batteries) {
		long left = 0, right = 0, ans = 0;
		for (int b: batteries) {	
			right += b;
		}
		right = right / n;
		while (left <= right) {
			long mid = left + (right - left) / 2;
			if (possible(n,batteries,mid)) {
				ans = mid;
				left = mid + 1;
			} 
			else {
				right = mid - 1;
			}
		}
		return ans;
	}
	boolean possible(int n, int[] batteries, long target) {
		long totalTarget = target * n;
		for (int b: batteries) {	
			totalTarget -= Math.min(target,b);
		}
		return totalTarget <= 0;
	}
}