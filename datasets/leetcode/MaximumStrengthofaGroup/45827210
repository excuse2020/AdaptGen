class Solution {
	long max(long a, long b, long c, long d) {
		return Math.max(Math.max(a,b),Math.max(c,d));
	}
	long maxStrength(int[] nums) {
		int n = nums.length;
		long[][] dp = new long[n][2];
		dp[0][0] = nums[0];
		dp[0][1] = nums[0];
		for (int i = 1; i < n; i++) {
			dp[i][0] = max(dp[i - 1][0] * nums[i],dp[i - 1][1] * nums[i],nums[i],dp[i - 1][0]);
			dp[i][1] = min(dp[i - 1][0] * nums[i],dp[i - 1][1] * nums[i],nums[i],dp[i - 1][1]);
		}
		return dp[n - 1][0];
	}
	long min(long a, long b, long c, long d) {
		return Math.min(Math.min(a,b),Math.min(c,d));
	}
}