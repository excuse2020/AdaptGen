class Solution {
	List<Integer> rightSideView(TreeNode root) {
		List<Integer> res = new ArrayList<>();
		if (root == null) {
			return res;
		}
		Deque<TreeNode> dq = new ArrayDeque<>();
		dq.offer(root);
		while (!dq.isEmpty()) {
			int n = dq.size();
			res.add(dq.peekLast().val);
			for (int i = 0; i < n; i++) {
				if (dq.peek().left != null) {
					dq.offer(dq.peek().left);
				}
				if (dq.peek().right != null) {
					dq.offer(dq.peek().right);
				}
				dq.poll();
			}
		}
		return res;
	}
}