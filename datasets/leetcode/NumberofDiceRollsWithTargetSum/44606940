class Solution {
	int K;
	int N;
	Integer dp;
	int mod = (int) 1e9 + 7;
	int getCount(int counter, int sum, int target) {
		if (counter == N) {
			if (sum == target) {
				return 1;
			}
			return 0;
		}
		if (dp[counter][sum] != null) {
			return dp[counter][sum];
		}
		int ans = 0;
		for (int i = 1; i <= K; i++) {
			if (sum + i <= target) {
				ans = (ans + (getCount(counter + 1,sum + i,target)) % mod) % mod;
			} 
			else {
				break;
			}
		}
		return dp[counter][sum] = ans;
	}
	int numRollsToTarget(int n, int k, int target) {
		K = k;
		N = n;
		dp = new Integer[n][target + 1];
		return getCount(0,0,target);
	}
}