class Solution {
	int dfs(TreeNode root, boolean direction, int steps) {
		int left = steps;
		int right = steps;
		if (direction) {
			if (root.left != null) {
				left = dfs(root.left,false,steps + 1);
			}
			if (root.right != null) {
				right = dfs(root.right,true,1);
			}
		} 
		else {
			if (root.left != null) {
				left = dfs(root.left,false,1);
			}
			if (root.right != null) {
				right = dfs(root.right,true,steps + 1);
			}
		}
		return Math.max(left,right);
	}
	int longestZigZag(TreeNode root) {
		int left = 0;
		if (root.left != null) {
			left = dfs(root.left,false,1);
		}
		int right = 0;
		if (root.right != null) {
			right = dfs(root.right,true,1);
		}
		return Math.max(left,right);
	}
}