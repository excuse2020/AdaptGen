class Solution {
	int[] clean(int[] a, int b) {
		a[b] = 0;
		return a;
	}
	int[][] create(int[][] c, int[] b, int a) {
		for (int i = 0; i < b.length; i++) {
			c[a][i] = b[i];
		}
		return c;
	}
	int[] max(int[] a) {
		int max = 0;
		int index = 0;
		int[] maxArray = new int[2];
		for (int i = 0; i < a.length; i++) {
			if (a[i] >= max) {
				max = a[i];
				index = i;
				maxArray[0] = max;
				maxArray[1] = index;
			}
		}
		return maxArray;
	}
	int maxProduct(int[] nums) {
		int[] tumptytumtoes = new int[nums.length];
		for (int i = 0; i < tumptytumtoes.length; i++) {
			tumptytumtoes[i] = nums[i];
		}
		int[][] list = new int[10000][2];
		for (int i = 0; i < 2; i++) {
			int[] temp = max(tumptytumtoes);
			list = create(list,temp,i);
			clean(tumptytumtoes,temp[1]);
		}
		int product = product(list);
		return product;
	}
	int product(int[][] a) {
		int product = 1;
		for (int i = 0; i < a.length; i++) {
			if (a[i][0] > 0) {
				product *= (a[i][0] - 1);
			}
		}
		return product;
	}
}