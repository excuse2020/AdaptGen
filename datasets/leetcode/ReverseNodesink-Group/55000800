class Solution {
	ListNode reverseKGroup(ListNode head, int k) {
		if (head == null || head.next == null || k == 1) {
			return head;
		}
		int n = 0;
		ListNode curr = head;
		ListNode dummy = new ListNode(-1, head);
		ListNode sublistHead = curr, end = dummy;
		while (curr != null) {
			n++;
			curr = curr.next;
		}
		curr = head;
		for (int i = 0; i < n / k; i++) {
			ListNode preNode = null;
			for (int j = 0; j < k; j++) {
				ListNode next = curr.next;
				curr.next = preNode;
				preNode = curr;
				curr = next;
			}
			end.next = preNode;
			end = sublistHead;
			sublistHead = curr;
		}
		end.next = sublistHead;
		return dummy.next;
	}
}