class Solution {
	int distanceBetweenBusStops(int[] distance, int start, int destination) {
		int d1 = distanceBetweenBusStopsBackward(distance,start,destination);
		int d2 = distanceBetweenBusStopsForward(distance,start,destination);
		return Math.min(d1,d2);
	}
	int distanceBetweenBusStopsBackward(int[] dist, int s, int dest) {
		int n = dist.length;
		int totalDist = 0;
		int start = s;
		while (start != dest) {
			start -= 1;
			if (start < 0) {
				start += n;
			}
			totalDist += dist[start];
		}
		return totalDist;
	}
	int distanceBetweenBusStopsForward(int[] dist, int s, int dest) {
		int n = dist.length;
		int totalDist = 0;
		int start = s;
		while (start != dest) {
			totalDist += dist[start];
			start = (start + 1) % n;
		}
		return totalDist;
	}
}