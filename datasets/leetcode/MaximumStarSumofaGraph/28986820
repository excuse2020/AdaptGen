class Solution {
	int maxStarSum(int[] vals, int[][] edges, int k) {
		List<List<Integer>> graph = new ArrayList<>();
		int n = vals.length;
		for (int i = 0; i < n; i++) {
			graph.add(new ArrayList<>());
		}
		for (int i = 0; i < edges.length; i++) {
			graph.get(edges[i][0]).add(edges[i][1]);
			graph.get(edges[i][1]).add(edges[i][0]);
		}
		for (int i = 0; i < n; i++) {
			Collections.sort(graph.get(i),(o1, o2) -> {Integer.compare(vals[o1],vals[o2])});
		}
		int ans = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			int sum = vals[i];
			List<Integer> children = graph.get(i);
			int temp = k;
			for (int j = children.size() - 1; j >= 0 && temp > 0; j--) {
				if (sum + vals[children.get(j)] > sum) {
					sum += vals[children.get(j)];
					temp--;
				}
			}
			ans = Math.max(ans,sum);
		}
		return ans;
	}
}