class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		if (triangle == null || triangle.size() == 0) {
			return 0;
		}
		for (int i = triangle.size() - 2; i >= 0; i--) {
			List<Integer> currentRow = triangle.get(i);
			List<Integer> nextRow = triangle.get(i + 1);
			for (int j = 0; j < currentRow.size(); j++) {
				int currentValue = currentRow.get(j);
				int minPathSum = Math.min(nextRow.get(j),nextRow.get(j + 1));
				currentRow.set(j,currentValue + minPathSum);
			}
		}
		return triangle.get(0).get(0);
	}
}