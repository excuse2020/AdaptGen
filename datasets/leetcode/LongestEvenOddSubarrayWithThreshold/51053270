class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int maxLength = 0;
		int currLength = 0;
		boolean isPrevEven = false;
		boolean isPrevPassThreshold = true;
		for (int n: nums) {	
			boolean isCurrentEven = n % 2 == 0;
			boolean isPassThreshold = n <= threshold;
			if (isPrevEven != isCurrentEven && isPassThreshold && isPrevPassThreshold) {
				currLength++;
			} 
			else {
				maxLength = Math.max(currLength,maxLength);
				currLength = isCurrentEven && isPassThreshold ? 1 : 0;
			}
			isPrevEven = isCurrentEven;
			isPrevPassThreshold = isPassThreshold;
		}
		return Math.max(currLength,maxLength);
	}
}