class Solution {
	String countAndSay(int n) {
		if (n == 1) {
			return "1";
		}
		if (n == 2) {
			return "11";
		}
		return help("11",2,n);
	}
	String help(String pres, int indx, int n) {
		if (indx == n) {
			return pres;
		}
		int i = 0;
		StringBuilder curr = new StringBuilder();
		while (i < pres.length()) {
			int count = 1;
			char digit = pres.charAt(i);
			if (i == pres.length() - 1) {
				curr.append(String.valueOf(count));
				curr.append(digit);
				i++;
				continue;
			}
			while (i < pres.length() - 1 && pres.charAt(i) == pres.charAt(i + 1)) {
				i++;
				count++;
			}
			curr.append(String.valueOf(count));
			curr.append(digit);
			i++;
		}
		return help(curr.toString(),indx + 1,n);
	}
}