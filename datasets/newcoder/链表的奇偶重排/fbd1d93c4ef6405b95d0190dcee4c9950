class Solution {
	ListNode oddEvenList(ListNode head) {
		ListNode p = head;
		ListNode newHead1 = new ListNode(-1);
		ListNode newHead2 = new ListNode(-1);
		int count = 0;
		ListNode cur1 = newHead1;
		ListNode cur2 = newHead2;
		while (p != null) {
			if (count % 2 == 0) {
				ListNode node = new ListNode(p.val);
				cur1.next = node;
				cur1 = node;
			} 
			else {
				ListNode node = new ListNode(p.val);
				cur2.next = node;
				cur2 = node;
			}
			p = p.next;
			count++;
		}
		cur1.next = newHead2.next;
		cur2.next = null;
		return newHead1.next;
	}
}