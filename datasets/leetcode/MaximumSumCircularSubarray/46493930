class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int n = nums.length;
		int maxSum = Integer.MIN_VALUE;
		int sum = 0;
		for (int i = 0; i < n; i++) {
			sum += nums[i];
			if (sum > maxSum) {
				maxSum = sum;
			}
			if (sum < 0) {
				sum = 0;
			}
		}
		int total = 0;
		for (int i = 0; i < n; i++) {
			total += nums[i];
			nums[i] = -nums[i];
		}
		int minSum = Integer.MIN_VALUE;
		sum = 0;
		for (int i = 0; i < n; i++) {
			sum += nums[i];
			if (sum > minSum) {
				minSum = sum;
			}
			if (sum < 0) {
				sum = 0;
			}
		}
		if (maxSum < 0) {
			return maxSum;
		} 
		else {
			return Math.max(maxSum,total + minSum);
		}
	}
}