class Solution {
	int memo;
	int maxMove(int i, int j, int a) {
		if (memo[i][j] == -1) {
			if (j == a[0].length - 1) {
				return 0;
			}
			int x = 0, y = 0, z = 0;
			if (i != 0 && a[i - 1][j + 1] > a[i][j]) {
				x = 1 + maxMove(i - 1,j + 1,a);
			}
			if (a[i][j + 1] > a[i][j]) {
				y = 1 + maxMove(i,j + 1,a);
			}
			if (i != a.length - 1 && a[i + 1][j + 1] > a[i][j]) {
				z = 1 + maxMove(i + 1,j + 1,a);
			}
			memo[i][j] = Math.max(z,Math.max(x,y));
		}
		return memo[i][j];
	}
	int maxMoves(int[][] grid) {
		memo = new int[grid.length + 1][grid[0].length + 1];
		int max = 0;
		for (int i = 0; i < memo.length; i++) {
			for (int j = 0; j < memo[0].length; j++) {
				memo[i][j] = -1;
			}
		}
		for (int i = 0; i < grid.length; i++) {
			max = Math.max(max,maxMove(i,0,grid));
		}
		return max;
	}
}