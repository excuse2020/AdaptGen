class Solution {
	List<String> generateParenthesis(int n) {
		int open = n;
		int close = n;
		List<String> list = new ArrayList<String>();
		String str = "";
		recursion(list,str,open,close);
		return list;
	}
	void recursion(List<String> ans, String str, int open, int close) {
		if (open == 0 && close == 0) {
			ans.add(str);
			return;
		}
		if (open != 0) {
			recursion(ans,str + "(",open - 1,close);
		}
		if (close > open) {
			recursion(ans,str + ")",open,close - 1);
		}
	}
}