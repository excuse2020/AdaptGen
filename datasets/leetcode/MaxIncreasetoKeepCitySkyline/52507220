class Solution {
	int col;
	int row;
	int maxCol(int grid, int j) {
		int max = 0;
		for (int index = 0; index < col; index++) {
			if (grid[index][j] > max) {
				max = grid[index][j];
			}
		}
		return max;
	}
	int maxIncreaseKeepingSkyline(int[][] grid) {
		row = grid.length;
		col = grid.length;
		int result = 0;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				int maxElemInRow = maxRow(grid,i);
				int maxElemInCol = maxCol(grid,j);
				int minBoth = Math.min(maxElemInRow,maxElemInCol);
				int diff = minBoth - grid[i][j];
				result += diff;
			}
		}
		return result;
	}
	int maxRow(int grid, int i) {
		int max = 0;
		for (int index = 0; index < row; index++) {
			if (grid[i][index] > max) {
				max = grid[i][index];
			}
		}
		return max;
	}
}