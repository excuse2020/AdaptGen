class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		int count = 0;
		List<List<Integer>> arr = new ArrayList<>();
		if (root == null) {
			return arr;
		}
		while (!queue.isEmpty()) {
			List<Integer> list = new ArrayList<>();
			count = queue.size();
			while (count > 0) {
				TreeNode curr = queue.poll();
				if (curr != null) {
					list.add(curr.val);
					if (curr.left != null) {
						queue.add(curr.left);
					}
					if (curr.right != null) {
						queue.add(curr.right);
					}
				}
				count--;
			}
			arr.add(list);
		}
		Collections.reverse(arr);
		return arr;
	}
}