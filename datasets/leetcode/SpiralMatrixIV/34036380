class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] matrix = new int[m][n];
		int minrow = 0;
		int maxrow = m - 1;
		int mincol = 0;
		int maxcol = n - 1;
		ListNode temp = head;
		int total = m * n;
		int cnt = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				matrix[i][j] = -1;
			}
		}
		while (cnt < total && temp != null) {
			for (int i = minrow, j = mincol; j <= maxcol && temp != null && cnt < total; j++) {
				matrix[i][j] = temp.val;
				temp = temp.next;
				cnt++;
			}
			minrow++;
			for (int i = minrow, j = maxcol; i <= maxrow && temp != null && cnt < total; i++) {
				matrix[i][j] = temp.val;
				temp = temp.next;
				cnt++;
			}
			maxcol--;
			for (int i = maxrow, j = maxcol; j >= mincol && temp != null && cnt < total; j--) {
				matrix[i][j] = temp.val;
				temp = temp.next;
				cnt++;
			}
			maxrow--;
			for (int i = maxrow, j = mincol; i >= minrow && temp != null && cnt < total; i--) {
				matrix[i][j] = temp.val;
				temp = temp.next;
				cnt++;
			}
			mincol++;
		}
		return matrix;
	}
}