class Solution {
	boolean checkFlipEquiv(TreeNode n1, TreeNode n2) {
		if (n1 == null && n2 == null) {
			return true;
		}
		if (n1 == null || n2 == null) {
			return false;
		}
		if (n1.val == n2.val) {
			boolean leftOk = checkFlipEquiv(n1.left,n2.left);
			boolean rightOk = checkFlipEquiv(n1.right,n2.right);
			if (!leftOk || !rightOk) {
				leftOk = checkFlipEquiv(n1.right,n2.left);
				rightOk = checkFlipEquiv(n1.left,n2.right);
			}
			return leftOk && rightOk;
		} 
		else {
			return false;
		}
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return checkFlipEquiv(root1,root2);
	}
}