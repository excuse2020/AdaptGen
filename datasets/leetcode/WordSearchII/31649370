class Solution {
	TrieNode buildTrie(String[] words) {
		TrieNode root = new TrieNode();
		TrieNode p = root;
		int i;
	}
	void dfs(char[][] board, int i, int j, TrieNode p, List<String> res) {
		char c = board[i][j];
	}
	List<String> findWords(char[][] board, String[] words) {
		List<String> res = new ArrayList<>();
		TrieNode root = buildTrie(words);
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length; j++) {
				dfs(board,i,j,root,res);
			}
		}
		return res;
	}
	class TrieNode {
		TrieNode[] next = new TrieNode[26];
		String word;
	}
}