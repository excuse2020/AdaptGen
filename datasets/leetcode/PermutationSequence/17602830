class Solution {
	String ans = "";
	int count = 0;
	String getPermutation(int n, int k) {
		boolean[] vis = new boolean[n];
		count = k;
		StringBuilder s = new StringBuilder();
		int i = 0;
	}
	void permutations(StringBuilder s, StringBuilder temp, boolean[] vis) {
		if (count == 0) {
			return;
		}
		if (temp.length() == s.length()) {
			count--;
			if (count == 0) {
				ans = temp.toString();
			}
			return;
		}
		for (int i = 0; i < s.length(); i++) {
			if (!vis[i]) {
				vis[i] = true;
				temp.append(s.charAt(i));
				permutations(s,temp,vis);
				temp.deleteCharAt(temp.length() - 1);
				vis[i] = false;
			}
		}
	}
}