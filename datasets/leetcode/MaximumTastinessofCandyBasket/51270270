class Solution {
	boolean check(int tastiness, int[] price, int k) {
		int count = 1;
		int last = price[0];
		for (int i = 1; i <= price.length - 1; i++) {
			if (price[i] - last >= tastiness) {
				count++;
				if (count >= k) {
					return true;
				}
				last = price[i];
			}
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int min = 0;
		if (price.length < k) {
			return 0;
		}
		int max = price[price.length - 1] - price[0];
		while (min <= max) {
			int mid = min + (max - min) / 2;
			if (check(mid,price,k)) {
				min = mid + 1;
			} 
			else {
				max = mid - 1;
			}
		}
		return max;
	}
}