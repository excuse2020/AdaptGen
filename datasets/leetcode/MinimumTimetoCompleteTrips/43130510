class Solution {
	long minimumTime(int[] time, int totalTrips) {
		int n = time.length;
		long min = Integer.MAX_VALUE;
		for (int i = 0; i < n; i++) {
			min = Math.min(min,time[i]);
		}
		long end = min * totalTrips;
		long st = 0, minTime = Long.MAX_VALUE;
		while (st <= end) {
			long mid = (st + end) / 2;
			long trips = 0;
			for (int i = 0; i < n; i++) {
				trips += (mid / time[i]);
			}
			if (trips >= totalTrips) {
				minTime = Math.min(mid,minTime);
				end = mid - 1;
			} 
			else {
				st = mid + 1;
			}
		}
		return minTime;
	}
}