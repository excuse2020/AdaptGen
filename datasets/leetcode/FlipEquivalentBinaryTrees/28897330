class Solution {
	void dfs(TreeNode root, List<Integer> val) {
		if (root != null) {
			val.add(root.val);
			int l = root.left != null ? root.left.val : -1;
			int r = root.right != null ? root.right.val : -1;
			if (l < r) {
				dfs(root.left,val);
				dfs(root.right,val);
			} 
			else {
				dfs(root.right,val);
				dfs(root.left,val);
			}
			val.add(-1);
		}
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		List<Integer> firstTreeVal = new ArrayList<>(100);
		List<Integer> secondTreeVal = new ArrayList<>(100);
		dfs(root1,firstTreeVal);
		dfs(root2,secondTreeVal);
		return firstTreeVal.equals(secondTreeVal);
	}
}