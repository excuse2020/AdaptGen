class Solution {
	int dfs(int[][] mat, int i, int j, int pre) {
		if (mat[i][j] <= pre) {
			return 0;
		}
		int max = 0;
		if (i > 0) {
			max = Math.max(max,dfs(mat,i - 1,j,mat[i][j]));
		}
		if (j > 0) {
			max = Math.max(max,dfs(mat,i,j - 1,mat[i][j]));
		}
		if (i < mat.length - 1) {
			max = Math.max(max,dfs(mat,i + 1,j,mat[i][j]));
		}
		if (j < mat[i].length - 1) {
			max = Math.max(max,dfs(mat,i,j + 1,mat[i][j]));
		}
		return max + 1;
	}
	int solve(int[][] matrix) {
		int max = 0;
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[i].length; j++) {
				max = Math.max(max,dfs(matrix,i,j,-1));
			}
		}
		return max;
	}
}