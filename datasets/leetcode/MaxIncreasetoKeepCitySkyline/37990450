class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int n = grid.length;
		int[] rowNums = new int[n];
		int[] colNums = new int[n];
		for (int r = 0; r < n; r++) {
			int maxElmRow = 0;
			int maxElmCol = 0;
			for (int c = 0; c < n; c++) {
				maxElmRow = Math.max(maxElmRow,grid[r][c]);
				maxElmCol = Math.max(maxElmCol,grid[c][r]);
			}
			rowNums[r] = maxElmRow;
			colNums[r] = maxElmCol;
		}
		int ans = 0;
		for (int r = 0; r < n; r++) {
			for (int c = 0; c < n; c++) {
				int val = Math.min(rowNums[r],colNums[c]);
				if (grid[r][c] < val) {
					ans += val - grid[r][c];
				}
			}
		}
		return ans;
	}
}