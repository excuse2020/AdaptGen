class Solution {
	Long dp;
	long getMax(int[][] qu, int idx, int n) {
		if (idx >= n) {
			return 0;
		}
		if (dp[idx] != null) {
			return dp[idx];
		}
		long left = qu[idx][0] + getMax(qu,idx + qu[idx][1],n);
		long right = getMax(qu,idx + 1,n);
		return dp[idx] = Math.max(left,right);
	}
	long mostPoints(int[][] qu) {
		int n = qu.length;
		dp = new Long[n];
		return getMax(qu,0,n);
	}
}