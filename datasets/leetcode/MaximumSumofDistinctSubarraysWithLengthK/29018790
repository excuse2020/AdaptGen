class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long ans = 0;
		long sum = 0;
		int i = 0, j = 0;
		int n = nums.length;
		HashMap<Integer, Integer> map = new HashMap<>();
		while (j < n) {
			map.put(nums[j],map.getOrDefault(nums[j],0) + 1);
			sum += nums[j];
			if (j - i + 1 < k) {
				j++;
			} 
			else {
				if (map.size() == k) {
					ans = Math.max(ans,sum);
				}
				sum -= nums[i];
				map.put(nums[i],map.get(nums[i]) - 1);
				if (map.get(nums[i]) == 0) {
					map.remove(nums[i]);
				}
				i++;
				j++;
			}
		}
		return ans;
	}
}