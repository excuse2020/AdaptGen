class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> bstList = new ArrayList<>();
		storeBstValIntoList(bstList,root);
		int n = bstList.size();
		return helper(bstList,0,n - 1);
	}
	TreeNode helper(List<Integer> list, int start, int end) {
		if (start > end) {
			return null;
		}
		int middle = (end - start) / 2 + start;
		TreeNode root = new TreeNode(list.get(middle));
		root.left = helper(list,start,middle - 1);
		root.right = helper(list,middle + 1,end);
		return root;
	}
	void storeBstValIntoList(List<Integer> list, TreeNode root) {
		if (root == null) {
			return;
		}
		storeBstValIntoList(list,root.left);
		list.add(root.val);
		storeBstValIntoList(list,root.right);
	}
}