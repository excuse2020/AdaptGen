class Solution {
	int minOperations(int n) {
		int diff = Math.min(n - prevPower(n),nexPower(n) - n);
		if (diff == 0) {
			return 1;
		}
		return 1 + minOperations(diff);
	}
	int nexPower(int n) {
		if ((n & (n - 1)) == 0) {
			return n;
		}
		return (int) (0x4000000000000000L >> (Long.numberOfLeadingZeros(n) - 2));
	}
	int prevPower(int n) {
		if ((n & (n - 1)) == 0) {
			return n;
		}
		return 1 << (Integer.toBinaryString(n).length() - 1);
	}
}