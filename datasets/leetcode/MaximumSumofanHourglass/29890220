class Solution {
	int maxSum(int[][] grid) {
		int maxSum = 0;
		for (int r = 0; r < grid.length - 2; r++) {
			int sum = 0, prevMid = 0;
			for (int c = 0; c < grid[0].length; c++) {
				sum += grid[r][c] + grid[r + 2][c];
				if (c >= 2) {
					sum += grid[r + 1][c - 1] - prevMid;
					prevMid = grid[r + 1][c - 1];
					maxSum = Math.max(sum,maxSum);
					sum -= grid[r][c - 2] + grid[r + 2][c - 2];
				}
			}
		}
		return maxSum;
	}
}