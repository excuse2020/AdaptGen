class Solution {
	int fun(int x, int y, int[][] g, int[][] dp) {
		if (x < 0 || y < 0) {
			return 0;
		}
		if (dp[x][y] != -1) {
			return dp[x][y];
		}
		if (g[x][y] == 1) {
			return dp[x][y] = 0;
		}
		if (x == 0 && y == 0) {
			return dp[x][y] = 1;
		}
		return dp[x][y] = fun(x - 1,y,g,dp) + fun(x,y - 1,g,dp);
	}
	int uniquePathsWithObstacles(int[][] g) {
		int dp = new int[g.length][g[0].length];
		for (int i = 0; i < g.length; i++) {
			for (int j = 0; j < g[0].length; j++) {
				dp[i][j] = -1;
			}
		}
		if (g[0][0] == 1 || g[g.length - 1][g[0].length - 1] == 1) {
			return 0;
		}
		int a = fun(g.length - 1,g[0].length - 1,g,dp);
		return dp[g.length - 1][g[0].length - 1];
	}
}