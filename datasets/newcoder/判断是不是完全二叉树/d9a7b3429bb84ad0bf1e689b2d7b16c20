class Solution {
	int num = -1;
	boolean isCompleteTree(TreeNode root) {
		if (root == null) {
			return true;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(root);
		while (!queue.isEmpty()) {
			int size = queue.size();
			while (size-- > 0) {
				TreeNode node = queue.poll();
				if (node.left == null && node.right != null) {
					return false;
				}
				if (num > -1 && (node.left != null || node.right != null)) {
					return false;
				}
				if (node.left == null || node.right == null) {
					num = 0;
				}
				if (node.left != null) {
					queue.offer(node.left);
				}
				if (node.right != null) {
					queue.offer(node.right);
				}
			}
		}
		return true;
	}
}