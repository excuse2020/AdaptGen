class Solution {
	ListNode reverseKGroup(ListNode head, int k) {
		if (head == null || head.next == null) {
			return head;
		}
		if (k <= 1) {
			return head;
		}
		ListNode myNode = new ListNode(0);
		myNode.next = head;
		ListNode p1 = head.next.next;
		ListNode p2 = myNode;
		ListNode p3 = myNode;
		int nodeCount = 2;
		for (; p1 != null; p1 = p1.next, nodeCount++) {
		}
		p1 = myNode;
		while (k <= nodeCount) {
			p2 = p1.next;
			p3 = p2.next;
			for (int e = 1; e < k; e++) {
				p2.next = p3.next;
				p3.next = p1.next;
				p1.next = p3;
				p3 = p2.next;
			}
			p1 = p2;
			nodeCount = nodeCount - k;
		}
		return myNode.next;
	}
}