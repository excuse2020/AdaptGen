class Solution {
	List<Integer> nodeList = new ArrayList<>();
	int KthNode(TreeNode proot, int k) {
		if (proot == null) {
			return -1;
		}
		if (k == 0) {
			return -1;
		}
		dfs(proot,k);
		if (k <= nodeList.size()) {
			return nodeList.get(k - 1);
		}
		return -1;
	}
	void dfs(TreeNode tree, int k) {
		if (tree == null) {
			return;
		}
		dfs(tree.left,k);
		nodeList.add(tree.val);
		if (nodeList.size() == k) {
			return;
		}
		dfs(tree.right,k);
	}
}