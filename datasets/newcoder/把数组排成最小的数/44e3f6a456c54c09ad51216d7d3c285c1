class Solution {
	String PrintMinNumber(int[] numbers) {
		quicksort(0,numbers.length - 1,numbers);
		String res = "";
		for (int i = 0; i < numbers.length; ++i) {
			res += numbers[i];
		}
		return res;
	}
	boolean cmp(int n1, int n2) {
		String s1 = n1 + "";
		String s2 = n2 + "";
		for (int i = 0; i < s1.length(); ++i) {
			if (s1.charAt(i) > s2.charAt(i)) {
				return true;
			} 
			else if (s1.charAt(i) < s2.charAt(i)) {
				return false;
			}
		}
		return true;
	}
	int partion(int low, int high, int numbers) {
		int pivot = numbers[low];
		while (low < high) {
			while (low < high && cmp(numbers[high],pivot)) {
				--high;
			}
			numbers[low] = numbers[high];
			while (low < high && cmp(pivot,numbers[low])) {
				++low;
			}
			numbers[high] = numbers[low];
			numbers[low] = pivot;
		}
		return low;
	}
	void quicksort(int low, int high, int numbers) {
		if (low < high) {
			int mid = partion(low,high,numbers);
			quicksort(low,mid - 1,numbers);
			quicksort(mid + 1,high,numbers);
		}
	}
}