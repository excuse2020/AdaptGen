class Solution {
	String removeDuplicates(String s, int k) {
		Stack<Pair<Character, Integer>> stack = new Stack<>();
		for (int i = 0; i < s.length(); i++) {
			char ch = s.charAt(i);
			if (stack.isEmpty()) {
				stack.push(new Pair(ch, 1));
			} 
			else {
				Pair pair = stack.peek();
				if ((char) pair.getKey() == ch) {
					if ((int) pair.getValue() == k - 1) {
						for (int j = 0; j < k - 1; j++) {
							stack.pop();
						}
					} 
					else {
						stack.push(new Pair(ch, (int) pair.getValue() + 1));
					}
				} 
				else {
					stack.push(new Pair(ch, 1));
				}
			}
		}
		StringBuilder sb = new StringBuilder();
		while (!stack.isEmpty()) {
			Pair pair = stack.pop();
			Character c = (Character) pair.getKey();
			sb.append(c);
		}
		return sb.reverse().toString();
	}
}