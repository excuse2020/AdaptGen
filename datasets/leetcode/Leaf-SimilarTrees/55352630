class Solution {
	List<Integer> leaf(TreeNode root, List<Integer> list) {
		if (root.left == null && root.right == null) {
			list.add(root.val);
		}
		if (root.left != null) {
			leaf(root.left,list);
		}
		if (root.right != null) {
			leaf(root.right,list);
		}
		return list;
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		List<Integer> r1 = new ArrayList<>();
		List<Integer> r2 = new ArrayList<>();
		r1 = leaf(root1,r1);
		r2 = leaf(root2,r2);
		if (r1.size() != r2.size()) {
			return false;
		}
		for (int i = 0; i < r1.size(); i++) {
			if (!r1.get(i).equals(r2.get(i))) {
				return false;
			}
		}
		return true;
	}
}