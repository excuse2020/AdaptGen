class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean arr = new boolean[n];
		for (int i = 2; i < n; i++) {
			if (!arr[i] && (long) i * i <= n) {
				for (int j = i * i; j < n; j += i) {
					arr[j] = true;
				}
			}
		}
		ArrayList<Integer> a = new ArrayList<>();
		List<List<Integer>> newa = new ArrayList<>();
		for (int i = 2; i < n; i++) {
			if (!arr[i]) {
				a.add(i);
			}
		}
		int i = 0, k = a.size() - 1;
		while (i <= k) {
			long sum = a.get(i) + a.get(k);
			if (sum == n) {
				newa.add(new ArrayList<>());
				newa.get(newa.size() - 1).add(a.get(i));
				newa.get(newa.size() - 1).add(a.get(k));
				i++;
				k--;
			} 
			else if (sum < n) {
				i++;
			} 
			else {
				k--;
			}
		}
		return newa;
	}
}