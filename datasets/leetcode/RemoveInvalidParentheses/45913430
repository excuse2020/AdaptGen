class Solution {
	void backtrack(char[] c, int start, StringBuilder path, Set<String> set, int remove, int left) {
		int n = c.length;
		if (path.length() == n - remove) {
			if (left == 0) {
				set.add(path.toString());
			}
			return;
		}
		if (left < 0) {
			return;
		}
		if (path.length() > n - remove) {
			return;
		}
		if (start == n) {
			return;
		}
		int i = start;
	}
	List<String> removeInvalidParentheses(String s) {
		int left = 0;
		int remove = 0;
		int n = s.length();
	}
}