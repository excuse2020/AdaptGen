class Solution {
	Map<String, Integer> cache = new HashMap<>();
	int backtrack(int[] rating, int curIdx, boolean ascend, int count) {
		String key = curIdx + ",";
		if (cache.containsKey(key)) {
			return cache.get(key);
		}
		if (count == 3) {
			return 1;
		}
		if (curIdx == rating.length) {
			return 0;
		}
		int res = 0;
		for (int i = curIdx + 1; i < rating.length; i++) {
			if (ascend == true && rating[curIdx] < rating[i]) {
				res += backtrack(rating,i,ascend,count + 1);
			}
			if (ascend == false && rating[curIdx] > rating[i]) {
				res += backtrack(rating,i,ascend,count + 1);
			}
		}
		cache.put(key,res);
		return res;
	}
	int numTeams(int[] rating) {
		int count = 0;
		for (int i = 0; i < rating.length; i++) {
			count += backtrack(rating,i,true,1);
			count += backtrack(rating,i,false,1);
		}
		return count;
	}
}