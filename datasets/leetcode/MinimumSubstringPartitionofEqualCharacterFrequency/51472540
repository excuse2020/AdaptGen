class Solution {
	int dp;
	boolean check(int freq) {
		int temp = -1;
		boolean zero = true;
		for (int i = 0; i < freq.length; i++) {
			if (temp == -1 && freq[i] > 0) {
				zero = false;
				temp = freq[i];
			} 
			else if (temp != -1 && freq[i] > 0) {
				if (freq[i] != temp) {
					return false;
				}
			}
		}
		return zero == true ? zero : true;
	}
	int minimumSubstringsInPartition(String s) {
		dp = new int[s.length()][26];
		for (int temp: dp) {	
			Arrays.fill(temp,-1);
		}
		return solve(s.toCharArray(),0,new int[26]);
	}
	int solve(char[] arr, int i, int freq) {
		if (i >= arr.length) {
			return 0;
		}
	}
}