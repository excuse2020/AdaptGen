class Solution {
	int alternatingSubarray(int[] nums) {
		if (nums.length == 1) {
			return -1;
		}
		int max = Integer.MIN_VALUE;
		int start = 0;
		int end = 1;
		int direction = 1;
		boolean found = false;
		int currentLength = 0;
		while (true) {
			if (end == nums.length) {
				break;
			}
			int num1 = nums[start];
			while (true) {
				if (nums[end] - num1 == direction) {
					num1 = nums[end];
					end++;
					direction = direction * -1;
					found = true;
					if (end == nums.length) {
						break;
					}
				} 
				else {
					break;
				}
			}
			currentLength = end - start;
			max = Math.max(max,currentLength);
			if (end < nums.length) {
				if (nums[end] == nums[end - 1] + 1) {
					start = end - 1;
				} 
				else {
					start = end;
					end++;
				}
				direction = 1;
			}
		}
		if (!found) {
			return -1;
		}
		return max;
	}
}