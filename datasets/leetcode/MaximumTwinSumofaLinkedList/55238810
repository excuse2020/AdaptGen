class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		ListNode toReverse = reverse(slow);
		int maxSum = 0;
		ListNode firstHalf = head;
		while (toReverse != null) {
			maxSum = Math.max(maxSum,toReverse.val + firstHalf.val);
			toReverse = toReverse.next;
			firstHalf = firstHalf.next;
		}
		return maxSum;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = prev;
			prev = head;
			head = next;
		}
		return prev;
	}
}