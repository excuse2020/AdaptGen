class Solution {
	int HowMany(String s, String t, int[][] memo) {
		int res = 0;
		if (t.length() == 0) {
			return 1;
		}
		if (t.length() > s.length()) {
			return 0;
		}
		if (t.length() == s.length()) {
			return (t.equals(s)) ? 1 : 0;
		}
		if (memo[s.length()][t.length()] != -1) {
			return memo[s.length()][t.length()];
		}
		char LastOfT = t.charAt(t.length() - 1);
		for (int i = 0; i < s.length(); i++) {
			if (s.charAt(i) == LastOfT) {
				res += HowMany(s.substring(0,i),t.substring(0,t.length() - 1),memo);
			}
		}
		memo[s.length()][t.length()] = res;
		return res;
	}
	int numDistinct(String s, String t) {
		int[][] memo = new int[s.length() + 1][t.length() + 1];
		for (int i = 0; i < s.length() + 1; i++) {
			for (int j = 0; j < t.length() + 1; j++) {
				memo[i][j] = -1;
			}
		}
		return HowMany(s,t,memo);
	}
}