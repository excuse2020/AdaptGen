class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		List<List<Integer>> ans = new ArrayList();
		boolean[] primes = primes(n);
		for (int i = 2; i <= n / 2; i++) {
			int j = n - i;
			if (primes[i] && primes[j]) {
				List<Integer> temp = new ArrayList();
				temp.add(i);
				temp.add(j);
				ans.add(temp);
			}
		}
		return ans;
	}
	boolean[] primes(int n) {
		boolean[] prime = new boolean[n + 1];
		for (int i = 2; i <= n; i++) {
			prime[i] = true;
		}
		prime[0] = false;
		prime[1] = false;
		for (int i = 2; i * i <= n; i++) {
			if (prime[i]) {
				for (int j = i * i; j <= n; j += i) {
					prime[j] = false;
				}
			}
		}
		return prime;
	}
}