class Solution {
	int length(ListNode head) {
		ListNode temp = head;
		int c = 0;
		while (temp != null) {
			temp = temp.next;
			c++;
		}
		return c;
	}
	ListNode modifiedList(int[] nums, ListNode head) {
		HashMap<Integer, Integer> map = new HashMap<>();
		int n = nums.length;
		for (int i = 0; i < n; i++) {
			map.put(nums[i],1);
		}
		ListNode dummy = new ListNode(-1);
		ListNode temp = dummy;
		while (head != null) {
			int value = head.val;
			if (map.containsKey(value)) {
				head = head.next;
				continue;
			} 
			else {
				temp.next = new ListNode(value);
				temp = temp.next;
			}
			head = head.next;
		}
		return dummy.next;
	}
}