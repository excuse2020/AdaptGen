class Solution {
	int pairSum(ListNode head) {
		if (head == null) {
			return 0;
		}
		ListNode left = head;
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode right = reverse(slow);
		int ans = 0;
		while (right != null) {
			int sum = right.val + left.val;
			ans = Math.max(ans,sum);
			left = left.next;
			right = right.next;
		}
		return ans;
	}
	ListNode reverse(ListNode head) {
		ListNode curr = head;
		ListNode next;
		ListNode prev = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}