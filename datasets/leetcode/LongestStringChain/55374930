class Solution {
	boolean compare(String s1, String s2) {
		if (s1.length() != s2.length() + 1) {
			return false;
		}
		int first = 0;
		int second = 0;
		while (first < s1.length()) {
			if (second < s2.length() && s1.charAt(first) == s2.charAt(second)) {
				first++;
				second++;
			} 
			else {
				first++;
			}
		}
		return first == s1.length() && second == s2.length();
	}
	int longestStrChain(String[] words) {
		Arrays.sort(words,Comparator.comparingInt());
		int dp = new int[words.length];
		Arrays.fill(dp,1);
		for (int i = 0; i < words.length; i++) {
			for (int j = 0; j < i; j++) {
				if (compare(words[i],words[j]) && dp[j] + 1 > dp[i]) {
					dp[i] = dp[j] + 1;
				}
			}
		}
		int maxi = 0;
		for (int i = 0; i < dp.length; i++) {
			maxi = Math.max(dp[i],maxi);
		}
		return maxi;
	}
}