class Solution {
	int MAX = Integer.MAX_VALUE;
	int minSteps(int n) {
		if (n == 1) {
			return 0;
		}
		return 1 + solve(1,1,n);
	}
	int solve(int screen, int copyBoard, int n) {
		if (screen > n) {
			return MAX;
		}
		if (screen == n) {
			return 0;
		}
		if (screen == copyBoard) {
			int afterPasteAns = solve(screen + copyBoard,copyBoard,n);
			return (afterPasteAns == MAX) ? MAX : afterPasteAns + 1;
		}
		int afterPasteAns = solve(screen + copyBoard,copyBoard,n);
		int afterCopyAns = solve(screen,screen,n);
		if (afterPasteAns == afterCopyAns && afterCopyAns == MAX) {
			return MAX;
		}
		return 1 + Math.min(afterCopyAns,afterPasteAns);
	}
}