class Solution {
	int max = 0;
	int longestPath(TreeNode root) {
		int output = 1;
		int val1 = 0, val2 = 0;
		boolean left = false, right = false;
		if (root.left != null) {
			val1 = longestPath(root.left);
			if (root.val == root.left.val) {
				output += val1;
				left = true;
			}
		}
		if (root.right != null) {
			val2 = longestPath(root.right);
			if (root.val == root.right.val) {
				output += val2;
				right = true;
			}
		}
		if (max < output) {
			max = output;
		}
		if (left && right) {
			if (val1 > val2) {
				return val1 + 1;
			} 
			else {
				return val2 + 1;
			}
		} 
		else {
			if (left) {
				return val1 + 1;
			} 
			else if (right) {
				return val2 + 1;
			} 
			else {
				return 1;
			}
		}
	}
	int longestUnivaluePath(TreeNode root) {
		if (root != null) {
			longestPath(root);
		}
		if (max == 0) {
			return 0;
		}
		return max - 1;
	}
}