class Solution {
	TreeNode BuildBST(List<Integer> elements, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode node = new TreeNode(elements.get(mid));
		node.left = BuildBST(elements,start,mid - 1);
		node.right = BuildBST(elements,mid + 1,end);
		return node;
	}
	void InOrder(TreeNode node, List<Integer> sorted) {
		if (node == null) {
			return;
		}
		InOrder(node.left,sorted);
		sorted.add(node.val);
		InOrder(node.right,sorted);
	}
	TreeNode balanceBST(TreeNode root) {
		List<Integer> sorted = new ArrayList<>();
		InOrder(root,sorted);
		return BuildBST(sorted,0,sorted.size() - 1);
	}
}