class Solution {
	int ans = 0;
	int findMaxLen(TreeNode root, int parent) {
		if (root == null) {
			return 0;
		}
		int lengthFromLeftSubTree = findMaxLen(root.left,root.val);
		int lengthFromRightSubTree = findMaxLen(root.right,root.val);
		int lengthThroughCurrentRoot = lengthFromLeftSubTree + lengthFromRightSubTree;
		ans = Math.max(ans,lengthThroughCurrentRoot);
		if (parent == root.val) {
			return Math.max(lengthFromLeftSubTree,lengthFromRightSubTree) + 1;
		}
		return 0;
	}
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		ans = 0;
		findMaxLen(root,root.val);
		return ans;
	}
}