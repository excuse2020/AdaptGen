class Solution {
	String LCS(String s1, String s2) {
		char[] arr1 = s1.toCharArray();
		char[] arr2 = s2.toCharArray();
		if (s1.length() < s2.length()) {
			arr1 = s2.toCharArray();
			arr2 = s1.toCharArray();
		}
		int max = 0;
		int[][] dp = new int[arr2.length + 1][arr1.length + 1];
		for (int i = 1; i <= arr2.length; i++) {
			for (int j = 1; j <= arr1.length; j++) {
				if (arr2[i - 1] == arr1[j - 1]) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
					if (dp[i][j] > max) {
						max = dp[i][j];
					}
				} 
				else {
					dp[i][j] = Math.max(dp[i - 1][j],dp[i][j - 1]);
				}
			}
		}
		if (max == 0) {
			return "-1";
		}
		char[] str = new char[max];
		for (int i = arr2.length, j = arr1.length; dp[i][j] >= 1; ) {
			if (arr2[i - 1] == arr1[j - 1]) {
				str[max - 1] = arr2[i - 1];
				i--;
				j--;
				max--;
			} 
			else if (dp[i - 1][j] >= dp[i][j - 1]) {
				i--;
			} 
			else {
				j--;
			}
		}
		return new String(str);
	}
}