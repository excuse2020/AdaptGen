class Solution {
	ListNode mid(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		return slow;
	}
	int pairSum(ListNode head) {
		ListNode middle = mid(head);
		ListNode rev = reverse(middle);
		ListNode dummy = head;
		int sum = Integer.MIN_VALUE;
		while (rev != null) {
			sum = Math.max(sum,dummy.val + rev.val);
			dummy = dummy.next;
			rev = rev.next;
		}
		return sum;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		ListNode curr = head;
		while (curr != null) {
			ListNode ahead = curr.next;
			curr.next = prev;
			prev = curr;
			curr = ahead;
		}
		return prev;
	}
}