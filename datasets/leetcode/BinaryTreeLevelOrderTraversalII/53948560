class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> wraplist = new LinkedList<>();
		Queue<TreeNode> q = new LinkedList<>();
		if (root == null) {
			return wraplist;
		}
		q.offer(root);
		while (!q.isEmpty()) {
			int levelnum = q.size();
			List<Integer> currentLevel = new ArrayList<>(levelnum);
			for (int i = 0; i < levelnum; i++) {
				TreeNode node = q.poll();
				if (node.left != null) {
					q.offer(node.left);
				}
				if (node.right != null) {
					q.offer(node.right);
				}
				currentLevel.add(node.val);
			}
			wraplist.add(0,currentLevel);
		}
		return wraplist;
	}
}