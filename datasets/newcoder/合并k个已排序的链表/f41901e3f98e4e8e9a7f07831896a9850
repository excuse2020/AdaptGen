class Solution {
	ListNode merge(ListNode listNode1, ListNode listNode2) {
		if (listNode1 == null) {
			return listNode2;
		}
		if (listNode2 == null) {
			return listNode1;
		}
		if (listNode1.val <= listNode2.val) {
			listNode1.next = merge(listNode1.next,listNode2);
			return listNode1;
		} 
		else {
			listNode2.next = merge(listNode1,listNode2.next);
			return listNode2;
		}
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		ListNode newListNode = new ListNode(-1000);
		for (int i = 0; i < lists.size(); i++) {
			ListNode listNode1 = newListNode;
			ListNode listNode2 = lists.get(i);
			newListNode = merge(listNode1,listNode2);
		}
		return newListNode.next;
	}
}