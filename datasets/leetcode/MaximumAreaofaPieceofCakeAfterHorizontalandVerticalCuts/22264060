class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int maxVDiff = 0;
		maxVDiff = Math.max(maxVDiff,verticalCuts[0] - 0);
		for (int i = 1; i < verticalCuts.length; i++) {
			maxVDiff = Math.max(maxVDiff,verticalCuts[i] - verticalCuts[i - 1]);
		}
		maxVDiff = Math.max(maxVDiff,w - verticalCuts[verticalCuts.length - 1]);
		int maxHDiff = 0;
		maxHDiff = Math.max(maxHDiff,horizontalCuts[0] - 0);
		for (int i = 1; i < horizontalCuts.length; i++) {
			maxHDiff = Math.max(maxHDiff,horizontalCuts[i] - horizontalCuts[i - 1]);
		}
		maxHDiff = Math.max(maxHDiff,h - horizontalCuts[horizontalCuts.length - 1]);
		return (int) ((long) maxHDiff * maxVDiff % 1000000007);
	}
}