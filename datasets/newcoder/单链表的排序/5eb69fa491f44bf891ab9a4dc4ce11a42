class Solution {
	ListNode merge(ListNode head1, ListNode head2) {
		ListNode res = new ListNode(0);
		ListNode cur = res;
		while (head1 != null && head2 != null) {
			if (head1.val <= head2.val) {
				cur.next = head1;
				cur = cur.next;
				head1 = head1.next;
			} 
			else {
				cur.next = head2;
				cur = cur.next;
				head2 = head2.next;
			}
		}
		if (head1 != null) {
			cur.next = head1;
		} 
		else {
			cur.next = head2;
		}
		return res.next;
	}
	ListNode sortInList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode left = head;
		ListNode mid = head.next;
		ListNode right = head.next.next;
		while (right != null && right.next != null) {
			left = left.next;
			mid = mid.next;
			right = right.next.next;
		}
		left.next = null;
		return merge(sortInList(head),sortInList(mid));
	}
}