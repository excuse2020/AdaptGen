class Solution {
	int bin(int[] f, int k) {
		int l = 0;
		int r = f.length - 1;
		int mid = (l + r) / 2;
		while (l <= r) {
			mid = (l + r) / 2;
			if (f[mid] > k) {
				r = mid - 1;
			}
			if (f[mid] <= k) {
				l = mid + 1;
			}
		}
		return r + 1;
	}
	int[] fullBloomFlowers(int[][] flowers, int[] people) {
		int s = new int[flowers.length];
		int e = new int[flowers.length];
		int ans = new int[people.length];
		for (int i = 0; i < flowers.length; i++) {
			s[i] = flowers[i][0];
			e[i] = flowers[i][1];
		}
		Arrays.sort(s);
		Arrays.sort(e);
		for (int i = 0; i < people.length; i++) {
			int bloom = bin(s,people[i]);
			int die = bin(e,people[i] - 1);
			ans[i] = bloom - die;
		}
		return ans;
	}
}