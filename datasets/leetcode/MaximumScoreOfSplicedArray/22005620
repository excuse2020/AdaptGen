class Solution {
	int kadane(int arr) {
		int max = -1;
		int a = new int[arr.length];
		for (int i = 0; i < a.length; i++) {
			if (i == 0) {
				a[i] = arr[0];
			} 
			else {
				if (a[i - 1] > 0) {
					a[i] = arr[i] + a[i - 1];
				} 
				else {
					a[i] = arr[i];
				}
			}
			max = Math.max(max,a[i]);
		}
		return max;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int arr1 = new int[nums1.length];
		int sum1 = 0;
		for (int i = 0; i < nums1.length; i++) {
			arr1[i] = nums2[i] - nums1[i];
			sum1 += nums1[i];
		}
		int max1 = kadane(arr1);
		int ans1 = Math.max(sum1,sum1 + max1);
		int arr2 = new int[nums1.length];
		int sum2 = 0;
		for (int i = 0; i < nums1.length; i++) {
			arr2[i] = nums1[i] - nums2[i];
			sum2 += nums2[i];
		}
		int max2 = kadane(arr2);
		int ans2 = Math.max(sum2,sum2 + max2);
		return Math.max(ans1,ans2);
	}
}