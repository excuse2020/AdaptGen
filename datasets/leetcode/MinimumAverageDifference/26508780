class Solution {
	int minimumAverageDifference(int[] nums) {
		int n = nums.length;
		List<Integer> list = new ArrayList<>();
		int res = new int[n];
		int pref = 0;
		int suf = 0;
		for (int i = 0; i < n; i++) {
			suf += nums[i];
		}
		for (int i = 0; i < n - 1; i++) {
			pref += nums[i];
			suf -= nums[i];
			int lem = pref / (i + 1);
			int sem = suf / (n - i);
			res[i] = Math.abs(lem - sem);
		}
		int freshSum = 0;
		for (int p: nums) {	
			freshSum += p;
		}
		res[n - 1] = Math.abs(freshSum / n);
		int min = Integer.MAX_VALUE;
		int result = -1;
		for (int p: res) {	
			if (p < min) {
				min = p;
			}
		}
		for (int i = 0; i < n; i++) {
			if (res[i] == min) {
				list.add(i);
			}
		}
		Collections.sort(list);
		return list.get(0);
	}
}