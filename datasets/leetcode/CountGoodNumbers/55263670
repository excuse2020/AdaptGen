class Solution {
	int MOD = (int) Math.pow(10,9) + 7;
	long calculatePowerWithRecursion(int x, long n) {
		if (n == 0) {
			return 1l;
		}
		long temp = calculatePowerWithRecursion(x,n / 2);
		if (n % 2 == 0) {
			return (temp * temp) % MOD;
		} 
		else {
			return (x * temp) % MOD;
		}
	}
	int countGoodNumbers(long n) {
		long evenIndices = (n + 1) / 2;
		long oddIndices = n / 2;
		return (int) ((calculatePowerWithRecursion(5,evenIndices) * calculatePowerWithRecursion(4,oddIndices)) % MOD);
	}
}