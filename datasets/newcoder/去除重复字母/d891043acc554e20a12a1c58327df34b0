class Solution {
	String removeDuplicateLetters(String str) {
		Stack<Character> stack = new Stack<>();
		boolean[] isVisited = new boolean[26];
		int[] lastIndex = new int[26];
		char[] chars = str.toCharArray();
		int len = chars.length;
		for (int i = 0; i < len; i++) {
			lastIndex[chars[i] - 'a'] = i;
		}
		for (int i = 0; i < len; i++) {
			if (isVisited[chars[i] - 'a']) {
				continue;
			}
			while (!stack.isEmpty() && stack.peek() > chars[i] && lastIndex[stack.peek() - 'a'] > i) {
				isVisited[stack.pop() - 'a'] = false;
			}
			stack.push(chars[i]);
			isVisited[chars[i] - 'a'] = true;
		}
		StringBuilder sb = new StringBuilder();
		while (!stack.isEmpty()) {
			sb.append(stack.pop());
		}
		return sb.reverse().toString();
	}
}