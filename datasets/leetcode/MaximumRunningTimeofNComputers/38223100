class Solution {
	boolean isPossible(int[] batteries, int comps, long time) {
		long timeNeeded = 0;
		for (int battery: batteries) {	
			if (battery < time) {
				timeNeeded = battery + timeNeeded;
			} 
			else {
				timeNeeded = timeNeeded + time;
			}
		}
		System.out.println(timeNeeded);
		if (time * comps <= timeNeeded) {
			return true;
		}
		return false;
	}
	long maxRunTime(int n, int[] batteries) {
		long lo = 1, hi = 0, sum = 0;
		for (int battery: batteries) {	
			sum = sum + battery;
		}
		hi = sum;
		long ans = -1;
		while (lo <= hi) {
			long mid = lo + (hi - lo) / 2;
			if (isPossible(batteries,n,mid)) {
				ans = mid;
				lo = mid + 1;
			} 
			else {
				hi = mid - 1;
			}
		}
		return ans;
	}
}