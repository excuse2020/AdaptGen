class Solution {
	int BinSearch(int[] arr, int k) {
		int low = 0;
		int hight = arr.length - 1;
		while (low <= hight) {
			int mid = (low + hight) / 2;
			if (arr[mid] == k) {
				return mid;
			} 
			else if (arr[mid] > k) {
				hight = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return -1;
	}
	int GetNumberOfK(int[] array, int k) {
		if (array.length == 0) {
			return 0;
		}
		int res = BinSearch(array,k);
		if (res == -1) {
			return 0;
		}
		int low = res - 1;
		int hight = res + 1;
		while (low > -1 && array[res] == array[low]) {
			low--;
		}
		while (hight < array.length && array[res] == array[hight]) {
			hight++;
		}
		return hight - low;
	}
}