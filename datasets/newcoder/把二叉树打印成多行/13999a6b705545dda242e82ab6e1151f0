class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		ArrayList<ArrayList<Integer>> list = new ArrayList<ArrayList<Integer>>();
		if (pRoot == null) {
			return list;
		}
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		queue.add(pRoot);
		TreeNode last = pRoot;
		TreeNode nlast = pRoot;
		ArrayList<Integer> res = new ArrayList<Integer>();
		while (!queue.isEmpty()) {
			TreeNode tmp = queue.poll();
			res.add(tmp.val);
			if (tmp.left != null) {
				queue.add(tmp.left);
				nlast = tmp.left;
			}
			if (tmp.right != null) {
				queue.add(tmp.right);
				nlast = tmp.right;
			}
			if (tmp == last) {
				list.add(res);
				last = nlast;
				res = new ArrayList<Integer>();
			}
		}
		return list;
	}
}