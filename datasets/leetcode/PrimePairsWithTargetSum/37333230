class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean[] isPrimeArr = new boolean[n + 1];
		Arrays.fill(isPrimeArr,true);
		int sqrt = (int) Math.sqrt(n);
		for (int i = 2; i <= sqrt; i++) {
			if (isPrimeArr[i]) {
				for (int j = 2; i * j <= n; j++) {
					isPrimeArr[i * j] = false;
				}
			}
		}
		List<List<Integer>> resList = new ArrayList<>();
		for (int i = 2; i <= n / 2; i++) {
			if (isPrimeArr[i] && isPrimeArr[n - i]) {
				resList.add(Arrays.asList(i,n - i));
			}
		}
		return resList;
	}
}