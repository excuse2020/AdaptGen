class Solution {
	void helper(TreeNode node, ArrayList<Integer> arr) {
		if (node != null) {
			if (node.left == null && node.right == null) {
				arr.add(node.val);
			}
			helper(node.left,arr);
			helper(node.right,arr);
		}
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		ArrayList<Integer> arr1 = new ArrayList<Integer>();
		ArrayList<Integer> arr2 = new ArrayList<Integer>();
		helper(root1,arr1);
		helper(root2,arr2);
		if (arr1.size() != arr2.size()) {
			return false;
		}
		for (int i = 0; i < arr1.size(); i++) {
			if (arr1.get(i) != arr2.get(i)) {
				return false;
			}
		}
		return true;
	}
}