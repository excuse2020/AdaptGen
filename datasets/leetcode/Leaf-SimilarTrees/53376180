class Solution {
	List<Integer> getLeafNodes(TreeNode node) {
		List<Integer> leaves = new ArrayList();
		getLeavesHelper(node,leaves);
		return leaves;
	}
	void getLeavesHelper(TreeNode node, List<Integer> leaves) {
		if (node == null) {
			return;
		}
		if (node.left == null && node.right == null) {
			leaves.add(node.val);
			return;
		}
		getLeavesHelper(node.left,leaves);
		getLeavesHelper(node.right,leaves);
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		List<Integer> leafNodes1 = getLeafNodes(root1);
		List<Integer> leafNodes2 = getLeafNodes(root2);
		return leafNodes1.equals(leafNodes2);
	}
}