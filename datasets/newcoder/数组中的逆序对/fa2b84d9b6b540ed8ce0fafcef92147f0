class Solution {
	int[] nums, temp;
	int InversePairs(int[] array) {
		nums = array;
		temp = new int[array.length];
		return merge_sort(0,array.length - 1);
	}
	int merge_sort(int l, int r) {
		if (l >= r) {
			return 0;
		}
		int m, i, j, k;
		long res;
		m = (l + r) / 2;
		res = (merge_sort(l,m) + merge_sort(m + 1,r)) % 1000000007;
		for (k = l; k <= r; k++) {
			temp[k] = nums[k];
		}
		i = l;
		j = m + 1;
		k = l;
		for (k = l; k <= r; k++) {
			if (i == m + 1) {
				nums[k] = temp[j++];
			} 
			else if (j == r + 1 || temp[i] <= temp[j]) {
				nums[k] = temp[i++];
			} 
			else {
				res = (res + m - i + 1) % 1000000007;
				nums[k] = temp[j++];
			}
		}
		return (int) res;
	}
}