class Solution {
	double solve(int a, int b, double[][] t) {
		if (a <= 0 && b <= 0) {
			return 0.5;
		}
		if (a <= 0) {
			return 1;
		}
		if (b <= 0) {
			return 0;
		}
		if (t[a][b] != -1.0) {
			return t[a][b];
		}
		double ans = 0;
		ans += solve(a - 100,b,t);
		ans += solve(a - 75,b - 25,t);
		ans += solve(a - 50,b - 50,t);
		ans += solve(a - 25,b - 75,t);
		return t[a][b] = ans / (double) 4.0;
	}
	double soupServings(int n) {
		if (n > 4800) {
			return 1;
		}
		double[][] t = new double[n + 1][n + 1];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= n; j++) {
				t[i][j] = -1.0;
			}
		}
		return solve(n,n,t);
	}
}