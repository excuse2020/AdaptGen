class Solution {
	boolean isPalindrome(ListNode head) {
		ListNode mid = middleNode(head);
		ListNode s = reverse(mid);
		ListNode f = head;
		while (head != null && s != null) {
			if (f.val != s.val) {
				return false;
			}
			f = f.next;
			s = s.next;
		}
		return true;
	}
	ListNode middleNode(ListNode head) {
		ListNode fast = head;
		ListNode slow = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		return slow;
	}
	ListNode reverse(ListNode mid) {
		if (mid == null) {
			return mid;
		}
		ListNode prev = null;
		ListNode present = mid;
		ListNode then = present.next;
		while (present != null) {
			present.next = prev;
			prev = present;
			present = then;
			if (then != null) {
				then = then.next;
			}
		}
		return prev;
	}
}