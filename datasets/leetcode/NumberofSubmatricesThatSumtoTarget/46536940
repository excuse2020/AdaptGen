class Solution {
	int numSubmatrixSumTarget(int[][] matrix, int target) {
		int result = 0;
		int rows = matrix.length;
		int col = matrix[0].length;
		for (int i = 0; i < rows; i++) {
			for (int j = 1; j < col; j++) {
				matrix[i][j] += matrix[i][j - 1];
			}
		}
		for (int i = 0; i < col; i++) {
			for (int j = i; j < col; j++) {
				HashMap<Integer, Integer> map = new HashMap<>();
				map.put(0,1);
				int cum = 0;
				for (int r = 0; r < rows; r++) {
					cum += matrix[r][j] - (i > 0 ? matrix[r][i - 1] : 0);
					if (map.containsKey(cum - target)) {
						result += map.get(cum - target);
					}
					map.put(cum,map.getOrDefault(cum,0) + 1);
				}
			}
		}
		return result;
	}
}