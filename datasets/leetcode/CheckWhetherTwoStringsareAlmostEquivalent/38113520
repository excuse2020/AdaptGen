class Solution {
	boolean checkAlmostEquivalent(String word1, String word2) {
		HashMap<Character, Integer> hw1 = new HashMap<Character, Integer>();
		HashMap<Character, Integer> hw2 = new HashMap<Character, Integer>();
		for (int i = 0; i < word1.length(); i++) {
			hw1.put(word1.charAt(i),hw1.getOrDefault(word1.charAt(i),0) + 1);
		}
		for (int i = 0; i < word1.length(); i++) {
			hw2.put(word2.charAt(i),hw2.getOrDefault(word2.charAt(i),0) + 1);
		}
		for (Map.Entry<Character, Integer> e: hw1.entrySet()) {	
			if (hw2.containsKey(e.getKey())) {
				if (Math.abs(hw2.get(e.getKey()) - e.getValue()) > 3) {
					return false;
				}
			} 
			else {
				if (e.getValue() > 3) {
					return false;
				}
			}
		}
		for (Map.Entry<Character, Integer> e: hw2.entrySet()) {	
			if (hw1.containsKey(e.getKey())) {
				if (Math.abs(hw1.get(e.getKey()) - e.getValue()) > 3) {
					return false;
				}
			} 
			else {
				if (e.getValue() > 3) {
					return false;
				}
			}
		}
		return true;
	}
}