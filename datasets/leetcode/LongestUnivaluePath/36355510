class Solution {
	int ans = 0;
	int directionalLength(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = directionalLength(root.left);
		int right = directionalLength(root.right);
		int leftside = 0;
		int rightside = 0;
		if (root.left != null && root.left.val == root.val) {
			leftside = left + 1;
		}
		if (root.right != null && root.right.val == root.val) {
			rightside = right + 1;
		}
		ans = Math.max(ans,leftside + rightside);
		return Math.max(leftside,rightside);
	}
	int longestUnivaluePath(TreeNode root) {
		directionalLength(root);
		return ans;
	}
}