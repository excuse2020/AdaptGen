class Solution {
	int partition(int[] a, int lb, int ub) {
		int pivot = a[lb];
		int start = lb;
		int end = ub;
		while (start < end) {
			while (start <= end && a[start] <= pivot) {
				start++;
			}
			while (start <= end && a[end] > pivot) {
				end--;
			}
			if (start < end) {
				swap(a,start,end);
			}
		}
		swap(a,lb,end);
		return end;
	}
	void quickSort(int[] a, int lb, int ub) {
		if (lb < ub) {
			int loc = partition(a,lb,ub);
			quickSort(a,lb,loc - 1);
			quickSort(a,loc + 1,ub);
		}
	}
	int[] sortArray(int[] nums) {
		quickSort(nums,0,nums.length - 1);
		return nums;
	}
	void swap(int[] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
}