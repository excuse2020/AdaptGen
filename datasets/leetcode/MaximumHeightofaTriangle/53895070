class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int r1 = red, r2 = red, b1 = blue, b2 = blue;
		int count1 = 0, count2 = 0, count = 0, countf = 0;
		int odd = 1, even = 2;
		while (r1 >= 0) {
			r1 -= odd;
			odd += 2;
			if (r1 >= 0) {
				count1++;
			}
		}
		while (b1 >= 0) {
			b1 -= even;
			even += 2;
			if (b1 >= 0) {
				count2++;
			}
		}
		if (count1 > count2) {
			count = count2 * 2 + 1;
		} 
		else if (count1 == count2) {
			count = count1 * 2;
		} 
		else {
			count = count1 * 2;
		}
		odd = 1;
		even = 2;
		count1 = 0;
		count2 = 0;
		while (b2 >= 0) {
			b2 -= odd;
			odd += 2;
			if (b2 >= 0) {
				count2++;
			}
		}
		while (r2 >= 0) {
			r2 -= even;
			even += 2;
			if (r2 >= 0) {
				count1++;
			}
		}
		if (count2 > count1) {
			countf = count1 * 2 + 1;
		} 
		else if (count1 == count2) {
			countf = count2 * 2;
		} 
		else {
			countf = count2 * 2;
		}
		return Math.max(count,countf);
	}
}