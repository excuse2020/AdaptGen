class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		Map<String, List<Integer>> map = new HashMap<>();
		int len = words.length;
		for (int i = 0; i < words.length; i++) {
			if (map.containsKey(words[i])) {
				List<Integer> list = map.get(words[i]);
				list.add(i);
				map.put(words[i],list);
			} 
			else {
				List<Integer> list = new ArrayList<>();
				list.add(i);
				map.put(words[i],list);
			}
		}
		if (!map.containsKey(target)) {
			return -1;
		}
		List<Integer> temp = map.get(target);
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < temp.size(); i++) {
			min = Math.min(min,Math.abs(temp.get(i) - startIndex));
			min = Math.min(min,len - Math.abs(temp.get(i) - startIndex));
		}
		return min;
	}
}