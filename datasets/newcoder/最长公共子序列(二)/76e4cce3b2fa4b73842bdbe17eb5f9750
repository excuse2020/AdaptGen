class Solution {
	String LCS(String s1, String s2) {
		int row = s1.length();
		int col = s2.length();
		int[][] dp = new int[row + 1][col + 1];
		for (int i = 0; i <= row; i++) {
			dp[i][0] = 0;
		}
		for (int i = 0; i <= col; i++) {
			dp[0][i] = 0;
		}
		for (int i = 1; i <= row; i++) {
			for (int j = 1; j <= col; j++) {
				if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
				} 
				else {
					dp[i][j] = Math.max(dp[i - 1][j],dp[i][j - 1]);
				}
			}
		}
		int i = row;
		int j = col;
		StringBuilder sb = new StringBuilder();
		while (i > 0 && j > 0) {
			if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
				sb.append(s1.charAt(i - 1));
				i--;
				j--;
			} 
			else {
				if (dp[i - 1][j] > dp[i][j - 1]) {
					i--;
				} 
				else if (dp[i - 1][j] < dp[i][j - 1]) {
					j--;
				} 
				else if (dp[i - 1][j] == dp[i][j - 1]) {
					i--;
				}
			}
		}
		String s = sb.reverse().toString();
		return s.length() == 0 ? "-1" : s;
	}
}