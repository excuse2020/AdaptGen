class Solution {
	boolean dfs(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		return root1 != null && root2 != null && root1.val == root2.val && ((dfs(root1.left,root2.left) && dfs(root1.right,root2.right)) || (dfs(root1.left,root2.right) && dfs(root1.right,root2.left)));
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return dfs(root1,root2);
	}
}