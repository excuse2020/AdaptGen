class Solution {
	void combSum(int i, List<List<Integer>> ans, int a, int t, List<Integer> ds) {
		if (i == a.length) {
			if (t == 0) {
				ans.add(new ArrayList<>(ds));
			}
			return;
		}
		if (a[i] <= t) {
			ds.add(a[i]);
			combSum(i,ans,a,t - a[i],ds);
			ds.remove(ds.size() - 1);
		}
		combSum(i + 1,ans,a,t,ds);
	}
	List<List<Integer>> combinationSum(int[] a, int t) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> ls = new ArrayList<>();
		int index = 0;
		combSum(index,ans,a,t,ls);
		return ans;
	}
}