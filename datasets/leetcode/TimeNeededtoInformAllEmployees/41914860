class Solution {
	int dfs(int cur, List workers, int[] informTime, int time) {
		int maxTime = time;
		if (workers[cur] != null) {
			for (int worker: (List<Integer>) workers[cur]) {	
				maxTime = Math.max(maxTime,dfs(worker,workers,informTime,time + informTime[worker]));
			}
		}
		return maxTime;
	}
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		List workers = new List[n];
		for (int i = 0; i < n; i++) {
			if (manager[i] != -1) {
				if (workers[manager[i]] == null) {
					workers[manager[i]] = new ArrayList();
				}
				workers[manager[i]].add(i);
			}
		}
		return dfs(headID,workers,informTime,informTime[headID]);
	}
}