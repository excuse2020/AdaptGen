class Solution {
	int[] diff(String word) {
		int n = word.length();
		int[] diff = new int[n - 1];
		for (int i = 0; i < n - 1; i++) {
			diff[i] = word.charAt(i + 1) - word.charAt(i);
		}
		return diff;
	}
	String oddString(String[] words) {
		int n = words.length;
		int[] arr1 = diff(words[0]);
		int[] arr2 = diff(words[1]);
		int[] arr3 = diff(words[2]);
		if (Arrays.equals(arr2,arr3) && !Arrays.equals(arr1,arr2)) {
			return words[0];
		}
		for (int i = 3; i < n; i++) {
			if (!Arrays.equals(arr1,arr2) && !Arrays.equals(arr2,arr3)) {
				return words[i - 2];
			}
			arr1 = arr2;
			arr2 = arr3;
			arr3 = diff(words[i]);
		}
		if (!Arrays.equals(arr1,arr2) && !Arrays.equals(arr2,arr3)) {
			return words[n - 2];
		}
		return words[n - 1];
	}
}