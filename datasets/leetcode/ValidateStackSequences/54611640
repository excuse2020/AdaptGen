class Solution {
	boolean validateStackSequences(int[] pushed, int[] popped) {
		int i = 0, j = 0;
		Stack<Integer> st = new Stack<>();
		int m = pushed.length;
		int n = popped.length;
		while (i < m && j < n) {
			if (pushed[i] != popped[j]) {
				st.push(pushed[i]);
				i++;
			} 
			else {
				j++;
				while (!st.isEmpty() && st.peek() == popped[j]) {
					st.pop();
					j++;
				}
				i++;
			}
		}
		while (j < n) {
			if (st.peek() != popped[j]) {
				return false;
			} 
			else {
				j++;
				st.pop();
			}
		}
		return true;
	}
}