class Solution {
	TreeLinkNode GetNext(TreeLinkNode pNode) {
		if (pNode == null) {
			return null;
		}
		if (pNode.right != null) {
			TreeLinkNode leftest = pNode.right;
			while (leftest.left != null) {
				leftest = leftest.left;
			}
			return leftest;
		}
		if (isLeft(pNode)) {
			return pNode.next;
		} 
		else {
			TreeLinkNode node = pNode.next;
			if (node == null) {
				return null;
			}
			while (node != null && !isLeft(node)) {
				node = node.next;
			}
			if (isLeft(node)) {
				return node.next;
			} 
			else {
				return null;
			}
		}
	}
	boolean isLeft(TreeLinkNode node) {
		return node != null && node.next != null && node.next.left == node;
	}
}