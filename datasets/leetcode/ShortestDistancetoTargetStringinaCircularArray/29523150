class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		String[] wrappedWords = new String[words.length * 3];
		int index = 0;
		for (int i = 0; i < words.length; i++) {
			wrappedWords[index] = words[i];
			index++;
		}
		for (int i = 0; i < words.length; i++) {
			wrappedWords[index] = words[i];
			index++;
		}
		for (int i = 0; i < words.length; i++) {
			wrappedWords[index] = words[i];
			index++;
		}
		int startIndexShifted = startIndex + words.length;
		int currentIndex = startIndexShifted;
		int shortestDistance = Integer.MAX_VALUE;
		while (currentIndex >= 0) {
			if (wrappedWords[currentIndex].equals(target)) {
				shortestDistance = Math.min(shortestDistance,Math.abs(startIndexShifted - currentIndex));
			}
			currentIndex--;
		}
		currentIndex = startIndexShifted;
		while (currentIndex < wrappedWords.length) {
			if (wrappedWords[currentIndex].equals(target)) {
				shortestDistance = Math.min(shortestDistance,Math.abs(startIndexShifted - currentIndex));
			}
			currentIndex++;
		}
		if (shortestDistance == Integer.MAX_VALUE) {
			return -1;
		}
		return shortestDistance;
	}
}