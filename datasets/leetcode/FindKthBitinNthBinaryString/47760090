class Solution {
	ArrayList<String> buildString(int n, ArrayList<String> list, int start) {
		if (list.size() == n) {
			return list;
		}
		if (start == 0) {
			String s = "0";
			list.add(s);
		} 
		else {
			String s = list.get(start - 1);
			s = list.get(start - 1) + "1";
			list.add(s);
		}
		return buildString(n,list,start + 1);
	}
	char findKthBit(int n, int k) {
		ArrayList<String> arrayList = new ArrayList<>();
		arrayList = buildString(n,arrayList,0);
		String s = arrayList.get(n - 1);
		return s.charAt(k - 1);
	}
	String invert(String s) {
		StringBuilder str = new StringBuilder(s);
		int i = 0;
	}
	String reverse(String s) {
		StringBuilder str = new StringBuilder(s);
		int i = 0, j = str.length() - 1;
		while (i <= j) {
			char temp = str.charAt(i);
			str.setCharAt(i,str.charAt(j));
			str.setCharAt(j,temp);
			i++;
			j--;
		}
		return str.toString();
	}
}