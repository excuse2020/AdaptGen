class Solution {
	int numSubmatrixSumTarget(int[][] nums, int target) {
		int r = nums.length;
		int c = nums[0].length;
		for (int i = 0; i < r; i++) {
			for (int j = 1; j < c; j++) {
				nums[i][j] += nums[i][j - 1];
			}
		}
		int count = 0;
		for (int c1 = 0; c1 < c; c1++) {
			for (int c2 = c1; c2 < c; c2++) {
				HashMap<Integer, Integer> hm = new HashMap<>();
				hm.put(0,1);
				int sum = 0;
				for (int row = 0; row < r; row++) {
					sum += nums[row][c2] - (c1 > 0 ? nums[row][c1 - 1] : 0);
					count += hm.getOrDefault(sum - target,0);
					hm.put(sum,hm.getOrDefault(sum,0) + 1);
				}
			}
		}
		return count;
	}
}