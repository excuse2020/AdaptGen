class Solution {
	int ans = new int[1];
	int arr = new int[9];
	boolean check(int[] arr) {
		int odd = 0;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 != 0) {
				odd++;
			}
			if (odd > 1) {
				return false;
			}
		}
		return true;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		solve(root);
		return ans[0];
	}
	void solve(TreeNode root) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			arr[root.val - 1]++;
			if (check(arr)) {
				ans[0]++;
			}
			arr[root.val - 1]--;
			return;
		}
		arr[root.val - 1]++;
		solve(root.left);
		solve(root.right);
		arr[root.val - 1]--;
		return;
	}
}