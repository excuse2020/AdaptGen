class Solution {
	long maximumHappinessSum(int[] happiness, int k) {
		PriorityQueue<Integer> minHeap = new PriorityQueue<>(k);
		long result = 0;
		for (int i = 0; i < happiness.length; i++) {
			if (i >= k && happiness[i] > minHeap.peek()) {
				minHeap.poll();
				minHeap.offer(happiness[i]);
			} 
			else if (i < k) {
				minHeap.offer(happiness[i]);
			}
		}
		for (int i = k - 1; i >= 0; i--) {
			result += Math.max(0,minHeap.poll() - i);
		}
		return result;
	}
}