class Solution {
	long maximumTripletValue(int[] nums) {
		int i, n, tmx;
		long ans;
		n = nums.length;
		int[] mx = new int[n];
		Queue<Integer> st = new LinkedList<Integer>();
		tmx = nums[n - 1];
		for (i = n - 1; i >= 0; i--) {
			tmx = Math.max(tmx,nums[i]);
			mx[i] = tmx;
		}
		ans = 0;
		for (i = 0; i < n; i++) {
			if (!st.isEmpty() && i + 1 < n) {
				ans = Math.max(ans,(long) (nums[st.peek()] - nums[i]) * (long) mx[i + 1]);
			}
			while (!st.isEmpty() && i + 1 < n && nums[st.peek()] < nums[i]) {
				ans = Math.max(ans,(long) (nums[st.peek()] - nums[i]) * (long) mx[i + 1]);
				st.remove();
			}
			st.add(i);
		}
		return ans;
	}
}