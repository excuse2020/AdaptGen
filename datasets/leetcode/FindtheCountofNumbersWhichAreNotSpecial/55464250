class Solution {
	int nonSpecialCount(int l, int r) {
		int max = (int) Math.sqrt(r);
		boolean[] prime = new boolean[max + 2];
		Arrays.fill(prime,true);
		prime[0] = false;
		prime[1] = false;
		for (int i = 2; i < max + 1; i++) {
			if (!prime[i]) {
				continue;
			}
			int curr = i;
			while (curr + i <= max + 1) {
				curr += i;
				prime[curr] = false;
			}
		}
		int count = 0;
		for (int i = 2; i < max + 1; i++) {
			if (prime[i]) {
				int sum = i * i;
				if (sum > r) {
					break;
				}
				if (sum >= l) {
					count++;
				}
			}
		}
		return r - l + 1 - count;
	}
}