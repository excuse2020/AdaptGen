class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long sum = 0;
		long maxsum = 0;
		HashSet<Integer> has = new HashSet<>();
		int i = 0;
		int j = 0;
		while (j < nums.length) {
			while (has.contains(nums[j]) || has.size() == k) {
				sum -= nums[i];
				has.remove(nums[i]);
				i++;
			}
			sum += nums[j];
			has.add(nums[j]);
			if (has.size() == k) {
				maxsum = Math.max(sum,maxsum);
			}
			j++;
		}
		return maxsum;
	}
}