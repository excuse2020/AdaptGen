class Solution {
	boolean canFormTriangle(int h, int red, int blue) {
		int redNeeded = 0;
		int blueNeeded = 0;
		for (int i = 1; i <= h; i++) {
			if (i % 2 == 1) {
				redNeeded += i;
			} 
			else {
				blueNeeded += i;
			}
		}
		if (redNeeded <= red && blueNeeded <= blue) {
			return true;
		}
		redNeeded = 0;
		blueNeeded = 0;
		for (int i = 1; i <= h; i++) {
			if (i % 2 == 1) {
				blueNeeded += i;
			} 
			else {
				redNeeded += i;
			}
		}
		return redNeeded <= red && blueNeeded <= blue;
	}
	int maxHeightOfTriangle(int red, int blue) {
		int low = 0;
		int high = (int) Math.sqrt(2 * (red + blue)) + 1;
		while (low < high) {
			int mid = (low + high) / 2;
			if (canFormTriangle(mid,red,blue)) {
				low = mid;
			} 
			else {
				high = mid - 1;
			}
		}
		return low;
	}
}