class Solution {
	int[][] lines;
	int[] nums1, nums2;
	int dp(int i, int j) {
		if (i < 0 || j < 0) {
			return 0;
		}
		if (lines[i][j] != -1) {
			return lines[i][j];
		}
		if (nums1[i] == nums2[j]) {
			return lines[i][j] = 1 + dp(i - 1,j - 1);
		} 
		else {
			return lines[i][j] = Math.max(dp(i,j - 1),dp(i - 1,j));
		}
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		lines = new int[nums1.length][nums2.length];
		this.nums1 = nums1;
		this.nums2 = nums2;
		for (int i = 0; i < nums1.length; i++) {
			for (int j = 0; j < nums2.length; j++) {
				lines[i][j] = -1;
			}
		}
		return dp(nums1.length - 1,nums2.length - 1);
	}
}