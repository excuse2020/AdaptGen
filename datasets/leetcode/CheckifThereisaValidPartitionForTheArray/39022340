class Solution {
	boolean validPartition(int[] nums) {
		int n = nums.length;
		int[] dp = new int[n + 1];
		for (int i = n; i >= 0; i--) {
			if (i == n) {
				dp[i] = 1;
			} 
			else {
				boolean choice1 = false, choice2 = false;
				if (n - i >= 2 && nums[i] == nums[i + 1]) {
					choice1 = dp[i + 2] == 1;
				}
				if (n - i >= 3 && (nums[i] == nums[i + 1] && nums[i + 1] == nums[i + 2] || nums[i] + 1 == nums[i + 1] && nums[i + 1] + 1 == nums[i + 2])) {
					choice2 = dp[i + 3] == 1;
				}
				dp[i] = (choice1 || choice2) ? 1 : 0;
			}
		}
		return dp[0] == 1;
	}
}