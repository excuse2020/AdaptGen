class Solution {
	PriorityQueue<Integer> queue1 = new PriorityQueue();
	PriorityQueue<Integer> queue2 = new PriorityQueue<Integer>((o1, o2) -> {o2 - o1});
	Double GetMedian() {
		if (queue1.size() == queue2.size()) {
			return (double) (queue1.peek() + queue2.peek()) / 2;
		} 
		else {
			return (double) queue1.peek();
		}
	}
	void Insert(Integer num) {
		if (queue1.size() == queue2.size()) {
			queue2.add(num);
			queue1.add(queue2.poll());
		} 
		else {
			queue1.add(num);
			queue2.add(queue1.poll());
		}
	}
}