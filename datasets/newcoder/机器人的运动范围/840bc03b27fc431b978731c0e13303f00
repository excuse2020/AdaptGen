class Solution {
	int movingCount(int threshold, int rows, int cols) {
		boolean[][] visited = new boolean[rows][cols];
		int res = 0;
		Queue<int[]> queue = new LinkedList<>();
		queue.add(new int{0, 0, 0, 0});
		while (!queue.isEmpty()) {
			int[] tem = queue.poll();
			int y = tem[0], x = tem[1], s1 = tem[2], s2 = tem[3];
			if (y >= rows || x >= cols || threshold < s1 + s2 || visited[y][x]) {
				continue;
			}
			res++;
			visited[y][x] = true;
			queue.add(new int{y + 1, x, (y + 1) % 10 != 0 ? s1 + 1 : s1 - 8, s2});
			queue.add(new int{y, x + 1, s1, (x + 1) % 10 != 0 ? s2 + 1 : s2 - 8});
		}
		return res;
	}
}