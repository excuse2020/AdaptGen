class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		int a = (root1.left != null) ? root1.left.val : -1;
		int b = (root1.right != null) ? root1.right.val : -1;
		int c = (root2.left != null) ? root2.left.val : -1;
		int d = (root2.right != null) ? root2.right.val : -1;
		if (a == c && b == d) {
			TreeNode temp1 = root1.left;
			TreeNode temp2 = root1.right;
		} 
		else if (a == d && b == c) {
			TreeNode temp1 = root1.left;
			TreeNode temp2 = root1.right;
			root1.left = temp2;
			root1.right = temp1;
		} 
		else {
			return false;
		}
		boolean left = flipEquiv(root1.left,root2.left);
		boolean right = flipEquiv(root1.right,root2.right);
		return (left && right);
	}
}