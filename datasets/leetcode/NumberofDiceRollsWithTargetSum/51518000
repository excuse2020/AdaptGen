class Solution {
	int numRollsToTarget(int n, int k, int target) {
		int[][] dp = new int[n + 1][target + 1];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return solveMemo(n,k,target,dp);
	}
	int solveMemo(int n, int k, int target, int[][] dp) {
		if (target < 0) {
			return 0;
		}
		if (target != 0 && n <= 0) {
			return 0;
		}
		if (target == 0 && n != 0) {
			return 0;
		}
		if (target == 0 && n == 0) {
			return 1;
		}
		if (dp[n][target] != -1) {
			return dp[n][target];
		}
		int sum = 0;
		for (int face = 1; face < k + 1; face++) {
			sum = (sum + solveMemo(n - 1,k,target - face,dp)) % 1000000007;
		}
		return dp[n][target] = sum;
	}
}