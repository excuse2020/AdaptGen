class Solution {
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		int n = pre.length;
		int m = vin.length;
		if (n == 0 || m == 0) {
			return null;
		}
		Stack<TreeNode> s = new Stack<TreeNode>();
		TreeNode root = new TreeNode(pre[0]);
		TreeNode cur = root;
		for (int i = 1, j = 0; i < n; i++) {
			if (cur.val != vin[j]) {
				cur.left = new TreeNode(pre[i]);
				s.push(cur);
				cur = cur.left;
			} 
			else {
				j++;
				while (!s.isEmpty() && s.peek().val == vin[j]) {
					cur = s.pop();
					j++;
				}
				cur.right = new TreeNode(pre[i]);
				cur = cur.right;
			}
		}
		return root;
	}
}