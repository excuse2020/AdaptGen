class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode tmp = head;
		List<ListNode> list = new ArrayList();
		List<ListNode> list2 = new ArrayList();
		while (tmp != null) {
			list.add(new ListNode(tmp.val));
			tmp = tmp.next;
		}
		this.print2(list);
		ListNode pre = list.get(0);
		List<List<ListNode>> lists = new ArrayList();
		List<ListNode> tmpList = new ArrayList();
		tmpList.add(pre);
		for (int i = 1; i < list.size(); i++) {
			ListNode cur = list.get(i);
			if (pre.val == cur.val) {
				tmpList.add(cur);
				continue;
			} 
			else {
				lists.add(tmpList);
				tmpList = new ArrayList();
				tmpList.add(cur);
			}
			pre = cur;
		}
		lists.add(tmpList);
	}
	void print(ListNode node) {
		ListNode tmp = node;
		while (tmp != null) {
			System.out.print(tmp.val + ",");
			tmp = tmp.next;
		}
		System.out.println();
	}
	void print2(List<ListNode> list) {
		for (int i = 0; i < list.size(); i++) {
			ListNode node = list.get(i);
			System.out.print(node.val + ",");
		}
		System.out.println();
	}
}