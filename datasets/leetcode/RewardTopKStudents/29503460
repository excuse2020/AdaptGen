class Solution {
	List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] report, int[] student_id, int k) {
		Set<String> positiveFeedback = new HashSet<>(Arrays.asList(positive_feedback));
		Set<String> negativeFeedback = new HashSet<>(Arrays.asList(negative_feedback));
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < student_id.length; i++) {
			int point = 0;
			for (String str: report[i].split(" ")) {	
				if (positiveFeedback.contains(str)) {
					point += 3;
				} 
				else if (negativeFeedback.contains(str)) {
					point -= 1;
				}
			}
			map.put(student_id[i],point);
		}
		List<Map.Entry<Integer, Integer>> list = new LinkedList<Map.Entry<Integer, Integer>>(map.entrySet());
		Collections.sort(list,new Comparator<Map.Entry<Integer, Integer>>());
		List<Integer> ans = new ArrayList<>();
		for (Map.Entry<Integer, Integer> entry: list) {	
			ans.add(entry.getKey());
			if (ans.size() == k) {
				break;
			}
		}
		return ans;
	}
}