class Solution {
	int[] convertTosort(int[] mapping, int[] nums) {
		int n = nums.length;
		int newArray = new int[n];
		for (int i = 0; i < n; i++) {
			int m = 1, res = 0;
			int num = nums[i];
			if (num == 0) {
				newArray[i] = mapping[0];
				continue;
			}
			while (num > 0) {
				int digit = num % 10;
				res = mapping[digit] * m + res;
				num /= 10;
				m *= 10;
			}
			newArray[i] = res;
		}
		return newArray;
	}
	int[] sortJumbled(int[] mapping, int[] nums) {
		int n = nums.length;
		int arr = convertTosort(mapping,nums);
		Integer index = new Integer[n];
		for (Integer i = 0; i < n; i++) {
			index[i] = i;
		}
		Arrays.sort(index,new Comparator<Integer>());
		int res = new int[n];
		int i = 0;
		for (int ind: index) {	
			res[i++] = nums[ind];
		}
		return res;
	}
}