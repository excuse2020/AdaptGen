class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		Stack<ListNode> stack1 = new Stack();
		Stack<ListNode> stack2 = new Stack();
		int count1 = 0;
		int count2 = 0;
		while (head1 != null) {
			stack1.push(head1);
			head1 = head1.next;
			count1++;
		}
		while (head2 != null) {
			stack2.push(head2);
			head2 = head2.next;
			count2++;
		}
		ListNode pre = null;
		ListNode c = new ListNode(0);
		int a1 = 0;
		while (!stack1.isEmpty() || !stack2.isEmpty()) {
			ListNode h1 = new ListNode(0);
			ListNode h2 = new ListNode(0);
			h1.val = stack1.isEmpty() ? 0 : stack1.pop().val;
			h2.val = stack2.isEmpty() ? 0 : stack2.pop().val;
			int sum = (h1.val + h2.val) % 10;
			a1 = (h1.val + h2.val) / 10;
			c = new ListNode(sum);
			c.next = pre;
			pre = c;
		}
		return pre;
	}
}