class Solution {
	int countGoodSubstrings(String s) {
		int startIndex = 0;
		int subArrayCount = 0;
		int currentLength = 0;
		Map<Character, Integer> map = new HashMap<>();
		for (int i = 0; i < s.length(); i++) {
			char ch = s.charAt(i);
			if (currentLength < 3) {
				if (!map.containsKey(ch) || (map.containsKey(ch) && map.get(ch) < startIndex)) {
					map.put(ch,i);
				} 
				else {
					startIndex = map.get(ch) + 1;
					map.put(ch,i);
				}
			} 
			else {
				map.remove(s.charAt(startIndex));
				if (!map.containsKey(ch) || (map.containsKey(ch) && map.get(ch) < startIndex)) {
					startIndex++;
					map.put(ch,i);
				} 
				else if (map.containsKey(ch) && map.get(ch) >= startIndex) {
					startIndex = map.get(ch) + 1;
					map.put(ch,i);
				}
			}
			currentLength = i - startIndex + 1;
			if (currentLength == 3) {
				subArrayCount++;
			}
		}
		return subArrayCount;
	}
}