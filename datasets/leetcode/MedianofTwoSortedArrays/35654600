class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int l1 = nums1.length;
		int l2 = nums2.length;
		int[] nums3 = new int[l2 + l1];
		int ptr1 = 0;
		int ptr2 = 0;
		for (int i = 0; i < l1 + l2; i++) {
			int small = 0;
			if (ptr1 < l1 && ptr2 < l2) {
				if (nums1[ptr1] < nums2[ptr2]) {
					small = nums1[ptr1];
					ptr1++;
				} 
				else {
					small = nums2[ptr2];
					ptr2++;
				}
			} 
			else {
				if (ptr1 < l1) {
					small = nums1[ptr1];
					ptr1++;
				} 
				else {
					small = nums2[ptr2];
					ptr2++;
				}
			}
			nums3[i] = small;
		}
		double median = 0;
		int newlen = l2 + l1;
		if ((newlen) % 2 == 0) {
			median = (nums3[newlen / 2] + nums3[(newlen / 2) - 1]) / 2.0;
		} 
		else {
			median = nums3[newlen / 2];
		}
		return median;
	}
}