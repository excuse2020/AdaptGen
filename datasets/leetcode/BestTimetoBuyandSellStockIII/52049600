class Solution {
	int maxProfit(int[] prices) {
		int[] end = new int[prices.length];
		int small = Integer.MAX_VALUE;
		int ans = 0;
		for (int i = 0; i < prices.length; i++) {
			small = Math.min(small,prices[i]);
			end[i] = Math.max((i - 1 >= 0 ? end[i - 1] : 0),prices[i] - small);
			ans = Math.max(end[i],ans);
		}
		int max = 0;
		int[] start = new int[prices.length];
		for (int i = prices.length - 1; i >= 0; i--) {
			max = Math.max(max,prices[i]);
			start[i] = Math.max((i + 1 < prices.length ? start[i + 1] : 0),max - prices[i]);
			ans = Math.max(ans,start[i]);
		}
		for (int i = 1; i < prices.length - 1; i++) {
			ans = Math.max(ans,end[i] + start[i + 1]);
		}
		return ans;
	}
}