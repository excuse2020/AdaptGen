class Solution {
	void dfs(int node, int[] visited, int[][] isConnected) {
		if (visited[node] == 0) {
			visited[node] = 1;
			for (int i = 0; i < isConnected.length; i++) {
				if (isConnected[node - 1][i] == 1 && visited[i + 1] != 1) {
					dfs(i + 1,visited,isConnected);
				}
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int[] visited = new int[isConnected.length + 1];
		int land = 0;
		for (int i = 1; i <= isConnected.length; i++) {
			if (visited[i] == 0) {
				land++;
				dfs(i,visited,isConnected);
			}
		}
		return land;
	}
}