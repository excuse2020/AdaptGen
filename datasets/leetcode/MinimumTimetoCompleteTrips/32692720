class Solution {
	long minimumTime(int[] time, int ti) {
		if (time.length == 1) {
			return (long) (time[0] * (long) (ti));
		}
		long tt = (long) (ti);
		Arrays.sort(time);
		long s = 1;
		long e = time[0] * tt;
		while (s < e) {
			long mid = s + (e - s) / 2;
			if (trips(time,mid) >= tt) {
				e = mid;
			} 
			else {
				s = mid + 1;
			}
		}
		return s;
	}
	long trips(int[] time, long t) {
		long s = 0;
		for (int i = 0; i < time.length; i++) {
			s += t / time[i];
		}
		return s;
	}
}