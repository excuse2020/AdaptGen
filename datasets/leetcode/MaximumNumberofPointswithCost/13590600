class Solution {
	void function(long[] pre) {
		int n = pre.length;
		for (int i = 1; i < n; i++) {
			pre[i] = Math.max(pre[i],pre[i - 1] - 1);
		}
		for (int i = n - 2; i >= 0; i--) {
			pre[i] = Math.max(pre[i],pre[i + 1] - 1);
		}
	}
	long maxPoints(int[][] points) {
		int m = points.length;
		int n = points[0].length;
		long[] pre = new long[n];
		for (int i = 0; i < n; i++) {
			pre[i] = points[0][i];
		}
		function(pre);
		for (int i = 1; i < m; i++) {
			for (int j = 0; j < n; j++) {
				pre[j] += points[i][j];
			}
			function(pre);
		}
		long max = 0;
		for (long i: pre) {	
			max = Math.max(i,max);
		}
		return max;
	}
}