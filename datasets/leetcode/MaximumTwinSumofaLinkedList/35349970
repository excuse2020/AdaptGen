class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head, fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		slow = reverse(slow);
		int maxm = Integer.MIN_VALUE;
		while (slow != null) {
			maxm = Math.max(maxm,slow.val + head.val);
			head = head.next;
			slow = slow.next;
		}
		return maxm;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null, curr = head, temp = null;
		while (curr != null) {
			temp = curr.next;
			curr.next = prev;
			prev = curr;
			curr = temp;
		}
		head = prev;
		return head;
	}
}