class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> list = new ArrayList<>();
		ArrayList<Integer> l = new ArrayList<>();
		int i = 1;
		int sum = 0;
		helper(list,l,i,k,n,sum);
		return list;
	}
	void helper(List<List<Integer>> list, ArrayList<Integer> l, int i, int n, int k, int sum) {
		if (sum == k && l.size() == n) {
			list.add(new ArrayList<>(l));
			return;
		}
		if (sum > k || i > 9 || l.size() > k) {
			return;
		}
		sum += i;
		l.add(i);
		helper(list,l,i + 1,n,k,sum);
		l.remove(l.size() - 1);
		sum -= i;
		helper(list,l,i + 1,n,k,sum);
	}
}