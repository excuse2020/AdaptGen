class Solution {
	List<String> twoEditWords(String[] queries, String[] dictionary) {
		List<String> matchedWithDictionary = new ArrayList();
		int unmatched;
		for (String q: queries) {	
			for (String d: dictionary) {	
				unmatched = 0;
				for (int i = 0; i < q.length(); i++) {
					if (q.charAt(i) != d.charAt(i)) {
						unmatched++;
					}
					if (unmatched > 2) {
						break;
					}
				}
				if (unmatched <= 2) {
					matchedWithDictionary.add(q);
					break;
				}
			}
		}
		return matchedWithDictionary;
	}
}
class Solution {
	boolean isAdded(String q, String d, List<String> matchedWithD) {
		int unmatches = 0;
		for (int i = 0; i < q.length(); i++) {
			if (q.charAt(i) != d.charAt(i)) {
				unmatches++;
			}
			if (unmatches > 2) {
				break;
			}
		}
		if (unmatches <= 2) {
			matchedWithD.add(q);
			return true;
		}
		return false;
	}
	List<String> twoEditWords(String[] queries, String[] dictionary) {
		List<String> matchedWithDictionary = new ArrayList();
		int unmatched;
		for (String q: queries) {	
			for (String d: dictionary) {	
				if (isAdded(q,d,matchedWithDictionary)) {
					break;
				}
			}
		}
		return matchedWithDictionary;
	}
}