class Solution {
	int flip(int x) {
		if (x == 0) {
			return 1;
		} 
		else {
			return 0;
		}
	}
	long minimumCost(String s) {
		int w = new int[s.length()];
		int a = new int[s.length()];
		int c = 1;
		int m = 0;
		if (s.length() % 2 == 0) {
			m = s.length() / 2 + 1;
		} 
		else {
			m = s.length() / 2;
		}
		for (int i = 0, j = s.length() - 1; i <= j; i++, j--) {
			w[i] = c;
			w[j] = c;
			c++;
		}
		for (int i = 0; i < s.length(); i++) {
			a[i] = Integer.parseInt("" + s.charAt(i));
		}
		long ans1 = 0;
		int p = 1;
		for (int i = m - 1; i >= 0; i--) {
			if (a[i] != p) {
				ans1 = ans1 + w[i];
			}
			p = a[i];
		}
		p = 1;
		for (int i = m; i < a.length; i++) {
			if (a[i] != p) {
				ans1 = ans1 + w[i];
			}
			p = a[i];
		}
		for (int i = 0; i < s.length(); i++) {
			a[i] = Integer.parseInt("" + s.charAt(i));
		}
		long ans0 = 0;
		p = 0;
		for (int i = m - 1; i >= 0; i--) {
			if (a[i] != p) {
				ans0 = ans0 + w[i];
			}
			p = a[i];
		}
		p = 0;
		for (int i = m; i < a.length; i++) {
			if (a[i] != p) {
				ans0 = ans0 + w[i];
			}
			p = a[i];
		}
		if (ans1 < ans0) {
			return ans1;
		} 
		else {
			return ans0;
		}
	}
}