class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		List<TreeNode> res = new ArrayList<>();
		if (n == 0 || n % 2 == 0) {
			return res;
		}
		if (n == 1) {
			res.add(new TreeNode(0));
			return res;
		}
		for (int i = 1; i < n; i += 2) {
			int rightNode = n - 1;
			List<TreeNode> leftTree = allPossibleFBT(i);
			List<TreeNode> rightTree = allPossibleFBT(rightNode);
			for (TreeNode leftSub: leftTree) {	
				for (TreeNode rightSub: rightTree) {	
					TreeNode root = new TreeNode(0);
					root.left = leftSub;
					root.right = rightSub;
					res.add(root);
				}
			}
		}
		return res;
	}
}