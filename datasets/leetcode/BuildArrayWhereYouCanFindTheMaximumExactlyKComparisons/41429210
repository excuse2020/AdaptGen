class Solution {
	int mod = 1000000007;
	int helper(int idx, int maxSoFar, int remainingMaximums, int[][][] memo, int n, int m) {
		if (idx == n) {
			return remainingMaximums == 0 ? 1 : 0;
		}
		if (remainingMaximums < 0) {
			return 0;
		}
		if (memo[idx][maxSoFar][remainingMaximums] != -1) {
			return memo[idx][maxSoFar][remainingMaximums];
		}
		int ans = 0;
		for (int num = 1; num <= maxSoFar; num++) {
			ans = (ans + helper(idx + 1,maxSoFar,remainingMaximums,memo,n,m)) % mod;
		}
		for (int num = maxSoFar + 1; num <= m; num++) {
			ans = (ans + helper(idx + 1,num,remainingMaximums - 1,memo,n,m)) % mod;
		}
		memo[idx][maxSoFar][remainingMaximums] = ans;
		return ans;
	}
	int numOfArrays(int n, int m, int k) {
		int[][][] memo = new int[n][m + 1][k + 1];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= m; j++) {
				Arrays.fill(memo[i][j],-1);
			}
		}
		return helper(0,0,k,memo,n,m);
	}
}