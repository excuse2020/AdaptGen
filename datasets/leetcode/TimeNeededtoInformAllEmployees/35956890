class Solution {
	int ans = 0, max = 0;
	void dfs(List<Integer>[] adj, int currentLevelManager, int[] informTime) {
		max = Math.max(ans,max);
		for (Integer employ: adj[currentLevelManager]) {	
			ans += informTime[currentLevelManager];
			dfs(adj,employ,informTime);
			ans -= informTime[currentLevelManager];
		}
	}
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		List<Integer>[] adj = new ArrayList[n];
		for (int i = 0; i < n; i++) {
			adj[i] = new ArrayList<>();
		}
		for (int i = 0; i < n; i++) {
			if (manager[i] != -1) {
				adj[manager[i]].add(i);
			}
		}
		dfs(adj,headID,informTime);
		return max;
	}
}