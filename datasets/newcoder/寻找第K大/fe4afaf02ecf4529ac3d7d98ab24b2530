class Solution {
	int findKth(int[] a, int n, int K) {
		ArrayList<Integer> al = new ArrayList<>();
		for (int num: a) {	
			al.add(num);
		}
		quicksort(al,0,al.size() - 1);
		int result = al.get(a.length - K);
		return result;
	}
	int qsort(ArrayList<Integer> al, int start, int end) {
		int point = al.get(end);
		int i = start;
		for (int j = start; j < end; j++) {
			if (al.get(j) <= point) {
				Collections.swap(al,j,i);
				i++;
			}
		}
		Collections.swap(al,end,i);
		return i;
	}
	void quicksort(ArrayList<Integer> al, int start, int end) {
		if (start < end) {
			int index = qsort(al,start,end);
			quicksort(al,start,index - 1);
			quicksort(al,index + 1,end);
		}
	}
}