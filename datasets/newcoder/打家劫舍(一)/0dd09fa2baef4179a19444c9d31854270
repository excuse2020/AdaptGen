class Solution {
	int[] dp;
	int[] nums;
	int dfs(int j) {
		if (j == 0) {
			return nums[0];
		}
		if (j < 0) {
			return 0;
		}
		if (dp[j] != -1) {
			return dp[j];
		}
		dp[j] = Math.max(dfs(j - 2) + nums[j],dfs(j - 1));
		return dp[j];
	}
	int rob(int[] nums) {
		int n = nums.length;
		this.nums = nums;
		this.dp = new int[n];
		Arrays.fill(this.dp,-1);
		return dfs(nums.length - 1);
	}
}