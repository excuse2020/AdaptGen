class Solution {
	int[][] matrixBlockSum(int[][] mat, int k) {
		int row = mat.length;
		int col = mat[0].length;
		int[][] ans = new int[row][col];
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				update(ans,mat,i,j,k);
			}
		}
		return ans;
	}
	void update(int[][] ans, int[][] mat, int i, int j, int k) {
		int a = i - k;
		if (a < 0) {
			a = 0;
		}
		int b = i + k;
		if (b >= mat.length) {
			b = mat.length - 1;
		}
		int c = j - k;
		if (c < 0) {
			c = 0;
		}
		int d = j + k;
		if (d >= mat[0].length) {
			d = mat[0].length - 1;
		}
		int sum = 0;
		for (int x = a; x <= b; x++) {
			for (int y = c; y <= d; y++) {
				sum += mat[x][y];
			}
		}
		if (i < mat.length && j < mat[0].length) {
			ans[i][j] = sum;
		}
	}
}