class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode r1 = reverse(head1);
		ListNode r2 = reverse(head2);
		int jw = 0;
		ListNode result = null;
		while (r1 != null || r2 != null) {
			int v1 = r1 == null ? 0 : r1.val;
			int v2 = r2 == null ? 0 : r2.val;
			int sum = v1 + v2;
			ListNode newNode = new ListNode(sum % 10);
			newNode.next = result;
			result = newNode;
			jw = sum / 10;
			if (r1 != null) {
				r1 = r1.next;
			}
			if (r2 != null) {
				r2 = r2.next;
			}
		}
		if (jw > 0) {
			ListNode newNode = new ListNode(jw);
			newNode.next = result;
			result = newNode;
		}
		return result;
	}
	ListNode reverse(ListNode head) {
		ListNode pre = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = pre;
			pre = head;
			head = next;
		}
		return pre;
	}
}