class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> st = new Stack<>();
		int result = 0;
		for (int i = 0; i < tokens.length; i++) {
			if (tokens[i].equals("+")) {
				int firstOperand = st.pop();
				int secondOperand = st.pop();
				st.push(secondOperand + firstOperand);
			} 
			else if (tokens[i].equals("-")) {
				int firstOperand = st.pop();
				int secondOperand = st.pop();
				st.push(secondOperand - firstOperand);
			} 
			else if (tokens[i].equals("*")) {
				int firstOperand = st.pop();
				int secondOperand = st.pop();
				st.push(secondOperand * firstOperand);
			} 
			else if (tokens[i].equals("/")) {
				int firstOperand = st.pop();
				int secondOperand = st.pop();
				st.push(secondOperand / firstOperand);
			} 
			else {
				st.push(Integer.parseInt(tokens[i]));
			}
		}
		return st.peek();
	}
}