class Solution {
	TrieNode constructer(String[] words) {
		TrieNode root = new TrieNode();
		TrieNode Node = root;
		int ind;
	}
	void dfs(char[][] board, int x, int y, TrieNode root, List<String> res) {
		int n = board.length, m = board[0].length;
	}
	List<String> findWords(char[][] board, String[] words) {
		int n = board.length, m = board[0].length;
		List<String> res = new ArrayList<>();
		TrieNode root = constructer(words);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				dfs(board,i,j,root,res);
			}
		}
		return res;
	}
	class TrieNode {
		TrieNode[] children = new TrieNode[26];
		String word;
	}
}