class Solution {
	int semiOrderedPermutation(int[] nums) {
		int posOfOne = -1, posOfMax = -1;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				posOfOne = i;
			}
			if (nums[i] == nums.length) {
				posOfMax = i;
			}
		}
		int distance = Math.min(posOfOne,posOfMax) + nums.length - 1 - Math.max(posOfOne,posOfMax);
		if (posOfMax < posOfOne) {
			distance += 2 * (posOfOne - posOfMax) - 1;
		}
		return distance;
	}
}