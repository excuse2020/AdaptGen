class Solution {
	int check(int row, int col) {
		int sum = 0;
		while (row != 0) {
			sum = sum + (row % 10);
			row = row / 10;
		}
		while (col != 0) {
			sum = sum + (col % 10);
			col = col / 10;
		}
		return sum;
	}
	int dfs(int i, int j, int m, int n, int k, boolean[][] visited) {
		if (i >= m || j >= n || k < check(i,j) || visited[i][j]) {
			return 0;
		}
		visited[i][j] = true;
		return 1 + dfs(i + 1,j,m,n,k,visited);
	}
	int movingCount(int threshold, int rows, int cols) {
		boolean[][] visited = new boolean[rows][cols];
		int sum = dfs(0,0,rows,cols,threshold,visited);
		return sum;
	}
}