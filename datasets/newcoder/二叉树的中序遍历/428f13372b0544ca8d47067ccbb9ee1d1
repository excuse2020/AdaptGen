class Solution {
	List<Integer> in = new ArrayList<>();
	void inorder(TreeNode root) {
		if (root == null) {
			return;
		}
		TreeNode node = root;
		LinkedList<TreeNode> s = new LinkedList<>();
		while (!s.isEmpty() || node != null) {
			if (node != null) {
				s.push(node);
				node = node.left;
			} 
			else {
				node = s.pop();
				in.add(node.val);
				node = node.right;
			}
		}
	}
	int[] inorderTraversal(TreeNode root) {
		inorder(root);
		int[] res = new int[in.size()];
		for (int i = 0; i < in.size(); i++) {
			res[i] = in.get(i);
		}
		return res;
	}
}