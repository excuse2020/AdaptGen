class Solution {
	int findKth(int[] a, int n, int K) {
		int left = 0;
		int right = a.length;
		int p = -1;
		while (left < right) {
			p = partition(a,left,right);
			if (p == K - 1) {
				return a[p];
			} 
			else if (p < K - 1) {
				left = p + 1;
			} 
			else {
				right = p;
			}
		}
		return -1;
	}
	int partition(int[] a, int left, int right) {
		int i = left;
		int pivot = a[right - 1];
		int tmp = 0;
		while (i < right - 1) {
			if (a[i] >= pivot) {
				tmp = a[i];
				a[i] = a[left];
				a[left] = tmp;
				left += 1;
			}
			i += 1;
		}
		a[right - 1] = a[left];
		a[left] = pivot;
		return left;
	}
}