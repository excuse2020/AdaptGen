class Solution {
	void dfs(int[] stone, Set<int[]> visited, int[][] stones) {
		visited.add(stone);
		for (int[] nextStone: stones) {	
			if (!visited.contains(nextStone) && (nextStone[0] == stone[0] || nextStone[1] == stone[1])) {
				dfs(nextStone,visited,stones);
			}
		}
	}
	int removeStones(int[][] stones) {
		Set<int[]> visited = new HashSet<>();
		int i = 0;
		for (int[] stone: stones) {	
			if (!visited.contains(stone)) {
				dfs(stone,visited,stones);
				i += 1;
			}
		}
		return stones.length - i;
	}
}