class Solution {
	int checkHighestPalindrome(String s, int left, int right) {
		while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
			left--;
			right++;
		}
		return right - left;
	}
	String longestPalindrome(String s) {
		if (s == null || s.isEmpty()) {
			return "";
		}
		int l = 0, r = 0;
		for (int i = 0; i < s.length(); i++) {
			int len1 = checkHighestPalindrome(s,i,i);
			int len2 = checkHighestPalindrome(s,i,i + 1);
			int max_L = Math.max(len1,len2);
			if (max_L > r - l) {
				l = i - (max_L - 1) / 2;
				r = i + max_L / 2;
			}
		}
		return s.substring(l,r + 1);
	}
}