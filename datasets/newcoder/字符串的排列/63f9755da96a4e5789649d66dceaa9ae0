class Solution {
	ArrayList<String> res = new ArrayList<String>();
	ArrayList<String> Permutation(String str) {
		if (str == null || str.length() == 0) {
			return res;
		}
		char[] c = str.toCharArray();
		find(c,0);
		Collections.sort(res);
		return res;
	}
	void find(char[] c, int index) {
		if (index >= c.length) {
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < c.length; i++) {
				sb.append(c[i]);
			}
			String t = sb.toString();
			if (!res.contains(t)) {
				res.add(t);
			}
		}
		for (int i = index; i < c.length; i++) {
			swap(c,i,index);
			find(c,index + 1);
			swap(c,i,index);
		}
	}
	void swap(char[] c, int i, int j) {
		char t = c[i];
		c[i] = c[j];
		c[j] = t;
	}
}