class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> t = new ArrayList<Integer>();
		find(root,t);
		return construct(t,0,t.size() - 1);
	}
	TreeNode construct(List<Integer> t, int l, int r) {
		if (l > r) {
			return null;
		}
		int m = (l + r) / 2;
		TreeNode n = new TreeNode(t.get(m));
		n.left = construct(t,l,m - 1);
		n.right = construct(t,m + 1,r);
		return n;
	}
	void find(TreeNode r, List<Integer> t) {
		if (r == null) {
			return;
		}
		find(r.left,t);
		t.add(r.val);
		find(r.right,t);
	}
}