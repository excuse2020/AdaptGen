class Solution {
	int kadane(int[] nums) {
		int maxSum = nums[0];
		int currSum = nums[0];
		for (int i = 1; i < nums.length; i++) {
			currSum = Math.max(nums[i],currSum + nums[i]);
			maxSum = Math.max(maxSum,currSum);
		}
		return maxSum;
	}
	int maxSubarraySumCircular(int[] nums) {
		int maxSum = kadane(nums);
		int totalSum = 0;
		for (int i = 0; i < nums.length; i++) {
			totalSum += nums[i];
			nums[i] = -nums[i];
		}
		int minSum = kadane(nums);
		int circularSum = totalSum + minSum;
		if (circularSum == 0) {
			return maxSum;
		}
		return Math.max(maxSum,circularSum);
	}
}