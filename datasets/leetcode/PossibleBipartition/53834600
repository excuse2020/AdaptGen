class Solution {
	boolean possibleBipartition(int n, int[][] dislikes) {
		if (dislikes.length == 0) {
			return true;
		}
		ArrayList<HashSet<Integer>> dl = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			dl.add(new HashSet<Integer>());
		}
		for (int[] j: dislikes) {	
			dl.get(j[0] - 1).add(j[1] - 1);
			dl.get(j[1] - 1).add(j[0] - 1);
		}
		char[] isVis = new char[n];
		Queue<Integer> q = new LinkedList<>();
		int k = 0;
	}
}