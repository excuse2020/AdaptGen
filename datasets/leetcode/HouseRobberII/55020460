class Solution {
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int robFirstToSecondLast = robHelper(nums,0,nums.length - 2);
		int robSecondToLast = robHelper(nums,1,nums.length - 1);
		return Math.max(robFirstToSecondLast,robSecondToLast);
	}
	int robHelper(int[] nums, int start, int end) {
		if (start == end) {
			return nums[start];
		}
		int[] dp = new int[nums.length];
		dp[start] = nums[start];
		dp[start + 1] = Math.max(nums[start],nums[start + 1]);
		for (int i = start + 2; i <= end; i++) {
			dp[i] = Math.max(nums[i] + dp[i - 2],dp[i - 1]);
		}
		return dp[end];
	}
}