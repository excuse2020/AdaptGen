class Solution {
	boolean checkSorted(int[] arr) {
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] < arr[i + 1]) {
				continue;
			} 
			else {
				return false;
			}
		}
		return true;
	}
	int minimumRightShifts(List<Integer> nums) {
		int len = nums.size();
		int[] arr = new int[len];
		for (int i = 0; i < nums.size(); i++) {
			arr[i] = nums.get(i);
		}
		if (checkSorted(arr) == true) {
			return 0;
		} 
		else {
			int count = 0;
			for (int i = 0; i < len; i++) {
				int last = arr[len - 1];
				for (int j = len - 1; j > 0; j--) {
					arr[j] = arr[j - 1];
				}
				arr[0] = last;
				count++;
				if (checkSorted(arr) == true) {
					return count;
				}
			}
			return -1;
		}
	}
}