class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		HashMap<Character, Integer> hmp = new HashMap<>();
		for (int i = 0; i < pattern.length(); i++) {
			hmp.put(pattern.charAt(i),hmp.getOrDefault(pattern.charAt(i),0) + 1);
		}
		List<String> l = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			if (pattern.length() == words[i].length()) {
				boolean bl = true;
				HashMap<Character, Integer> hmp2 = new HashMap<>();
				for (int z = 0; z < words[i].length(); z++) {
					hmp2.put(words[i].charAt(z),hmp2.getOrDefault(words[i].charAt(z),0) + 1);
				}
				for (int j = 0; j < pattern.length() - 1; j++) {
					if ((pattern.charAt(j) == pattern.charAt(j + 1)) && (words[i].charAt(j) != words[i].charAt(j + 1)) || (pattern.charAt(j) != pattern.charAt(j + 1)) && (words[i].charAt(j) == words[i].charAt(j + 1)) || (hmp.get(pattern.charAt(j)) != hmp2.get(words[i].charAt(j)))) {
						bl = false;
						break;
					}
				}
				if (bl == true) {
					l.add(words[i]);
				}
			}
		}
		return l;
	}
}