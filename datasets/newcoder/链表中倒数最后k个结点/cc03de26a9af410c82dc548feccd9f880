class Solution {
	ListNode FindKthToTail(ListNode pHead, int k) {
		ListNode slow = pHead;
		ListNode fast = pHead;
		for (int i = 0; i < k; i++) {
			if (fast != null) {
				fast = fast.next;
			} 
			else {
				return slow = null;
			}
		}
		while (fast != null) {
			fast = fast.next;
			slow = slow.next;
		}
		return slow;
	}
	ListNode FindKthToTail1(ListNode pHead, int k) {
		if (pHead == null || k == 0) {
			return null;
		}
		ListNode curr = pHead;
		List<ListNode> list = new ArrayList<ListNode>();
		while (curr != null) {
			list.add(curr);
			curr = curr.next;
		}
		if (list.size() < k) {
			return null;
		} 
		else {
			return list.get(list.size() - k);
		}
	}
}