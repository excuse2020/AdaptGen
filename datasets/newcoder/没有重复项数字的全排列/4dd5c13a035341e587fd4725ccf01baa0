class Solution {
	ArrayList<Integer> nums = new ArrayList<Integer>();
	ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		boolean[] vis = new boolean[num.length];
		Arrays.sort(num);
		recursion(num,vis);
		return res;
	}
	void recursion(int[] num, boolean[] vis) {
		if (nums.size() == num.length) {
			res.add(new ArrayList<>(nums));
		} 
		else {
			for (int i = 0; i < num.length; i++) {
				if (vis[i]) {
					continue;
				}
				nums.add(num[i]);
				vis[i] = true;
				recursion(num,vis);
				nums.remove(nums.size() - 1);
				vis[i] = false;
			}
		}
	}
}