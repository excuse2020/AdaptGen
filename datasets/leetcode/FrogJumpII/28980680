class Solution {
	int maxJump(int[] stones) {
		int ans = 0;
		int n = stones.length;
		for (int i = 0; i < n - 2; i += 2) {
			ans = Math.max(ans,Math.abs(stones[i] - stones[i + 2]));
		}
		ans = Math.max(ans,Math.abs(stones[n - 2] - stones[n - 1]));
		if (n % 2 == 1) {
			for (int i = n - 2; i >= 2; i -= 2) {
				ans = Math.max(ans,Math.abs(stones[i] - stones[i - 2]));
			}
		} 
		else {
			for (int i = n - 1; i >= 2; i -= 2) {
				ans = Math.max(ans,Math.abs(stones[i] - stones[i - 2]));
			}
		}
		ans = Math.max(ans,Math.abs(stones[1] - stones[0]));
		return ans;
	}
}