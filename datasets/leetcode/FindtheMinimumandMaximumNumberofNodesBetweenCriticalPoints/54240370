class Solution {
	int[] nodesBetweenCriticalPoints(ListNode head) {
		int prev = head.val;
		int cur = head.next.val;
		head = head.next.next;
		ArrayList<Integer> deban = new ArrayList<>();
		int ptr = 1;
		int count = 0;
		int min = Integer.MAX_VALUE;
		while (head != null) {
			int nxt = head.val;
			if ((cur > prev && cur > nxt) || (cur < prev && cur < nxt)) {
				if (count >= 1) {
					min = Math.min(min,ptr - deban.get(count - 1));
				}
				deban.add(ptr);
				count++;
			}
			prev = cur;
			cur = nxt;
			ptr++;
			head = head.next;
		}
		int ans = new int[2];
		ans[0] = -1;
		ans[1] = -1;
		if (deban.size() >= 2) {
			ans[0] = min;
			ans[1] = deban.get(deban.size() - 1) - deban.get(0);
		}
		System.out.println(deban);
		return ans;
	}
}