class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		head1 = reverse(head1);
		head2 = reverse(head2);
		ListNode phead = new ListNode(0);
		int flag = 0;
		while (head1 != null || head2 != null || flag != 0) {
			int value1 = head1 != null ? head1.val : 0;
			int value2 = head2 != null ? head2.val : 0;
			int value = (value1 + value2) % 10;
			ListNode node = new ListNode(value);
			node.next = phead.next;
			phead.next = node;
			flag = (value1 + value2) / 10;
			if (head1 != null) {
				head1 = head1.next;
			}
			if (head2 != null) {
				head2 = head2.next;
			}
		}
		return phead.next;
	}
	ListNode reverse(ListNode node) {
		if (node == null) {
			return null;
		}
		ListNode cur = node;
		ListNode pre = null;
		while (cur != null) {
			ListNode temp = cur.next;
			cur.next = pre;
			pre = cur;
			cur = temp;
		}
		return pre;
	}
}