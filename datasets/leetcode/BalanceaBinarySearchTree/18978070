class Solution {
	TreeNode balanceBST(TreeNode root) {
		ArrayList<Integer> arr = new ArrayList<>();
		bstarray(root,arr);
		Collections.sort(arr);
		return balanceBSTfromarray(arr,0,arr.size() - 1);
	}
	TreeNode balanceBSTfromarray(ArrayList<Integer> arr, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(arr.get(mid));
		root.left = balanceBSTfromarray(arr,start,mid - 1);
		root.right = balanceBSTfromarray(arr,mid + 1,end);
		return root;
	}
	void bstarray(TreeNode root, ArrayList<Integer> arr) {
		if (root == null) {
			return;
		}
		arr.add(root.val);
		bstarray(root.left,arr);
		bstarray(root.right,arr);
	}
}