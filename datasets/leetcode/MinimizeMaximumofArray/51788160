class Solution {
	boolean foo(int mid, int[] nums) {
		long filr = 0;
		for (int i = 0; i < nums.length; i++) {
			if (mid >= nums[i]) {
				filr += (mid - nums[i]);
			} 
			else {
				if (nums[i] - mid > filr) {
					return false;
				}
				filr -= (nums[i] - mid);
			}
		}
		return true;
	}
	int minimizeArrayValue(int[] nums) {
		int lo = 1, hi = 0;
		int n = nums.length;
		for (int i: nums) {	
			hi = Math.max(hi,i);
		}
		int ans = hi;
		while (hi >= lo) {
			int mid = (hi + lo) / 2;
			boolean possible = foo(mid,nums);
			if (possible) {
				ans = mid;
				hi = mid - 1;
			} 
			else {
				lo = mid + 1;
			}
		}
		return ans;
	}
}