class Solution {
	int[] FindGreatestSumOfSubArray(int[] array) {
		int maxsum = array[0];
		int cursum = array[0];
		int start = 0, end = 0;
		int left = 0, right = 1;
		while (right < array.length) {
			if (cursum < 0) {
				cursum = array[right];
				left = right;
			} 
			else {
				cursum += array[right];
			}
			if (cursum > maxsum || cursum == maxsum && ((right - left) > (end - start))) {
				start = left;
				end = right;
			}
			maxsum = Math.max(maxsum,cursum);
			right++;
		}
		int[] res = new int[end - start + 1];
		for (int i = start; i <= end; i++) {
			res[i - start] = array[i];
		}
		return res;
	}
}