class Solution {
	List<Integer> findSubstring(String s, String[] words) {
		ArrayList<Integer> list = new ArrayList<>();
		HashMap<String, Integer> hm = new HashMap<>();
		for (String word: words) {	
			hm.put(word,hm.getOrDefault(word,0) + 1);
		}
		int wordLength = words[0].length();
		int substringLength = words.length * wordLength;
		for (int l = 0; l <= s.length() - substringLength; l++) {
			HashMap<String, Integer> hm1 = new HashMap<>();
			for (int i = l; i < l + substringLength; i += wordLength) {
				String currentWord = s.substring(i,i + wordLength);
				hm1.put(currentWord,hm1.getOrDefault(currentWord,0) + 1);
			}
			if (hm1.equals(hm)) {
				list.add(l);
			}
		}
		return list;
	}
}