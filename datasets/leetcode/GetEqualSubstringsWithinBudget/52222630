class Solution {
	int binarySearch(int[] arr, int x) {
		int low = 0;
		int high = arr.length - 1;
		while (low < high) {
			int mid = (low + high) / 2;
			if (arr[mid] < x) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return low;
	}
	int equalSubstring(String s, String t, int maxCost) {
		int len = s.length();
		int[] costs = new int[len + 1];
		costs[0] = 0;
		for (int i = 1; i <= len; i++) {
			costs[i] = costs[i - 1] + Math.abs(s.charAt(i - 1) - t.charAt(i - 1));
		}
		int res = 0;
		for (int i = 1; i <= len; i++) {
			int min_left = binarySearch(costs,costs[i] - maxCost);
			if (i - min_left > res) {
				res = i - min_left;
			}
		}
		return res;
	}
}