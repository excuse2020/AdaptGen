class Solution {
	int maxSatisfied(int[] customers, int[] grumpy, int minutes) {
		int n = customers.length;
		if (minutes >= n) {
			int sum = 0;
			for (int x: customers) {	
				sum += x;
			}
			return sum;
		} 
		else {
			int maxBenefit = 0;
			int benefit = 0;
			int first = 0;
			for (int i = 0; i < minutes; i++) {
				if (grumpy[i] == 1) {
					benefit += customers[i];
				}
			}
			maxBenefit = benefit;
			for (int i = minutes; i < n; i++) {
				if (grumpy[first] == 1) {
					benefit -= customers[first];
				}
				first++;
				if (grumpy[i] == 1) {
					benefit += customers[i];
				}
				maxBenefit = Math.max(benefit,maxBenefit);
			}
			for (int i = 0; i < n; i++) {
				if (grumpy[i] == 0) {
					maxBenefit += customers[i];
				}
			}
			return maxBenefit;
		}
	}
}