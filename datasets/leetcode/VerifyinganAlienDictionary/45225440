class Solution {
	boolean check(String s1, String s2, HashMap<Character, Integer> map) {
		if (s1.equals(s2)) {
			return true;
		}
		int i = 0, j = 0;
		while (i < s1.length() && j < s2.length()) {
			if (map.get(s1.charAt(i)) > map.get(s2.charAt(j))) {
				return false;
			} 
			else if (map.get(s1.charAt(i)) < map.get(s2.charAt(j))) {
				return true;
			} 
			else {
				i++;
				j++;
			}
		}
		if (i == s1.length()) {
			return true;
		}
		return false;
	}
	boolean isAlienSorted(String[] words, String order) {
		HashMap<Character, Integer> map = new HashMap<>();
		for (int i = 0; i < order.length(); i++) {
			map.put(order.charAt(i),i);
		}
		for (int i = 0; i < words.length - 1; i++) {
			if (!check(words[i],words[i + 1],map)) {
				return false;
			}
		}
		return true;
	}
}