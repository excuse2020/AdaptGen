class Solution {
	int countVowelPermutation(int n) {
		long mod = (long) Math.pow(10,9) + 7;
		long dp = new long[n][5];
		for (int i = 0; i < 5; i++) {
			dp[0][i] = 1;
		}
		for (int i = 1; i < n; i++) {
			dp[i][0] = (dp[i - 1][1]) % mod;
			dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % mod;
			dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % mod;
			dp[i][3] = (dp[i - 1][2] + dp[i - 1][4]) % mod;
			dp[i][4] = (dp[i - 1][0]) % mod;
		}
		long sum = 0;
		for (long x: dp[n - 1]) {	
			sum = (sum + x) % mod;
		}
		return (int) sum;
	}
}