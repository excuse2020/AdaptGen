class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Set<Integer> set = new HashSet<>();
		long ans = 0;
		long currentSum = 0;
		int firstPointer = 0;
		for (int secondPointer = 0; secondPointer < nums.length; secondPointer++) {
			while (set.contains(nums[secondPointer])) {
				set.remove(nums[firstPointer]);
				currentSum -= nums[firstPointer++];
			}
			currentSum += nums[secondPointer];
			set.add(nums[secondPointer]);
			if (set.size() == k) {
				ans = Math.max(ans,currentSum);
				set.remove(nums[firstPointer]);
				currentSum -= nums[firstPointer++];
			}
		}
		return ans;
	}
}