class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		long ans = 0;
		HashSet<Integer> rows = new HashSet<>();
		HashSet<Integer> columns = new HashSet<>();
		for (int i = 0; i < n; i++) {
			rows.add(i);
			columns.add(i);
		}
		for (int i = queries.length - 1; i >= 0; i--) {
			int[] ar = queries[i];
			int type = ar[0];
			long value = ar[2];
			if (type == 0) {
				int row = ar[1];
				if (rows.contains(row)) {
					ans += (columns.size() * value);
					rows.remove(row);
				}
			} 
			else {
				int column = ar[1];
				if (columns.contains(column)) {
					ans += (rows.size() * value);
					columns.remove(column);
				}
			}
		}
		return ans;
	}
}