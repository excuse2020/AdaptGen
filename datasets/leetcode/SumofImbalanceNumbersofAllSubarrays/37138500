class Solution {
	int sumImbalanceNumbers(int[] nums) {
		int ans = 0;
		for (int i = 0; i < nums.length; i++) {
			int curr = 0;
			TreeSet<Integer> st = new TreeSet<>();
			for (int j = i; j < nums.length; j++) {
				var l = st.floor(nums[j]);
				var h = st.ceiling(nums[j]);
				if (l != null && h != null) {
					if (h - l > 1 && curr > 0) {
						--curr;
					}
					if (nums[j] - l > 1) {
						++curr;
					}
					if (h - nums[j] > 1) {
						++curr;
					}
				} 
				else if (l != null) {
					if (nums[j] - l > 1) {
						++curr;
					}
				} 
				else if (h != null) {
					if (h - nums[j] > 1) {
						++curr;
					}
				}
				ans += curr;
				st.add(nums[j]);
			}
		}
		return ans;
	}
}