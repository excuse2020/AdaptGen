class Solution {
	boolean checkTrailingZeros(int[] numbers, int startIndex) {
		for (int i = startIndex; i < numbers.length; i++) {
			if (numbers[i] != 0) {
				return false;
			}
		}
		return true;
	}
	int compare(String version1, String version2) {
		String[] parts1 = version1.split("\\.");
		String[] parts2 = version2.split("\\.");
		int[] numbers1 = new int[parts1.length];
		int[] numbers2 = new int[parts2.length];
		for (int i = 0; i < parts1.length; i++) {
			numbers1[i] = Integer.parseInt(parts1[i]);
		}
		for (int i = 0; i < parts2.length; i++) {
			numbers2[i] = Integer.parseInt(parts2[i]);
		}
		int minLength = Math.min(numbers1.length,numbers2.length);
		for (int i = 0; i < minLength; i++) {
			if (numbers1[i] > numbers2[i]) {
				return 1;
			} 
			else if (numbers1[i] < numbers2[i]) {
				return -1;
			}
		}
		if (numbers1.length > numbers2.length) {
			return checkTrailingZeros(numbers1,minLength) ? 0 : 1;
		} 
		else if (numbers1.length < numbers2.length) {
			return checkTrailingZeros(numbers2,minLength) ? 0 : -1;
		}
		return 0;
	}
}