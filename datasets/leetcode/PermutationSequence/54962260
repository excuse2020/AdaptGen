class Solution {
	String getPermutation(int n, int k) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<>();
		ArrayList<Integer> list = new ArrayList<>();
		int arr = new int[n];
		for (int i = 1; i <= n; i++) {
			arr[i - 1] = i;
		}
		boolean vis = new boolean[n];
		helper(arr,n,list,result,vis);
		String s = "";
		for (int j: result.get(k - 1)) {	
			s = s + j;
		}
		return s;
	}
	void helper(int arr, int n, ArrayList<Integer> list, ArrayList<ArrayList<Integer>> result, boolean vis) {
		if (list.size() == arr.length) {
			result.add(new ArrayList<>(list));
			return;
		}
		for (int j = 0; j < n; j++) {
			if (!vis[j]) {
				list.add(arr[j]);
				vis[j] = true;
				helper(arr,n,list,result,vis);
				vis[j] = false;
				list.remove(list.size() - 1);
			}
		}
	}
}