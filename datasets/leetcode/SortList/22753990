class Solution {
	ListNode mergeList(ListNode l1, ListNode l2) {
		ListNode dummy = new ListNode(-1);
		ListNode curr = dummy;
		while (l1 != null && l2 != null) {
			if (l1.val <= l2.val) {
				curr.next = l1;
				l1 = l1.next;
			} 
			else {
				curr.next = l2;
				l2 = l2.next;
			}
			curr = curr.next;
		}
		if (l1 != null) {
			curr.next = l1;
		}
		if (l2 != null) {
			curr.next = l2;
		}
		return dummy.next;
	}
	ListNode sortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode slow = head, fast = head, temp = null;
		while (fast != null && fast.next != null) {
			temp = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		temp.next = null;
		ListNode l1 = sortList(head);
		ListNode l2 = sortList(slow);
		return mergeList(l1,l2);
	}
}