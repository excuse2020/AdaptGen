class Solution {
	TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		List<TreeNode> pathA = new ArrayList<>();
		List<TreeNode> pathB = new ArrayList<>();
		pathFinder(root,p,pathA);
		pathFinder(root,q,pathB);
		for (int i = pathA.size() - 1; i >= 0; i--) {
			if (pathB.contains(pathA.get(i))) {
				return pathA.get(i);
			}
		}
		return null;
	}
	void pathFinder(TreeNode root, TreeNode tar, List<TreeNode> path) {
		path.add(root);
		if (root.val > tar.val) {
			pathFinder(root.left,tar,path);
		} 
		else if (root.val < tar.val) {
			pathFinder(root.right,tar,path);
		}
	}
}