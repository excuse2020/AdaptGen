class Solution {
	int[][] all = new int[3];
	ArrayList<Integer> back = new ArrayList<Integer>();
	ArrayList<Integer> first = new ArrayList<Integer>();
	ArrayList<Integer> middle = new ArrayList<Integer>();
	int[][] threeOrders(TreeNode root) {
		if (root != null) {
			first.add(root.val);
			if (root.left != null) {
				threeOrders(root.left);
			}
			middle.add(root.val);
			if (root.right != null) {
				threeOrders(root.right);
			}
			back.add(root.val);
		}
		all[0] = first.stream().mapToInt().toArray();
		all[1] = middle.stream().mapToInt().toArray();
		all[2] = back.stream().mapToInt().toArray();
		return all;
	}
}