class Solution {
	List<Integer> getList(ArrayList<ListNode> lists) {
		List<Integer> tem = new ArrayList<>();
		for (int i = 0; i < lists.size(); i++) {
			ListNode tem1;
			if (lists.get(i) != null) {
				tem1 = lists.get(i);
			} 
			else {
				continue;
			}
			for (int j = 0; true; j++) {
				tem.add(tem1.val);
				if (tem1.next == null) {
					break;
				}
				tem1 = tem1.next;
			}
		}
		return tem;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists.toString().equals("[]")) {
			return null;
		}
		if (lists != null && lists.size() == 1) {
			return lists.get(0);
		}
		List<Integer> tem = getList(lists);
		if (tem.size() == 0) {
			return null;
		}
		tem.sort(Comparator.comparingInt());
		ListNode result = new ListNode(tem.get(0));
		ListNode tem1 = result;
		if (tem.size() > 1) {
			for (int i = 1; i < tem.size(); i++) {
				ListNode tem2 = new ListNode(tem.get(i));
				tem1.next = tem2;
				tem1 = tem2;
			}
		}
		return result;
	}
}