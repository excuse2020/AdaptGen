class Solution {
	int nextGreaterElement(int n) {
		char[] inp = String.valueOf(n).toCharArray();
		int k = -1;
		for (int i = inp.length - 2; i >= 0; i--) {
			if (inp[i] < inp[i + 1]) {
				k = i;
				break;
			}
		}
		if (k == -1) {
			return -1;
		}
		int largerIdx = inp.length - 1;
		for (int i = inp.length - 1; i >= 0; i--) {
			if (inp[i] > inp[k]) {
				largerIdx = i;
				break;
			}
		}
		swap(inp,k,largerIdx);
		reverse(inp,k + 1,inp.length - 1);
		int ret = 0;
		int i = 0;
		int digit;
	}
	void reverse(char[] inp, int start, int end) {
		while (start < end) {
			char temp = inp[start];
			inp[start] = inp[end];
			inp[end] = temp;
			start++;
			end--;
		}
	}
	void swap(char[] inp, int i, int j) {
		char temp = inp[i];
		inp[i] = inp[j];
		inp[j] = temp;
	}
}