class Solution {
	long makeSimilar(int[] nums, int[] target) {
		int x = 0, j = 0, k = 0, i = 0;
		long count = 0;
		ArrayList<Integer> even = new ArrayList<>();
		ArrayList<Integer> odd = new ArrayList<>();
		ArrayList<Integer> even1 = new ArrayList<>();
		ArrayList<Integer> odd1 = new ArrayList<>();
		for (i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0) {
				even.add(nums[i]);
			} 
			else {
				odd.add(nums[i]);
			}
			if (target[i] % 2 == 0) {
				even1.add(target[i]);
			} 
			else {
				odd1.add(target[i]);
			}
		}
		i = 0;
		j = 0;
		Collections.sort(even);
		Collections.sort(even1);
		Collections.sort(odd);
		Collections.sort(odd1);
		while (i < even.size() && j < even1.size()) {
			x = Math.abs(even.get(i) - even1.get(j));
			count += x / 2;
			i++;
			j++;
		}
		i = 0;
		j = 0;
		while (i < odd.size() && j < odd1.size()) {
			x = Math.abs(odd.get(i) - odd1.get(j));
			count += x / 2;
			i++;
			j++;
		}
		return count / 2;
	}
}