class Solution {
	int findClosestPowOf2(int n) {
		int pow = 0, temp = n;
		while (temp > 1) {
			temp /= 2;
			pow++;
		}
		int min = (int) Math.pow(2,pow), max = (int) Math.pow(2,pow + 1);
		return Math.abs(min - n) < Math.abs(max - n) ? min : max;
	}
	int minOperations(int n) {
		int closestPowOf2 = findClosestPowOf2(n), count = 1;
		while (Math.abs(closestPowOf2 - n) != 0) {
			n = Math.abs(closestPowOf2 - n);
			closestPowOf2 = findClosestPowOf2(n);
			count++;
		}
		return count;
	}
}