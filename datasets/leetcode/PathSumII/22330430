class Solution {
	int SUM;
	List<List<Integer>> res;
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		res = new ArrayList<>();
		this.SUM = targetSum;
		travel(root,0,new ArrayList<>());
		return res;
	}
	void travel(TreeNode root, int sum, List<Integer> list) {
		if (root == null) {
			return;
		}
		sum += root.val;
		list.add(root.val);
		if (root.left == null && root.right == null && sum == SUM) {
			res.add(new ArrayList<>(list));
		}
		travel(root.left,sum,list);
		travel(root.right,sum,list);
		list.remove(list.size() - 1);
		sum -= root.val;
	}
}