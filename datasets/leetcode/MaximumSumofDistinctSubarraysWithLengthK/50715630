class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		HashSet<Integer> set = new HashSet<>();
		long currentSum = 0;
		long maxSum = 0;
		int right = 0;
		for (int left = 0; left < nums.length; left++) {
			while (right < nums.length && !set.contains(nums[right]) && set.size() < k) {
				set.add(nums[right]);
				currentSum += (long) nums[right];
				right++;
			}
			if (set.size() == k) {
				maxSum = Math.max(maxSum,currentSum);
			}
			set.remove(nums[left]);
			currentSum -= (long) nums[left];
		}
		return maxSum;
	}
}