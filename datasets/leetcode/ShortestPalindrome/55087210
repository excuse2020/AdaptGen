class Solution {
	int computePiTable(String pattern) {
		char[] arr = pattern.toCharArray();
		int len = pattern.length();
		int[] pi = new int[len];
		int k = 0;
		for (int i = 1; i < len; i++) {
			while (k > 0 && arr[k] != arr[i]) {
				k = pi[k - 1];
			}
			if (arr[k] == arr[i]) {
				k++;
			}
			pi[i] = k;
		}
		return pi[len - 1];
	}
	String shortestPalindrome(String s) {
		StringBuilder sb = new StringBuilder(s);
		String reverseS = sb.reverse().toString();
		int index = computePiTable(s + " ");
		StringBuilder sb2 = new StringBuilder(s.substring(index));
		return sb2.reverse().toString() + s;
	}
}