class Solution {
	int jobScheduling(int[] startTime, int[] endTime, int[] profit) {
		int n = startTime.length;
		int[][] jobs = new int[n][3];
		for (int i = 0; i < n; i++) {
			jobs[i][0] = startTime[i];
			jobs[i][1] = endTime[i];
			jobs[i][2] = profit[i];
		}
		Arrays.sort(jobs,(a, b) -> {a[1] - b[1]});
		TreeMap<Integer, Integer> map = new TreeMap<>();
		map.put(0,0);
		int max = 0;
		for (int[] job: jobs) {	
			int start = job[0], end = job[1], pro = job[2];
			int localMax = map.floorEntry(start).getValue() + pro;
			if (localMax > max) {
				max = localMax;
				map.put(end,max);
			}
		}
		return max;
	}
}