class Solution {
	boolean dfs(char[][] matrix, char[] word, int i, int j, int index) {
		if (i >= matrix.length || i < 0 || j >= matrix[0].length || j < 0 || matrix[i][j] != word[index]) {
			return false;
		}
		if (index == word.length - 1) {
			return true;
		}
		char tmp = matrix[i][j];
		matrix[i][j] = '.';
		boolean res = dfs(matrix,word,i + 1,j,index + 1) || dfs(matrix,word,i - 1,j,index + 1);
		matrix[i][j] = tmp;
		return res;
	}
	boolean hasPath(char[][] matrix, String word) {
		char[] words = word.toCharArray();
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (dfs(matrix,words,i,j,0)) {
					return true;
				}
			}
		}
		return false;
	}
}