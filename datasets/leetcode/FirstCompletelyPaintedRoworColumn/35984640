class Solution {
	int firstCompleteIndex(int[] arr, int[][] mat) {
		Map<Integer, String> cellLocations = new HashMap<>();
		Map<String, Integer> totalCellsPaintedInRowCol = new HashMap<>();
		int totalRows = mat.length;
		int totalColumns = mat[0].length;
		int answer = 0;
		for (int row = 0; row < mat.length; row++) {
			for (int col = 0; col < mat[row].length; col++) {
				cellLocations.put(mat[row][col],row + ",");
			}
		}
		for (int i = 0; i < arr.length; i++) {
			String currentCellLocation = cellLocations.get(arr[i]);
			String row = "r" + currentCellLocation.split(",")[0];
			String col = "c" + currentCellLocation.split(",")[1];
			if (totalCellsPaintedInRowCol.containsKey(row)) {
				totalCellsPaintedInRowCol.put(row,totalCellsPaintedInRowCol.get(row) + 1);
			} 
			else {
				totalCellsPaintedInRowCol.put(row,1);
			}
			if (totalCellsPaintedInRowCol.containsKey(col)) {
				totalCellsPaintedInRowCol.put(col,totalCellsPaintedInRowCol.get(col) + 1);
			} 
			else {
				totalCellsPaintedInRowCol.put(col,1);
			}
			if (totalCellsPaintedInRowCol.get(row) == totalColumns || totalCellsPaintedInRowCol.get(col) == totalRows) {
				answer = i;
				break;
			}
		}
		return answer;
	}
}