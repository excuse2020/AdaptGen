class Solution {
	int minChanges(int[] n, int k) {
		int[] d = new int[k + 1];
		int[] b = new int[k + 1];
		int s = n.length >> 1;
		for (int i = 0; i < s; i++) {
			d[Math.abs(n[i] - n[n.length - 1 - i])]++;
			b[Math.max(Math.max(n[i],n[n.length - 1 - i]),k - Math.min(n[i],n[n.length - 1 - i]))]++;
		}
		int a = s - d[0], t;
		for (int i = 1; i <= k; i++) {
			b[i] += b[i - 1];
			t = (s - d[i]) + b[i - 1];
			if (a > t) {
				a = t;
			}
		}
		return a;
	}
}