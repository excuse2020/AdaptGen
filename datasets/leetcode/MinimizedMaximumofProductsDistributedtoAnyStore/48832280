class Solution {
	boolean check(int mid, int[] nums, int n) {
		int operations = 0;
		for (int i = 0; i < nums.length; i++) {
			operations = operations + (nums[i] / mid);
			if (nums[i] % mid != 0) {
				operations++;
			}
		}
		return operations <= n;
	}
	int minimizedMaximum(int n, int[] nums) {
		int max = 0;
		for (int i = 0; i < nums.length; i++) {
			max = Math.max(nums[i],max);
		}
		int low = 1, high = max, ans = -1;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (check(mid,nums,n)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}