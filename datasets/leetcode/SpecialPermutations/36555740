class Solution {
	int MOD = 1000000007;
	Integer[][] dp;
	int endMask;
	int[] nums;
	int solve(int mask, int last) {
		if (mask == endMask) {
			return 1;
		}
		if (this.dp[mask][last] != null) {
			return this.dp[mask][last];
		}
		int ans = 0;
		for (int i = 0; i < nums.length; i++) {
			if (((1 << i) & mask) == 0) {
				if (nums[i] % nums[last] == 0 || nums[last] % nums[i] == 0) {
					ans = ((ans % MOD) + (solve((mask ^ (1 << i)),i) % MOD)) % MOD;
				}
			}
		}
		return this.dp[mask][last] = ans;
	}
	int specialPerm(int[] nums) {
		this.nums = nums;
		this.endMask = ((int) (Math.pow(2,nums.length))) - 1;
		this.dp = new Integer[this.endMask][nums.length];
		int ans = 0;
		for (int i = 0; i < nums.length; i++) {
			ans = ((ans % MOD) + (solve((1 << i),i)) % MOD) % MOD;
		}
		return ans;
	}
}