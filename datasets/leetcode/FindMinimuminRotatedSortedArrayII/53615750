class Solution {
	int findMin(int[] nums) {
		int start = 0;
		int end = nums.length - 1;
		if (nums.length == 1) {
			return nums[0];
		}
		if (nums.length == 2 && nums[start] <= nums[end]) {
			return nums[start];
		} 
		else if (nums.length == 2 && nums[start] >= nums[end]) {
			return nums[end];
		}
		while (start <= end) {
			if (nums[start] < nums[end]) {
				return nums[start];
			}
			int mid = start + (end - start) / 2;
			if (nums[mid] > nums[mid + 1]) {
				return nums[mid + 1];
			}
			if (nums[mid] < nums[mid - 1]) {
				return nums[mid];
			}
			if (nums[start] == nums[mid] || nums[end] == nums[mid]) {
				if (nums[start] > nums[start + 1]) {
					return nums[start + 1];
				}
				if (nums[end] < nums[end - 1]) {
					return nums[end];
				}
				start++;
				end--;
			} 
			else if (nums[mid] < nums[start]) {
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		return nums[start];
	}
}