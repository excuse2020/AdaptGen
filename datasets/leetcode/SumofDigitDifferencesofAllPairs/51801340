class Solution {
	long sumDigitDifferences(int[] nums) {
		int n = nums.length;
		long ans = 0;
		int[][] digitCount = new int[10][10];
		for (int num: nums) {	
			int position = 0;
			while (num > 0) {
				int digit = num % 10;
				digitCount[position][digit]++;
				num /= 10;
				position++;
			}
		}
		for (int position = 0; position < 10; position++) {
			int totalNumbersAtPosition = 0;
			for (int digit = 0; digit < 10; digit++) {
				totalNumbersAtPosition += digitCount[position][digit];
			}
			for (int digit = 0; digit < 10; digit++) {
				long count = digitCount[position][digit];
				ans += count * (totalNumbersAtPosition - count);
			}
		}
		return ans / 2;
	}
}