class Solution {
	int left = 0;
	int right = 0;
	int total = 0;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		find(root,x);
		int max = Math.max(total,Math.max(left,right));
		if (max > left + right - max + 1) {
			return true;
		}
		return false;
	}
	void find(TreeNode node, int x) {
		if (node == null) {
			return;
		}
		if (node.val == x) {
			left(node.left);
			right(node.right);
			return;
		}
		total++;
		find(node.left,x);
		find(node.right,x);
	}
	void left(TreeNode node) {
		if (node == null) {
			return;
		}
		left++;
		left(node.left);
		left(node.right);
	}
	void right(TreeNode node) {
		if (node == null) {
			return;
		}
		right++;
		right(node.left);
		right(node.right);
	}
}