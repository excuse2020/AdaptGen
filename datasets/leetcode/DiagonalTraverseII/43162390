class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		TreeMap<Integer, ArrayList<Integer>> map = new TreeMap<>();
		for (int i = nums.size() - 1; i >= 0; i--) {
			for (int j = nums.get(i).size() - 1; j >= 0; j--) {
				int sum = i + j;
				if (map.containsKey(sum)) {
					map.get(sum).add(nums.get(i).get(j));
				} 
				else {
					map.put(sum,new ArrayList<Integer>());
					map.get(sum).add(nums.get(i).get(j));
				}
			}
		}
		ArrayList<Integer> ans = new ArrayList<>();
		while (!map.isEmpty()) {
			int key = map.firstKey();
			ArrayList<Integer> temp = map.get(key);
			for (int i = 0; i < temp.size(); i++) {
				ans.add(temp.get(i));
			}
			map.remove(key);
		}
		int[] res = new int[ans.size()];
		for (int i = 0; i < res.length; i++) {
			res[i] = ans.get(i);
		}
		return res;
	}
}