class Solution {
	int calc(int num) {
		if (num == 2 || num == 3) {
			return 1;
		} 
		else if (num % 3 == 0) {
			return (num / 3);
		} 
		else if (num % 3 == 1) {
			return ((num / 3) - 1) + 2;
		} 
		else if (num % 3 == 2) {
			return (num / 3) + 1;
		}
		return 0;
	}
	int minimumRounds(int[] tasks) {
		Map<Integer, Integer> map = new HashMap<>();
		for (int i: tasks) {	
			if (!map.containsKey(i)) {
				map.put(i,1);
			} 
			else {
				map.put(i,map.get(i) + 1);
			}
		}
		int ans = 0;
		for (Map.Entry<Integer, Integer> entry: map.entrySet()) {	
			int val = entry.getValue();
			if (val < 2) {
				return -1;
			} 
			else {
				ans += calc(val);
			}
		}
		return ans;
	}
}