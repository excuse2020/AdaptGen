class Solution {
	ListNode rotateLinkedList(ListNode head, int k) {
		if (head == null || k == 0) {
			return head;
		}
		ListNode temp = head;
		ListNode fast = head;
		ListNode slow = head;
		int len = 0;
		while (head != null) {
			head = head.next;
			len++;
		}
		if (k % len == 0) {
			return temp;
		}
		while ((k % len) > 0) {
			k--;
			fast = fast.next;
		}
		while (fast.next != null) {
			fast = fast.next;
			slow = slow.next;
		}
		ListNode result = slow.next;
		slow.next = null;
		fast.next = temp;
		return result;
	}
}