class Solution {
	PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a, b) -> {b - a});
	PriorityQueue<Integer> minHeap = new PriorityQueue<>();
	Double GetMedian() {
		if (minHeap.size() > maxHeap.size()) {
			return (double) minHeap.peek();
		}
		return (minHeap.peek() + maxHeap.peek()) / 2.0;
	}
	void Insert(Integer num) {
		minHeap.offer(num);
		maxHeap.offer(minHeap.poll());
		if (minHeap.size() < maxHeap.size()) {
			minHeap.offer(maxHeap.poll());
		}
	}
}