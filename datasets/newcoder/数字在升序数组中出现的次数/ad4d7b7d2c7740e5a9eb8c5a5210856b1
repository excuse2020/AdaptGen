class Solution {
	int GetNumberOfK(int[] array, int k) {
		int num = 0;
		if (array.length == 0) {
			return 0;
		}
		int firstK = getFirstK(array,k,0,array.length - 1);
		int lastK = getLastK(array,k,0,array.length - 1);
		if (firstK >= 0 && lastK >= 0) {
			num = lastK - firstK + 1;
		}
		return num;
	}
	int getFirstK(int[] array, int k, int start, int end) {
		while (start <= end) {
			int mid = start + ((end - start) >> 1);
			if (k <= array[mid]) {
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		if (start < array.length && array[start] == k) {
			return start;
		} 
		else {
			return -1;
		}
	}
	int getLastK(int[] array, int k, int start, int end) {
		while (start <= end) {
			int mid = start + ((end - start) >> 1);
			if (k >= array[mid]) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		if (end >= 0 && array[end] == k) {
			return end;
		} 
		else {
			return -1;
		}
	}
}