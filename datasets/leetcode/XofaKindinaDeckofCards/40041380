class Solution {
	boolean hasGroupsSizeX(int[] deck) {
		if (deck == null || deck.length < 2) {
			return false;
		}
		Map<Integer, Integer> frequencyMap = new HashMap<>();
		for (int card: deck) {	
			frequencyMap.put(card,frequencyMap.getOrDefault(card,0) + 1);
		}
		int minFreq = Integer.MAX_VALUE;
		for (int freq: frequencyMap.values()) {	
			minFreq = Math.min(minFreq,freq);
		}
		for (int x = 2; x <= minFreq; x++) {
			boolean canPartition = true;
			for (int freq: frequencyMap.values()) {	
				if (freq % x != 0) {
					canPartition = false;
					break;
				}
			}
			if (canPartition) {
				return true;
			}
		}
		return false;
	}
}