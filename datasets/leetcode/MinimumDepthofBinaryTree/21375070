class Solution {
	int minDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int depth = 1;
		Deque<TreeNode> queue = new ArrayDeque<>();
		queue.addLast(root);
		while (!queue.isEmpty()) {
			int size = queue.size();
			for (int i = 0; i < size; i++) {
				TreeNode cur = queue.pollFirst();
				if (cur.left == null && cur.right == null) {
					return depth;
				}
				if (cur.left != null) {
					queue.addLast(cur.left);
				}
				if (cur.right != null) {
					queue.addLast(cur.right);
				}
			}
			depth++;
		}
		return depth;
	}
}