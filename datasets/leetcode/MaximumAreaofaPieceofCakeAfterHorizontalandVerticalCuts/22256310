class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		long maxHeight = horizontalCuts[0];
		for (int i = 1; i < horizontalCuts.length; i++) {
			int height = horizontalCuts[i] - horizontalCuts[i - 1];
			maxHeight = Math.max(height,maxHeight);
		}
		maxHeight = Math.max((h - horizontalCuts[horizontalCuts.length - 1]),maxHeight);
		System.out.println(maxHeight);
		Arrays.sort(verticalCuts);
		long maxWidth = verticalCuts[0];
		for (int i = 1; i < verticalCuts.length; i++) {
			int width = verticalCuts[i] - verticalCuts[i - 1];
			maxWidth = Math.max(width,maxWidth);
		}
		maxWidth = Math.max((w - verticalCuts[verticalCuts.length - 1]),maxWidth);
		System.out.println(maxWidth);
		long m = (long) 1e9 + 7;
		return (int) ((maxHeight * maxWidth) % m);
	}
}