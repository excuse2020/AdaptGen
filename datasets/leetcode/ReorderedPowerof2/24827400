class Solution {
	Boolean compareArray(int[] freqCount1, int[] freqCount2) {
		boolean match = true;
		for (int i = 0; i < 10; i++) {
			if (freqCount1[i] != freqCount2[i]) {
				return false;
			}
		}
		return match;
	}
	int[] frequencyCount(int n) {
		int[] digitFrequeny = new int[10];
		while (n > 0) {
			digitFrequeny[n % 10] += 1;
			n /= 10;
		}
		return digitFrequeny;
	}
	boolean reorderedPowerOf2(int n) {
		int[] inputDigitFrequency = frequencyCount(n);
		for (int i = 0; i < 31; i++) {
			int powerOf2 = (int) Math.pow(2,i);
			int[] powerOf2FrqCound = frequencyCount(powerOf2);
			if (compareArray(inputDigitFrequency,powerOf2FrqCound)) {
				return true;
			}
		}
		return false;
	}
}