class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ds = new ArrayList<>();
		List<Integer> list = new ArrayList<>();
		combinationsum3(1,k,n,ds,list,0);
		return ds;
	}
	void combinationsum3(int index, int k, int n, List<List<Integer>> ds, List<Integer> list, int sum) {
		if (sum == n) {
			if (list.size() == k) {
				ds.add(new ArrayList<>(list));
			}
			return;
		}
		if (index > 9) {
			if (sum == n && list.size() == k) {
				ds.add(new ArrayList<>(list));
			}
			return;
		}
		sum += index;
		list.add(index);
		combinationsum3(index + 1,k,n,ds,list,sum);
		sum -= index;
		list.remove(list.size() - 1);
		combinationsum3(index + 1,k,n,ds,list,sum);
	}
}