class Solution {
	int[] cycleLengthQueries(int n, int[][] queries) {
		int[] cycleLengths = new int[queries.length];
		for (int i = 0; i < cycleLengths.length; i++) {
			cycleLengths[i] = findLCAOf(Math.min(queries[i][0],queries[i][1]),Math.max(queries[i][0],queries[i][1]));
		}
		return cycleLengths;
	}
	int findLCAOf(int min, int max) {
		int steps = 0;
		while (min != max) {
			if (max > min) {
				max = max / 2;
				steps++;
			}
			if (min > max) {
				min = min / 2;
				steps++;
			}
		}
		return steps + 1;
	}
}