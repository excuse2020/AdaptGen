class Solution {
	int minPathCost(int[][] grid, int[][] moveCost) {
		int h = grid.length;
		int w = grid[0].length;
		int[][] dp = new int[h + 1][w + 1];
		for (int i = 0; i < w; i++) {
			dp[0][i] = grid[0][i];
		}
		for (int i = 1; i < h; i++) {
			Arrays.fill(dp[i],Integer.MAX_VALUE);
			for (int j = 0; j < w; j++) {
				for (int k = 0; k < w; k++) {
					dp[i][j] = Math.min(dp[i][j],dp[i - 1][k] + moveCost[grid[i - 1][k]][j]);
				}
			}
		}
		int res = Integer.MAX_VALUE;
		for (int i = 0; i < w; i++) {
			res = Math.min(res,dp[h - 1][i]);
		}
		return res;
	}
}