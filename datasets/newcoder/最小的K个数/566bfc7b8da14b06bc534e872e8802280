class Solution {
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int k) {
		if (input == null || input.length == 0 || k <= 0 || input.length < k) {
			return new ArrayList<Integer>();
		}
		int start = 0;
		int end = input.length - 1;
		int index = parition(input,start,end);
		while (index != k - 1) {
			if (index > k - 1) {
				end = index - 1;
				index = parition(input,start,end);
			} 
			else {
				start = index + 1;
				index = parition(input,start,end);
			}
		}
		ArrayList<Integer> result = new ArrayList<>();
		for (int i = 0; i < k; i++) {
			result.add(input[i]);
		}
		return result;
	}
	int parition(int[] data, int left, int right) {
		int index = new Random().nextInt((right - left + 1));
		int value = data[index + left];
		data[left + index] = data[left];
		data[left] = value;
		int j = left;
		for (int i = left + 1; i <= right; i++) {
			if (data[i] < value) {
				data[j] = data[i];
				j++;
				data[i] = data[j];
			}
		}
		data[j] = value;
		return j;
	}
}