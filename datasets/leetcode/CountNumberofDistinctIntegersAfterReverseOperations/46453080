class Solution {
	int countDistinctIntegers(int[] nums) {
		int n = nums.length;
		int count = 2 * n;
		int[] arr = new int[2 * n];
		for (int i = 0; i < n; i++) {
			arr[i] = nums[i];
			arr[n + i] = reverseNum(nums[i]);
		}
		Arrays.sort(arr);
		int p = 0;
		int q = 1;
		while (p < 2 * n && q < 2 * n) {
			if (arr[p] == arr[q]) {
				count--;
				q++;
			} 
			else {
				p = q;
				q++;
			}
		}
		return count;
	}
	int reverseNum(int n) {
		int rev = 0;
		while (n > 0) {
			int r = n % 10;
			rev = rev * 10 + r;
			n /= 10;
		}
		return rev;
	}
}