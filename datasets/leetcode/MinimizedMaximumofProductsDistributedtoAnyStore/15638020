class Solution {
	int minimizedMaximum(int n, int[] quantities) {
		int lo = 0;
		int hi = 100000;
		while (lo < hi) {
			int mid = lo + (hi - lo) / 2;
			if (workable(n,quantities,mid)) {
				hi = mid;
			} 
			else {
				lo = mid + 1;
			}
		}
		return (int) lo;
	}
	boolean workable(int n, int[] quantities, int max) {
		if (max == 0) {
			return false;
		}
		int np = 0;
		for (int q: quantities) {	
			np += q / max;
			if (q % max != 0) {
				np++;
			}
		}
		return np <= n;
	}
}