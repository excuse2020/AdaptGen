class Solution {
	int mod = 1000000007;
	int cal(int[][] arr, int n, int k, int target) {
		if (target == 0 && n == 0) {
			return 1;
		}
		if (target <= 0 || n == 0) {
			return 0;
		}
		if (arr[n][target] != -1) {
			return (int) (arr[n][target] % mod);
		}
		int sum = 0;
		for (int i = 1; i <= k; i++) {
			sum = (sum + cal(arr,n - 1,k,target - i)) % mod;
		}
		arr[n][target] = sum % mod;
		return arr[n][target];
	}
	int numRollsToTarget(int n, int k, int target) {
		int arr = new int[n + 1][target + 1];
		for (int[] ar: arr) {	
			Arrays.fill(ar,-1);
		}
		return cal(arr,n,k,target);
	}
}