class Solution {
	TreeNode lca;
	int maxD = -1;
	TreeNode lcaDeepestLeaves(TreeNode root) {
		int d = recur(root,0);
		return lca;
	}
	int recur(TreeNode node, int d) {
		if (node == null) {
			return -1;
		}
		if (node.left == null && node.right == null) {
			if (d > maxD) {
				maxD = d;
				lca = node;
			}
			return d;
		}
		int leftD = recur(node.left,d + 1);
		int rightD = recur(node.right,d + 1);
		if (leftD == rightD && leftD == maxD) {
			lca = node;
			return maxD;
		}
		return Math.max(leftD,rightD);
	}
}