class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int currSum1 = 0, currSum2 = 0;
		int maxSum = Integer.MIN_VALUE;
		int minSum = Integer.MAX_VALUE;
		int totSum = 0;
		for (int i: nums) {	
			currSum1 += i;
			currSum2 += i;
			totSum += i;
			maxSum = Math.max(currSum1,maxSum);
			if (currSum1 < 0) {
				currSum1 = 0;
			}
			minSum = Math.min(currSum2,minSum);
			if (currSum2 > 0) {
				currSum2 = 0;
			}
		}
		int nonCircularSum = maxSum;
		int circularSum = totSum - minSum;
		return (circularSum != 0) ? Math.max(nonCircularSum,circularSum) : nonCircularSum;
	}
}