class Solution {
	List<List<String>> ans = new ArrayList<>();
	String b;
	HashMap<String, Integer> map = new HashMap<>();
	void dfs(String end, List<String> seq) {
		if (end.equals(b)) {
			List<String> list = new ArrayList<>(seq);
			Collections.reverse(list);
			ans.add(list);
			return;
		}
		String word = end;
		int steps = map.get(word);
		int i = 0;
		char j;
	}
	List<List<String>> findLadders(String beginWord, String endWord, List<String> wordList) {
		b = beginWord;
		HashSet<String> set = new HashSet<>(wordList);
		Queue<String> q = new LinkedList<>();
		map.put(beginWord,1);
		q.add(beginWord);
		set.remove(b);
		String word = q.poll();
		int step = map.get(word);
		if (word == endWord) {
			break;
		}
		int i = 0;
		char j;
	}
}