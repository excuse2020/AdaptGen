class Solution {
	int ans = 0;
	void diff(List<Integer> l) {
		int[] arr = new int[l.size()];
		for (int i = 0; i < l.size(); i++) {
			arr[i] = l.get(i);
		}
		Arrays.sort(arr);
		int temp = arr[arr.length - 1] - arr[0];
		ans = Math.max(ans,temp);
	}
	void fun(TreeNode root, List<Integer> l) {
		l.add(root.val);
		if (root.left == null && root.right == null) {
			diff(l);
			return;
		}
		if (root.left != null) {
			fun(root.left,l);
			l.remove(l.size() - 1);
		}
		if (root.right != null) {
			fun(root.right,l);
			l.remove(l.size() - 1);
		}
	}
	int maxAncestorDiff(TreeNode root) {
		List<Integer> l = new ArrayList<>();
		fun(root,l);
		return ans;
	}
}