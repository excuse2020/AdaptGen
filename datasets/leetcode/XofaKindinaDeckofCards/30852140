class Solution {
	boolean hasGroupsSizeX(int[] deck) {
		if (deck.length < 2) {
			return false;
		}
		TreeSet<Integer> ranges = new TreeSet<>();
		Arrays.sort(deck);
		int same = 0;
		for (int i = 1; i < deck.length; i++) {
			if (deck[i] == deck[i - 1]) {
				same++;
			} 
			else {
				ranges.add(++same);
				same = 0;
			}
		}
		if (same != 0) {
			ranges.add(++same);
		}
		for (int i = 2; i < ranges.first() + 1; i++) {
			int divisor = 0;
			for (Integer range: ranges) {	
				if (range % i == 0) {
					divisor++;
				}
			}
			if (divisor == ranges.size()) {
				return true;
			}
		}
		return false;
	}
}