class Solution {
	void combiSum(int i, int k, int sum, int[] nums, List<List<Integer>> ans, List<Integer> ds) {
		if (sum == 0 && ds.size() == k) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		if (i == nums.length || sum < 0) {
			return;
		}
		if (nums[i] <= sum) {
			ds.add(nums[i]);
			combiSum(i + 1,k,sum - nums[i],nums,ans,ds);
			ds.remove(ds.size() - 1);
		}
		combiSum(i + 1,k,sum,nums,ans,ds);
	}
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		int j = 1;
		int[] nums = new int[9];
		for (int i = 0; i < 9; i++) {
			nums[i] = j;
			j++;
		}
		combiSum(0,k,n,nums,ans,new ArrayList<>());
		return ans;
	}
}