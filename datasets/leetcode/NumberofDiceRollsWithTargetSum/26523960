class Solution {
	int func(int i, int k, int tar, int[][] dp) {
		if (i < 1) {
			if (tar == 0) {
				return 1;
			}
			return 0;
		}
		int mod = 1000000007;
		if (dp[i][tar] != -1) {
			return dp[i][tar];
		}
		long res = 0;
		for (int r = 1; r <= k; r++) {
			if (r <= tar) {
				res += func(i - 1,k,tar - r,dp);
			}
		}
		return dp[i][tar] = (int) (res % mod);
	}
	int numRollsToTarget(int n, int k, int target) {
		int[][] dp = new int[n + 1][target + 1];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return func(n,k,target,dp);
	}
}