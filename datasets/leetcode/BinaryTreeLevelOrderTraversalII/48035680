class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		Queue<TreeNode> q = new LinkedList<>();
		if (root == null) {
			return result;
		}
		List<Integer> list = new ArrayList<>();
		q.offer(root);
		q.offer(null);
		while (!q.isEmpty()) {
			TreeNode currnode = q.poll();
			if (currnode == null) {
				result.add(0,list);
				list = new ArrayList<>();
				if (!q.isEmpty()) {
					q.offer(null);
				}
			} 
			else {
				if (currnode != null) {
					list.add(currnode.val);
				}
				if (currnode.left != null) {
					q.offer(currnode.left);
				}
				if (currnode.right != null) {
					q.offer(currnode.right);
				}
			}
		}
		return result;
	}
}