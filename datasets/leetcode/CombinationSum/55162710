class Solution {
	List<List<Integer>> ss = new ArrayList<>();
	List<List<Integer>> combinationSum(int[] c, int t) {
		help(c,t,0,new ArrayList<>(),0);
		return ss;
	}
	void help(int[] c, int t, int s, List<Integer> l, int i) {
		if (i == c.length) {
			if (s == t) {
				ss.add(new ArrayList<>(l));
			}
			return;
		}
		if (c[i] <= t - s) {
			l.add(c[i]);
			help(c,t,s + c[i],l,i);
			l.remove(l.size() - 1);
		}
		help(c,t,s,l,i + 1);
	}
}