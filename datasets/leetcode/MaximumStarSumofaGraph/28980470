class Solution {
	int maxStarSum(int[] vals, int[][] edges, int k) {
		int n = vals.length;
		List<Integer>[] al = new ArrayList[n];
		for (int i = 0; i < n; i++) {
			al[i] = new ArrayList<Integer>();
		}
		int size = new int[n];
		for (int[] e: edges) {	
			al[e[0]].add(vals[e[1]]);
			size[e[0]]++;
			size[e[1]]++;
			al[e[1]].add(vals[e[0]]);
		}
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			Collections.sort(al[i],Collections.reverseOrder());
			int sum = vals[i];
			for (int j = 0; j < Math.min(k,al[i].size()); j++) {
				max = Math.max(sum,max);
				sum += al[i].get(j);
			}
			max = Math.max(sum,max);
		}
		return max;
	}
}