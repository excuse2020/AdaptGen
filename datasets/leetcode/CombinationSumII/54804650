class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(candidates);
		function(0,candidates,ans,new ArrayList<>(),target);
		return ans;
	}
	void function(int ind, int[] candidates, List<List<Integer>> ans, List<Integer> ds, int t) {
		if (t == 0) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		for (int i = ind; i < candidates.length; i++) {
			if (i > ind && candidates[i] == candidates[i - 1]) {
				continue;
			}
			if (candidates[i] > t) {
				break;
			}
			ds.add(candidates[i]);
			function(i + 1,candidates,ans,ds,t - candidates[i]);
			ds.remove(ds.size() - 1);
		}
	}
}