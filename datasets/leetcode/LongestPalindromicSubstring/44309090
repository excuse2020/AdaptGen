class Solution {
	int ispal(int start, int end, String str) {
		while (start < end) {
			if (str.charAt(start) != str.charAt(end)) {
				return 0;
			} 
			else {
				start++;
				end--;
			}
		}
		return 1;
	}
	String longestPalindrome(String s) {
		int si = 0, sj = 0;
		int max = 0;
		for (int i = 0; i < s.length(); i++) {
			for (int j = 0; j < s.length(); j++) {
				if (ispal(i,j,s) == 1 && (j + 1 - i) > max) {
					max = j + 1 - i;
					si = i;
					sj = j;
				}
			}
		}
		char[] str = new char[sj - si + 1];
		int n = 0;
		for (int i = si; i <= sj; i++) {
			str[n++] = s.charAt(i);
		}
		String string = new String(str);
		return string;
	}
}