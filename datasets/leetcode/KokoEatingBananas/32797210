class Solution {
	boolean kokoEatsAll(int[] piles, int h, int k) {
		int sum = 0;
		for (int pile: piles) {	
			sum += pile / k;
			if (pile % k != 0) {
				sum++;
			}
			if (sum > h) {
				return false;
			}
		}
		return true;
	}
	int minEatingSpeed(int[] piles, int h) {
		int st = 1;
		int end = 1000000000;
		int mid;
		while (st <= end) {
			mid = st + (end - st) / 2;
			if (kokoEatsAll(piles,h,mid)) {
				end = mid - 1;
			} 
			else {
				st = mid + 1;
			}
		}
		return st;
	}
}