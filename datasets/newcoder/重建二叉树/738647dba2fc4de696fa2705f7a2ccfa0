class Solution {
	TreeNode build(int[] pre, int l, int r, int[] in, int x, int y) {
		if (l > r) {
			return null;
		}
		int t = pre[l];
		int p = -1;
		for (int i = x; i <= y; i++) {
			if (t == in[i]) {
				p = i;
			}
		}
		TreeNode node = new TreeNode(t);
		node.left = build(pre,l + 1,l + (p - x),in,x,p - 1);
		node.right = build(pre,l + (p - x),r,in,p + 1,y);
		return node;
	}
	TreeNode reConstructBinaryTree(int[] pre, int[] in) {
		return build(pre,0,pre.length - 1,in,0,in.length - 1);
	}
}