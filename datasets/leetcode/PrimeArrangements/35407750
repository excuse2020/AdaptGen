class Solution {
	long factorial(int n, long mod) {
		long f = 1;
		for (int i = 2; i <= n; i++) {
			f = (f * i) % mod;
		}
		return f;
	}
	boolean isPrime(int n) {
		for (int i = 2; i <= n / 2; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int numPrimeArrangements(int n) {
		int mod = (int) 1e9 + 7;
		int count = 0;
		for (int i = 2; i <= n; i++) {
			if (isPrime(i)) {
				count++;
			}
		}
		return (int) ((factorial(count,mod) * factorial(n - count,mod)) % mod);
	}
}