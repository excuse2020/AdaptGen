class Solution {
	boolean[][][] block = new boolean[3][3][9];
	char[][] board;
	boolean[][] col = new boolean[9][9];
	boolean ok;
	boolean[][] row = new boolean[9][9];
	List<Integer> t = new ArrayList<>();
	void dfs(int k) {
		if (k == t.size()) {
			ok = true;
			return;
		}
		int i = t.get(k) / 9, j = t.get(k) % 9;
		int v = 0;
		row[i][v] = col[j][v] = block[i / 3][j / 3][v] = true;
	}
	void solveSudoku(char[][] board) {
		this.board = board;
		int i = 0;
		int j = 0;
	}
}