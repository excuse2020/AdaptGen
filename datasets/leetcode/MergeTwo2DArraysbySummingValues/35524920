class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		HashMap<Integer, Integer> hs = new HashMap<>();
		for (int i = 0; i < nums1.length; i++) {
			hs.put(nums1[i][0],hs.getOrDefault(nums1[i][0],0) + nums1[i][1]);
		}
		for (int i = 0; i < nums2.length; i++) {
			hs.put(nums2[i][0],hs.getOrDefault(nums2[i][0],0) + nums2[i][1]);
		}
		ArrayList<Integer> list = new ArrayList<>();
		int count = 0;
		for (int i: hs.keySet()) {	
			list.add(i);
			count++;
		}
		Collections.sort(list);
		ArrayList<Integer> ans = new ArrayList<>();
		for (int i = 0; i < list.size(); i++) {
			ans.add(list.get(i));
			ans.add(hs.get(list.get(i)));
		}
		int k = ans.size() - 1;
		int ans1 = new int[count][nums1[0].length];
		for (int i = count - 1; i >= 0; i--) {
			for (int j = nums1[0].length - 1; j >= 0; j--) {
				ans1[i][j] = ans.get(k);
				k--;
			}
		}
		return ans1;
	}
}