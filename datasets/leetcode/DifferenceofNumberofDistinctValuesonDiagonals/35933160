class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		int ans = new int[n][m];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				ans[i][j] = solve(grid,i,j,n,m);
			}
		}
		return ans;
	}
	int solve(int[][] grid, int i, int j, int n, int m) {
		Set<Integer> set1 = new HashSet<>();
		for (int k = i - 1, l = j - 1; k >= 0 && l >= 0; k--, l--) {
			set1.add(grid[k][l]);
		}
		Set<Integer> set2 = new HashSet<>();
		for (int k = i + 1, l = j + 1; k < n && l < m; k++, l++) {
			set2.add(grid[k][l]);
		}
		return Math.abs(set1.size() - set2.size());
	}
}