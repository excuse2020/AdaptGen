class Solution {
	int dp;
	int getway(List<List<Integer>> tri, int i, int j) {
		if (i == tri.size()) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int str = tri.get(i).get(j) + getway(tri,i + 1,j);
		int str_1 = tri.get(i).get(j) + getway(tri,i + 1,j + 1);
		return dp[i][j] = Math.min(str,str_1);
	}
	int minimumTotal(List<List<Integer>> triangle) {
		dp = new int[triangle.size() + 1][triangle.size() + 1];
		for (int is: dp) {	
			Arrays.fill(is,-1);
		}
		return getway(triangle,0,0);
	}
}