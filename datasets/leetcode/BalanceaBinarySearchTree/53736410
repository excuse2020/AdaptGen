class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		inOrder(root,list);
		return solve(0,list.size() - 1,list);
	}
	void inOrder(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		inOrder(root.left,list);
		list.add(root.val);
		inOrder(root.right,list);
	}
	TreeNode solve(int l, int r, List<Integer> list) {
		if (l > r) {
			return null;
		}
		int mid = l + (r - l) / 2;
		TreeNode root = new TreeNode(list.get(mid));
		root.left = solve(l,mid - 1,list);
		root.right = solve(mid + 1,r,list);
		return root;
	}
}