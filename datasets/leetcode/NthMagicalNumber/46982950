class Solution {
	int gcd(int B, int C) {
		if (C == 0) {
			return Math.abs(B);
		}
		return gcd(C,B % C);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long l = 1;
		long min = Math.min(a,b);
		long h = n * min;
		long lcm = (a * b) / gcd(a,b);
		long result = 1;
		while (l <= h) {
			long m = (l + h) / 2;
			long count = (m / b + m / a - m / lcm);
			if (count < n) {
				l = m + 1;
			} 
			else if (count > n) {
				h = m - 1;
			} 
			else {
				result = m;
				h = m - 1;
			}
		}
		return (int) (result % 1000000007);
	}
}