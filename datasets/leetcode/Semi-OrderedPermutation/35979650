class Solution {
	int semiOrderedPermutation(int[] nums) {
		int x = nums.length;
		if (nums[0] == 1 && nums[x - 1] == x) {
			return 0;
		}
		ArrayList<Integer> list = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			list.add(nums[i]);
		}
		int n = list.indexOf(1);
		int m = list.indexOf(x);
		if (n < m) {
			return n + (x - m);
		} 
		else {
			return n + (x - m) - 1;
		}
	}
}