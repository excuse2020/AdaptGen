class Solution {
	double[][] dp;
	double largestSumOfAverages(int[] nums, int k) {
		dp = new double[nums.length + 1][k + 1];
		for (int i = 0; i < nums.length; i++) {
			Arrays.fill(dp[i],-1);
		}
		return solve1(nums,k,0);
	}
	double solve1(int[] nums, int k, int i) {
		if (i >= nums.length) {
			return 0;
		}
		if (k == 0) {
			return Integer.MIN_VALUE;
		}
		if (dp[i][k] != -1) {
			return dp[i][k];
		}
		double sum = 0;
		double ans = -100001;
		for (int j = i; j < nums.length; j++) {
			int s = j - i + 1;
			sum = sum + nums[j];
			ans = Math.max(ans,sum / s + solve1(nums,k - 1,j + 1));
		}
		dp[i][k] = ans;
		return ans;
	}
}