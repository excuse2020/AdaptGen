class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		if (target.equals(words[startIndex])) {
			return 0;
		}
		int n = words.length;
		int lp = (startIndex - 1 + n) % n;
		int rp = (startIndex + 1) % n;
		int lj = 1;
		int rj = 1;
		int ans = Integer.MAX_VALUE;
		while (lp != rp) {
			if (target.equals(words[lp]) || target.equals(words[rp])) {
				ans = Math.min(ans,Math.min(lj,rj));
			}
			lp = (lp - 1 + n) % n;
			rp = (rp + 1) % n;
			lj++;
			rj++;
		}
		if (target.equals(words[lp])) {
			ans = Math.min(ans,Math.min(lj,rj));
		} 
		else if (ans == Integer.MAX_VALUE) {
			return -1;
		}
		return ans;
	}
}