class Solution {
	ListNode rotateLinkedList(ListNode head, int k) {
		if (null == head || null == head.next || 0 == k) {
			return head;
		}
		int len = 0;
		ListNode node = head;
		while (null != node) {
			len++;
			node = node.next;
		}
		node = head;
		Queue<ListNode> queue = new LinkedList<>();
		k = k % len;
		if (0 == k) {
			return head;
		}
		for (int i = 1; i <= len - k; i++) {
			queue.add(node);
			node = node.next;
		}
		head = node;
		while (null != node.next) {
			node = node.next;
		}
		while (!queue.isEmpty()) {
			node.next = queue.poll();
			node = node.next;
		}
		node.next = null;
		return head;
	}
}