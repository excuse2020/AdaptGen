class Solution {
	int maxRotateFunction(int[] nums) {
		int sum = 0;
		for (int x: nums) {	
			sum += x;
		}
		int n = nums.length;
		int dp = new int[n];
		int val = 0;
		for (int i = 0; i < n; i++) {
			val += i * nums[i];
		}
		System.out.println(val + " ");
		dp[0] = val;
		int k = n - 1;
		int ans = Integer.MIN_VALUE;
		ans = Math.max(ans,dp[0]);
		for (int i = 1; i < n; i++) {
			dp[i] = dp[i - 1];
			dp[i] = dp[i] + (-1 * ((n - 1) * nums[k]));
			dp[i] = dp[i] + sum;
			if (ans < dp[i]) {
				ans = dp[i];
				System.out.println(i + " ");
			}
			ans = Math.max(ans,dp[i]);
		}
		for (int x: dp) {	
			System.out.print(x + " ");
		}
		System.out.println();
		return ans == Integer.MIN_VALUE ? 0 : ans;
	}
}