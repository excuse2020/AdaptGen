class Solution {
	int ans = 16;
	String five0 = "1";
	String five1 = "101";
	String five2 = "11001";
	String five3 = "1111101";
	String five4 = "1001110001";
	String five5 = "110000110101";
	String five6 = "11110100001001";
	void dfs(String s, int partition) {
		int sLen = s.length();
		if (sLen == 0) {
			ans = Math.min(ans,partition);
			return;
		}
		if (sLen >= 1 && five0.equals(s.substring(0,five0.length()))) {
			dfs(s.substring(five0.length()),partition + 1);
		}
		if (sLen >= 3 && five1.equals(s.substring(0,five1.length()))) {
			dfs(s.substring(five1.length()),partition + 1);
		}
		if (sLen >= 5 && five2.equals(s.substring(0,five2.length()))) {
			dfs(s.substring(five2.length()),partition + 1);
		}
		if (sLen >= 7 && five3.equals(s.substring(0,five3.length()))) {
			dfs(s.substring(five3.length()),partition + 1);
		}
		if (sLen >= 10 && five4.equals(s.substring(0,five4.length()))) {
			dfs(s.substring(five4.length()),partition + 1);
		}
		if (sLen >= 12 && five5.equals(s.substring(0,five5.length()))) {
			dfs(s.substring(five5.length()),partition + 1);
		}
		if (sLen >= 14 && five6.equals(s.substring(0,five6.length()))) {
			dfs(s.substring(five6.length()),partition + 1);
		}
	}
	int minimumBeautifulSubstrings(String s) {
		dfs(s,0);
		return ans == 16 ? -1 : ans;
	}
}