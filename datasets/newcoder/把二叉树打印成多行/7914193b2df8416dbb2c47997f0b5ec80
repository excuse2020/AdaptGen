class Solution {
	ArrayList<ArrayList<Integer>> result = new ArrayList<>();
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		levelOrder(pRoot);
		return result;
	}
	void levelOrder(TreeNode pRoot) {
		if (pRoot == null) {
			return;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(pRoot);
		int size;
		TreeNode currNode;
		ArrayList<Integer> levelList;
		while (!queue.isEmpty()) {
			size = queue.size();
			levelList = new ArrayList<>();
			while (size-- > 0) {
				currNode = queue.poll();
				levelList.add(currNode.val);
				if (currNode.left != null) {
					queue.offer(currNode.left);
				}
				if (currNode.right != null) {
					queue.offer(currNode.right);
				}
			}
			result.add(levelList);
		}
	}
}