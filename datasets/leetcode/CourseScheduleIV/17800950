class Solution {
	List<Boolean> checkIfPrerequisite(int n, int[][] pre, int[][] queries) {
		boolean[][] g = new boolean[n][n];
		for (int i = 0; i < pre.length; i++) {
			int u = pre[i][0];
			int v = pre[i][1];
			g[u][v] = true;
		}
		floydWarshall(g,n);
		List<Boolean> result = new ArrayList<>();
		for (int[] q: queries) {	
			int u = q[0], v = q[1];
			result.add(g[u][v]);
		}
		return result;
	}
	void floydWarshall(boolean[][] g, int n) {
		for (int k = 0; k < n; k++) {
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (g[i][j]) {
						continue;
					}
					g[i][j] = g[i][k] && g[k][j];
				}
			}
		}
	}
}