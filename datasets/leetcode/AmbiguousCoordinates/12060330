class Solution {
	List<String> ambiguousCoordinates(String s) {
		String str = s.substring(1,s.length() - 1);
		List<String> list = new ArrayList();
		for (int i = 0; i < str.length() - 1; i++) {
			String s1 = str.substring(0,i + 1);
			String s2 = str.substring(i + 1);
			if (isValid(s1) && isValid(s2)) {
				String ans = "(" + s1;
				list.add(ans);
			}
			List<String> l1 = new ArrayList();
			List<String> l2 = new ArrayList();
			fillList(s1,l1);
			fillList(s2,l2);
			for (String ss1: l1) {	
				for (String ss2: l2) {	
					String ans = "(" + ss1;
					list.add(ans);
				}
			}
			if (isValid(s1)) {
				for (String ss2: l2) {	
					String ans = "(" + s1;
					list.add(ans);
				}
			}
			if (isValid(s2)) {
				for (String ss1: l1) {	
					String ans = "(" + ss1;
					list.add(ans);
				}
			}
		}
		return list;
	}
	void fillList(String s, List<String> list) {
		for (int i = 0; i < s.length() - 1; i++) {
			String s1 = s.substring(0,i + 1);
			String s2 = s.substring(i + 1);
			if (isValid(s1) && isSecondValid(s2)) {
				String ans = s1 + ".";
				list.add(ans);
			}
		}
	}
	boolean isSecondValid(String s) {
		boolean found = false;
		int i = 0;
		char ch = s.charAt(i);
	}
	boolean isValid(String s) {
		if (s.length() == 1) {
			return true;
		}
	}
}