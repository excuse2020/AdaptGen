class Solution {
	Stack<Integer> montonicityStack = new Stack<Integer>();
	Stack<Integer> stack = new Stack<Integer>();
	int min() {
		return montonicityStack.peek();
	}
	void pop() {
		int min = montonicityStack.peek();
		int temp = stack.peek();
		if (min == temp) {
			stack.pop();
			montonicityStack.pop();
		}
		stack.pop();
	}
	void push(int node) {
		if (montonicityStack.isEmpty() || montonicityStack.peek() >= node) {
			stack.push(node);
			montonicityStack.push(node);
		}
		stack.push(node);
	}
	int top() {
		return stack.peek();
	}
}