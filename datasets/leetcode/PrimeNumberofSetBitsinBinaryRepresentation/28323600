class Solution {
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			int noOfSetBits = noOfSetBits(i);
			if (isPrime(noOfSetBits)) {
				count++;
			}
		}
		return count;
	}
	boolean isPrime(int n) {
		if (n == 1) {
			return false;
		}
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int noOfSetBits(int n) {
		int[] table = new int[256];
		for (int i = 1; i < 256; i++) {
			table[i] = table[i & (i - 1)] + 1;
		}
		return table[n & 255] + table[(n >> 8) & 255];
	}
}