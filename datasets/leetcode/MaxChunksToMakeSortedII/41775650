class Solution {
	int[] functionP_MAX(int[] pmax) {
		int[] prefixmax = new int[pmax.length];
		prefixmax[0] = pmax[0];
		for (int i = 1; i < pmax.length; i++) {
			prefixmax[i] = Math.max(pmax[i],prefixmax[i - 1]);
		}
		return prefixmax;
	}
	int[] functionS_MIN(int[] smin) {
		int[] suffixmin = new int[smin.length];
		suffixmin[smin.length - 1] = smin[smin.length - 1];
		for (int j = smin.length - 2; j >= 0; j--) {
			suffixmin[j] = Math.min(smin[j],suffixmin[j + 1]);
		}
		return suffixmin;
	}
	int maxChunksToSorted(int[] arr) {
		int count = 0;
		int[] prefixmax = functionP_MAX(arr);
		int[] suffixmin = functionS_MIN(arr);
		for (int i = 0; i < arr.length - 1; i++) {
			if (prefixmax[i] <= suffixmin[i + 1]) {
				count++;
			}
		}
		count++;
		return count;
	}
}