class Solution {
	int index;
	TreeNode balanceBST(TreeNode root) {
		int nodes = new int[size(root)];
		int idx = 0;
		inOrderArray(nodes,root);
		return balanceTree(nodes,0,nodes.length - 1);
	}
	TreeNode balanceTree(int nodes, int left, int right) {
		if (left > right) {
			return null;
		}
		int mid = (left + right) / 2;
		TreeNode node = new TreeNode(nodes[mid]);
		node.left = balanceTree(nodes,left,mid - 1);
		node.right = balanceTree(nodes,mid + 1,right);
		return node;
	}
	void inOrderArray(int nodes, TreeNode root) {
		if (root == null) {
			return;
		}
		inOrderArray(nodes,root.left);
		nodes[index++] = root.val;
		inOrderArray(nodes,root.right);
	}
	int size(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return size(root.left) + size(root.right);
	}
}