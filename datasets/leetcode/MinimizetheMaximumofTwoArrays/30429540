class Solution {
	int gcd(int a, int b) {
		if (b == 0) {
			return a;
		}
		return gcd(b,a % b);
	}
	int minimizeSet(int divisor1, int divisor2, int uniqueCnt1, int uniqueCnt2) {
		long lo = 1, hi = (int) 10e10;
		long ans = hi;
		long lcm = ((long) divisor1 * (long) divisor2) / gcd(divisor1,divisor2);
		while (lo < hi) {
			long mi = lo + (hi - lo) / 2;
			int cnt1 = (int) (mi - mi / divisor1);
			int cnt2 = (int) (mi - mi / divisor2);
			int cntAll = (int) (mi - mi / lcm);
			if (cnt1 < uniqueCnt1 || cnt2 < uniqueCnt2 || cntAll < uniqueCnt1 + uniqueCnt2) {
				lo = mi + 1;
			} 
			else {
				hi = mi;
			}
		}
		return (int) lo;
	}
}