class Solution {
	int helper(int potions, int spells, long success) {
		int start = 0;
		int end = potions.length - 1;
		int result = potions.length;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if ((long) spells * potions[mid] >= success) {
				result = mid;
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		return result;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int res = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			int idx = helper(potions,spells[i],success);
			res[i] = potions.length - idx;
		}
		return res;
	}
}