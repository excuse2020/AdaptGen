class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		findsum(0,0,n,ans,new ArrayList<>(),k,n);
		return ans;
	}
	void findsum(int ind, int sum, int target, List<List<Integer>> ans, List<Integer> temp, int k, int n) {
		if (temp.size() == k) {
			if (sum == n) {
				ans.add(new ArrayList<>(temp));
			}
			return;
		}
		for (int i = ind + 1; i < 10; i++) {
			temp.add(i);
			findsum(i,sum + i,target - i,ans,temp,k,n);
			temp.remove(temp.size() - 1);
		}
	}
}