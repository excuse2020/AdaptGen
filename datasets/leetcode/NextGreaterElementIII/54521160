class Solution {
	int nextGreaterElement(int n) {
		StringBuilder sb = new StringBuilder(String.valueOf(n));
		int i = sb.length() - 2;
		while (i >= 0 && sb.charAt(i) >= sb.charAt(i + 1)) {
			i--;
		}
		if (i < 0) {
			return -1;
		}
		int j = sb.length() - 1;
		while (sb.charAt(j) <= sb.charAt(i)) {
			j--;
		}
		swap(sb,i,j);
		reverse(sb,i + 1,sb.length() - 1);
		long result = Long.parseLong(sb.toString());
		return (result <= Integer.MAX_VALUE) ? (int) result : -1;
	}
	void reverse(StringBuilder sb, int start, int end) {
		while (start < end) {
			swap(sb,start,end);
			start++;
			end--;
		}
	}
	void swap(StringBuilder sb, int i, int j) {
		char temp = sb.charAt(i);
		sb.setCharAt(i,sb.charAt(j));
		sb.setCharAt(j,temp);
	}
}