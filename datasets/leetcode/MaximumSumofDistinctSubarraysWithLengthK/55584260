class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int start = 0, end = 0;
		int n = nums.length;
		Set<Integer> set = new HashSet<>();
		long sum = 0, max_sum = 0;
		while (end < n) {
			int val = nums[end];
			while (set.contains(val) || (end - start + 1 > k) && start < end) {
				sum -= nums[start];
				set.remove(nums[start]);
				start++;
			}
			sum += val;
			set.add(val);
			if (end - start + 1 == k) {
				max_sum = Math.max(max_sum,sum);
			}
			end++;
		}
		return max_sum;
	}
}