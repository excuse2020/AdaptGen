class Solution {
	int deleteString(String s) {
		if (s.length() == 1) {
			return 1;
		}
		int[] dp = new int[s.length()];
		Arrays.fill(dp,1);
		int[][] lcs = new int[s.length()][s.length()];
		for (int[] row: lcs) {	
			Arrays.fill(row,-1);
		}
		int localMax = -1;
		for (int i = s.length() - 1; i >= 0; i--) {
			localMax = -1;
			for (int j = i; j <= s.length() - 1; j++) {
				if (i != j && s.charAt(i) == s.charAt(j)) {
					if (j - i == 1 || j == s.length() - 1) {
						lcs[i][j] = 1;
					} 
					else {
						lcs[i][j] = Math.min(j - i,1 + lcs[i + 1][j + 1]);
					}
					if (i + lcs[i][j] == j) {
						localMax = Math.max(localMax,dp[j]);
					}
				} 
				else if (i != j && s.charAt(i) != s.charAt(j)) {
					lcs[i][j] = 0;
				}
			}
			dp[i] = localMax == -1 ? 1 : (localMax + 1);
		}
		return dp[0];
	}
}