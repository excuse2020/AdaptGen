class Solution {
	List<List<Integer>> closestNodes(TreeNode root, List<Integer> q) {
		TreeSet<Integer> al = new TreeSet<>();
		inorder(root,al);
		List<List<Integer>> ans = new ArrayList<>();
		int low = al.first();
		int high = al.last();
		for (int i: q) {	
			int one = -1;
			if (i >= low) {
				one = al.floor(i);
			}
			int two = -1;
			if (i <= high) {
				two = al.ceiling(i);
			}
			ArrayList<Integer> a1 = new ArrayList<>();
			a1.add(one);
			a1.add(two);
			ans.add(a1);
		}
		return ans;
	}
	void inorder(TreeNode root, TreeSet<Integer> al) {
		if (root != null) {
			inorder(root.left,al);
			al.add(root.val);
			inorder(root.right,al);
		}
	}
}