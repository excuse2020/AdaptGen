class Solution {
	int minimumAverageDifference(int[] nums) {
		int n = nums.length;
		long total = 0;
		for (int num: nums) {	
			total += num;
		}
		if (n == 0 || n == 1 || total == 0) {
			return 0;
		}
		int minimumAverageIndex = -1;
		int minimumAverageDifference = Integer.MAX_VALUE;
		long subTotal = 0;
		for (int i = 0; i < n; i++) {
			subTotal += nums[i];
			long leftAverage = subTotal / (i + 1);
			long rightAverage = (total == subTotal) ? 0 : (total - subTotal) / (n - (i + 1));
			int currentAverage = (int) Math.abs(leftAverage - rightAverage);
			if (minimumAverageDifference > currentAverage) {
				minimumAverageDifference = currentAverage;
				minimumAverageIndex = i;
			}
		}
		return minimumAverageIndex;
	}
}