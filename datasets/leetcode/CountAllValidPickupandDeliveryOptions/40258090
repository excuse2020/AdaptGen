class Solution {
	long MOD = (long) 1e9 + 7;
	List<List<Long>> combi;
	int countOrders(int n) {
		nCr((long) 2 * n);
		long ans = 1;
		for (int i = 2 * n; i > 0; i -= 2) {
			ans = (ans * getnCr(i,2)) % MOD;
		}
		return (int) ans;
	}
	long getnCr(int n, int r) {
		return combi.get(n).get(r);
	}
	void nCr(long n) {
		combi = new ArrayList<>();
		combi.add(Arrays.asList(new Long{1l}));
		for (int i = 1; i <= n; i++) {
			List<Long> l = new ArrayList<>();
			l.add(1l);
			for (int j = 1; j < i; j++) {
				l.add((combi.get(i - 1).get(j - 1) + combi.get(i - 1).get(j)) % MOD);
			}
			l.add(1l);
			combi.add(l);
		}
	}
}