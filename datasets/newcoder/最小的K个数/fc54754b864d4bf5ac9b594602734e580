class Solution {
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int k) {
		ArrayList<Integer> list = new ArrayList();
		if (input.length == 0 || k > input.length) {
			return list;
		}
		int i = 0, j = input.length - 1;
		while (i < j) {
			int p = partition(input,i,j);
			if (p == k - 1 || p + 1 == j) {
				for (int x = 0; x < k; x++) {
					list.add(input[x]);
				}
				return list;
			} 
			else if (p < k) {
				i = p + 1;
			} 
			else {
				j = p;
			}
		}
		return list;
	}
	int partition(int[] input, int left, int right) {
		int pivot = input[left];
		while (left < right) {
			while (left < right && input[right] >= pivot) {
				right--;
			}
			input[left] = input[right];
			while (left < right && input[left] <= pivot) {
				left++;
			}
			input[right] = input[left];
		}
		input[left] = pivot;
		return left;
	}
}