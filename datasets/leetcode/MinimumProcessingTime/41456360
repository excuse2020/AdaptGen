class Solution {
	int minProcessingTime(List<Integer> processorTime, List<Integer> tasks) {
		Collections.sort(processorTime);
		Collections.sort(tasks);
		int max1 = 0;
		int max2 = 0;
		int i = 0;
		int j = tasks.size() - 1;
		while (i < processorTime.size() && (j - 3) >= 0) {
			int a = processorTime.get(i) + tasks.get(j);
			int b = processorTime.get(i) + tasks.get(j - 1);
			int c = processorTime.get(i) + tasks.get(j - 2);
			int d = processorTime.get(i) + tasks.get(j - 3);
			i++;
			j -= 4;
			max1 = Math.max(Math.max(Math.max(Math.max(a,b),c),d),max1);
		}
		return max1;
	}
}