class Solution {
	int solve(char[][] matrix) {
		int len1 = matrix.length;
		if (len1 == 0) {
			return 0;
		}
		int len2 = matrix[0].length;
		if (len2 == 0) {
			return 0;
		}
		if (len1 == 1 || len2 == 1) {
			for (int i = 0; i < len1; i++) {
				for (int j = 0; j < len2; j++) {
					if (matrix[i][j] == '1') {
						return 1;
					}
				}
			}
		}
		int[][] dp = new int[len1][len2];
		for (int i = 0; i < len1; i++) {
			if (matrix[i][0] == '1') {
				dp[i][0] = 1;
			} 
			else {
				dp[i][0] = 0;
			}
		}
		for (int i = 0; i < len2; i++) {
			if (matrix[0][i] == '1') {
				dp[0][i] = 1;
			} 
			else {
				dp[0][i] = 0;
			}
		}
		int max = 1;
		for (int i = 1; i < len1; i++) {
			for (int j = 1; j < len2; j++) {
				if (matrix[i][j] == '1') {
					dp[i][j] = Math.min(Math.min(dp[i - 1][j],dp[i][j - 1]),dp[i - 1][j - 1]) + 1;
					if (dp[i][j] > max) {
						max = dp[i][j];
					}
				} 
				else {
					dp[i][j] = 0;
				}
			}
		}
		return max * max;
	}
}