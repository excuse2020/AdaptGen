class Solution {
	int first(int[] nums, int target) {
		int i = 0, n = nums.length, j = n - 1;
		int ret = -1;
		while (i <= j) {
			int mid = i + (j - i) / 2;
			if (nums[mid] == target) {
				ret = mid;
				j = mid - 1;
			} 
			else if (nums[mid] > target) {
				j = mid - 1;
			} 
			else {
				i = mid + 1;
			}
		}
		return ret;
	}
	int[] searchRange(int[] nums, int target) {
		int[] ans = new int[2];
		ans[0] = first(nums,target);
		ans[1] = second(nums,target);
		return ans;
	}
	int second(int[] nums, int target) {
		int i = 0, n = nums.length, j = n - 1;
		int ret = -1;
		while (i <= j) {
			int mid = i + (j - i) / 2;
			if (nums[mid] == target) {
				ret = mid;
				i = mid + 1;
			} 
			else if (nums[mid] < target) {
				i = mid + 1;
			} 
			else {
				j = mid - 1;
			}
		}
		return ret;
	}
}