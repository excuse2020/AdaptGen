class Solution {
	List<List<Integer>> combinations = new ArrayList<>();
	List<List<Integer>> combinationSum3(int k, int n) {
		slv(1,k,n,new ArrayList<>());
		return combinations;
	}
	void slv(int n, int count, int target, List<Integer> combination) {
		if (target == 0 && count == 0) {
			combinations.add(new ArrayList<>(combination));
			return;
		}
		if (target < 0 || count < 0) {
			return;
		}
		for (int i = n; i < 10; i++) {
			combination.add(i);
			slv(i + 1,count - 1,target - i,combination);
			combination.remove(combination.size() - 1);
		}
	}
}