class Solution {
	boolean containsMinDifference(int difference, int[] values, int requiredCount) {
		int num = values[0] + difference;
		int count = 1;
		for (int loop = 1; loop < values.length; loop++) {
			if (values[loop] >= num) {
				num = values[loop] + difference;
				count++;
			}
		}
		return count >= requiredCount;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int left = 0;
		int right = price[price.length - 1] - price[0];
		while (left <= right) {
			int middle = (right + left) >> 1;
			if (containsMinDifference(middle,price,k)) {
				left = middle + 1;
			} 
			else {
				right = middle - 1;
			}
		}
		return right;
	}
}