class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		int n = s.length();
		List<String> l = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j <= n; j++) {
				l.add(s.substring(i,j));
			}
		}
		int max = 0;
		for (int i = 0; i < l.size(); i++) {
			String temp = l.get(i);
			int c = 0, count = 0;
			for (int j = 1; j < temp.length(); j++) {
				if (c == 2) {
					break;
				}
				if (temp.charAt(j) == temp.charAt(j - 1)) {
					c++;
				}
				count++;
			}
			if (c != 2) {
				count = temp.length();
			}
			max = Math.max(max,count);
		}
		return max;
	}
}