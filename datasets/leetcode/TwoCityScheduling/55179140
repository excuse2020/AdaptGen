class Solution {
	int twoCitySchedCost(int[][] costs) {
		PriorityQueue<Integer> pq1 = new PriorityQueue<>();
		PriorityQueue<Integer> pq2 = new PriorityQueue<>();
		int sum = 0;
		int n = costs.length;
		int u = 0, d = 0;
		for (int i = 0; i < n; i++) {
			if (costs[i][0] <= costs[i][1]) {
				u++;
				pq1.add(costs[i][1] - costs[i][0]);
				sum += costs[i][0];
			} 
			else {
				d++;
				pq2.add(costs[i][0] - costs[i][1]);
				sum += costs[i][1];
			}
		}
		System.out.println(sum);
		if (u > n / 2) {
			while (u != n / 2) {
				sum += pq1.remove();
				u--;
			}
		} 
		else if (d > n / 2) {
			while (d != n / 2) {
				sum += pq2.remove();
				d--;
			}
		}
		return sum;
	}
}