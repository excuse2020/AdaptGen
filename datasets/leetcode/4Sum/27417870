class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(nums);
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				long twoSumTarget = (long) (target) - (long) (nums[i]);
				int left = j + 1;
				int right = nums.length - 1;
				while (left < right) {
					if (nums[left] + nums[right] < twoSumTarget) {
						left++;
					} 
					else if (nums[left] + nums[right] > twoSumTarget) {
						right--;
					} 
					else {
						ans.add(new ArrayList<>(Arrays.asList(nums[i],nums[j],nums[left],nums[right])));
						while (left < right && nums[left] == nums[left + 1]) {
							left++;
						}
						while (left < right && nums[right] == nums[right - 1]) {
							right--;
						}
						left++;
						right--;
					}
				}
				while (j < nums.length - 1 && nums[j] == nums[j + 1]) {
					j++;
				}
			}
			while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
				i++;
			}
		}
		return ans;
	}
}