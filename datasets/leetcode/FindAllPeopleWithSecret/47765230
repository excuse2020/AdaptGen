class Solution {
	List<Integer> findAllPeople(int n, int[][] meet, int fp) {
		Map<Integer, List<int[]>> map = new HashMap<>();
		for (int i = 0; i < n; ++i) {
			map.put(i,new ArrayList<>());
		}
		for (int i = 0; i < meet.length; ++i) {
			map.get(meet[i][0]).add(new int{meet[i][1], meet[i][2]});
			map.get(meet[i][1]).add(new int{meet[i][0], meet[i][2]});
		}
		PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> {a[1] - b[1]});
		pq.add(new int{fp, 0});
		pq.add(new int{0, 0});
		int[] vis = new int[n];
		List<Integer> ans = new ArrayList<>();
		while (!pq.isEmpty()) {
			int ar = pq.poll();
			int p = ar[0];
			if (vis[p] == 1) {
				continue;
			}
			ans.add(p);
			vis[p] = 1;
			List<int[]> nbr = map.get(p);
			for (int[] m: nbr) {	
				if (ar[1] <= m[1]) {
					pq.add(new int{m[0], m[1]});
				}
			}
		}
		Collections.sort(ans);
		return ans;
	}
}