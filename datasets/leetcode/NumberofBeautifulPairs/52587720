class Solution {
	int countBeautifulPairs(int[] nums) {
		int cnt = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (isCoPrime(firstDigit(nums[i]),lastDigit(nums[j]))) {
					cnt++;
				}
			}
		}
		return cnt;
	}
	int firstDigit(int num) {
		int ans = 0;
		while (num != 0) {
			ans = num % 10;
			num = num / 10;
		}
		return ans;
	}
	boolean isCoPrime(int a, int b) {
		for (int i = 2; i <= Math.min(a,b); i++) {
			if (a % i == 0 && b % i == 0) {
				return false;
			}
		}
		return true;
	}
	int lastDigit(int num) {
		return num % 10;
	}
}