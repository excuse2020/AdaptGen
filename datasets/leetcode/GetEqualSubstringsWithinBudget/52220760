class Solution {
	int equalSubstring(String s, String t, int maxCost) {
		int n = s.length();
		int ans = 0;
		Deque<Integer> dq = new ArrayDeque<>();
		for (int i = 0; i < n; i++) {
			dq.add(Math.abs(s.charAt(i) - t.charAt(i)));
			maxCost -= dq.peekLast();
			while (maxCost < 0) {
				maxCost += dq.pollFirst();
			}
			ans = Math.max(ans,dq.size());
		}
		return ans;
	}
}