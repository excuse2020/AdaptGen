class Solution {
	int maxMoves(int[][] grid) {
		int rows = grid.length;
		int cols = grid[0].length;
		int[][] opt = new int[rows][cols];
		for (int j = cols - 2; j >= 0; j--) {
			for (int i = 0; i < rows; i++) {
				if (i - 1 >= 0 && grid[i][j] < grid[i - 1][j + 1]) {
					opt[i][j] = Math.max(opt[i][j],opt[i - 1][j + 1] + 1);
				}
				if (grid[i][j] < grid[i][j + 1]) {
					opt[i][j] = Math.max(opt[i][j],opt[i][j + 1] + 1);
				}
				if (i + 1 < rows && grid[i][j] < grid[i + 1][j + 1]) {
					opt[i][j] = Math.max(opt[i][j],opt[i + 1][j + 1] + 1);
				}
			}
		}
		int max = 0;
		for (int i = 0; i < rows; i++) {
			max = Math.max(max,opt[i][0]);
		}
		return max;
	}
}