class Solution {
	int closestMeetingNode(int[] edges, int node1, int node2) {
		if (node1 == node2) {
			return node1;
		}
		boolean[] arr1 = new boolean[edges.length];
		boolean[] arr2 = new boolean[edges.length];
		arr1[node1] = true;
		arr2[node2] = true;
		for (int i = 0; i < edges.length; i++) {
			if (node1 == -1 && node2 == -1) {
				break;
			}
			int res = -1;
			if (node1 != -1) {
				node1 = edges[node1];
				if (node1 != -1) {
					if (arr2[node1]) {
						res = node1;
					}
					arr1[node1] = true;
				}
			}
			if (node2 != -1) {
				node2 = edges[node2];
				if (node2 != -1) {
					if (arr1[node2]) {
						res = res == -1 ? node2 : Math.min(node2,res);
					}
					arr2[node2] = true;
				}
			}
			if (res != -1) {
				return res;
			}
		}
		return -1;
	}
}