class Solution {
	List<TreeNode> allPoss(int n) {
		if (n == 1) {
			List<TreeNode> arr = new ArrayList<>();
			arr.add(new TreeNode(0));
			return arr;
		}
		List<TreeNode> arr = new ArrayList<>();
		for (int left = 1; left < n; left += 2) {
			int right = n - 1;
			if (right % 2 == 0) {
				continue;
			}
			List<TreeNode> leftSide = allPoss(left);
			List<TreeNode> rightSide = allPoss(right);
			for (TreeNode l: leftSide) {	
				for (TreeNode r: rightSide) {	
					TreeNode curr = new TreeNode(0);
					curr.left = l;
					curr.right = r;
					arr.add(curr);
				}
			}
		}
		return arr;
	}
	List<TreeNode> allPossibleFBT(int n) {
		if (n % 2 == 0) {
			return new ArrayList<>();
		}
		return allPoss(n);
	}
}