class Solution {
	int findIndex(int[] lis, int val) {
		int l = 0, r = lis.length - 1;
		while (l < r) {
			int mid = l + (r - l) / 2;
			if (lis[mid] <= val) {
				l = mid + 1;
			} 
			else {
				r = mid;
			}
		}
		return l;
	}
	int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
		int n = obstacles.length;
		int max = 100000001;
		int lis = new int[n];
		int llis = new int[n];
		for (int i = 0; i < n; i++) {
			lis[i] = max;
		}
		for (int i = 0; i < n; i++) {
			int val = obstacles[i];
			int indexForValInLis = findIndex(lis,val);
			lis[indexForValInLis] = val;
			llis[i] = indexForValInLis + 1;
		}
		return llis;
	}
}