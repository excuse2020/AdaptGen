class Solution {
	void addNode(ListNode tarNode, ListNode addNode) {
		addNode.next = tarNode.next;
		tarNode.next = addNode;
	}
	ListNode delNode(ListNode delPre) {
		ListNode del = delPre.next;
		delPre.next = delPre.next.next;
		return del;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode newHead = new ListNode(-1);
		newHead.next = head;
		ListNode delPre = newHead;
		ListNode tarNode = newHead;
		for (int i = 0; i < m - 1; i++) {
			delPre = delPre.next;
		}
		for (int i = 0; i < n; i++) {
			tarNode = tarNode.next;
		}
		for (int i = 0; i < n - m; i++) {
			addNode(tarNode,delNode(delPre));
		}
		return newHead.next;
	}
}