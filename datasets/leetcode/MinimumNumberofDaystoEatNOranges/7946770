class Solution {
	int[] dp;
	int calc(int i) {
		if (i == 0) {
			return 0;
		}
		if (i < 1000000 && dp[i] != -1) {
			return dp[i];
		}
		int ans;
		if (i % 6 == 0) {
			ans = 1 + Math.min(calc(i / 2),calc(i / 3));
		} 
		else if (i % 3 == 0) {
			ans = 1 + Math.min(calc(i - 1),calc(i / 3));
		} 
		else if (i % 2 == 0) {
			ans = 1 + Math.min(calc(i - 1),calc(i / 2));
		} 
		else {
			ans = 1 + calc(i - 1);
		}
		if (i < 1000000) {
			dp[i] = ans;
		}
		return ans;
	}
	int minDays(int n) {
		dp = new int[1000000];
		if (n < 3) {
			return n;
		}
		Arrays.fill(dp,-1);
		dp[0] = 0;
		dp[1] = 1;
		dp[2] = 2;
		dp[3] = 2;
		return calc(n);
	}
}