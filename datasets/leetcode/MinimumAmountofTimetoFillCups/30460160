class Solution {
	int fillCups(int[] amount) {
		int count = 0;
		return findResultRescursion(count,amount);
	}
	int findResultRescursion(int count, int[] amount) {
		if (sort(amount)) {
			if (amount[2] > 0) {
				amount[2] = amount[2] - 1;
			}
			if (amount[1] > 0) {
				amount[1] = amount[1] - 1;
			}
			count++;
			return findResultRescursion(count,amount);
		} 
		else {
			return count;
		}
	}
	boolean sort(int[] amount) {
		if (amount[0] == 0 && amount[1] == 0 && amount[2] == 0) {
			return false;
		} 
		else {
			if (amount[0] > amount[1]) {
				int temp = amount[1];
				amount[1] = amount[0];
				amount[0] = temp;
			}
			if (amount[0] > amount[2]) {
				int temp = amount[2];
				amount[2] = amount[0];
				amount[0] = temp;
			}
			if (amount[1] > amount[2]) {
				int temp = amount[2];
				amount[2] = amount[1];
				amount[1] = temp;
			}
		}
		return true;
	}
}