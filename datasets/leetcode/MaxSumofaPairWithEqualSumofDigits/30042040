class Solution {
	int maximumSum(int[] nums) {
		HashMap<Integer, ArrayList<Integer>> map = new HashMap();
		for (int i: nums) {	
			int n = i;
			int sum = 0;
			while (n > 0) {
				sum += n % 10;
				n = n / 10;
			}
			if (map.containsKey(sum)) {
				map.get(sum).add(i);
			} 
			else {
				map.put(sum,new ArrayList());
				map.get(sum).add(i);
			}
		}
		int max = Integer.MIN_VALUE;
		for (int key: map.keySet()) {	
			ArrayList<Integer> a = map.get(key);
			if (a.size() < 2) {
				continue;
			}
			Collections.sort(a);
			max = Math.max(max,a.get(a.size() - 1) + a.get(a.size() - 2));
		}
		return max == Integer.MIN_VALUE ? -1 : max;
	}
}