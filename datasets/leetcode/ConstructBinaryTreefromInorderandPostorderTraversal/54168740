class Solution {
	int postorderIndex;
	TreeNode build(int[] postorder, HashMap<Integer, Integer> hm, int left, int right) {
		if (left > right || postorderIndex < 0) {
			return null;
		}
		int rootVal = postorder[postorderIndex];
		postorderIndex--;
		TreeNode root = new TreeNode(rootVal);
		int inOrderIndex = hm.get(rootVal);
		root.right = build(postorder,hm,inOrderIndex + 1,right);
		root.left = build(postorder,hm,left,inOrderIndex - 1);
		return root;
	}
	TreeNode buildTree(int[] inorder, int[] postorder) {
		postorderIndex = postorder.length - 1;
		HashMap<Integer, Integer> hm = new HashMap<>();
		for (int i = 0; i < inorder.length; i++) {
			hm.put(inorder[i],i);
		}
		return build(postorder,hm,0,inorder.length - 1);
	}
}