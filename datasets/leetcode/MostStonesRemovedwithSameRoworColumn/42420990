class Solution {
	void dfs(int[][] stones, boolean visited, int idx) {
		visited[idx] = true;
		int p = stones[idx][0];
		int q = stones[idx][1];
		for (int i = 0; i < stones.length; i++) {
			if (visited[i]) {
				continue;
			}
			if (p == stones[i][0] || q == stones[i][1]) {
				dfs(stones,visited,i);
			}
		}
	}
	int removeStones(int[][] stones) {
		boolean visited = new boolean[stones.length];
		int minimumStonesRequired = 0;
		for (int i = 0; i < stones.length; i++) {
			if (!visited[i]) {
				minimumStonesRequired++;
				dfs(stones,visited,i);
			}
		}
		return stones.length - minimumStonesRequired;
	}
}