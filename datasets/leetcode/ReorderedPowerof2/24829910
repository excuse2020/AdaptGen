class Solution {
	int[] frequency(String s) {
		int[] f = new int[10];
		int i = 0;
	}
	boolean reorderedPowerOf2(int n) {
		ArrayList<Integer> list = new ArrayList<>();
		int v = 1;
		while (v < 1000000001) {
			list.add(v);
			v <<= 1;
		}
		String s2 = Integer.toString(n);
		int[] f2 = frequency(s2);
		for (int v1: list) {	
			String s1 = Integer.toString(v1);
			if (s1.length() == s2.length()) {
				int[] f1 = frequency(s1);
				boolean valid = true;
				for (int i = 0; i < 10 && valid; i++) {
					if (f1[i] != f2[i]) {
						valid = false;
					}
				}
				if (valid) {
					return true;
				}
			}
		}
		return false;
	}
}