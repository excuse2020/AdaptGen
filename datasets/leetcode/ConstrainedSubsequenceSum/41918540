class Solution {
	int constrainedSubsetSum(int[] nums, int k) {
		int n = nums.length;
		int[] dp = new int[n];
		dp[n - 1] = nums[n - 1];
		int maxi = dp[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			int loopmax = Integer.MIN_VALUE;
			for (int j = i + 1; j - i <= k && j < n; j++) {
				loopmax = Math.max(loopmax,dp[j]);
			}
			if (loopmax > 0) {
				dp[i] = nums[i] + loopmax;
			} 
			else {
				dp[i] = nums[i];
			}
			maxi = Math.max(maxi,dp[i]);
		}
		return maxi;
	}
}