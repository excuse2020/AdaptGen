class Solution {
	boolean duplicate(String s1, String s2) {
		int[] arr = new int[26];
	}
	int maxLength(List<String> arr) {
		int n = arr.size();
		return solve(0,arr,n," ");
	}
	int solve(int i, List<String> arr, int n, String temp) {
		if (i >= n) {
			return temp.length() - 1;
		}
		int include = 0;
		int exclude = 0;
		if (duplicate(arr.get(i),temp)) {
			exclude = solve(i + 1,arr,n,temp);
		} 
		else {
			include = solve(i + 1,arr,n,temp + arr.get(i));
			exclude = solve(i + 1,arr,n,temp);
		}
		return Math.max(include,exclude);
	}
}