class Solution {
	List<List<Integer>> result = new ArrayList<>();
	void helper(TreeNode root, int currentSum, int targetSum, List<Integer> currentPath) {
		if (root == null) {
			return;
		}
		currentPath.add(root.val);
		if (root.left == null && root.right == null && (currentSum + root.val) == targetSum) {
			result.add(currentPath);
		} 
		else {
			helper(root.left,currentSum + root.val,targetSum,new ArrayList<>(currentPath));
			helper(root.right,currentSum + root.val,targetSum,new ArrayList<>(currentPath));
		}
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		helper(root,0,targetSum,new ArrayList<>());
		return result;
	}
}