class Solution {
	String oddString(String[] words) {
		int[][] diff = new int[words.length][words[0].length() - 1];
		int index = -1;
		String p = "";
		Map<String, Integer> pp = new HashMap<>();
		Map<String, Integer> xx = new HashMap<>();
		List<String> ppp = new ArrayList<>();
		for (String s: words) {	
			index++;
			for (int i = 0; i < s.length() - 1; i++) {
				int v = s.charAt(i + 1) - s.charAt(i);
				diff[index][i] = v;
				p += String.valueOf(v);
			}
			if (!ppp.contains(p)) {
				ppp.add(p);
			}
			pp.put(p,pp.merge(p,1,));
			xx.put(p,index);
			p = "";
		}
		return words[xx.get(ppp.size() == 1 ? ppp.get(0) : pp.get(ppp.get(0)) < pp.get(ppp.get(1)) ? ppp.get(0) : ppp.get(1))];
	}
}