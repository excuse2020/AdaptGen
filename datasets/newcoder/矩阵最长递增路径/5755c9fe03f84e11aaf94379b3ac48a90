class Solution {
	int max = 0;
	void dfs(int[][] matrix, int i, int j, int len) {
		int temp = matrix[i][j];
		if (i + 1 < matrix.length && matrix[i + 1][j] > temp) {
			dfs(matrix,i + 1,j,len + 1);
		}
		if (i - 1 >= 0 && matrix[i - 1][j] > temp) {
			dfs(matrix,i - 1,j,len + 1);
		}
		if (j + 1 < matrix[0].length && matrix[i][j + 1] > temp) {
			dfs(matrix,i,j + 1,len + 1);
		}
		if (j - 1 >= 0 && matrix[i][j - 1] > temp) {
			dfs(matrix,i,j - 1,len + 1);
		}
		max = Math.max(max,len);
	}
	int solve(int[][] matrix) {
		int n = matrix.length;
		int m = matrix[0].length;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				dfs(matrix,i,j,1);
			}
		}
		return max;
	}
}