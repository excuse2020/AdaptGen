class Solution {
	int[] deckRevealedIncreasing(int[] deck) {
		Arrays.sort(deck);
		Deque<Integer> cardQ = new ArrayDeque<>();
		int size = deck.length;
		for (int indx = size - 1; indx > -1; indx--) {
			if (!cardQ.isEmpty()) {
				cardQ.offerLast(cardQ.pollFirst());
			}
			cardQ.offerLast(deck[indx]);
		}
		for (int indx = 0; indx < size; indx++) {
			deck[indx] = cardQ.pollLast();
		}
		return deck;
	}
}