class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int left = 0, right = 0;
		Set<Integer> set = new HashSet<>();
		long max = -1L, sum = 0L;
		while (right < nums.length) {
			while (set.contains(nums[right]) || set.size() == k) {
				set.remove(nums[left]);
				sum -= nums[left];
				left++;
			}
			set.add(nums[right]);
			sum += nums[right];
			if (set.size() == k) {
				max = Math.max(max,sum);
			}
			right++;
		}
		return (max != -1) ? max : 0;
	}
}