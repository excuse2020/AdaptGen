class Solution {
	int[] countSubTrees(int n, int[][] edges, String labels) {
		Map<Integer, ArrayList<Integer>> graph = new HashMap<>();
		int[] ans = new int[n];
		int[] freqMap = new int[26];
		for (int[] edge: edges) {	
			graph.putIfAbsent(edge[0],new ArrayList<>());
			graph.putIfAbsent(edge[1],new ArrayList<>());
			graph.get(edge[0]).add(edge[1]);
			graph.get(edge[1]).add(edge[0]);
		}
		dfs(graph,labels,ans,freqMap,0,0);
		return ans;
	}
	void dfs(Map<Integer, ArrayList<Integer>> graph, String labels, int[] ans, int[] freqMap, int currNode, int prevNode) {
		int prevCount;
	}
}