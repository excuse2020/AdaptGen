class Solution {
	ListNode findMid(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode mid = findMid(head);
		ListNode curr = mid;
		ListNode prev = null;
		ListNode next;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		ListNode right = prev;
		ListNode left = head;
		while (right != null) {
			if (left.val != right.val) {
				return false;
			}
			right = right.next;
			left = left.next;
		}
		return true;
	}
}