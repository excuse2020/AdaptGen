class Solution {
	int[][] dp;
	int helper(int[] a, int[] b, int i, int j) {
		if (i == -1) {
			return Integer.MIN_VALUE;
		}
		if (j == -1) {
			return Integer.MIN_VALUE;
		}
		if (dp[i][j] != Integer.MIN_VALUE) {
			return dp[i][j];
		}
		int take = a[i] * b[j];
		dp[i][j] = take + Math.max(0,helper(a,b,i - 1,j - 1));
		int skip1 = helper(a,b,i - 1,j);
		int skip2 = helper(a,b,i,j - 1);
		dp[i][j] = Math.max(dp[i][j],Math.max(skip1,skip2));
		return dp[i][j];
	}
	int maxDotProduct(int[] nums1, int[] nums2) {
		int len1 = nums1.length, len2 = nums2.length;
		dp = new int[len1][len2];
		for (int i = 0; i < len1; i++) {
			for (int j = 0; j < len2; j++) {
				dp[i][j] = Integer.MIN_VALUE;
			}
		}
		return helper(nums1,nums2,len1 - 1,len2 - 1);
	}
}