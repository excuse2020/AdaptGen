class Solution {
	String longestPalindrome(String s) {
		int n = s.length(), dp = new int[n][n], max = 0, start = 0, end = 0;
		for (int z = 0; z < n; z++) {
			int i = 0, j = z;
			while (i < n && j < n) {
				if (i == j) {
					dp[i][j] = 1;
				} 
				else if (j - i == 1) {
					if (s.charAt(j) == s.charAt(i)) {
						dp[i][j] = 1;
					} 
					else {
						dp[i][j] = 0;
					}
				} 
				else {
					if (s.charAt(j) == s.charAt(i) && dp[i + 1][j - 1] == 1) {
						dp[i][j] = 1;
					} 
					else {
						dp[i][j] = 0;
					}
				}
				if (dp[i][j] == 1) {
					if (max < j - i) {
						max = j - i;
						start = i;
						end = j;
					}
				}
				i++;
				j++;
			}
		}
		return s.substring(start,end + 1);
	}
}