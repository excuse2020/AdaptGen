class Solution {
	boolean isPalindrome(ListNode head) {
		ListNode mid = middleNode(head);
		ListNode headSecond = reverseList(mid);
		ListNode reverseHead = headSecond;
		while (head != null && headSecond != null) {
			if (head.val != headSecond.val) {
				return false;
			}
			head = head.next;
			headSecond = headSecond.next;
		}
		return true;
	}
	ListNode middleNode(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	ListNode reverseList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode current = head;
		ListNode prev = null;
		ListNode next = current.next;
		while (current != null) {
			current.next = prev;
			prev = current;
			current = next;
			if (next != null) {
				next = next.next;
			}
		}
		return prev;
	}
}