class Solution {
	int maxMoves(int[][] grid) {
		int m = grid.length, n = grid[0].length;
		int[] dp = new int[m];
		for (int j = n - 2; j >= 0; j--) {
			int[] temp = new int[m];
			for (int i = 0; i < m; i++) {
				if (i - 1 >= 0 && grid[i][j] < grid[i - 1][j + 1]) {
					temp[i] = Math.max(temp[i],dp[i - 1] + 1);
				}
				if (grid[i][j] < grid[i][j + 1]) {
					temp[i] = Math.max(temp[i],dp[i] + 1);
				}
				if (i + 1 < m && grid[i][j] < grid[i + 1][j + 1]) {
					temp[i] = Math.max(temp[i],dp[i + 1] + 1);
				}
			}
			dp = temp;
		}
		int res = 0;
		for (int i = 0; i < m; i++) {
			res = Math.max(res,dp[i]);
		}
		return res;
	}
}