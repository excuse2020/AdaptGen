class Solution {
	int knightDialer(int n) {
		if (n == 1) {
			return 10;
		}
		int dp = new int[10];
		Arrays.fill(dp,1);
		int res = 0;
		for (int i = 1; i < n; i++) {
			int dpp = new int[10];
			dpp[0] = dp[4] + dp[6];
			dpp[1] = dp[8] + dp[6];
			dpp[2] = dp[7] + dp[9];
			dpp[3] = dp[4] + dp[8];
			dpp[4] = dp[3] + (dp[9] + dp[0]) % 1000000007;
			dpp[6] = dp[0] + (dp[1] + dp[7]) % 1000000007;
			dpp[7] = dp[6] + dp[2];
			dpp[8] = dp[1] + dp[3];
			dpp[9] = dp[4] + dp[2];
			dp = dpp;
			for (int j = 0; j < 10; j++) {
				dp[j] %= 1000000007;
			}
		}
		for (int i = 0; i < 10; i++) {
			if (i != 5) {
				res = (res + dp[i]) % 1000000007;
			}
		}
		return res;
	}
}