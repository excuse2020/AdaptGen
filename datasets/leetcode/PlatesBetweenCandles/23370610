class Solution {
	int helper(int[] query, int candlepos, int sumarray) {
		int left = 0;
		int right = candlepos.length - 1;
		int leftcandle = -1;
		while (left <= right) {
			int mid = (left + right) / 2;
			if (candlepos[mid] < query[0]) {
				left = mid + 1;
			} 
			else {
				leftcandle = candlepos[mid];
				right = mid - 1;
			}
		}
		int rightcandle = sumarray.length;
		left = 0;
		right = candlepos.length - 1;
		while (left <= right) {
			int mid = (left + right) / 2;
			if (candlepos[mid] > query[1]) {
				right = mid - 1;
			} 
			else {
				rightcandle = candlepos[mid];
				left = mid + 1;
			}
		}
		if (leftcandle == -1 || rightcandle == sumarray.length) {
			return 0;
		}
		if (leftcandle >= rightcandle) {
			return 0;
		}
		return (rightcandle - leftcandle) - (sumarray[rightcandle] - sumarray[leftcandle]);
	}
	int[] platesBetweenCandles(String s, int[][] queries) {
		int sumarray = new int[s.length()];
		int sum = 0;
		int i = 0;
	}
}