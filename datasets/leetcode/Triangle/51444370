class Solution {
	int[][] dp;
	int m;
	int helper(List<List<Integer>> tri, int row, int idx) {
		if (row == m || idx == tri.get(row).size()) {
			return 0;
		}
		if (dp[row][idx] != -1) {
			return dp[row][idx];
		}
		return dp[row][idx] = tri.get(row).get(idx) + Math.min(helper(tri,row + 1,idx),helper(tri,row + 1,idx + 1));
	}
	int minimumTotal(List<List<Integer>> triangle) {
		m = triangle.size();
		dp = new int[m + 1][triangle.get(m - 1).size() + 1];
		for (int i = 0; i <= m; i++) {
			Arrays.fill(dp[i],-1);
		}
		return helper(triangle,0,0);
	}
}