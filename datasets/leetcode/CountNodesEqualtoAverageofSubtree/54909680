class Solution {
	int cnt = 0;
	int averageOfSubtree(TreeNode root) {
		helper(root);
		return cnt;
	}
	int helper(TreeNode node) {
		if (node == null) {
			return -1;
		}
		int left = helper(node.left);
		int right = helper(node.right);
		if (left == -1 && right == -1) {
			cnt++;
			return 1;
		} 
		else if (left == -1) {
			if ((node.val + node.right.val) / (right + 1) == node.val) {
				cnt++;
			}
			node.val += node.right.val;
			return right + 1;
		} 
		else if (right == -1) {
			if ((node.val + node.left.val) / (left + 1) == node.val) {
				cnt++;
			}
			node.val += node.left.val;
			return left + 1;
		} 
		else {
			if ((node.val + node.left.val) / (left + right) == node.val) {
				cnt++;
			}
			node.val += node.left.val + node.right.val;
			return left + right;
		}
	}
}