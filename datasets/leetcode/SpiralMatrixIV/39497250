class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int arr = new int[m][n];
		int i = 0;
		int j = 0;
		int count = m * n;
		while (count > 0) {
			for (int x = i, y = j; y < n - j; y++) {
				if (head != null) {
					arr[x][y] = head.val;
					head = head.next;
					count--;
				} 
				else {
					arr[x][y] = -1;
					count--;
				}
			}
			if (count < 1) {
				break;
			}
			for (int x = i + 1, y = n - j; x < m - i; x++) {
				if (head != null) {
					arr[x][y] = head.val;
					head = head.next;
					count--;
				} 
				else {
					arr[x][y] = -1;
					count--;
				}
			}
			if (count < 1) {
				break;
			}
			for (int x = m - i, y = n - j; y >= j; y--) {
				if (head != null) {
					arr[x][y] = head.val;
					head = head.next;
					count--;
				} 
				else {
					arr[x][y] = -1;
					count--;
				}
			}
			if (count < 1) {
				break;
			}
			for (int x = m - i, y = j; x > i; x--) {
				if (head != null) {
					arr[x][y] = head.val;
					head = head.next;
					count--;
				} 
				else {
					arr[x][y] = -1;
					count--;
				}
			}
			i++;
			j++;
		}
		return arr;
	}
}