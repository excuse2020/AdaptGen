class Solution {
	int minPathCost(int[][] grid, int[][] moveCost) {
		int m = grid.length;
		int n = grid[0].length;
		int res = 100000000;
		int prev = new int[n];
		for (int j = 0; j < n; j++) {
			prev[j] = grid[m - 1][j];
		}
		for (int i = m - 2; i >= 0; i--) {
			int curr = new int[n];
			for (int j = 0; j < n; j++) {
				int val = grid[i][j];
				int mini = 100000000;
				for (int j2 = 0; j2 < n; j2++) {
					int temp = moveCost[val][j2] + prev[j2];
					mini = Math.min(mini,temp);
				}
				curr[j] = val + mini;
			}
			prev = curr;
		}
		for (int j = 0; j < n; j++) {
			res = Math.min(res,prev[j]);
		}
		return res;
	}
}