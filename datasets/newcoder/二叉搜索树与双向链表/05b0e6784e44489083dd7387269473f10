class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return null;
		}
		if (pRootOfTree.left != null) {
			TreeNode tmpNode = f(pRootOfTree.left,0);
			pRootOfTree.left = tmpNode;
			tmpNode.right = pRootOfTree;
		}
		if (pRootOfTree.right != null) {
			TreeNode tmpNode = f(pRootOfTree.right,1);
			pRootOfTree.right = tmpNode;
			tmpNode.left = pRootOfTree;
		}
		TreeNode ans = pRootOfTree;
		while (ans.left != null) {
			ans = ans.left;
		}
		return ans;
	}
	TreeNode f(TreeNode root, int leftOrRight) {
		if (root.left == null && root.right == null) {
			return root;
		}
		if (root.left != null) {
			TreeNode tmpNode = f(root.left,0);
			root.left = tmpNode;
			tmpNode.right = root;
		}
		if (root.right != null) {
			TreeNode tmpNode = f(root.right,1);
			root.right = tmpNode;
			tmpNode.left = root;
		}
		if (leftOrRight == 0) {
			if (root.right == null) {
				return root;
			} 
			else {
				return root.right;
			}
		} 
		else {
			if (root.left == null) {
				return root;
			} 
			else {
				return root.left;
			}
		}
	}
}