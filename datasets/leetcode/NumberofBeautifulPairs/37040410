class Solution {
	boolean areCoprime(int f, int d) {
		while (d != 0) {
			int temp = d;
			d = f % d;
			f = temp;
		}
		return f == 1;
	}
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				int firstD = firstGigit(nums[i]);
				int lastD = nums[j] % 10;
				if (areCoprime(firstD,lastD)) {
					count++;
				}
			}
		}
		return count;
	}
	int firstGigit(int num) {
		while (num >= 10) {
			num /= 10;
		}
		return num;
	}
}