class Solution {
	int[] countNums(int[] changed) {
		int[] count = new int[100_001];
		for (int num: changed) {	
			count[num]++;
		}
		return count;
	}
	int[] findOriginalArray(int[] changed) {
		if (changed.length % 2 == 1) {
			return new int[0];
		}
		int[] count = countNums(changed);
		return getOriginal(count,changed.length);
	}
	int[] getOriginal(int[] count, int total) {
		if (count[0] % 2 == 1) {
			return new int[0];
		}
		int[] original = new int[total / 2];
		int doubled, originalIndex = 0;
		for (int i = 0; i < count.length && total > 0; ) {
			if (count[i] < 0) {
				return new int[0];
			} 
			else if (count[i] == 0) {
				i++;
			} 
			else {
				doubled = i * 2;
				if (doubled >= count.length || count[doubled] <= 0) {
					return new int[0];
				} 
				else {
					count[i]--;
					count[doubled]--;
					original[originalIndex++] = i;
					total -= 2;
				}
			}
		}
		return original;
	}
}