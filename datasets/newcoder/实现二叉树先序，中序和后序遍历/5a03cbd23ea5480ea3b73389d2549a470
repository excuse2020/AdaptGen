class Solution {
	ArrayList<Integer> list1 = new ArrayList();
	ArrayList<Integer> list2 = new ArrayList();
	ArrayList<Integer> list3 = new ArrayList();
	void order(TreeNode root) {
		if (root == null) {
			return;
		}
		list1.add(root.val);
		order(root.left);
		list2.add(root.val);
		order(root.right);
		list3.add(root.val);
	}
	int[][] threeOrders(TreeNode root) {
		order(root);
		int[][] res = new int[3][list1.size()];
		res[0] = toIntArray(list1);
		res[1] = toIntArray(list2);
		res[2] = toIntArray(list3);
		return res;
	}
	int[] toIntArray(ArrayList<Integer> list) {
		if (list == null || list.size() < 1) {
			return new int[0];
		}
		int[] result = new int[list.size()];
		for (int i = 0; i < list.size(); ++i) {
			result[i] = list.get(i);
		}
		return result;
	}
}