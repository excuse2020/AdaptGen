class Solution {
	String removeDuplicates(String s, int k) {
		int n = s.length();
		int res = 1;
		Stack<Character> st = new Stack<>();
		Stack<Integer> st2 = new Stack<>();
		for (int i = 0; i < n; i++) {
			char ch = s.charAt(i);
			if (!st.isEmpty() && st.peek() == ch) {
				st2.push(st2.peek() + 1);
				res++;
			} 
			else {
				st2.push(1);
				res = 1;
			}
			st.push(ch);
			if (st2.peek() == k) {
				for (int j = 0; j < k; j++) {
					st.pop();
					st2.pop();
				}
			}
		}
		StringBuilder sb = new StringBuilder();
		while (!st.isEmpty()) {
			sb.insert(0,st.peek());
			st.pop();
		}
		return sb.toString();
	}
}