class Solution {
	int minTrace(int[][] triangle) {
		int n = triangle.length;
		if (1 == n) {
			return triangle[0][0];
		}
		int[][] dp = new int[n][n];
		dp[0][0] = triangle[0][0];
		int res = Integer.MAX_VALUE;
		for (int i = 1; i < n; i++) {
			for (int j = 0; j <= i; j++) {
				if (j == 0) {
					dp[i][j] = dp[i - 1][j] + triangle[i][j];
				} 
				else if (j == i) {
					dp[i][j] = dp[i - 1][j - 1] + triangle[i][j];
				} 
				else {
					dp[i][j] = Math.min(dp[i - 1][j - 1],dp[i - 1][j]) + triangle[i][j];
				}
				if (i == n - 1) {
					res = Math.min(res,dp[i][j]);
				}
			}
		}
		return res;
	}
}