class Solution {
	int numberOfPaths(int[][] grid, int k) {
		int m = grid.length, n = grid[0].length, mod = 1000000007, s;
		int[][][] dp = new int[m][n][k];
		dp[0][0][grid[0][0] % k] = 1;
		s = grid[0][0];
		for (int i = 1; i < m; i++) {
			s += grid[i][0];
			dp[i][0][s % k] = 1;
		}
		s = grid[0][0];
		for (int j = 1; j < n; j++) {
			s += grid[0][j];
			dp[0][j][s % k] = 1;
		}
		for (int i = 1; i < m; i++) {
			for (int j = 1; j < n; j++) {
				for (int l = 0; l < k; l++) {
					dp[i][j][l] = (int) (((long) (dp[i - 1][j][Math.floorMod(l - grid[i][j],k)]) + dp[i][j - 1][Math.floorMod(l - grid[i][j],k)]) % mod);
				}
			}
		}
		return dp[m - 1][n - 1][0];
	}
}