class Solution {
	long f(int i, int[][] q, long[] dp) {
		if (i >= q.length) {
			return 0;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		long take = q[i][0] + f(i + q[i][1],q,dp);
		long ntake = f(i + 1,q,dp);
		return dp[i] = Math.max(take,ntake);
	}
	long mostPoints(int[][] q) {
		int n = q.length;
		long dp = new long[n];
		for (int i = 0; i < n; i++) {
			dp[i] = -1;
		}
		return f(0,q,dp);
	}
}