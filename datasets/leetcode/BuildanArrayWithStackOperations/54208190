class Solution {
	List<String> buildArray(int[] target, int n) {
		int len = target.length;
		Stack<Integer> stack = new Stack<>();
		Stack<String> stk = new Stack<>();
		int t = 0;
		for (int i = 1; i <= n; i++) {
			if (target[t] == i) {
				if (t == 0) {
					while (!stack.isEmpty()) {
						stack.pop();
						stk.push("Pop");
					}
				} 
				else {
					while (!stack.isEmpty() && t != 0 && stack.peek() != target[t - 1]) {
						stack.pop();
						stk.push("Pop");
					}
				}
				stack.push(i);
				t++;
				stk.push("Push");
			} 
			else {
				stack.push(i);
				stk.push("Push");
			}
			if (t == target.length) {
				break;
			}
		}
		int l = stk.size();
		List<String> list = new ArrayList<>(l);
		for (int i = l - 1; i >= 0; i--) {
			list.add(0,stk.pop());
		}
		return list;
	}
}