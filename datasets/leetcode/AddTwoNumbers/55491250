class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		if (l1 == null) {
			return l2;
		}
		if (l2 == null) {
			return l1;
		}
		ListNode head = null;
		ListNode tail = null;
		int carry = 0;
		while (l1 != null && l2 != null) {
			int sum = l1.val + l2.val;
			ListNode newNode = new ListNode(sum % 10, null);
			carry = sum / 10;
			if (head == null) {
				head = newNode;
				tail = newNode;
			} 
			else {
				tail.next = newNode;
				tail = newNode;
			}
			l1 = l1.next;
			l2 = l2.next;
		}
		while (l1 != null) {
			int sum = l1.val + carry;
			ListNode newNode = new ListNode(sum % 10, null);
			carry = sum / 10;
			tail.next = newNode;
			tail = newNode;
			l1 = l1.next;
		}
		while (l2 != null) {
			int sum = l2.val + carry;
			ListNode newNode = new ListNode(sum % 10, null);
			carry = sum / 10;
			tail.next = newNode;
			tail = newNode;
			l2 = l2.next;
		}
		if (carry > 0) {
			ListNode newNode = new ListNode(carry, null);
			tail.next = newNode;
		}
		return head;
	}
}