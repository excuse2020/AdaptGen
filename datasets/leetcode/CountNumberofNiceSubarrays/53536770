class Solution {
	int numberOfSubarrays(int[] nums, int k) {
		int niceCount = 0;
		List<Integer> oddValue = new ArrayList<>();
		for (int start = 0; start < nums.length; start++) {
			if (nums[start] % 2 == 1) {
				oddValue.add(start + 1);
			}
		}
		oddValue.add(nums.length + 1);
		for (int i = 0; i + k < oddValue.size(); i++) {
			int first = (i == 0) ? oddValue.get(i) : (oddValue.get(i) - oddValue.get(i - 1));
			int second = oddValue.get(i + k) - oddValue.get(i + k - 1);
			niceCount += (second == 0) ? first : (first * second);
		}
		return niceCount;
	}
}