class Solution {
	int numOfSubarrays(int[] arr) {
		long n = arr.length;
		long total = 0;
		int prefixSum = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		map.put(0,1);
		for (int i = 0; i < n; i++) {
			prefixSum += arr[i];
			if (map.containsKey(prefixSum % 2)) {
				total += map.get(prefixSum % 2);
			}
			map.put(prefixSum % 2,map.getOrDefault(prefixSum % 2,0) + 1);
		}
		long combinational = n * (n + 1) / 2;
		long mod = (long) (Math.pow(10,9) + 7);
		long ans = (long) (combinational - total) % (mod);
		return (int) ans;
	}
}