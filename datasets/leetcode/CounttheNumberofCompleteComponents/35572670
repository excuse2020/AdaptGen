class Solution {
	int countCompleteComponents(int n, int[][] edges) {
		return (int) Stream.concat(IntStream.range(0,n).mapToObj((i) -> {new int{i, i}}),Stream.of(edges).flatMap((e) -> {Stream.of(e,new int{e[1], e[0]})})).collect(groupingBy((e) -> {e[0]},mapping((e) -> {e[1]},toSet()))).values().stream().collect(groupingBy(Function.identity(),counting())).entrySet().stream().filter((y) -> {y.getKey().size() == y.getValue()}).count();
	}
}