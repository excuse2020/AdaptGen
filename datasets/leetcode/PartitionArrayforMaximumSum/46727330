class Solution {
	int MaxSumAfterPartitioning(int[] nums, int k) {
		int n = nums.Length;
		long[] dp = new long[n];
		for (int i = 0; i < n; i++) {
			int max = nums[i];
			if (i == 0) {
				dp[i] = max;
			} 
			else {
				dp[i] = Math.Max(dp[i],max + dp[i - 1]);
				for (int j = i - 1; j >= Math.Max(i - k + 1,0); j--) {
					max = Math.Max(max,nums[j]);
					if (j > 0) {
						dp[i] = Math.Max(dp[i],dp[j - 1] + (i - j + 1) * max);
					} 
					else {
						dp[i] = Math.Max((i - j + 1) * max,dp[i]);
					}
				}
			}
		}
		return (int) dp[n - 1];
	}
}