class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Map<Integer, Integer> map = new HashMap<>();
		long ans = 0;
		long sum = 0;
		for (int i = 0; i < nums.length; i++) {
			sum += nums[i];
			map.put(nums[i],map.getOrDefault(nums[i],0) + 1);
			if (i == k - 1 && map.size() == k) {
				ans = Math.max(sum,ans);
			}
			if (i >= k) {
				sum -= nums[i - k];
				map.put(nums[i - k],map.get(nums[i - k]) - 1);
				if (map.get(nums[i - k]) == 0) {
					map.remove(nums[i - k]);
				}
				if (map.size() == k) {
					ans = Math.max(sum,ans);
				}
			}
		}
		return ans;
	}
}