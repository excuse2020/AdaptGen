class Solution {
	int GetTreeDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int leftLen = GetTreeDepth(root.left);
		int rightLen = GetTreeDepth(root.right);
		return leftLen >= rightLen ? (leftLen + 1) : (rightLen + 1);
	}
	boolean IsBalanced_Solution(TreeNode root) {
		return judgeAVL(root);
	}
	boolean judgeAVL(TreeNode root) {
		if (root == null) {
			return true;
		}
		int LeftLen = GetTreeDepth(root.left);
		int RightLen = GetTreeDepth(root.right);
		int Diff = Math.abs(LeftLen - RightLen);
		return Diff <= 1 && judgeAVL(root.left) && judgeAVL(root.right);
	}
}