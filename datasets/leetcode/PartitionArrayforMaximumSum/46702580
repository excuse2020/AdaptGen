class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int[] dp = new int[arr.length];
		dp[0] = arr[0];
		for (int i = 1; i < arr.length; i++) {
			int localMax = 0;
			int leftMost = Math.max(0,i - k + 1);
			for (int j = i; j >= leftMost; j--) {
				localMax = Math.max(localMax,arr[j]);
				dp[i] = Math.max(dp[i],(j == 0 ? 0 : dp[j - 1]) + localMax * (i - j + 1));
			}
		}
		return dp[arr.length - 1];
	}
}