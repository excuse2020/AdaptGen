class Solution {
	boolean isValidBox(char[][] board, int box) {
		HashMap<Character, Integer> mp = new HashMap<>();
		int startRow = 3 * (box / 3);
		int startCol = 3 * (box % 3);
		int i = 0;
		int j = 0;
		char currChar = board[startRow + i][startCol + j];
	}
	boolean isValidCol(char[][] board, int col) {
		HashMap<Character, Integer> mp = new HashMap<>();
		int i = 0;
		char currChar = board[i][col];
	}
	boolean isValidRow(char[][] board, int row) {
		HashMap<Character, Integer> mp = new HashMap<>();
		int j = 0;
		char currChar = board[row][j];
	}
	boolean isValidSudoku(char[][] board) {
		for (int i = 0; i < 9; i++) {
			if (!isValidRow(board,i) || !isValidCol(board,i)) {
				return false;
			}
		}
		return true;
	}
}