class Solution {
	double serve(int a, int b, double[][] dp) {
		if (a <= 0 && b <= 0) {
			return 0.5;
		}
		if (a <= 0) {
			return 1.0;
		}
		if (b <= 0) {
			return 0.0;
		}
		if (dp[a][b] != -1) {
			return dp[a][b];
		}
		double probability = 0.25 * (serve(a - 4,b,dp) + serve(a - 3,b - 1,dp));
		dp[a][b] = probability;
		return probability;
	}
	double soupServings(int n) {
		n = (n + 24) / 25;
		if (n >= 500) {
			return 1.0;
		}
		double[][] dp = new double[n + 1][n + 1];
		for (double[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return serve(n,n,dp);
	}
}