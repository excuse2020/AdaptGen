class Solution {
	double soupServings(int n) {
		if (n >= 4800) {
			return 1.0;
		}
		n = (n + 24) / 25;
		double[][] dp = new double[n + 1][n + 1];
		dp[0][0] = 0.5;
		for (int i = 1; i <= n; i++) {
			dp[0][i] = 1.0;
		}
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				dp[i][j] = 0.25 * (dp[Math.max(i - 4,0)][j] + dp[Math.max(i - 3,0)][Math.max(j - 1,0)]);
			}
		}
		return dp[n][n];
	}
}