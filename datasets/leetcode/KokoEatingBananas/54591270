class Solution {
	int calculateTotalHour(int[] piles, int hourly) {
		int totalHour = 0;
		for (int pile: piles) {	
			totalHour += Math.ceil((double) pile / (double) (hourly));
		}
		return totalHour;
	}
	int findMaxi(int[] piles) {
		int maxi = Integer.MIN_VALUE;
		for (int pile: piles) {	
			maxi = Math.max(maxi,pile);
		}
		return maxi;
	}
	int minEatingSpeed(int[] piles, int h) {
		int low = 0;
		int high = findMaxi(piles);
		while (low <= high) {
			int mid = (low + high) / 2;
			int totalHour = calculateTotalHour(piles,mid);
			if (totalHour <= h) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
}