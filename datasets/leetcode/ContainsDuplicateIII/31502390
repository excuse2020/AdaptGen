class Solution {
	boolean containsNearbyAlmostDuplicate(int[] nums, int indexDiff, int valueDiff) {
		if (indexDiff == 1) {
			for (int h = 0, j = nums.length - 1; h < nums.length / 2; h++, j--) {
				if (Math.abs(nums[h] - nums[h + 1]) <= valueDiff) {
					return true;
				}
				if (Math.abs(nums[j] - nums[j - 1]) <= valueDiff) {
					return true;
				}
			}
			return false;
		}
		for (int h = 0, j = nums.length - 1; h < nums.length / 2; h++, j--) {
			for (int i = h + 1, k = j - 1; i < nums.length && k > -1; i++, k--) {
				if (Math.abs(h - i) <= indexDiff && Math.abs(nums[h] - nums[i]) <= valueDiff) {
					return true;
				}
				if (Math.abs(j - k) <= indexDiff && Math.abs(nums[j] - nums[k]) <= valueDiff) {
					return true;
				}
			}
		}
		return false;
	}
}