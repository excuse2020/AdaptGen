class Solution {
	int findIndex(int target, int[] lens) {
		int i = 0, j = lens.length - 1;
		while (i < j) {
			int mid = i + (j - i) / 2;
			if (lens[mid] > target) {
				j = mid;
			} 
			else {
				i = mid + 1;
			}
		}
		lens[i] = target;
		return i;
	}
	int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
		int[] lens = new int[obstacles.length];
		Arrays.fill(lens,Integer.MAX_VALUE);
		lens[0] = obstacles[0];
		int[] ans = new int[obstacles.length];
		ans[0] = 1;
		for (int i = 1; i < obstacles.length; i++) {
			int idx = findIndex(obstacles[i],lens);
			ans[i] = idx + 1;
		}
		return ans;
	}
}