class Solution {
	TreeNode diedai(TreeNode node, int p, int q) {
		if (node == null) {
			return null;
		}
		while (node != null) {
			if (p < node.val && q < node.val) {
				node = node.left;
			}
			if (p > node.val && q > node.val) {
				node = node.right;
			}
			break;
		}
		return node;
	}
	TreeNode digui(TreeNode node, int p, int q) {
		if (node == null) {
			return null;
		}
		if (p < node.val && q < node.val) {
			node = node.left;
		}
		if (p > node.val && q > node.val) {
			node = node.right;
		}
		return node;
	}
	int lowestCommonAncestor(TreeNode root, int p, int q) {
		TreeNode node = diedai(root,p,q);
		return node.val;
	}
}