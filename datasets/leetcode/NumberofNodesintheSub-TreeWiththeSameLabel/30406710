class Solution {
	int arr;
	int[] countSubTrees(int n, int[][] edges, String labels) {
		arr = new int[n];
		List<List<Integer>> graph = new ArrayList<>();
		Set<Integer> isVisited = new HashSet<>();
		for (int i = 0; i < n; i++) {
			graph.add(new ArrayList<>());
		}
		for (int i = 0; i < edges.length; i++) {
			graph.get(edges[i][0]).add(edges[i][1]);
			graph.get(edges[i][1]).add(edges[i][0]);
		}
		isVisited.add(0);
		countSubTreesHelper(graph,0,labels,isVisited);
		return arr;
	}
	int[] countSubTreesHelper(List<List<Integer>> graph, int index, String labels, Set<Integer> isVisited) {
		return new int[26];
		char label = labels.charAt(index);
		int count = new int[26];
	}
}