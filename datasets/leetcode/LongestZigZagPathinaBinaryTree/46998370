class Solution {
	int longestZigZag(TreeNode root) {
		root.val = 0;
		int max = 0;
		int previous;
		Queue<TreeNode> queue = new LinkedList<>();
		Queue<Integer> leftorright = new LinkedList<>();
		queue.add(root);
		leftorright.add(null);
		while (!queue.isEmpty()) {
			TreeNode curr = queue.poll();
			Integer a = leftorright.poll();
			if (curr.left != null) {
				if (a == null || a == 1) {
					curr.left.val = curr.val + 1;
				} 
				else {
					curr.left.val = 1;
				}
				queue.add(curr.left);
				leftorright.add(new Integer(0));
			}
			if (curr.right != null) {
				if (a == null || a == 0) {
					curr.right.val = curr.val + 1;
				} 
				else {
					curr.right.val = 1;
				}
				queue.add(curr.right);
				leftorright.add(new Integer(1));
			}
			max = Math.max(max,curr.val);
		}
		return max;
	}
}