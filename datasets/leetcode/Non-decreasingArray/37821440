class Solution {
	boolean checkPossibility(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return true;
		}
		boolean[] pre = new boolean[n];
		boolean[] suf = new boolean[n];
		pre[0] = true;
		suf[n - 1] = true;
		for (int i = 1; i < n; ++i) {
			pre[i] = pre[i - 1] & (nums[i - 1] <= nums[i]);
		}
		for (int i = n - 2; i >= 0; --i) {
			suf[i] = suf[i + 1] & (nums[i] <= nums[i + 1]);
		}
		boolean ans = false;
		for (int i = 0; i < n; ++i) {
			if (i == 0) {
				ans |= suf[i + 1];
			} 
			else if (i == n - 1) {
				ans |= pre[i - 1];
			} 
			else {
				ans |= pre[i - 1] && suf[i + 1];
			}
		}
		return ans;
	}
}