class Solution {
	ListNode deleteDuplication(ListNode pHead) {
		HashMap<Integer, ListNode> map = new HashMap<>();
		Deque<ListNode> listNodeDeque = new LinkedList<>();
		while (pHead != null) {
			if (map.containsKey(pHead.val)) {
				ListNode listNode = map.get(pHead.val);
				listNodeDeque.remove(listNode);
			} 
			else {
				listNodeDeque.add(pHead);
				map.put(pHead.val,pHead);
			}
			pHead = pHead.next;
		}
		ListNode newHead = listNodeDeque.poll();
		ListNode tempHead = newHead;
		while (newHead != null) {
			newHead.next = listNodeDeque.poll();
			newHead = newHead.next;
		}
		return tempHead;
	}
}