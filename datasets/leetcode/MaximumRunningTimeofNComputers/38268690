class Solution {
	boolean checkPossible(int[] batteries, int comp, long target) {
		long sum = 0;
		for (int i = 0; i < batteries.length; i++) {
			if (batteries[i] >= target) {
				sum += target;
			} 
			else {
				sum += batteries[i];
			}
		}
		if (sum >= comp * target) {
			return true;
		}
		return false;
	}
	long maxRunTime(int n, int[] batteries) {
		long start = 1, end = 0, ans = -1;
		for (int batt: batteries) {	
			end += batt;
		}
		end = end / n;
		while (start <= end) {
			long mid = start + (end - start) / 2;
			if (checkPossible(batteries,n,mid)) {
				ans = mid;
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return ans;
	}
}