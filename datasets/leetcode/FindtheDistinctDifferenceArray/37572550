class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		HashSet<Integer> set = new HashSet<>();
		int numberofdistinct = 0;
		int[] prefix = new int[nums.length];
		int[] suffix = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			for (int j = 0; j <= i; j++) {
				if (set.contains(nums[j]) == true) {
				} 
				else {
					numberofdistinct++;
					set.add(nums[j]);
				}
			}
			prefix[i] = numberofdistinct;
			numberofdistinct = 0;
			set.clear();
		}
		numberofdistinct = 0;
		set.clear();
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (set.contains(nums[j]) == true) {
				} 
				else {
					numberofdistinct++;
					set.add(nums[j]);
				}
			}
			suffix[i] = numberofdistinct;
			numberofdistinct = 0;
			set.clear();
		}
		for (int k = 0; k < prefix.length; k++) {
			nums[k] = prefix[k] - suffix[k];
		}
		return nums;
	}
}