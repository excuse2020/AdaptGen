class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head == null || m == n) {
			return head;
		}
		ListNode headLast = null;
		ListNode cur = head;
		int i = 1;
		while (i < m) {
			i++;
			headLast = cur;
			cur = cur.next;
		}
		ListNode partHead = cur;
		ListNode pre = null, next;
		while (cur != null && i <= n) {
			i++;
			next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
		}
		if (headLast != null) {
			headLast.next = pre;
		}
		partHead.next = cur;
		return head == partHead ? pre : head;
	}
}