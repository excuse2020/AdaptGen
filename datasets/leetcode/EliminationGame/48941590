class Solution {
	int lastRemaining(int n) {
		int[] arr = new int[n];
		for (int i = 0; i < n; i++) {
			arr[i] = i + 1;
		}
		while (arr.length != 1) {
			for (int i = 1; i < arr.length; i++) {
				if (arr[i] == Math.pow(2,i) - 1) {
					arr = remove(arr,arr[i]);
					break;
				}
			}
			for (int i = arr.length - 1; i >= 1; i--) {
				if (arr[i] == Math.pow(2,i)) {
					arr = remove(arr,arr[i]);
					break;
				}
			}
		}
		return arr[0];
	}
	int[] remove(int[] arr, int target) {
		int[] newArr = new int[arr.length - 1];
		int index = -1;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == target) {
				index = i;
				break;
			}
		}
		if (index != -1) {
			for (int i = 0, j = 0; i < arr.length; i++) {
				if (i != index) {
					newArr[j++] = arr[i];
				}
			}
		}
		return newArr;
	}
}