class Solution {
	int[] queryResults(int limit, int[][] queries) {
		Map<Integer, Integer> map = new HashMap();
		Map<Integer, List<Integer>> revMap = new HashMap();
		int[] result = new int[queries.length];
		for (int i = 0; i < queries.length; i++) {
			int ball = queries[i][0];
			int color = queries[i][1];
			if (map.containsKey(ball)) {
				int oldColor = map.get(ball);
				List<Integer> sameColored = revMap.get(oldColor);
				sameColored.remove(sameColored.indexOf(ball));
				if (sameColored.isEmpty()) {
					revMap.remove(oldColor);
				}
			}
			if (revMap.containsKey(color)) {
				revMap.get(color).add(ball);
			} 
			else {
				List<Integer> newList = new LinkedList();
				newList.add(ball);
				revMap.put(color,newList);
			}
			map.put(ball,color);
			result[i] = revMap.size();
		}
		return result;
	}
}