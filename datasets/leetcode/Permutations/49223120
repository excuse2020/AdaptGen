class Solution {
	void helper(int[] nums, List<List<Integer>> list, int idx) {
		if (idx == nums.length - 1) {
			List<Integer> res = new ArrayList<>();
			for (int i = 0; i < nums.length; i++) {
				res.add(nums[i]);
			}
			list.add(res);
			return;
		}
		for (int i = idx; i < nums.length; i++) {
			swap(nums,i,idx);
			helper(nums,list,idx + 1);
			swap(nums,i,idx);
		}
	}
	List<List<Integer>> permute(int[] nums) {
		List<List<Integer>> list = new ArrayList<>();
		helper(nums,list,0);
		return list;
	}
	void swap(int[] nums, int i, int j) {
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}