class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		int[][] ans = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				HashSet<Integer> c = new HashSet<Integer>();
				HashSet<Integer> c2 = new HashSet<Integer>();
				int left = 0;
				int right = 0;
				int leftR = i - 1;
				int leftC = j - 1;
				int rightR = i + 1;
				int rightC = j + 1;
				while (leftR >= 0 && leftC >= 0) {
					c.add(grid[leftR][leftC]);
					leftR--;
					leftC--;
					left = c.size();
				}
				while (rightR < m && rightC < n) {
					c2.add(grid[rightR][rightC]);
					rightR++;
					rightC++;
					right = c2.size();
				}
				int res = left - right;
				if (res < 0) {
					res *= -1;
				}
				ans[i][j] = res;
			}
		}
		return ans;
	}
}