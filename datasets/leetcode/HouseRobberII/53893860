class Solution {
	int[] nums, dp;
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		this.nums = nums;
		int max1 = 0, max2 = 0;
		dp = new int[nums.length];
		Arrays.fill(dp,-1);
		for (int i = 0; i < nums.length - 1; i++) {
			max1 = Math.max(robb(i,nums.length - 1),max1);
		}
		Arrays.fill(dp,-1);
		for (int i = 1; i < nums.length; i++) {
			max2 = Math.max(robb(i,nums.length),max2);
		}
		return Math.max(max1,max2);
	}
	int robb(int i, int e) {
		if (dp[i] != -1) {
			return dp[i];
		}
		int max = 0;
		for (int j = i + 2; j < e; j++) {
			max = Math.max(robb(j,e),max);
		}
		return dp[i] = nums[i] + max;
	}
}