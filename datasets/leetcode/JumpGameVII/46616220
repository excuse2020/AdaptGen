class Solution {
	boolean canReach(String binary_string, int minimum_jump_length, int maximum_jump_length) {
		int N = binary_string.length();
	}
	boolean depth_first_search(int current_index, int N, String binary_string, int minimum_jump_length, int maximum_jump_length, Boolean[] dp_array) {
		if (current_index == (N - 1)) {
			return true;
		}
		if (current_index >= N) {
			return false;
		}
		if (dp_array[current_index] != null) {
			return dp_array[current_index];
		}
		for (int next_jumping_index = (current_index + minimum_jump_length); (next_jumping_index <= (current_index + maximum_jump_length)); next_jumping_index++) {
			if (depth_first_search(next_jumping_index,N,binary_string,minimum_jump_length,maximum_jump_length,dp_array)) {
				dp_array[current_index] = true;
				return true;
			}
		}
		dp_array[current_index] = false;
		return false;
	}
}