class Solution {
	int findMax(char[] arr, int sidx, int eidx) {
		int len = arr.length;
		int count = 0;
		while (sidx - count >= 0 && eidx + count < len && arr[sidx - count] == arr[eidx + count]) {
			count++;
		}
		return 2 * (count - 1);
	}
	int getLongestPalindrome(String str) {
		int len = str.length();
		int max = 0;
		char[] arr = str.toCharArray();
		for (int i = 0; i < len - 1; i++) {
			max = Math.max(max,findMax(arr,i,i) + 1);
			max = Math.max(max,findMax(arr,i,i + 1) + 2);
			if (max / 2 >= len - i) {
				break;
			}
		}
		max = Math.max(max,findMax(arr,len - 1,len - 1) + 1);
		return max;
	}
}