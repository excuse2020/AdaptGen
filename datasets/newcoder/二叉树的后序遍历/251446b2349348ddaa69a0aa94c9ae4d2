class Solution {
	int[] postorderTraversal(TreeNode root) {
		if (root == null) {
			return new int[0];
		}
		Stack<TreeNode> s = new Stack<>();
		List<Integer> list = new ArrayList<>();
		TreeNode t = root;
		TreeNode c = root;
		s.push(t);
		while (!s.empty()) {
			t = s.peek();
			if (t.left != null && c != t.left && c != t.right) {
				s.push(t.left);
			} 
			else if (t.right != null && c != t.right) {
				s.push(t.right);
			} 
			else {
				list.add(t.val);
				s.pop();
				c = t;
			}
		}
		int[] res = new int[list.size()];
		for (int i = 0; i < res.length; i++) {
			res[i] = list.get(i);
		}
		return res;
	}
}