class Solution {
	int atMostNGivenDigitSet(String[] digits, int n) {
		String N = Integer.toString(n);
		int ans = 0;
		for (int i = 1; i <= N.length(); ++i) {
			if (N.equals("0")) {
				return 0;
			} 
			else if (i < N.length()) {
				ans += (int) Math.pow(digits.length,i);
			}
		}
		int i = 0;
		while (i < N.length()) {
			int j = 0;
			while (j < digits.length && digits[j].charAt(0) < N.charAt(i)) {
				ans += Math.pow(digits.length,N.length() - 1);
				j++;
			}
			if (j == digits.length || digits[j].charAt(0) > N.charAt(i)) {
				break;
			}
			i++;
		}
		if (i == N.length()) {
			ans++;
		}
		return ans;
	}
}