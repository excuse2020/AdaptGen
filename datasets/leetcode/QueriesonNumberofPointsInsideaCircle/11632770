class Solution {
	int PointsInside(int[] circle, int[][] points) {
		int x = circle[0];
		int y = circle[1];
		int r = circle[2];
		int inside = 0;
		for (int[] point: points) {	
			if (!isOutside(x,y,r,point)) {
				inside++;
			}
		}
		return inside;
	}
	int[] countPoints(int[][] points, int[][] queries) {
		int[] result = new int[queries.length];
		int idx = 0;
		for (int[] query: queries) {	
			result[idx++] = PointsInside(query,points);
		}
		return result;
	}
	boolean isOutside(int x, int y, int radius, int[] point) {
		int a = point[0];
		int b = point[1];
		int distance = (a - x) * (a - x) + (b - y) * (b - y);
		return distance > radius * radius;
	}
}