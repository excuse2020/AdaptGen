class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int row = m, col = n;
		int[][] matrix = new int[row][col];
		for (int[] mat: matrix) {	
			Arrays.fill(mat,-1);
		}
		int top = 0, bottom = row - 1;
		int left = 0, right = col - 1;
		ListNode start = head;
		while (start != null) {
			for (int i = left; i <= right; i++) {
				if (start != null) {
					matrix[top][i] = start.val;
					start = start.next;
				} 
				else {
					break;
				}
			}
			top++;
			if (start == null) {
				break;
			}
			for (int i = top; i <= bottom; i++) {
				if (start != null) {
					matrix[i][right] = start.val;
					start = start.next;
				} 
				else {
					break;
				}
			}
			right--;
			if (start == null) {
				break;
			}
			for (int i = right; i >= left; i--) {
				if (start != null) {
					matrix[bottom][i] = start.val;
					start = start.next;
				} 
				else {
					break;
				}
			}
			bottom--;
			if (start == null) {
				break;
			}
			for (int i = bottom; i >= top; i--) {
				if (start != null) {
					matrix[i][left] = start.val;
					start = start.next;
				} 
				else {
					break;
				}
			}
			left++;
			if (start == null) {
				break;
			}
		}
		return matrix;
	}
}