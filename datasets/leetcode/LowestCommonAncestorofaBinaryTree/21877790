class Solution {
	TreeNode ancestor = null;
	TreeNode find(TreeNode node, TreeNode p, TreeNode q) {
		if (node == null) {
			return null;
		}
		if (node.val == p.val || node.val == q.val) {
			return node;
		}
		TreeNode leftVal = find(node.left,p,q);
		TreeNode rightVal = find(node.right,p,q);
		if (ancestor != null) {
			return ancestor;
		}
		if (leftVal != null && rightVal != null) {
			ancestor = node;
			return ancestor;
		}
		if (leftVal != null) {
			return leftVal;
		} 
		else if (rightVal != null) {
			return rightVal;
		} 
		else {
			return null;
		}
	}
	TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		return find(root,p,q);
	}
}