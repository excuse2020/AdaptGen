class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		int n = words.length;
		boolean flag1 = false;
		boolean flag2 = false;
		int start = startIndex;
		if (words[startIndex].equals(target)) {
			return 0;
		}
		int steps1 = 1;
		int steps2 = 1;
		int forLeft = start - 1;
		while (forLeft != start) {
			String temp = words[(forLeft + n) % n];
			if (temp.equals(target)) {
				flag1 = true;
				break;
			}
			steps1++;
			forLeft = (forLeft - 1 + n) % n;
		}
		int forRight = start + 1;
		while (forRight != start) {
			String temp = words[(forRight + n) % n];
			if (temp.equals(target)) {
				flag2 = true;
				break;
			}
			steps2++;
			forRight = (forRight + 1) % n;
		}
		if (flag1 == false && flag2 == false) {
			return -1;
		}
		if (steps1 > steps2) {
			return steps2;
		}
		return steps1;
	}
}