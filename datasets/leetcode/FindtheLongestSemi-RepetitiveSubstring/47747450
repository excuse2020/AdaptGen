class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		char[] ch = s.toCharArray();
		int n = ch.length;
		int i = 1;
		int j = -1;
		int st = 0;
		int count = 0;
		int max = Integer.MIN_VALUE;
		while (i < n) {
			if (ch[i] == ch[i - 1]) {
				if (count == 0) {
					count = 1;
					max = Math.max(max,i - st + 1);
					j = i - 1;
				} 
				else {
					st = j + 1;
					max = Math.max(max,i - st + 1);
					j = i - 1;
				}
			} 
			else {
				max = Math.max(max,i - st + 1);
			}
			i++;
		}
		if (max == Integer.MIN_VALUE) {
			return n;
		}
		return max;
	}
}