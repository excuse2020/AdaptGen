class Solution {
	int getMax(int nums, int index, int end, int dp) {
		if (index > end) {
			return 0;
		}
		if (dp[index] != -1) {
			return dp[index];
		}
		int take = nums[index] + getMax(nums,index + 2,end,dp);
		int leave = getMax(nums,index + 1,end,dp);
		return dp[index] = Math.max(take,leave);
	}
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int dp = new int[nums.length + 1];
		Arrays.fill(dp,-1);
		int rob2 = getMax(nums,1,nums.length - 1,dp);
		Arrays.fill(dp,-1);
		int rob1 = getMax(nums,0,nums.length - 2,dp);
		return Math.max(rob1,rob2);
	}
}