class Solution {
	int wiggleMaxLength(int[] nums) {
		if (nums.length == 1) {
			return 1;
		}
		if (nums.length == 2 && nums[0] == nums[1]) {
			return 1;
		}
		int[] diff = new int[nums.length - 1];
		int countZero = 0;
		for (int i = 0; i < diff.length; i++) {
			diff[i] = nums[i + 1] - nums[i];
			if (diff[i] == 0) {
				countZero++;
			}
		}
		if (countZero == diff.length) {
			return 1;
		}
		int res = 0;
		int prevDiff = 0;
		for (int i = 0; i < diff.length; i++) {
			if (prevDiff == 0) {
				if (i == 0) {
					res++;
				}
				prevDiff = diff[i];
			}
			if (prevDiff > 0 && diff[i] < 0) {
				res++;
				prevDiff = diff[i];
			}
			if (prevDiff < 0 && diff[i] > 0) {
				res++;
				prevDiff = diff[i];
			}
		}
		return res + 1;
	}
}