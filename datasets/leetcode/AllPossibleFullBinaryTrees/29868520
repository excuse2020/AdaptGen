class Solution {
	HashMap<Integer, List<TreeNode>> mp = new HashMap<>();
	List<TreeNode> allPossibleFBT(int n) {
		if (!mp.containsKey(n)) {
			List<TreeNode> l = new ArrayList<>();
			if (n == 1) {
				l.add(new TreeNode(0, null, null));
			} 
			else if (n % 2 == 1) {
				for (int i = 0; i < n; i++) {
					int j = n - 1;
					for (TreeNode left: allPossibleFBT(i)) {	
						for (TreeNode right: allPossibleFBT(j)) {	
							TreeNode newNode = new TreeNode(0, null, null);
							newNode.left = left;
							newNode.right = right;
							l.add(newNode);
						}
					}
				}
			}
			mp.put(n,l);
		}
		return mp.get(n);
	}
}