class Solution {
	int getMappedValue(int[] mapping, int num) {
		if (num == 0) {
			return mapping[0];
		}
		int mappedValue = 0;
		int place = 1;
		while (num > 0) {
			int digit = num % 10;
			mappedValue += mapping[digit] * place;
			num /= 10;
			place *= 10;
		}
		return mappedValue;
	}
	int[] sortJumbled(int[] mapping, int[] nums) {
		int n = nums.length;
		int map = new int[n][2];
		for (int i = 0; i < n; i++) {
			int d = nums[i];
			map[i][0] = d;
			map[i][1] = getMappedValue(mapping,d);
		}
		Arrays.sort(map,(a, b) -> {Integer.compare(a[1],b[1])});
		for (int i = 0; i < n; i++) {
			nums[i] = map[i][0];
		}
		return nums;
	}
}