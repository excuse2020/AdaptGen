class Solution {
	boolean carPooling(int[][] trips, int capacity) {
		int[] diff = new int[1000];
		for (int i = 0; i < trips.length; i++) {
			update(diff,trips[i]);
		}
		return isPossible(diff,capacity);
	}
	boolean isPossible(int[] diff, int capacity) {
		if (diff[0] > capacity) {
			return false;
		}
		for (int i = 1; i < diff.length; i++) {
			diff[i] = diff[i - 1] + diff[i];
			if (diff[i] > capacity) {
				return false;
			}
		}
		return true;
	}
	void update(int[] diff, int[] trip) {
		int change = trip[0];
		int start = trip[1];
		int end = trip[2];
		diff[start + 1] += change;
		if (end < diff.length - 1) {
			diff[end + 1] -= change;
		}
	}
}