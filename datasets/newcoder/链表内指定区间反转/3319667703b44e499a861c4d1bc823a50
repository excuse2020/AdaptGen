class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode dummyHead = new ListNode(0);
		dummyHead.next = head;
		ListNode reverseHead = dummyHead.next;
		ListNode pre = dummyHead;
		for (int i = 1; i < m; i++) {
			pre = reverseHead;
			reverseHead = reverseHead.next;
		}
		ListNode reverseTail = reverseHead;
		for (int i = m; i < n; i++) {
			reverseTail = reverseTail.next;
		}
		ListNode reverseTailNext = reverseTail.next;
		reverseTail.next = null;
		pre.next = reverseListNode(reverseHead);
		reverseHead.next = reverseTailNext;
		return dummyHead.next;
	}
	ListNode reverseListNode(ListNode head) {
		ListNode cur = head;
		ListNode pre = null;
		while (cur != null) {
			ListNode curNext = cur.next;
			cur.next = pre;
			pre = cur;
			cur = curNext;
		}
		return pre;
	}
}