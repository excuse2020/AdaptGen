class Solution {
	int getMinSwaps(String num, int k) {
		char[] a = num.toCharArray();
		int res = 0;
		while (k-- > 0) {
			next(a);
		}
		char[] b = num.toCharArray();
		for (int i = 0; i < a.length; i++) {
			int j = i;
			while (b[j] != a[i]) {
				j++;
			}
			while (j > i) {
				swap(b,j,j - 1);
				j--;
				res++;
			}
		}
		return res;
	}
	void next(char[] a) {
		int i = a.length - 2;
		while (i >= 0 && a[i] >= a[i + 1]) {
			i--;
		}
		if (i >= 0) {
			int j = a.length - 1;
			while (a[j] <= a[i]) {
				j--;
			}
			swap(a,i,j);
		}
		reverse(a,i + 1,a.length - 1);
	}
	void reverse(char[] a, int i, int j) {
		while (i < j) {
			swap(a,i,j);
			i++;
			j--;
		}
	}
	void swap(char[] a, int i, int j) {
		char t = a[i];
		a[i] = a[j];
		a[j] = t;
	}
}