class Solution {
	long getDigitSum(long n) {
		long sum = 0;
		while (n > 0) {
			sum += (n % 10);
			n /= 10;
		}
		return sum;
	}
	long makeIntegerBeautiful(long n, int target) {
		long power = 10;
		long digitSum = getDigitSum(n);
		if (digitSum <= target) {
			return 0;
		}
		while (n > 0) {
			long nextNum = ((n / power) + 1) * power;
			if (getDigitSum(nextNum) <= target) {
				return Math.abs(n - nextNum);
			}
			power *= 10;
		}
		return -1;
	}
}