class Solution {
	int maxPoints(int[][] points) {
		if (points.length <= 1) {
			return points.length;
		}
		int max = 0;
		for (int i = 0; i < points.length; ++i) {
			Map<Float, Integer> lines = new HashMap<>();
			float x1 = points[i][0];
			float y1 = points[i][1];
			for (int j = i + 1; j < points.length; ++j) {
				float x2 = points[j][0];
				float y2 = points[j][1];
				float diff;
				if (y2 == y1) {
					diff = Float.MIN_VALUE;
				} 
				else {
					diff = (x2 - x1) / (y2 - y1);
					diff = diff == -0f ? 0f : diff;
				}
				lines.put(diff,lines.getOrDefault(diff,1) + 1);
				max = Math.max(lines.get(diff),max);
			}
			if (max > points.length / 2) {
				break;
			}
		}
		return max;
	}
}