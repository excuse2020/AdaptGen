class Solution {
	int reinitializePermutation(int n) {
		int[] perm = new int[n];
		for (int i = 0; i < n; i++) {
			perm[i] = i;
		}
		boolean allTrue = false;
		int count = 0;
		int[] temp = perm;
		while (!allTrue) {
			count++;
			allTrue = true;
			temp = Arrays.copyOf(perm,perm.length);
			for (int i = 0; i < n; i++) {
				if (i % 2 == 0) {
					perm[i] = temp[i / 2];
				} 
				else {
					perm[i] = temp[n / 2 + (i - 1) / 2];
				}
				if (perm[i] != i) {
					allTrue = false;
				}
			}
		}
		return count;
	}
}