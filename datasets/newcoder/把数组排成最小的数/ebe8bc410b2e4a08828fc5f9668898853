class Solution {
	String ret;
	String PrintMinNumber(int[] numbers) {
		dfs(numbers,0);
		return ret;
	}
	void dfs(int[] nums, int pos) {
		if (pos >= nums.length - 1) {
			StringBuilder sb = new StringBuilder();
			for (int i: nums) {	
				sb.append(i);
			}
			if (ret == null) {
				ret = sb.toString();
			} 
			else if (ret.compareTo(sb.toString()) > 0) {
				ret = sb.toString();
			}
		}
		for (int i = pos; i < nums.length; i++) {
			swap(nums,i,pos);
			dfs(nums,pos + 1);
			swap(nums,i,pos);
		}
	}
	void swap(int[] nums, int i, int j) {
		int tmp = nums[i];
		nums[i] = nums[j];
		nums[j] = tmp;
	}
}