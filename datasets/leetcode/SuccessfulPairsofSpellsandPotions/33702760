class Solution {
	int search(int[] p, long t, int size, int given) {
		int s = 0;
		int e = size - 1;
		while (s <= e) {
			int mid = (s + e) / 2;
			long mul = (long) given * p[mid];
			if (mul >= t) {
				e = mid - 1;
			} 
			else {
				s = mid + 1;
			}
		}
		return s;
	}
	int[] successfulPairs(int[] s, int[] p, long sus) {
		Arrays.sort(p);
		int n = s.length;
		int m = p.length;
		int[] ans = new int[n];
		for (int i = 0; i < n; i++) {
			ans[i] = m - search(p,sus,m,s[i]);
		}
		return ans;
	}
}