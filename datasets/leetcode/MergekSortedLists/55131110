class Solution {
	ListNode mergeKLists(ListNode[] lists) {
		if (lists.length < 1) {
			return null;
		}
		PriorityQueue<Integer> min = new PriorityQueue<>();
		for (int i = 0; i < lists.length; i++) {
			ListNode curr = lists[i];
			while (curr != null) {
				min.add(curr.val);
				curr = curr.next;
			}
		}
		ListNode c = new ListNode();
		ListNode head = c;
		while (!min.isEmpty()) {
			ListNode temp = new ListNode();
			temp.val = min.peek();
			c.next = temp;
			c = c.next;
			min.poll();
		}
		return head.next;
	}
}