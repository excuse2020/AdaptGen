class Solution {
	TreeNode buildBSTFromArray(List<Integer> values, int left, int right) {
		if (left > right) {
			return null;
		}
		int mid = left + (right - left) / 2;
		TreeNode root = new TreeNode(values.get(mid));
		root.left = buildBSTFromArray(values,left,mid - 1);
		root.right = buildBSTFromArray(values,mid + 1,right);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> values = new ArrayList<>();
		ListNode current = head;
		while (current != null) {
			values.add(current.val);
			current = current.next;
		}
		return buildBSTFromArray(values,0,values.size() - 1);
	}
}