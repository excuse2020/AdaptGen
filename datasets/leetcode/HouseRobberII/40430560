class Solution {
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int temp1 = new int[nums.length - 1];
		int temp2 = new int[nums.length - 1];
		int j = 0, k = 0;
		for (int i = 0; i < nums.length; i++) {
			if (i != 0) {
				temp1[j++] = nums[i];
			}
			if (i != nums.length - 1) {
				temp2[k++] = nums[i];
			}
		}
		return Math.max(solve(temp1),solve(temp2));
	}
	int solve(int nums) {
		int prev = nums[0], prev2 = 0;
		for (int i = 1; i < nums.length; i++) {
			int pick = nums[i];
			if (i > 1) {
				pick += prev2;
			}
			int nonPick = 0 + prev;
			int curr = Math.max(pick,nonPick);
			prev2 = prev;
			prev = curr;
		}
		return prev;
	}
}