class Solution {
	int[] rep = new int[26];
	int find(char i) {
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		int n = s1.length();
		for (int i = 0; i < 26; i++) {
			rep[i] = 97 + i;
		}
		for (int i = 0; i < n; i++) {
			union(s1.charAt(i),s2.charAt(i));
		}
		StringBuilder str = new StringBuilder();
		for (int i = 0; i < baseStr.length(); i++) {
			str.append((char) find(baseStr.charAt(i)));
		}
		return str.toString();
	}
	void union(char a, char b) {
		int aRep = find(a);
		int bRep = find(b);
		if (aRep < bRep) {
			rep[bRep - 97] = aRep;
		} 
		else {
			rep[aRep - 97] = bRep;
		}
	}
}