class Solution {
	int intersectionSizeTwo(int[][] A) {
		Arrays.sort(A,Comparator.comparingInt((o) -> {o[1]}).thenComparingInt((o) -> {-o[0]}));
		List<Integer> list = new ArrayList<>();
		for (int[] a: A) {	
			list.add(a[0]);
			list.add(a[1]);
		}
		Collections.sort(list);
		Map<Integer, Integer> map = new HashMap<>();
		for (int l: list) {	
			map.putIfAbsent(l,map.size());
		}
		BitSet bit = new BitSet();
		for (int[] a: A) {	
			a[0] = map.get(a[0]);
			a[1] = map.get(a[1]);
			int got = bit.get(a[0],a[1] + 1).cardinality();
			if (got <= 0) {
				bit.set(a[1] - 1);
			}
			if (got <= 1) {
				bit.set(a[1]);
			}
		}
		return bit.cardinality();
	}
}