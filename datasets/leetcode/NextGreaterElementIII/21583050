class Solution {
	int createNumber(int arr, int size) {
		int res = 0, max = Integer.MAX_VALUE;
		int mul = 1;
		for (int i = 0; i < size; i++) {
			if (arr[i] > (max - res) / mul) {
				return -1;
			}
			res = arr[i] * mul + res;
			mul *= 10;
		}
		return res;
	}
	int nextGreaterElement(int n) {
		int max = Integer.MAX_VALUE;
		int arr = new int[12];
		int size = 0;
		while (n != 0) {
			arr[size++] = n % 10;
			n /= 10;
		}
		for (int i = 1; i < size; i++) {
			if (arr[i] < arr[i - 1]) {
				int j = i - 1;
				while (j != 0 && arr[j - 1] > arr[i]) {
					j--;
				}
				swap(arr,i,j);
				int low = 0, high = i - 1;
				while (low < high) {
					swap(arr,low,high);
					low++;
					high--;
				}
				return createNumber(arr,size);
			}
		}
		return -1;
	}
	void swap(int arr, int low, int high) {
		int temp = arr[low];
		arr[low] = arr[high];
		arr[high] = temp;
	}
}