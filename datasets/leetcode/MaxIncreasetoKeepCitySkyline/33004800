class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		int[][] mat = new int[n + 1][m + 1];
		int total = 0;
		for (int i = 0; i < n; i++) {
			int max = grid[i][0];
			for (int j = 0; j < m; j++) {
				if (max < grid[i][j]) {
					max = grid[i][j];
				}
				mat[i + 1][j + 1] = grid[i][j];
				total = total + grid[i][j];
			}
			mat[i + 1][0] = max;
		}
		for (int i = 0; i < m; i++) {
			int mx = grid[0][i];
			for (int j = 0; j < n; j++) {
				if (mx < grid[j][i]) {
					mx = grid[j][i];
				}
			}
			mat[0][i + 1] = mx;
		}
		int sum = 0;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				sum = sum + (mat[i][0] < mat[0][j] ? mat[i][0] : mat[0][j]);
			}
		}
		return sum - total;
	}
}