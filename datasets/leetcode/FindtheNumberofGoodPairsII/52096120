class Solution {
	long numberOfPairs(int[] nums1, int[] nums2, int k) {
		int m = nums2.length;
		int n = nums1.length;
		Map<Integer, Integer> mapCount = new HashMap<>();
		for (int i = 0; i < m; i++) {
			mapCount.put(nums2[i],mapCount.getOrDefault(nums2[i],0) + 1);
		}
		long total = 0;
		for (int i = 0; i < n; i++) {
			int v = nums1[i];
			if (v % k == 0) {
				v = v / k;
				for (int d = 1; d <= Math.sqrt(v); d++) {
					if (v % d == 0) {
						int p = v / d;
						total += mapCount.getOrDefault(p,0);
						if (p != d) {
							total += mapCount.getOrDefault(d,0);
						}
					}
				}
			}
		}
		return total;
	}
}