class Solution {
	int findMedianinTwoSortedAray(int[] a1, int[] a2) {
		int m = a1.length;
		return findMedianinTwoSortedAray(a1,0,m - 1,a2,0,m - 1,m);
	}
	int findMedianinTwoSortedAray(int[] a1, int l1, int r1, int[] a2, int l2, int r2, int k) {
		int m = r1 - l1 + 1;
		int n = r2 - l2 + 1;
		if (m == 0) {
			return a2[l2 + k - 1];
		}
		if (k == 1) {
			return Math.min(a1[l1],a2[l2]);
		}
		int i1 = l1 + Math.min(m,k / 2) - 1;
		int i2 = l2 + Math.min(n,k / 2) - 1;
		if (a1[i1] > a2[i2]) {
			return findMedianinTwoSortedAray(a1,l1,r1,a2,i2 + 1,r2,k - (i2 - l2));
		} 
		else {
			return findMedianinTwoSortedAray(a1,i1 + 1,r1,a2,l2,r2,k - (i1 - l1));
		}
	}
}