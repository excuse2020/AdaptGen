class Solution {
	Map<TreeNode, List<Integer>> tmap = new HashMap<>();
	void findPath(TreeNode root, List<List<Integer>> result, List<Integer> intList, Integer target) {
		if (root == null) {
			return;
		}
		int value = root.val;
		intList.add(value);
		if (root.left == null && root.right == null && target == value) {
			result.add(new ArrayList(intList));
		}
		findPath(root.left,result,intList,target - value);
		findPath(root.right,result,intList,target - value);
		intList.remove(intList.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> result = new ArrayList<>();
		List<Integer> intList = new ArrayList<>();
		findPath(root,result,intList,targetSum);
		return result;
	}
}