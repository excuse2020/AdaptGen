class Solution {
	int lcs(String s, String t, int n, int m, int[][] dp) {
		if (m < 0) {
			return 1;
		}
		if (n < 0) {
			return 0;
		}
		if (dp[n][m] != -1) {
			return dp[n][m];
		}
		if (s.charAt(n) == t.charAt(m)) {
			return dp[n][m] = lcs(s,t,n - 1,m - 1,dp) + lcs(s,t,n - 1,m,dp);
		} 
		else {
			return lcs(s,t,n - 1,m,dp);
		}
	}
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		int dp = new int[n][m];
		for (int i: dp) {	
			Arrays.fill(i,-1);
		}
		return lcs(s,t,s.length() - 1,t.length() - 1,dp);
	}
}