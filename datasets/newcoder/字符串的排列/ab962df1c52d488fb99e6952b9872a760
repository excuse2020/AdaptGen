class Solution {
	Set<String> res = new HashSet();
	ArrayList<String> Permutation(String str) {
		boolean[] flag = new boolean[str.length()];
		back_track(str,"",flag);
		ArrayList<String> list = new ArrayList();
		for (String s: res) {	
			list.add(s);
		}
		return list;
	}
	void back_track(String str, String now, boolean[] flag) {
		if (now.length() == str.length()) {
			res.add(now);
			return;
		}
		for (int i = 0; i < str.length(); i++) {
			if (flag[i]) {
				continue;
			} 
			else {
				now += str.charAt(i);
				flag[i] = true;
				back_track(str,now,flag);
				flag[i] = false;
				now = now.substring(0,now.length() - 1);
			}
		}
	}
}