class Solution {
	int[] answerQueries(int[] nums, int[] q) {
		int[] arr = new int[q.length];
		int[] max_sum = new int[nums.length + 1];
		Arrays.sort(nums);
		int temp = 0;
		for (int i = 0; i < nums.length; i++) {
			temp += nums[i];
			max_sum[i + 1] += temp;
		}
		for (int i = 0; i < q.length; i++) {
			arr[i] = bs(max_sum,0,max_sum.length - 1,q[i]);
		}
		return arr;
	}
	int bs(int[] nums, int s, int e, int t) {
		if (s <= e) {
			int mid = s + (e - s) / 2;
			if (nums[mid] == t || (mid > 0 && nums[mid] > t && nums[mid - 1] < t)) {
				if (nums[mid] == t) {
					return mid;
				} 
				else {
					return mid - 1;
				}
			}
			if (nums[mid] > t) {
				return bs(nums,s,mid - 1,t);
			}
			if (nums[mid] < t) {
				return bs(nums,mid + 1,e,t);
			}
		}
		return nums.length - 1;
	}
}