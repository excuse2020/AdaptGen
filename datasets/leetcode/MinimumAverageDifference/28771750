class Solution {
	int minimumAverageDifference(int[] nums) {
		long leftHalfSum = 0, rightHalfSum = 0;
		for (int i = 0; i < nums.length; i++) {
			rightHalfSum += nums[i];
		}
		long min = Long.MAX_VALUE;
		int minPosition = 0;
		for (int i = 0; i < nums.length; i++) {
			leftHalfSum += nums[i];
			int leftSize = i + 1;
			long leftMid = leftHalfSum / leftSize;
			rightHalfSum -= nums[i];
			long rightMid = 0;
			if (rightHalfSum != 0) {
				int rightSize = nums.length - leftSize;
				rightMid = rightHalfSum / rightSize;
			}
			long diff = Math.abs(leftMid - rightMid);
			if (diff < min) {
				minPosition = i;
				min = diff;
			}
		}
		return minPosition;
	}
}