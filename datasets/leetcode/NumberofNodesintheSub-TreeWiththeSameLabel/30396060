class Solution {
	ArrayList<Integer>[] adjlist;
	int[] freq = new int[26];
	String labels;
	int[] ret;
	boolean[] visited;
	int[] countSubTrees(int n, int[][] edges, String labels) {
		adjlist = new ArrayList[n];
		ret = new int[n];
		this.labels = labels;
		visited = new boolean[n];
		for (int i = 0; i < edges.length; ++i) {
			if (adjlist[edges[i][0]] == null) {
				adjlist[edges[i][0]] = new ArrayList<Integer>();
			}
			adjlist[edges[i][0]].add(edges[i][1]);
			if (adjlist[edges[i][1]] == null) {
				adjlist[edges[i][1]] = new ArrayList<Integer>();
			}
			adjlist[edges[i][1]].add(edges[i][0]);
		}
		dfs(0);
		return ret;
	}
	void dfs(int n) {
		if (visited[n]) {
			return;
		}
		visited[n] = true;
		int before;
	}
}