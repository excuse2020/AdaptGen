class Solution {
	ListNode sortInList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode slow = head, fast = head.next;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode newList = slow.next;
		slow.next = null;
		ListNode left = sortInList(head);
		ListNode right = sortInList(newList);
		ListNode lhead = new ListNode(-1);
		ListNode res = lhead;
		while (left != null && right != null) {
			if (left.val < right.val) {
				lhead.next = left;
				left = left.next;
			} 
			else {
				lhead.next = right;
				right = right.next;
			}
			lhead = lhead.next;
		}
		lhead.next = left != null ? left : right;
		return res.next;
	}
}