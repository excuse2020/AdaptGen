class Solution {
	ListNode merging(ListNode l, ListNode r) {
		ListNode dummy = new ListNode(0);
		ListNode tail = dummy;
		while (l != null && r != null) {
			if (l.val <= r.val) {
				tail.next = l;
				l = l.next;
			} 
			else {
				tail.next = r;
				r = r.next;
			}
			tail = tail.next;
		}
		if (l != null) {
			tail.next = l;
		} 
		else if (r != null) {
			tail.next = r;
		}
		return dummy.next;
	}
	ListNode sortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode scnd_half = splitList(head);
		ListNode left = sortList(head);
		ListNode right = sortList(scnd_half);
		return merging(left,right);
	}
	ListNode splitList(ListNode head) {
		ListNode slow, fast;
		slow = fast = head;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode h2 = slow.next;
		slow.next = null;
		return h2;
	}
}