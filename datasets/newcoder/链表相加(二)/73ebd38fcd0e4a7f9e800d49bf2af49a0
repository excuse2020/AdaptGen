class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		LinkedList<Integer> l1 = new LinkedList<>();
		LinkedList<Integer> l2 = new LinkedList<>();
		putData(l1,head1);
		putData(l2,head2);
		ListNode Node = null;
		ListNode cur = null;
		int carry = 0;
		while (!l1.isEmpty() || !l2.isEmpty()) {
			int x, y, sum;
			if (!l1.isEmpty()) {
				x = l1.pop();
			} 
			else {
				x = 0;
			}
			if (!l2.isEmpty()) {
				y = l2.pop();
			} 
			else {
				y = 0;
			}
			sum = x + y;
			carry = sum / 10;
			sum %= 10;
			cur = new ListNode(sum);
			cur.next = Node;
			Node = cur;
		}
		return Node;
	}
	void putData(LinkedList<Integer> s1, ListNode head) {
		if (s1 == null) {
			s1 = new LinkedList();
		}
		while (head != null) {
			s1.push(head.val);
			head = head.next;
		}
	}
}