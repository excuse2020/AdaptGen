class Solution {
	String robotWithString(String s) {
		int n = s.length();
		char mins = new char[n];
		mins[n - 1] = s.charAt(n - 1);
		for (int i = n - 2; i >= 0; i--) {
			if (s.charAt(i) < mins[i + 1]) {
				mins[i] = s.charAt(i);
			} 
			else {
				mins[i] = mins[i + 1];
			}
		}
		StringBuilder sb = new StringBuilder();
		Stack<Character> st = new Stack<>();
		for (int i = 0; i < n; i++) {
			while (!st.isEmpty() && st.peek() <= mins[i] && st.peek() <= s.charAt(i)) {
				sb.append(st.pop());
			}
			st.push(s.charAt(i));
		}
		while (!st.isEmpty()) {
			sb.append(st.pop());
		}
		return sb.toString();
	}
}