class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] rowMax = new int[grid[0].length];
		int[] colMax = new int[grid.length];
		int[][] grid2 = new int[grid[0].length][grid.length];
		int k = 0;
		for (int i = 0; i < grid[0].length; i++) {
			int row = 0;
			int col = 0;
			for (int j = 0; j < grid.length; j++) {
				if (grid[i][j] > row) {
					row = grid[i][j];
				}
				if (grid[j][i] > col) {
					col = grid[j][i];
				}
			}
			rowMax[i] = row;
			colMax[i] = col;
		}
		for (int i = 0; i < grid[0].length; i++) {
			for (int j = 0; j < grid.length; j++) {
				grid2[i][j] = Math.min(rowMax[i],colMax[j]);
			}
		}
		int sum = 0;
		for (int i = 0; i < grid[0].length; i++) {
			for (int j = 0; j < grid.length; j++) {
				int val = grid2[i][j] - grid[i][j];
				sum += val;
			}
		}
		return sum;
	}
}