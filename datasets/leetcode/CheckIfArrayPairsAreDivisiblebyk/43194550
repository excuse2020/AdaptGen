class Solution {
	boolean canArrange(int[] arr, int k) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < arr.length; i++) {
			arr[i] = arr[i] % k;
			if (arr[i] < 0) {
				arr[i] += k;
			}
			map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
		}
		for (int i = 0; i < arr.length; i++) {
			if (!map.containsKey(arr[i])) {
				continue;
			}
			int num = (k - arr[i]) % k;
			if (map.containsKey(num)) {
				if ((k - arr[i]) % k == arr[i] && map.get(num) > 1) {
					map.put((k - arr[i]) % k,map.get(num) - 1);
				} 
				else if (num != arr[i]) {
					map.put(num,map.get(num) - 1);
				} 
				else {
					return false;
				}
				map.put(arr[i],map.get(arr[i]) - 1);
				if (map.get(arr[i]) == 0) {
					map.remove(arr[i]);
				}
				if (map.containsKey(num) && map.get(num) == 0) {
					map.remove(num);
				}
			} 
			else {
				return false;
			}
		}
		return true;
	}
}