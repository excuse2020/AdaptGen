class Solution {
	int getDigitSum(int num) {
		int sum = 0;
		while (num > 0) {
			sum += num % 10;
			num /= 10;
		}
		return sum;
	}
	int maximumSum(int[] nums) {
		Map<Integer, int[]> map = new HashMap<>();
		int max = -1;
		for (int num: nums) {	
			int digitSum = getDigitSum(num);
			if (!map.containsKey(digitSum)) {
				map.put(digitSum,new int{num, -1});
				continue;
			}
			int[] el = map.get(digitSum);
			if (el[1] == -1) {
				el[1] = el[0] + num;
			} 
			else {
				el[1] = Math.max(el[1],el[0] + num);
			}
			el[0] = Math.max(el[0],num);
			max = Math.max(max,el[1]);
		}
		return max;
	}
}