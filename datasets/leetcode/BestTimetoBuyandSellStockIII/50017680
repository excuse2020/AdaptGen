class Solution {
	int maxProfit(int[] prices) {
		int n = prices.length;
		int left = new int[n];
		int right = new int[n];
		int min = prices[0];
		int profit = 0;
		int max = prices[n - 1];
		for (int i = 1; i < n; i++) {
			if (min > prices[i]) {
				min = prices[i];
			}
			left[i] = Math.max(left[i - 1],prices[i] - min);
		}
		for (int i = n - 2; i >= 0; i--) {
			if (max < prices[i]) {
				max = prices[i];
			}
			right[i] = Math.max(right[i + 1],max - prices[i]);
		}
		int maxProfit = 0;
		for (int i = 0; i < n; i++) {
			maxProfit = Math.max(maxProfit,right[i] + left[i]);
		}
		return maxProfit;
	}
}