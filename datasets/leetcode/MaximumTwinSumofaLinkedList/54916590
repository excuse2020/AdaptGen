class Solution {
	int pairSum(ListNode head) {
		ListNode reverse = null;
		ListNode tail = head;
		int n = 0;
		int i = 0;
		while (tail != null) {
			tail = tail.next;
			n++;
		}
		tail = head;
		while (tail != null) {
			ListNode temp = tail.next;
			if (i > (n / 2) - 1) {
				ListNode curr = tail;
				curr.next = reverse;
				reverse = curr;
			}
			tail = temp;
			i++;
		}
		i = 0;
		int maxSum = 0, currSum = 0;
		while (reverse != null) {
			currSum = reverse.val + head.val;
			maxSum = Math.max(currSum,maxSum);
			reverse = reverse.next;
			head = head.next;
		}
		System.out.print(maxSum);
		return maxSum;
	}
}