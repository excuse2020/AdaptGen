class Solution {
	boolean check(long mid, int a, int b, int n) {
		int lcm = (a * b) / gcf(a,b);
		long count = mid / a + mid / b - mid / lcm;
		return count >= n;
	}
	int gcf(int a, int b) {
		return b == 0 ? a : gcf(b,a % b);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long l = 1;
		long r = Long.MAX_VALUE;
		long M = 1000000007;
		while (l < r) {
			long mid = l + (r - l) / 2;
			if (check(mid,a,b,n)) {
				r = mid;
			} 
			else {
				l = mid + 1;
			}
		}
		return (int) (l % M);
	}
}