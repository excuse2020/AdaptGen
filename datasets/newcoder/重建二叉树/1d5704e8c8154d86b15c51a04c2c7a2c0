class Solution {
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		int n = pre.length;
		int m = vin.length;
		if (n == 0 || m == 0) {
			return null;
		}
		TreeNode root = new TreeNode(pre[0]);
		for (int i = 0; i < vin.length; i++) {
			if (pre[0] == vin[i]) {
				root.left = reConstructBinaryTree(Arrays.copyOfRange(pre,1,i + 1),Arrays.copyOfRange(vin,0,i));
				root.right = reConstructBinaryTree(Arrays.copyOfRange(pre,i + 1,pre.length),Arrays.copyOfRange(vin,i + 1,vin.length));
				break;
			}
		}
		return root;
	}
}