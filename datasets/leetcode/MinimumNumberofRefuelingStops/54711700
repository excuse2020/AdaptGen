class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> {b - a});
		int maxDist = startFuel, n = stations.length, stops = 0, i = 0;
		while (maxDist < target) {
			while (i < n && stations[i][0] <= maxDist) {
				pq.offer(stations[i][1]);
				i++;
			}
			if (pq.isEmpty()) {
				return -1;
			}
			maxDist += pq.poll();
			stops++;
		}
		return stops;
	}
}