class Solution {
	int[] advantageCount(int[] nums1, int[] nums2) {
		int n = nums2.length;
		if (n <= 1) {
			return nums1;
		}
		PriorityQueue<int[]> pq = new PriorityQueue<>(new Comparator<int[]>());
		for (int i = 0; i < n; i++) {
			pq.add(new int{i, nums2[i]});
		}
		Arrays.sort(nums1);
		int left = 0;
		int right = n - 1;
		int[] ans = new int[n];
		while (!pq.isEmpty()) {
			int[] current = pq.poll();
			int index = current[0];
			int curMax = current[1];
			if (curMax < nums1[right]) {
				ans[index] = nums1[right];
				right--;
			} 
			else {
				ans[index] = nums1[left];
				left++;
			}
		}
		return ans;
	}
}