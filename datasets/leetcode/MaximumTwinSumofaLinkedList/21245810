class Solution {
	int pairSum(ListNode head) {
		Stack<Integer> half = new Stack<>();
		int max = 0;
		ListNode slow = null, fast = head;
		while (fast != null && fast.next != null) {
			slow = slow == null ? head : slow.next;
			fast = fast.next.next;
			half.add(slow.val);
		}
		while (slow.next != null) {
			slow = slow.next;
			max = Math.max(max,half.pop() + slow.val);
		}
		return max;
	}
}