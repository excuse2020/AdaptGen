class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		List<String> result = new ArrayList<>();
		int index = 0;
		while (index < words.length) {
			int totalChars = words[index].length();
			int last = index + 1;
			while (last < words.length) {
				if (totalChars + 1 > maxWidth) {
					break;
				}
				totalChars += 1 + words[last].length();
				last++;
			}
			StringBuilder sb = new StringBuilder();
			int gaps = last - index;
			if (last == words.length || gaps == 0) {
				for (int i = index; i < last; i++) {
					sb.append(words[i]).append(" ");
				}
				sb.deleteCharAt(sb.length() - 1);
				while (sb.length() < maxWidth) {
					sb.append(" ");
				}
			} 
			else {
				int spaces = (maxWidth - totalChars) / gaps;
				int extraSpaces = (maxWidth - totalChars) % gaps;
				for (int i = index; i < last - 1; i++) {
					sb.append(words[i]).append(" ");
					for (int j = 0; j < spaces + (i - index < extraSpaces ? 1 : 0); j++) {
						sb.append(" ");
					}
				}
				sb.append(words[last - 1]);
			}
			result.add(sb.toString());
			index = last;
		}
		return result;
	}
}