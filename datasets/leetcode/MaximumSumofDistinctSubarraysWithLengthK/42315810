class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int n = nums.length;
		long max = 0;
		Set<Integer> set = new HashSet<>();
		long sum = 0;
		for (int left = 0, right = 0; right < n; right++) {
			if (set.size() < k) {
				while (set.contains(nums[right])) {
					sum = sum - nums[left];
					set.remove(nums[left]);
					left++;
				}
				set.add(nums[right]);
				sum = sum + nums[right];
			}
			if (set.size() == k) {
				max = Math.max(max,sum);
				sum = sum - nums[left];
				set.remove(nums[left]);
				left++;
			}
		}
		return max;
	}
}