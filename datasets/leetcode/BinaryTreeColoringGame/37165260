class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode x_node = find(root,x);
		int left_c = count(x_node.left);
		int ryt_c = count(x_node.right);
		if ((left_c + ryt_c < n / 2) || (left_c > n - left_c)) {
			return true;
		} 
		else {
			return false;
		}
	}
	int count(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + count(root.left);
	}
	TreeNode find(TreeNode root, int x) {
		if (root == null || root.val == x) {
			return root;
		}
		TreeNode left = find(root.left,x);
		if (left != null) {
			return left;
		}
		return find(root.right,x);
	}
}