class Solution {
	boolean isRectangleCover(int[][] rectangles) {
		Set<String> set = new HashSet<String>();
		int minX = Integer.MAX_VALUE, minY = Integer.MAX_VALUE, maxX = Integer.MIN_VALUE, maxY = Integer.MIN_VALUE;
		for (int i = 0; i < rectangles.length; i++) {
			minX = Math.min(minX,rectangles[i][0]);
			minY = Math.min(minY,rectangles[i][1]);
			maxX = Math.max(maxX,rectangles[i][2]);
			maxY = Math.max(maxY,rectangles[i][3]);
		}
		int totalArea = (maxY - minY) * (maxX - minX);
		int area = 0;
		for (int i = 0; i < rectangles.length; i++) {
			area += (rectangles[i][2] - rectangles[i][0]) * (rectangles[i][3] - rectangles[i][1]);
			if (!set.add(rectangles[i][0] + "" + rectangles[i][1])) {
				set.remove(rectangles[i][0] + "");
			}
			if (!set.add(rectangles[i][0] + "" + rectangles[i][3])) {
				set.remove(rectangles[i][0] + "");
			}
			if (!set.add(rectangles[i][2] + "" + rectangles[i][1])) {
				set.remove(rectangles[i][2] + "");
			}
			if (!set.add(rectangles[i][2] + "" + rectangles[i][3])) {
				set.remove(rectangles[i][2] + "");
			}
		}
		if (!set.contains(minX + "" + minY)) {
			return false;
		}
		if (!set.contains(minX + "" + maxY)) {
			return false;
		}
		if (!set.contains(maxX + "" + minY)) {
			return false;
		}
		if (!set.contains(maxX + "" + maxY)) {
			return false;
		}
		if (area != totalArea) {
			return false;
		}
		return set.size() == 4;
	}
}