class Solution {
	void dfs(ArrayList<String> ans, int n, int left, int right, StringBuilder sb) {
		if (left == n && right == n) {
			ans.add(sb.toString());
			return;
		}
		if (left < n) {
			sb.append("(");
			dfs(ans,n,left + 1,right,sb);
			sb.deleteCharAt(sb.length() - 1);
		}
		if (right < n && left > right) {
			sb.append(")");
			dfs(ans,n,left,right + 1,sb);
			sb.deleteCharAt(sb.length() - 1);
		}
	}
	ArrayList<String> generateParenthesis(int n) {
		ArrayList<String> ans = new ArrayList<>();
		dfs(ans,n,0,0,new StringBuilder());
		return ans;
	}
}