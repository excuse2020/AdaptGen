class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int rowVisited = n;
		int colVisited = n;
		boolean[] isVisitedRow = new boolean[n];
		boolean[] isVisitedCol = new boolean[n];
		long sum = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int type = queries[i][0];
			int indx = queries[i][1];
			int val = queries[i][2];
			if (type == 0 && !isVisitedRow[indx]) {
				sum += colVisited * val;
				isVisitedRow[indx] = true;
				rowVisited--;
			}
			if (type == 1 && !isVisitedCol[indx]) {
				sum += rowVisited * val;
				isVisitedCol[indx] = true;
				colVisited--;
			}
		}
		return sum;
	}
}