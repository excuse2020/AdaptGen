class Solution {
	boolean prime;
	void allPrime(int n) {
		prime = new boolean[n + 1];
		Arrays.fill(prime,true);
		prime[0] = false;
		prime[1] = false;
		for (int i = 2; i < Math.sqrt(n); i++) {
			if (prime[i]) {
				for (int j = 2; j < n; j++) {
					if ((i * j) > n) {
						break;
					}
					prime[i * j] = false;
				}
			}
		}
	}
	List<List<Integer>> findPrimePairs(int n) {
		allPrime(n);
		List<List<Integer>> ans = new ArrayList<>();
		for (int i = 0; i <= n / 2; i++) {
			int j = n - i;
			if (prime[i] && prime[j]) {
				ans.add(List.of(i,j));
			}
		}
		return ans;
	}
}