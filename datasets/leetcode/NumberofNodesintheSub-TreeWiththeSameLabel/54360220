class Solution {
	int[] countSubTrees(int n, int[][] edges, String labels) {
		List<List<Integer>> tree = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			tree.add(new ArrayList<>());
		}
		for (int[] edge: edges) {	
			tree.get(edge[0]).add(edge[1]);
			tree.get(edge[1]).add(edge[0]);
		}
		int[] result = new int[n];
		boolean[] visited = new boolean[n];
		dfs(0,tree,labels,visited,result);
		return result;
	}
	int[] dfs(int node, List<List<Integer>> tree, String labels, boolean[] visited, int[] result) {
		visited[node] = true;
		int[] counter = new int[26];
	}
}