class Solution {
	boolean checkXMatrix(int[][] grid) {
		int n = grid.length;
		int r1 = 0, r2 = n - 1, c1 = 0, c2 = n - 1;
		while (r1 <= r2 && c1 <= c2) {
			if (grid[r1][c1] == 0 || grid[r1][c2] == 0 || grid[r2][c1] == 0 || grid[r2][c2] == 0) {
				return false;
			}
			for (int c = c1 + 1; c < c2; c++) {
				if (grid[r1][c] != 0) {
					return false;
				}
			}
			for (int r = r1 + 1; r < r2; r++) {
				if (grid[r][c2] != 0) {
					return false;
				}
			}
			if (r1 < r2 && c1 < c2) {
				for (int c = c2 - 1; c > c1; c--) {
					if (grid[r2][c] != 0) {
						return false;
					}
				}
				for (int r = r2 - 1; r > r1; r--) {
					if (grid[r][c1] != 0) {
						return false;
					}
				}
			}
			r1++;
			r2--;
			c1++;
			c2--;
		}
		return true;
	}
}