class Solution {
	int minPathSum(int[][] grid) {
		int colLen = grid.length;
		int rowLen = grid[0].length;
		int[][] mem = new int[colLen][rowLen];
		return recursive(colLen - 1,rowLen - 1,grid,mem);
	}
	int recursive(int m, int n, int[][] grid, int[][] mem) {
		if (m < 0 || n < 0) {
			return Integer.MAX_VALUE;
		}
		if (m == 0 && n == 0) {
			return grid[0][0];
		}
		if (mem[m][n] != 0) {
			return grid[m][n];
		}
		int top = recursive(m - 1,n,grid,mem);
		int left = recursive(m,n - 1,grid,mem);
		int min = Math.min(top,left);
		grid[m][n] += min;
		mem[m][n] = 1;
		return grid[m][n];
	}
}