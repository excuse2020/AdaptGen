class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode h2 = reverse(head2);
		ListNode h1 = reverse(head1);
		ListNode cur = new ListNode(-1);
		ListNode guard = cur;
		int t = 0;
		while (h1 != null & h2 != null) {
			int sum = h1.val + h2.val;
			cur.next = new ListNode(sum % 10);
			cur = cur.next;
			t = sum / 10;
			h1 = h1.next;
			h2 = h2.next;
		}
		while (h1 != null) {
			int sum = h1.val + t;
			cur.next = new ListNode(sum % 10);
			cur = cur.next;
			t = sum / 10;
			h1 = h1.next;
		}
		while (h2 != null) {
			int sum = h2.val + t;
			cur.next = new ListNode(sum % 10);
			cur = cur.next;
			t = sum / 10;
			h2 = h2.next;
		}
		if (t > 0) {
			cur.next = new ListNode(t);
		}
		return reverse(guard.next);
	}
	ListNode reverse(ListNode node) {
		if (node == null) {
			return null;
		}
		ListNode cur = node;
		ListNode pre = null;
		while (cur != null) {
			ListNode tmp = cur.next;
			cur.next = pre;
			pre = cur;
			cur = tmp;
		}
		return pre;
	}
}