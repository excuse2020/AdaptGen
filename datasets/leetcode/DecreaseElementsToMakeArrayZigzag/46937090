class Solution {
	int movesToMakeZigzag(int[] nums) {
		if (nums.length == 1) {
			return 0;
		}
		int temp = Arrays.copyOf(nums,nums.length);
		int minOp1 = 0;
		for (int i = 1; i < nums.length; i += 2) {
			if (i % 2 != 0) {
				if (i != nums.length - 1) {
					if (nums[i - 1] >= nums[i]) {
						minOp1 += (nums[i - 1] - nums[i]) + 1;
						nums[i - 1] = nums[i] - 1;
					}
					if (nums[i + 1] >= nums[i]) {
						minOp1 += (nums[i + 1] - nums[i]) + 1;
						nums[i + 1] = nums[i] - 1;
					}
				} 
				else {
					if (nums[i - 1] >= nums[i]) {
						minOp1 += (nums[i - 1] - nums[i]) + 1;
						nums[i - 1] = nums[i] - 1;
					}
				}
			}
		}
		nums = Arrays.copyOf(temp,temp.length);
		int minOp2 = 0;
		for (int i = 0; i < nums.length; i += 2) {
			if (i % 2 == 0) {
				if (i != nums.length - 1 && i != 0) {
					if (nums[i - 1] >= nums[i]) {
						minOp2 += (nums[i - 1] - nums[i]) + 1;
						nums[i - 1] = nums[i] - 1;
					}
					if (nums[i + 1] >= nums[i]) {
						minOp2 += (nums[i + 1] - nums[i]) + 1;
						nums[i + 1] = nums[i] - 1;
					}
				} 
				else {
					if (i == nums.length - 1) {
						if (nums[i - 1] >= nums[i]) {
							minOp2 += (nums[i - 1] - nums[i]) + 1;
							nums[i - 1] = nums[i] - 1;
						}
					} 
					else if (i == 0) {
						if (nums[i + 1] >= nums[i]) {
							minOp2 += (nums[i + 1] - nums[i]) + 1;
							nums[i + 1] = nums[i] - 1;
						}
					}
				}
			}
		}
		return (minOp1 < minOp2) ? minOp1 : minOp2;
	}
}