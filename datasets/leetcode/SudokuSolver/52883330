class Solution {
	int n = 9;
	boolean isSafe(char[][] board, int r, int c, char val) {
		for (int i = 0; i < 9; i++) {
			if (i == r) {
				continue;
			}
			if (board[i][c] == val) {
				return false;
			}
		}
		for (int i = 0; i < 9; i++) {
			if (i == c) {
				continue;
			}
			if (board[r][i] == val) {
				return false;
			}
		}
		int sR = r - r % 3;
		int sC = c - c % 3;
		for (int i = sR; i < sR + 3; i++) {
			for (int j = sC; j < sC + 3; j++) {
				if (i == r && j == c) {
					continue;
				} 
				else if (board[i][j] == val) {
					return false;
				}
			}
		}
		return true;
	}
	void solveSudoku(char[][] board) {
		solver(board,0,0);
	}
	boolean solver(char[][] board, int r, int c) {
		if (r == n) {
			return true;
		}
		if (c == n) {
			return solver(board,r + 1,0);
		}
	}
}