class Solution {
	int countSetBits(int number) {
		int count = 0;
		while (number > 0) {
			count++;
			number &= number - 1;
		}
		return count;
	}
	int minChanges(int n, int k) {
		int xor = n ^ k;
		int countXOR = countSetBits(xor);
		int countN = countSetBits(n);
		int countK = countSetBits(k);
		if (countN < countK) {
			return -1;
		}
		String binN = Integer.toBinaryString(n);
		String binK = Integer.toBinaryString(k);
		if (binN.length() < binK.length()) {
			return -1;
		}
		int j = binN.length() - 1;
		int i = binK.length() - 1;
	}
}