class Solution {
	boolean check(int num, int[] digit) {
		int[] d = new int[10];
		for (int i = num; i != 0; i /= 10) {
			int r = i % 10;
			d[r]++;
		}
		for (int i = 0; i < 10; i++) {
			if (d[i] != digit[i]) {
				return false;
			}
		}
		return true;
	}
	boolean reorderedPowerOf2(int n) {
		int[] digit = new int[10];
		for (int i = n; i != 0; i /= 10) {
			int r = i % 10;
			digit[r]++;
		}
		int num = 1;
		int index = 1;
		while (index < 32) {
			boolean ans = check(num,digit);
			if (ans) {
				return true;
			}
			num *= 2;
			index++;
		}
		return false;
	}
}