class Solution {
	boolean increasing(ArrayList<Integer> nums) {
		boolean result = true;
		int i;
		for (i = 0; i < nums.size() - 1; i++) {
			if (nums.get(i) >= nums.get(i + 1)) {
				result = false;
				break;
			}
		}
		return result;
	}
	int maxAscendingSum(int[] nums) {
		ArrayList<Integer> al = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			ArrayList<Integer> al1 = new ArrayList<>();
			int sum = nums[i];
			al1.add(nums[i]);
			al.add(nums[i]);
			for (int j = i + 1; j < nums.length; j++) {
				al1.add(nums[j]);
				if (increasing(al1) == true) {
					sum += nums[j];
					al.add(sum);
				} 
				else {
					break;
				}
			}
		}
		System.out.println(al);
		if (al.size() == 0 && nums.length != 0) {
			int max = nums[0];
			for (int i = 1; i < nums.length; i++) {
				if (nums[i] > max) {
					max = nums[i];
				}
			}
			return max;
		}
		if (al.size() < 0) {
			return 0;
		}
		return Collections.max(al);
	}
}