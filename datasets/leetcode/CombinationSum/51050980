class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> combination = new ArrayList<>();
		function(target,new ArrayList<>(),candidates,0,combination);
		return combination;
	}
	void function(int x, ArrayList<Integer> ways, int[] candidates, int index, List<List<Integer>> combination) {
		if (x == 0) {
			ways = new ArrayList<>(ways);
			combination.add(ways);
		} 
		else {
			ways = new ArrayList<>(ways);
			for (int i = 0; i < candidates.length; i++) {
				if (x - candidates[i] >= 0 && index <= candidates[i]) {
					ways.add(candidates[i]);
					function(x - candidates[i],ways,candidates,candidates[i],combination);
					ways.removeLast();
				}
			}
		}
	}
}