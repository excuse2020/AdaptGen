class Solution {
	List<List<Integer>> minimumAbsDifference(int[] nums) {
		TreeMap<Integer, List<List<Integer>>> tm = new TreeMap<>();
		Arrays.sort(nums);
		int n = nums.length;
		int mn = Integer.MAX_VALUE;
		for (int i = 1; i < n; i++) {
			int diff = nums[i] - nums[i - 1];
			mn = Math.min(mn,diff);
			if (tm.containsKey(diff)) {
				List<Integer> temp = new ArrayList<>();
				temp.add(nums[i - 1]);
				temp.add(nums[i]);
				tm.get(diff).add(temp);
			} 
			else {
				List<Integer> temp = new ArrayList<>();
				temp.add(nums[i - 1]);
				temp.add(nums[i]);
				List<List<Integer>> ls = new ArrayList<>();
				ls.add(temp);
				tm.put(diff,ls);
			}
		}
		return tm.get(mn);
	}
}