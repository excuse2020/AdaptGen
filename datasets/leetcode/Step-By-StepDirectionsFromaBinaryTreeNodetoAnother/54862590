class Solution {
	boolean findPath(TreeNode root, int target, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		StringBuilder path1 = new StringBuilder();
		findPath(root,startValue,path1);
		StringBuilder path2 = new StringBuilder();
		findPath(root,destValue,path2);
		int idx = 0;
		while (idx < path1.length() && idx < path2.length()) {
			if (path1.charAt(idx) == path2.charAt(idx)) {
				idx++;
			} 
			else {
				break;
			}
		}
		path1 = new StringBuilder(path1.substring(idx));
		StringBuilder path = new StringBuilder();
		for (char ignored: path1.toString().toCharArray()) {	
			path.append("U");
		}
		return path.append(path2.substring(idx)).toString();
	}
}