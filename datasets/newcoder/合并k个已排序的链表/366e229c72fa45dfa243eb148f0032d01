class Solution {
	ListNode margeTwoList(ListNode node1, ListNode node2) {
		ListNode node = new ListNode(-1);
		ListNode tmp = node;
		while (node1 != null && node2 != null) {
			if (node1.val <= node2.val) {
				tmp.next = node1;
				node1 = node1.next;
			} 
			else {
				tmp.next = node2;
				node2 = node2.next;
			}
			tmp = tmp.next;
		}
		tmp.next = node1 != null ? node1 : node2;
		return node.next;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		int n = lists.size();
		if (n == 0) {
			return null;
		}
		if (n == 1) {
			return lists.get(0);
		}
		ListNode node = lists.get(0);
		for (int i = 1; i < n; i++) {
			node = margeTwoList(lists.get(i),node);
		}
		return node;
	}
}