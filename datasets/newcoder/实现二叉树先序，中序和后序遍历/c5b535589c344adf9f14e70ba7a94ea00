class Solution {
	void inorder(TreeNode cur, List<Integer> list) {
		if (cur == null) {
			return;
		}
		inorder(cur.left,list);
		list.add(cur.val);
		inorder(cur.right,list);
	}
	void post(TreeNode cur, List<Integer> list) {
		if (cur == null) {
			return;
		}
		post(cur.left,list);
		post(cur.right,list);
		list.add(cur.val);
	}
	void pre(TreeNode cur, List<Integer> list) {
		if (cur == null) {
			return;
		}
		list.add(cur.val);
		pre(cur.left,list);
		pre(cur.right,list);
	}
	int[][] threeOrders(TreeNode root) {
		List<Integer> preli = new ArrayList<>();
		pre(root,preli);
		List<Integer> inli = new ArrayList<>();
		inorder(root,inli);
		List<Integer> postli = new ArrayList<>();
		post(root,postli);
		int[][] arr = new int[3][inli.size()];
		for (int i = 0; i < preli.size(); i++) {
			arr[0][i] = preli.get(i);
		}
		for (int i = 0; i < inli.size(); i++) {
			arr[1][i] = inli.get(i);
		}
		for (int i = 0; i < postli.size(); i++) {
			arr[2][i] = postli.get(i);
		}
		return arr;
	}
}