class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		if (num == null || num.length == 0 || size < 1 || num.length < size) {
			return new ArrayList<Integer>();
		}
		ArrayList<Integer> result = new ArrayList<>();
		int n = num.length;
		Deque<Integer> queue = new LinkedList<>();
		for (int i = 0; i < n; i++) {
			while (!queue.isEmpty() && num[queue.peekLast()] < num[i]) {
				queue.removeLast();
			}
			queue.addLast(i);
			if (queue.peekFirst() <= i - size) {
				queue.removeFirst();
			}
			if (i >= size - 1) {
				result.add(num[queue.peekFirst()]);
			}
		}
		return result;
	}
}