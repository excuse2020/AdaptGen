class Solution {
	int maxDepth = -1;
	TreeNode ref;
	int compute(TreeNode root, int height) {
		if (root == null) {
			return 0;
		}
		int left = compute(root.left,height + 1);
		int right = compute(root.right,height + 1);
		if (left >= maxDepth && left == right) {
			maxDepth = left;
			ref = root;
		}
		if (height > maxDepth) {
			maxDepth = height;
			ref = root;
		}
		return Math.max(height,Math.max(left,right));
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		ref = new TreeNode();
		compute(root,0);
		return ref;
	}
}