class Solution {
	int NumberOf1Between1AndN_Solution(int n) {
		if (n <= 0 || n == 1) {
			return n;
		}
		String str = n + "";
		return numberOf1(str);
	}
	int numberOf1(String str) {
		char[] strN = str.toCharArray();
		int length = strN.length;
		if (length == 1 && strN[0] == '0') {
			return 0;
		}
		if (length == 1 && strN[0] > '1') {
			return 1;
		}
		int numFirstDigit = 0;
		if (strN[0] > '1') {
			numFirstDigit = (int) Math.pow(10,length - 1);
		} 
		else if (strN[0] == '1') {
			numFirstDigit = Integer.parseInt(str.substring(1)) + 1;
		}
		int numOtherDigits = (int) ((strN[0] - '0') * (length - 1));
		int numRecursive = numberOf1(str.substring(1));
		return numFirstDigit + numOtherDigits;
	}
}