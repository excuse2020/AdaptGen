class Solution {
	boolean HasSubtree(TreeNode A, TreeNode B) {
		if (B == null || A == null) {
			return false;
		}
		if (helper(A,B)) {
			return true;
		}
		return HasSubtree(A.left,B) || HasSubtree(A.right,B);
	}
	boolean helper(TreeNode rootA, TreeNode rootB) {
		if (rootB == null) {
			return true;
		}
		if (rootA == null) {
			return false;
		}
		if (rootA.val == rootB.val) {
			return helper(rootA.left,rootB.left) && helper(rootA.right,rootB.right);
		} 
		else {
			return false;
		}
	}
}