class Solution {
	int MOD = 1000000007;
	int numRollsToTarget(int n, int k, int target) {
		int dp = new int[n + 1][target + 1];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= target; j++) {
				dp[i][j] = -1;
			}
		}
		return solve(n,k,target,dp);
	}
	int solve(int dice, int face, int tr, int[][] dp) {
		if (tr < 0) {
			return 0;
		}
		if (tr == 0 && dice != 0) {
			return 0;
		}
		if (tr != 0 && dice == 0) {
			return 0;
		}
		if (dice == 0 && tr == 0) {
			return 1;
		}
		if (dp[dice][tr] != -1) {
			return dp[dice][tr];
		}
		long ans = 0;
		for (int i = 1; i <= face; i++) {
			ans = (ans + solve(dice - 1,face,tr - i,dp)) % MOD;
		}
		dp[dice][tr] = (int) ans;
		return dp[dice][tr];
	}
}