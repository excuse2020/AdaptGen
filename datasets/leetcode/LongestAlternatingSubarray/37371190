class Solution {
	int alternatingSubarray(int[] nums) {
		int n = nums.length;
		int ans = -1;
		for (int i = 0; i < n - 1; i++) {
			for (int j = i + 1; j < n; j++) {
				if (isAlternating(nums,i,j)) {
					ans = Math.max(ans,j - i + 1);
				}
			}
		}
		return ans;
	}
	boolean isAlternating(int[] nums, int i, int j) {
		int n = nums.length;
		if (j - i == 1) {
			if (nums[j] - nums[i] == 1) {
				return true;
			} 
			else {
				return false;
			}
		}
		boolean start = true;
		int temp = 0;
		for (int x = i; x < j; x++) {
			if ((start && nums[x + 1] - nums[x] != 1) || (!start && nums[x + 1] - nums[x] != -1)) {
				return false;
			}
			if (temp % 2 == 0) {
				start = false;
			} 
			else {
				start = true;
			}
			temp++;
		}
		return true;
	}
}