class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		boolean[] row = new boolean[n];
		int r = 0, c = 0;
		boolean[] col = new boolean[n];
		long sum = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int[] query = queries[i];
			int type = query[0];
			int p = query[1];
			int val = query[2];
			if (type == 0) {
				if (!row[p]) {
					sum += val * (n - c);
					row[p] = true;
					r++;
				}
			} 
			else {
				if (!col[p]) {
					sum += val * (n - r);
					col[p] = true;
					c++;
				}
			}
		}
		return sum;
	}
}