class Solution {
	int fast(int[] arr, int s, int e, int n, int K) {
		int ss = s;
		int ee = e - 1;
		int m = (s + e) / 2;
		int[] tmp = new int[n];
		for (int i = s; i < e; i++) {
			if (i == m) {
				continue;
			}
			if (arr[m] >= arr[i]) {
				tmp[ss++] = arr[i];
			} 
			else {
				tmp[ee--] = arr[i];
			}
		}
		tmp[ee] = arr[m];
		if (n - ee == K) {
			return arr[m];
		} 
		else if (n - ee > K) {
			return fast(tmp,ee + 1,e,n,K);
		} 
		else {
			return fast(tmp,s,ee,n,K);
		}
	}
	int findKth(int[] a, int n, int K) {
		return fast(a,0,n,n,K);
	}
}