class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int totalSum = 0;
		int maxStraightSum = Integer.MIN_VALUE;
		int tempMaxSum = 0;
		int minStraightSum = Integer.MAX_VALUE;
		int tempMinSum = 0;
		for (int i = 0; i < nums.length; i++) {
			totalSum += nums[i];
			tempMaxSum += nums[i];
			maxStraightSum = Math.max(maxStraightSum,tempMaxSum);
			if (tempMaxSum < 0) {
				tempMaxSum = 0;
			}
			tempMinSum += nums[i];
			minStraightSum = Math.min(minStraightSum,tempMinSum);
			if (tempMinSum > 0) {
				tempMinSum = 0;
			}
		}
		if (totalSum == minStraightSum) {
			return maxStraightSum;
		} 
		else {
			return Math.max(maxStraightSum,(totalSum - minStraightSum));
		}
	}
}