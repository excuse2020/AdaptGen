class Solution {
	int maxProfit(int[] prices) {
		int n = prices.length;
		int[] dp1 = new int[n];
		int minn = prices[0];
		for (int i = 1; i < n; i++) {
			dp1[i] = Math.max(dp1[i - 1],prices[i] - minn);
			minn = Math.min(minn,prices[i]);
		}
		int[] dp2 = new int[n];
		int maxx = prices[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			dp2[i] = Math.max(dp2[i + 1],maxx - prices[i]);
			maxx = Math.max(maxx,prices[i]);
		}
		int ans = Math.max(0,prices[n - 1] - prices[0]);
		for (int i = 0; i < n - 1; i++) {
			ans = Math.max(ans,dp1[i] + dp2[i + 1]);
		}
		return ans;
	}
}