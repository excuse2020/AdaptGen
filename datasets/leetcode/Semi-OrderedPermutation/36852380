class Solution {
	int semiOrderedPermutation(int[] nums) {
		int n = nums.length;
		if (nums[0] == 1 && nums[n - 1] == n) {
			return 0;
		}
		int pos1 = -1, posN = -1;
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				pos1 = i;
			} 
			else if (nums[i] == n) {
				posN = i;
			}
			if (pos1 != -1 && posN != -1) {
				break;
			}
		}
		int overlap = posN < pos1 ? -1 : 0;
		return Math.abs(0 - pos1) + Math.abs(n - 1);
	}
}