class Solution {
	String[] generateOutput(List<String> letterLogs, List<String> digitLogs) {
		String[] output = new String[letterLogs.size() + digitLogs.size()];
		for (int i = 0; i < letterLogs.size(); i++) {
			output[i] = letterLogs.get(i);
		}
		for (int i = letterLogs.size(); i < output.length; i++) {
			output[i] = digitLogs.get(i - letterLogs.size());
		}
		return output;
	}
	String[] reorderLogFiles(String[] logs) {
		if (logs.length == 0) {
			return logs;
		}
		List<String> letterLogs = new ArrayList<>(), digitLogs = new ArrayList<>();
		separateLettersDigits(logs,letterLogs,digitLogs);
		sortLetterLogs(letterLogs);
		return generateOutput(letterLogs,digitLogs);
	}
	void separateLettersDigits(String[] input, List<String> letterLogs, List<String> digitLogs) {
		for (String log: input) {	
			if (Character.isDigit(log.charAt(log.length() - 1))) {
				digitLogs.add(log);
			} 
			else {
				letterLogs.add(log);
			}
		}
	}
	void sortLetterLogs(List<String> letterLogs) {
		Collections.sort(letterLogs,new Comparator<String>());
	}
}