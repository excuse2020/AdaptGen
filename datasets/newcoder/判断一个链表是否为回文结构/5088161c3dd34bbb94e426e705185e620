class Solution {
	boolean isPail(ListNode head) {
		if (head == null) {
			return false;
		}
		ListNode slow = head, fast = head, pre = head;
		while (fast != null) {
			pre = slow;
			slow = slow.next;
			fast = fast.next;
			if (fast != null) {
				fast = fast.next;
			}
		}
		pre.next = null;
		ListNode reverse = reverse(slow);
		ListNode T = head;
		while (T != null && reverse != null) {
			if (T.val != reverse.val) {
				return false;
			}
			T = T.next;
			reverse = reverse.next;
		}
		return true;
	}
	ListNode reverse(ListNode node) {
		ListNode pre = null;
		ListNode cur = node;
		while (cur != null) {
			ListNode T = cur.next;
			cur.next = pre;
			pre = cur;
			cur = T;
		}
		return pre;
	}
}