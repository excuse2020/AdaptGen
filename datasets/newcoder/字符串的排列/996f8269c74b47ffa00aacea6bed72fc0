class Solution {
	ArrayList<String> res = new ArrayList<String>();
	ArrayList<String> Permutation(String str) {
		char[] arr = str.toCharArray();
		backtrack(arr,0);
		Collections.sort(res);
		return res;
	}
	void backtrack(char[] arr, int i) {
		if (i == arr.length - 1) {
			res.add(String.valueOf(arr));
			return;
		}
		Set<Character> set = new HashSet<>();
		for (int j = i; j < arr.length; j++) {
			if (!set.contains(arr[j])) {
				set.add(arr[j]);
				swap(arr,j,i);
				backtrack(arr,i + 1);
				swap(arr,j,i);
			}
		}
	}
	void swap(char[] arr, int i, int j) {
		char temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}