class Solution {
	int uniquePathsWithObstacles(int[][] dp) {
		if (dp[dp.length - 1][dp[0].length - 1] == 1) {
			return 0;
		}
		if (dp[0][0] == 1) {
			return 0;
		}
		for (int i = 0; i < dp.length; i++) {
			for (int j = 0; j < dp[0].length; j++) {
				if (dp[i][j] == 1) {
					dp[i][j] = -1;
				}
			}
		}
		dp[0][0] = 1;
		for (int i = 1; i < dp[0].length; i++) {
			if (dp[0][i - 1] == -1 || dp[0][i] == -1) {
				dp[0][i] = -1;
			} 
			else {
				dp[0][i] = 1;
			}
		}
		for (int i = 1; i < dp.length; i++) {
			if (dp[i - 1][0] == -1 || dp[i][0] == -1) {
				dp[i][0] = -1;
			} 
			else {
				dp[i][0] = 1;
			}
		}
		for (int i = 1; i < dp.length; i++) {
			for (int j = 1; j < dp[0].length; j++) {
				if (dp[i - 1][j] != -1 && dp[i][j] != -1) {
					dp[i][j] += dp[i - 1][j];
				}
				if (dp[i][j - 1] != -1 && dp[i][j] != -1) {
					dp[i][j] += dp[i][j - 1];
				}
			}
		}
		return dp[dp.length - 1][dp[0].length - 1];
	}
}