class Solution {
	boolean compute(int[] time, long mid, int totalTrips) {
		long value = 0;
		for (int x: time) {	
			value += mid / x;
		}
		if (value >= totalTrips) {
			return true;
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		long i = 1;
		long max = 0;
		for (int x: time) {	
			max = Math.max(max,x);
		}
		long j = max * totalTrips;
		while (i < j) {
			long mid = i + (j - i) / 2;
			if (compute(time,mid,totalTrips)) {
				j = mid;
			} 
			else {
				i = mid + 1;
			}
		}
		return j;
	}
}