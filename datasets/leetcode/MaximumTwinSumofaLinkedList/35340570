class Solution {
	int pairSum(ListNode head) {
		Stack<Integer> stack = new Stack<>();
		ListNode slowP = head;
		ListNode fastP = head;
		while (fastP != null) {
			stack.add(slowP.val);
			slowP = slowP.next;
			fastP = fastP.next.next;
		}
		int maxSum = 0;
		while (slowP != null) {
			int currSum = slowP.val + stack.pop();
			maxSum = Math.max(maxSum,currSum);
			slowP = slowP.next;
		}
		return maxSum;
	}
}