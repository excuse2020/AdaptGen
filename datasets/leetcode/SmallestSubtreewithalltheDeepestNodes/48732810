class Solution {
	TreeNode lca;
	int maxDepth = 0;
	int calDepth(TreeNode node, int depth) {
		if (node == null) {
			return depth;
		}
		depth++;
		maxDepth = Math.max(maxDepth,depth);
		int leftDepth = calDepth(node.left,depth);
		int rightDepth = calDepth(node.right,depth);
		if (leftDepth == maxDepth && rightDepth == maxDepth) {
			lca = node;
		}
		return Math.max(leftDepth,rightDepth);
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		calDepth(root,0);
		return lca;
	}
}