class Solution {
	int add(int x) {
		if (x == 1) {
			return 1;
		}
		if (x > 1 && x < 10) {
			return 2;
		}
		if (x >= 10 && x < 100) {
			return 3;
		}
		return 4;
	}
	int getLengthOfOptimalCompression(String s, int k1) {
		int n = s.length();
		LinkedList<int[]>[] list = new LinkedList[26];
		for (int i = 0; i < 26; i++) {
			list[i] = new LinkedList<>();
		}
		int[][] mm = new int[n + 1][k1 + 1];
		char c;
		LinkedList<int[]> tl;
		int i = 1;
		c = s.charAt(i - 1);
	}
	boolean sk(int ct, char c, int i, int n, String s) {
		if (ct == 1 || ct == 9 || ct == 99 || i == n - 1 || s.charAt(i + 1) != c) {
			return true;
		}
		return false;
	}
}