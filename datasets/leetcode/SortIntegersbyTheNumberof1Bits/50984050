class Solution {
	int[] sortByBits(int[] arr) {
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int i = 0; i <= 32; i++) {
			map.put(i,null);
		}
		for (int i = 0; i < arr.length; i++) {
			int bitCount = sumOfBits(arr[i]);
			if (map.get(bitCount) == null) {
				List<Integer> ls = new ArrayList<>();
				ls.add(arr[i]);
				map.replace(bitCount,ls);
			} 
			else {
				List<Integer> ls = map.get(bitCount);
				ls.add(arr[i]);
				map.replace(bitCount,ls);
			}
		}
		int[] ans = new int[arr.length];
		int index = 0;
		for (int i = 0; i <= 32; i++) {
			if (map.get(i) != null) {
				List<Integer> ls = map.get(i);
				ls.sort(null);
				for (int j: ls) {	
					ans[index++] = j;
				}
			}
		}
		return ans;
	}
	int sumOfBits(int num) {
		String str = Integer.toBinaryString(num);
		int ans = 0;
		int i = 0;
	}
}