class Solution {
	List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] report, int[] student_id, int k) {
		List<Integer> res = new ArrayList();
		Set<String> pf = new HashSet<>(Arrays.asList(positive_feedback));
		Set<String> nf = new HashSet<>(Arrays.asList(negative_feedback));
		Map<Integer, Integer> smap = new HashMap<>();
		for (int i = 0; i < report.length; i++) {
			String[] repS = report[i].split(" ");
			int sc = 0;
			for (String s: repS) {	
				if (pf.contains(s)) {
					sc += 3;
				}
				if (nf.contains(s)) {
					sc -= 1;
				}
			}
			smap.put(student_id[i],sc);
		}
		List<Map.Entry<Integer, Integer>> list = new LinkedList<Map.Entry<Integer, Integer>>(smap.entrySet());
		Collections.sort(list,new Comparator<Map.Entry<Integer, Integer>>());
		for (Map.Entry<Integer, Integer> e: list) {	
			res.add(e.getKey());
			k--;
			if (k == 0) {
				break;
			}
		}
		return res;
	}
}