class Solution {
	int minFallingPathSum(int[][] mat) {
		int m = mat.length;
		int dp = new int[m][m];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < m; j++) {
				if (i == 0) {
					dp[i][j] = mat[i][j];
				} 
				else if (j == 0) {
					dp[i][j] = mat[i][j] + Math.min(dp[i - 1][j],dp[i - 1][j + 1]);
				} 
				else if (j == m - 1) {
					dp[i][j] = mat[i][j] + Math.min(dp[i - 1][j],dp[i - 1][j - 1]);
				} 
				else {
					dp[i][j] = mat[i][j] + Math.min(Math.min(dp[i - 1][j],dp[i - 1][j - 1]),dp[i - 1][j + 1]);
				}
			}
		}
		int min = Integer.MAX_VALUE;
		for (int j = 0; j < m; j++) {
			min = Math.min(dp[m - 1][j],min);
		}
		return min;
	}
}