class Solution {
	int countNumberOfSetBits(int n) {
		int count = 0;
		for (int i = 0; i < 32; i++) {
			if ((n & (1 << i)) != 0) {
				count++;
			}
		}
		return count;
	}
	String getBinary(int n) {
		StringBuilder sb = new StringBuilder();
		while (n > 0) {
			int rem = n % 2;
			sb.append(rem);
			n = n / 2;
		}
		return sb.reverse().toString();
	}
	int minimizeXor(int num1, int num2) {
		int setbits = countNumberOfSetBits(num2);
		int numSetBits = countNumberOfSetBits(num1);
		String n1 = getBinary(num1);
		StringBuilder sb = new StringBuilder();
		int setb = setbits;
		int i = 0;
	}
	int toDecimal(String s) {
		int res = 0;
		int i = s.length() - 1;
	}
}