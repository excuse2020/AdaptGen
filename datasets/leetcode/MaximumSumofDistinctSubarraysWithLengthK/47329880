class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int i = 0, j = 0;
		long sum = 0, max = 0;
		HashSet<Integer> set = new HashSet<>();
		while (j < nums.length) {
			while (set.contains(nums[j])) {
				set.remove(nums[i]);
				sum -= nums[i];
				i++;
			}
			set.add(nums[j]);
			sum = sum + nums[j];
			if (j - i + 1 < k) {
				j++;
			} 
			else if (j - i + 1 == k) {
				max = Math.max(sum,max);
				set.remove(nums[i]);
				sum = sum - nums[i];
				i++;
				j++;
			}
		}
		return max;
	}
}