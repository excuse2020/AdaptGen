class Solution {
	int findMin(int[] nums) {
		int pivot = findPivotIndex(nums);
		return nums[pivot + 1];
	}
	int findPivotIndex(int[] arr) {
		int s = 0;
		int e = arr.length - 1;
		int n = arr.length - 1;
		while (s <= e) {
			int m = s + (e - s) / 2;
			if (m < n && arr[m] > arr[m + 1]) {
				return m;
			}
			if (m > 0 && arr[m] < arr[m - 1]) {
				return m - 1;
			}
			if (arr[m] > arr[e]) {
				s = m + 1;
			} 
			else if (arr[m] == arr[s] && arr[m] == arr[e]) {
				if (s < n && arr[s] > arr[s + 1]) {
					return s;
				} 
				else {
					s++;
				}
				if (e > 0 && arr[e] < arr[e - 1]) {
					return e - 1;
				} 
				else {
					e--;
				}
			} 
			else {
				e = m - 1;
			}
		}
		return -1;
	}
}