class Solution {
	String solve(String s, String t) {
		if (s == null || t == null) {
			return s != null ? s : t;
		}
		char[] sArr = s.toCharArray();
		char[] tArr = t.toCharArray();
		int sLen = sArr.length;
		int tLen = tArr.length;
		int maxLen = Math.max(sLen,tLen);
		int i = sLen - 1;
		int j = tLen - 1;
		int cur = 0;
		int pre = 0;
		List<Integer> list = new LinkedList<>();
		for (int k = 0; k < maxLen; k++) {
			int first = i >= 0 ? (int) (sArr[i] - '0') : 0;
			int second = j >= 0 ? (int) (tArr[j] - '0') : 0;
			int sum = first + second;
			cur = sum % 10;
			pre = sum / 10;
			list.add(cur);
			i--;
			j--;
		}
		if (pre > 0) {
			list.add(pre);
		}
		StringBuilder sb = new StringBuilder();
		Collections.reverse(list);
		for (int num: list) {	
			sb.append(num);
		}
		return sb.toString();
	}
}