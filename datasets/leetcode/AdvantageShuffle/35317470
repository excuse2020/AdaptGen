class Solution {
	int[] advantageCount(int[] nums1, int[] nums2) {
		int sol = new int[nums1.length];
		Arrays.fill(sol,-1);
		Arrays.sort(nums1);
		PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> {Integer.compare(nums2[a],nums2[b])});
		for (int i = 0; i < nums2.length; i++) {
			pq.offer(i);
		}
		int iter = 0;
		while (!pq.isEmpty()) {
			int curSmallestIndex = pq.poll();
			while (iter < nums1.length && nums1[iter] <= nums2[curSmallestIndex]) {
				iter++;
			}
			if (iter == nums1.length) {
				break;
			}
			sol[curSmallestIndex] = nums1[iter];
			nums1[iter++] = -1;
		}
		iter = 0;
		for (int i = 0; i < sol.length; i++) {
			if (sol[i] == -1) {
				while (nums1[iter] == -1) {
					iter++;
				}
				sol[i] = nums1[iter++];
			}
		}
		return sol;
	}
}