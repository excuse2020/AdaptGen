class Solution {
	boolean canComplete(long t, int[] time, int totalTrips) {
		long sum = 0;
		for (int item: time) {	
			sum += t / item;
			if (sum >= totalTrips) {
				return true;
			}
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		long low = 1;
		long high = 10000000L * totalTrips;
		while (low < high) {
			long mid = (low + high) / 2;
			if (!canComplete(mid,time,totalTrips)) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return low;
	}
}