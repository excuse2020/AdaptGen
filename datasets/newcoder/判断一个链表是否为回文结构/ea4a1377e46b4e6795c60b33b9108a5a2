class Solution {
	boolean isPail(ListNode head) {
		ListNode fast = head;
		ListNode slow = head;
		if (fast.next == null) {
			return true;
		}
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		slow = slow.next;
		slow = reverse(slow);
		fast = head;
		while (fast != null && slow != null) {
			if (fast.val != slow.val) {
				return false;
			}
			fast = fast.next;
			slow = slow.next;
		}
		return true;
	}
	ListNode reverse(ListNode head) {
		ListNode Phead = new ListNode(0);
		Phead.next = head;
		ListNode p = Phead;
		ListNode h = head;
		ListNode t = h.next;
		h.next = null;
		while (t != null) {
			ListNode m = t;
			t = t.next;
			m.next = p.next;
			p.next = m;
		}
		return Phead.next;
	}
}