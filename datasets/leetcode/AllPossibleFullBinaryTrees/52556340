class Solution {
	List<TreeNode> allPossbility(int n) {
		List<TreeNode> res = new ArrayList<>();
		if (n % 2 == 0) {
			return res;
		}
		if (n == 1) {
			res.add(new TreeNode(0));
			return res;
		}
		n = n - 1;
		for (int i = 1; i < n; i += 2) {
			List<TreeNode> leftSubTree = allPossbility(i);
			List<TreeNode> rightSubTree = allPossbility(n - i);
			for (TreeNode left: leftSubTree) {	
				for (TreeNode right: rightSubTree) {	
					TreeNode root = new TreeNode(0);
					root.left = left;
					root.right = right;
					res.add(root);
				}
			}
		}
		return res;
	}
	List<TreeNode> allPossibleFBT(int n) {
		return allPossbility(n);
	}
}