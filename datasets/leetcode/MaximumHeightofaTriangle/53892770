class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int counter_1 = 0, counter_2 = 0, idx = 1, red_1 = red, red_2 = red, blue_1 = blue, blue_2 = blue;
		boolean switcher = true, red_1_status = true, red_2_status = true, blue_1_status = true, blue_2_status = true;
		while (true) {
			if ((red_1 <= 0 || blue_1 <= 0) && (red_2 <= 0 && blue_2 <= 0)) {
				break;
			}
			if (switcher) {
				red_1 -= idx;
				blue_1 -= idx;
				switcher = false;
				if (red_1 >= 0 && blue_2_status) {
					counter_1++;
				}
				if (blue_1 >= 0 && red_2_status) {
					counter_2++;
				}
			} 
			else {
				red_2 -= idx;
				blue_2 -= idx;
				switcher = true;
				if (red_2 >= 0 && blue_1_status) {
					counter_2++;
				}
				if (blue_2 >= 0 && red_1_status) {
					counter_1++;
				}
			}
			if (red_2 < 0) {
				red_2_status = false;
			}
			if (blue_2 < 0) {
				blue_2_status = false;
			}
			if (red_1 < 0) {
				red_1_status = false;
			}
			if (blue_1 < 0) {
				blue_1_status = false;
			}
			idx++;
		}
		return Math.max(counter_1,counter_2);
	}
}