class Solution {
	int i = 0;
	int p = 0;
	TreeNode buildTree(int[] inorder, int[] postorder) {
		p = postorder.length - 1;
		i = inorder.length - 1;
		return buildTree(inorder,postorder,Integer.MIN_VALUE);
	}
	TreeNode buildTree(int[] inorder, int[] postorder, int stop) {
		if (p < 0) {
			return null;
		}
		if (inorder[i] == stop) {
			i--;
			return null;
		}
		TreeNode root = new TreeNode(postorder[p--]);
		root.right = buildTree(inorder,postorder,root.val);
		root.left = buildTree(inorder,postorder,stop);
		return root;
	}
}