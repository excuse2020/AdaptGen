class Solution {
	String generateSuffix(char p, char pp, int end) {
		StringBuilder res = new StringBuilder();
		int i = 0;
		char cand;
	}
	boolean isBounded(int c, int bound) {
		return c <= bound;
	}
	boolean isPali(String s, int n, int i, char c) {
		if (i > 0 && s.charAt(i - 1) == c) {
			return true;
		}
		if (i > 1 && s.charAt(i - 2) == c) {
			return true;
		}
		return false;
	}
	char nextChar(char c) {
		return (char) (c + 1);
	}
	String smallestBeautifulString(String s, int k) {
		char bound;
	}
	String toString(String s, int n, int i, char c) {
		StringBuilder res = new StringBuilder();
		res.append(s.substring(0,i));
		res.append(c);
		char pp;
	}
}