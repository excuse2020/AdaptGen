class Solution {
	int counterClockWiseDistance(int min, int max, int[] distance) {
		int dist = 0;
		for (int i = 0; i < min; i++) {
			dist += distance[i];
		}
		for (int j = max; j < distance.length; j++) {
			dist += distance[j];
		}
		return dist;
	}
	int distanceBetweenBusStops(int[] distance, int start, int destination) {
		if (Math.abs(start - destination) == 1) {
			if (start < destination) {
				return distance[start];
			} 
			else {
				return distance[destination];
			}
		}
		if (start == destination) {
			return 0;
		}
		int min = 0;
		int max = 0;
		int dist = 0;
		int dist2 = 0;
		if (start < destination) {
			min = start;
			max = destination;
		} 
		else {
			min = destination;
			max = start;
		}
		for (int i = min; i < max; i++) {
			dist += distance[i];
		}
		dist2 = counterClockWiseDistance(min,max,distance);
		if (dist2 > 0) {
			if (dist < dist2) {
				return dist;
			} 
			else {
				return dist2;
			}
		} 
		else {
			return dist;
		}
	}
}