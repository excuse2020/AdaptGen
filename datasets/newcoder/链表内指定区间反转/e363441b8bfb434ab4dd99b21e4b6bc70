class Solution {
	ListNode reverse(ListNode head, int len) {
		ListNode tail = head, pre = null, next = head.next;
		while (len-- != 0) {
			head.next = pre;
			pre = head;
			head = next;
			next = next.next;
		}
		head.next = pre;
		tail.next = next;
		return head;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode pre = null, now = head;
		int i = 1;
		while (i++ != m) {
			pre = now;
			now = now.next;
		}
		now = reverse(now,n - m);
		if (pre == null) {
			return now;
		} 
		else {
			pre.next = now;
			return head;
		}
	}
}