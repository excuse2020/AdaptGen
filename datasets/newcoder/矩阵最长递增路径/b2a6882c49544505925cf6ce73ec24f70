class Solution {
	int process(int[][] matrix, int i, int j, int pre) {
		if (i < 0 || i >= matrix.length || j < 0 || j >= matrix.length || matrix[i][j] <= pre) {
			return 0;
		}
		int max = 0;
		max = Math.max(process(matrix,i - 1,j,matrix[i][j]),max);
		max = Math.max(process(matrix,i + 1,j,matrix[i][j]),max);
		max = Math.max(process(matrix,i,j - 1,matrix[i][j]),max);
		max = Math.max(process(matrix,i,j + 1,matrix[i][j]),max);
		return max + 1;
	}
	int solve(int[][] matrix) {
		int n = matrix.length;
		int m = matrix[0].length;
		int maxRes = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				int temp = process(matrix,i,j,-1);
				maxRes = temp > maxRes ? temp : maxRes;
			}
		}
		return maxRes;
	}
}