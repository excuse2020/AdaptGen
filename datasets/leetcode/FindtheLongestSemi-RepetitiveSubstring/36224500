class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		ArrayList<String> substrings = new ArrayList<>();
		int n = s.length();
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j <= n; j++) {
				substrings.add(s.substring(i,j));
			}
		}
		Collections.sort(substrings,(s1, s2) -> {Integer.compare(s2.length(),s1.length())});
		for (int j = 0; j < substrings.size(); j++) {
			char[] S = substrings.get(j).toCharArray();
			int flage = 0;
			for (int t = 1; t < S.length; t++) {
				char ch = S[t - 1];
				if (S[t] == ch) {
					flage++;
				}
			}
			if (flage <= 1) {
				return substrings.get(j).length();
			}
		}
		return -1;
	}
}