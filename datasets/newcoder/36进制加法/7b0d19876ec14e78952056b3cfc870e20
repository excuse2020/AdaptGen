class Solution {
	int charIn36toInt(char c) {
		if (c >= '0' && c <= '9') {
			return c - '0';
		} 
		else {
			return c - 'a' + 10;
		}
	}
	char intTo36Char(int val) {
		if (val <= 9) {
			return (char) ('0' + val);
		} 
		else {
			return (char) ('a' + (val - 10));
		}
	}
	String thirtysixAdd(String A, String B) {
		int carry = 0;
		int indexA = A.length() - 1, indexB = B.length() - 1;
		StringBuilder res = new StringBuilder();
		while (indexA >= 0 && indexB >= 0) {
			int val = charIn36toInt(A.charAt(indexA)) + charIn36toInt(B.charAt(indexB));
			int curBitVal = val % 36;
			carry = val / 36;
			res.append(intTo36Char(curBitVal));
			indexA--;
			indexB--;
		}
		while (indexA >= 0) {
			int val = charIn36toInt(A.charAt(indexA)) + carry;
			int curBitVal = val % 36;
			carry = val / 36;
			res.append(intTo36Char(curBitVal));
			indexA--;
		}
		while (indexB >= 0) {
			int val = charIn36toInt(B.charAt(indexB)) + carry;
			int curBitVal = val % 36;
			carry = val / 36;
			res.append(intTo36Char(curBitVal));
			indexB--;
		}
		if (carry != 0) {
			res.append(intTo36Char(carry));
		}
		return res.reverse().toString();
	}
}