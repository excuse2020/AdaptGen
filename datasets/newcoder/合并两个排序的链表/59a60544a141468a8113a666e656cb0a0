class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		ListNode curNode2 = pHead2;
		while (curNode2 != null) {
			ListNode curNode1 = pHead1;
			ListNode lastNode1 = null;
			boolean canInsert = false;
			while (curNode1 != null) {
				if (curNode2.val < curNode1.val) {
					if (lastNode1 == null) {
						ListNode tmp2 = curNode2.next;
						ListNode tmp = pHead1;
						pHead1 = curNode2;
						curNode2.next = tmp;
						curNode2 = tmp2;
					} 
					else {
						lastNode1.next = curNode2;
						ListNode tmp = curNode2.next;
						curNode2.next = curNode1;
						curNode2 = tmp;
					}
					canInsert = true;
					break;
				}
				lastNode1 = curNode1;
				curNode1 = curNode1.next;
			}
			if (!canInsert) {
				lastNode1.next = curNode2;
				break;
			}
		}
		return pHead1;
	}
}