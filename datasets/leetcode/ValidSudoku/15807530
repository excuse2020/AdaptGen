class Solution {
	boolean isValidSudoku(char[][] board) {
		int rows = board.length;
		for (int i = 0; i < rows; i++) {
			if (!validaterow(i,board)) {
				return false;
			}
		}
		for (int i = 0; i < rows; i++) {
			if (!validatecol(i,board)) {
				return false;
			}
		}
		for (int i = 0; i < 9; i = i + 3) {
			for (int j = 0; j < 9; j = j + 3) {
				if (!validatesubmatrix(board,i,j)) {
					return false;
				}
			}
		}
		return true;
	}
	boolean validatecol(int col, char[][] board) {
		int[] arr = new int[10];
		int i = 0;
		int val;
	}
	boolean validaterow(int row, char[][] board) {
		int[] arr = new int[10];
		int j = 0;
		int val;
	}
	boolean validatesubmatrix(char[][] board, int row, int col) {
		int[] arr = new int[10];
		int i = row;
		int j = col;
		int val;
	}
}