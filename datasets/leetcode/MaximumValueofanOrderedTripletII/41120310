class Solution {
	Map<Integer, Integer> getLeftMaxMap(int[] nums) {
		int max = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			max = Math.max(max,nums[i]);
			map.put(i,max);
		}
		return map;
	}
	Map<Integer, Integer> getRightMaxMap(int[] nums) {
		int max = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = nums.length - 1; i >= 0; i--) {
			max = Math.max(max,nums[i]);
			map.put(i,max);
		}
		return map;
	}
	long maximumTripletValue(int[] nums) {
		long max = 0;
		Map<Integer, Integer> rmaxMap = getRightMaxMap(nums);
		Map<Integer, Integer> lmaxMap = getLeftMaxMap(nums);
		for (int i = 1; i < nums.length - 1; i++) {
			max = Math.max(max,(lmaxMap.get(i - 1) - nums[i]) * (long) rmaxMap.get(i + 1));
		}
		return max;
	}
}