class Solution {
	TreeNode BST(int[] arr, int left, int right) {
		if (left > right) {
			return null;
		}
		int mid = left + (right - left) / 2;
		TreeNode root = new TreeNode(arr[mid]);
		root.left = BST(arr,left,mid - 1);
		root.right = BST(arr,mid + 1,right);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode curr = head;
		int size = 1;
		while (curr != null) {
			curr = curr.next;
			size++;
		}
		int i = 0;
		int[] arr = new int[size - 1];
		while (i < size && head != null) {
			arr[i++] = head.val;
			head = head.next;
		}
		if (arr.length == 0) {
			return new TreeNode();
		}
		return BST(arr,0,arr.length - 1);
	}
}