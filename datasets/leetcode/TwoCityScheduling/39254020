class Solution {
	int f(int costs, int i, int j, int dp) {
		if (i + j >= costs.length) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int take = Integer.MAX_VALUE;
		if (i < costs.length / 2) {
			take = costs[i + j][0] + f(costs,i + 1,j,dp);
		}
		int notTake = Integer.MAX_VALUE;
		if (j < costs.length / 2) {
			notTake = costs[i + j][1] + f(costs,i,j + 1,dp);
		}
		return dp[i][j] = Math.min(notTake,take);
	}
	int twoCitySchedCost(int[][] costs) {
		int dp = new int[costs.length][costs.length];
		for (int row: dp) {	
			Arrays.fill(row,-1);
		}
		return f(costs,0,0,dp);
	}
}