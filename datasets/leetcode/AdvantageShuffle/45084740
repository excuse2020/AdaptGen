class Solution {
	int[] advantageCount(int[] nums1, int[] nums2) {
		Arrays.sort(nums1);
		int[][] nums2Clone = new int[nums1.length][2];
		for (int i = 0; i < nums1.length; i++) {
			nums2Clone[i][0] = i;
			nums2Clone[i][1] = nums2[i];
		}
		Arrays.sort(nums2Clone,Comparator.comparingInt((a) -> {a[1]}));
		return swapNums(nums1,nums2Clone);
	}
	int[] swapNums(int[] nums1, int[][] nums2Clone) {
		int[] target = new int[nums1.length];
		Arrays.fill(target,-1);
		ArrayList<Integer> unused = new ArrayList<>();
		for (int i = 0, j = 0; i < nums1.length && j < nums2Clone.length; i++) {
			if (nums1[i] <= nums2Clone[j][1]) {
				unused.add(nums1[i]);
			} 
			else {
				target[nums2Clone[j][0]] = nums1[i];
				j++;
			}
		}
		for (int i = 0, j = 0; i < nums1.length && j < unused.size(); i++) {
			if (target[i] == -1) {
				target[i] = unused.get(j++);
			}
		}
		return target;
	}
}