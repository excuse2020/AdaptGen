class Solution {
	long firstSum(int[] nums, int n) {
		long sum = 0;
		int i = 0;
		while (n-- > 0) {
			sum = sum + nums[i++];
		}
		return sum;
	}
	long lastSum(int[] nums, int n) {
		long sum = 0;
		int i = nums.length - 1;
		while (n-- > 0) {
			sum = sum + nums[i--];
		}
		return sum;
	}
	int waysToSplitArray(int[] nums) {
		int n = nums.length - 1;
		int count = 0;
		long x = 0;
		long y = 0;
		x = firstSum(nums,1);
		y = lastSum(nums,n);
		if (x >= y) {
			count = 1;
		}
		for (int i = 1; i < n; i++) {
			x = x + nums[i];
			y = y - nums[i];
			if (x >= y) {
				count++;
			}
		}
		return count;
	}
}