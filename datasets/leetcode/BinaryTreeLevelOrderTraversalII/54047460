class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> list = new ArrayList<>();
		Queue<TreeNode> q = new LinkedList<>();
		if (root == null) {
			return list;
		}
		q.add(root);
		while (!q.isEmpty()) {
			List<Integer> inner = new ArrayList<>();
			int n = q.size();
			for (int i = 0; i < n; i++) {
				TreeNode removed = q.poll();
				inner.add(removed.val);
				if (removed.left != null) {
					q.add(removed.left);
				}
				if (removed.right != null) {
					q.add(removed.right);
				}
			}
			list.add(0,inner);
		}
		return list;
	}
}