class Solution {
	int help(int n) {
		int[] dp = new int[n + 1];
		dp[0] = 0;
		dp[1] = 0;
		for (int i = 2; i <= n; i++) {
			if (isprime(i)) {
				dp[i] = i;
			} 
			else {
				int idx = i - 1;
				while (i % idx != 0) {
					idx--;
				}
				int factor = i / idx;
				dp[i] = dp[idx] + factor;
			}
		}
		return dp[n];
	}
	boolean isprime(int n) {
		if (n == 2) {
			return true;
		}
		for (int i = 2; i <= Math.sqrt(n); i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int minSteps(int n) {
		return help(n);
	}
}