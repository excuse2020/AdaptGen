class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		if (size == 0) {
			ArrayList<Integer> arr0 = new ArrayList<>();
			return arr0;
		}
		Integer[] arr = new Integer[num.length - size + 1];
		for (int i = 0; i < num.length - size + 1; i++) {
			PriorityQueue<Integer> p1 = new PriorityQueue<>(new CustomComparator());
			for (int j = 0; j < size; j++) {
				p1.add(num[i + j]);
			}
			arr[i] = p1.peek();
		}
		ArrayList<Integer> newArr = new ArrayList<>();
		for (int i = 0; i < arr.length; i++) {
			newArr.add(arr[i]);
		}
		return newArr;
	}
	class CustomComparator {
		int compare(Integer number1, Integer number2) {
			int value = number1.compareTo(number2);
			if (value > 0) {
				return -1;
			} 
			else if (value < 0) {
				return 1;
			} 
			else {
				return 0;
			}
		}
	}
}