class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (m == n || m <= 0 || m > n) {
			return head;
		}
		ListNode newHead = new ListNode(1);
		newHead.next = head;
		ListNode beforeNode = newHead, endNode = head;
		for (int i = 1; i < m; i++) {
			beforeNode = beforeNode.next;
		}
		for (int i = 1; i <= n; i++) {
			endNode = endNode.next;
		}
		ListNode currentNode = beforeNode.next;
		ListNode afterNode = currentNode.next;
		beforeNode.next = endNode;
		for (int j = m; j <= n; j++) {
			currentNode.next = beforeNode.next;
			beforeNode.next = currentNode;
			currentNode = afterNode;
			if (currentNode == null) {
				break;
			}
			afterNode = afterNode.next;
		}
		return newHead.next;
	}
}