class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode root) {
		ArrayList<ArrayList<Integer>> mylists = new ArrayList<>();
		HashMap<TreeNode, Integer> mymap = new HashMap<>();
		if (root == null) {
			return mylists;
		}
		Deque<TreeNode> hyqueue = new ArrayDeque<>();
		hyqueue.addFirst(root);
		mymap.put(root,0);
		while (!hyqueue.isEmpty()) {
			root = hyqueue.pollLast();
			int deep = mymap.get(root);
			if (root.left != null) {
				hyqueue.addFirst(root.left);
				mymap.put(root.left,deep + 1);
			}
			if (root.right != null) {
				hyqueue.addFirst(root.right);
				mymap.put(root.right,deep + 1);
			}
			if (mylists.size() <= deep) {
				ArrayList<Integer> list = new ArrayList<>();
				list.add(root.val);
				mylists.add(list);
			} 
			else {
				ArrayList<Integer> list = mylists.get(deep);
				list.add(root.val);
			}
		}
		return mylists;
	}
}