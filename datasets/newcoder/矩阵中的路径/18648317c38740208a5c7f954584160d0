class Solution {
	boolean dfs(char[][] matrix, String word, int i, int j, int index) {
		if (i >= matrix.length || i < 0 || j >= matrix[0].length || j < 0 || matrix[i][j] != word.charAt(index)) {
			return false;
		}
		if (index == word.length() - 1) {
			return true;
		}
		char tmp = matrix[i][j];
		matrix[i][j] = '0';
		boolean result = dfs(matrix,word,i - 1,j,index + 1) || dfs(matrix,word,i + 1,j,index + 1);
		matrix[i][j] = tmp;
		return result;
	}
	boolean hasPath(char[][] matrix, String word) {
		int matrix_rows = matrix.length;
		int matrix_columns = matrix[0].length;
		for (int i = 0; i < matrix_rows; i++) {
			for (int j = 0; j < matrix_columns; j++) {
				if (dfs(matrix,word,i,j,0)) {
					return true;
				}
			}
		}
		return false;
	}
}