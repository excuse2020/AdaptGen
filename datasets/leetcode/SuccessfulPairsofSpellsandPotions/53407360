class Solution {
	int find(int[] potions, int spell, long success) {
		int left = 0;
		int right = potions.length - 1;
		int ans = potions.length;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			if ((long) spell * potions[mid] >= success) {
				ans = mid;
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return potions.length - ans;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int[] ans = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			ans[i] = find(potions,spells[i],success);
		}
		return ans;
	}
}