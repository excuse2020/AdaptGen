class Solution {
	ArrayList<String> Permutation(String str) {
		HashSet<String> set = new HashSet<>();
		strCombination(new StringBuilder(),set,str,new boolean[str.length()]);
		return new ArrayList<>(set);
	}
	void strCombination(StringBuilder sb, HashSet<String> set, String str, boolean[] flag) {
		if (sb.length() == str.length()) {
			set.add(sb.toString());
			return;
		}
		for (int i = 0; i < str.length(); i++) {
			if ((i > 0 && str.charAt(i) == str.charAt(i - 1) && flag[i - 1]) || flag[i]) {
				continue;
			}
			sb.append(str.charAt(i));
			flag[i] = true;
			strCombination(sb,set,str,flag);
			sb.deleteCharAt(sb.length() - 1);
			flag[i] = false;
		}
	}
}