class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		if (nums.length == 1) {
			if (nums[0] % 2 == 0 && nums[0] <= threshold) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		boolean f = false;
		int max = 0;
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0 && nums[i] <= threshold) {
				f = true;
				for (int j = i + 1; j < nums.length; j++) {
					if (nums[j] % 2 != nums[j - 1] % 2 && nums[j - 1] <= threshold && nums[j] <= threshold) {
						count++;
						max = Math.max(count,max);
					} 
					else {
						break;
					}
				}
			} 
			else {
				count = 0;
			}
		}
		if (f == true) {
			return max + 1;
		} 
		else {
			return 0;
		}
	}
}