class Solution {
	int minAbsoluteSumDiff(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int[] A = new int[n];
		A = Arrays.copyOfRange(nums1,0,n);
		Arrays.sort(A);
		long total = 0;
		for (int i = 0; i < n; i++) {
			total += Math.abs(nums1[i] - nums2[i]);
		}
		int diff, j, closest;
		long best_total = total, new_total;
		for (int i = 0; i < n; i++) {
			diff = Math.abs(nums1[i] - nums2[i]);
			j = Arrays.binarySearch(A,nums2[i]);
			if (j >= 0) {
				closest = A[j];
			} 
			else {
				j = -j - 1;
				if (j == 0) {
					closest = A[0];
				} 
				else if (j == n) {
					closest = A[n - 1];
				} 
				else {
					if (Math.abs(nums2[i] - A[j - 1]) < Math.abs(nums2[i] - A[j])) {
						closest = A[j - 1];
					} 
					else {
						closest = A[j];
					}
				}
			}
			new_total = total - diff + Math.abs(closest - nums2[i]);
			best_total = Math.min(best_total,new_total);
		}
		return (int) (best_total % (1000000007));
	}
}