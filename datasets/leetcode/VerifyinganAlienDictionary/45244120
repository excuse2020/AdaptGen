class Solution {
	boolean check(String str1, String str2, HashMap<Character, Integer> map) {
		int i = 0;
		int j = 0;
		while (i < str1.length() && j < str2.length()) {
			char ch1 = str1.charAt(i);
			char ch2 = str2.charAt(j);
			if (map.get(ch1) < map.get(ch2)) {
				return true;
			} 
			else if (map.get(ch1) > map.get(ch2)) {
				return false;
			}
			i++;
			j++;
		}
		if (str1.length() <= str2.length()) {
			return true;
		}
		return false;
	}
	boolean isAlienSorted(String[] words, String order) {
		HashMap<Character, Integer> map = new HashMap<>();
		for (int i = 0; i < order.length(); i++) {
			map.put(order.charAt(i),i + 1);
		}
		int m = 0;
		int n = 1;
		while (m < words.length && n < words.length) {
			String str1 = words[m];
			String str2 = words[n];
			boolean ans = check(str1,str2,map);
			if (ans == false) {
				return false;
			}
			m++;
			n++;
		}
		return true;
	}
}