class Solution {
	int falseIndex;
	StringBuffer addone(StringBuffer s, int k) {
		boolean flag = false;
		int start = s.length() - 1;
		if (falseIndex != -1 && falseIndex >= 0 && falseIndex < s.length()) {
			start = falseIndex;
		}
		int i = start;
	}
	boolean check(StringBuffer s) {
		if (s.length() < 2) {
			return false;
		}
		int f1 = s.length() - 1;
		int f2 = s.length() - 1;
		boolean flag = false;
		for (int i = 1; i < s.length(); i++) {
			if (s.charAt(i) == s.charAt(i - 1)) {
				f1 = i;
				flag = true;
				break;
			}
		}
		for (int i = 2; i < s.length(); i++) {
			if (s.charAt(i) == s.charAt(i - 2)) {
				f2 = i;
				flag = true;
				break;
			}
		}
		falseIndex = Math.min(f1,f2);
		return flag;
	}
	String smallestBeautifulString(String s, int k) {
		falseIndex = -1;
		StringBuffer ns = new StringBuffer(s);
		ns = addone(ns,k);
		while (check(ns)) {
			ns = addone(ns,k);
		}
		return ns.toString();
	}
}