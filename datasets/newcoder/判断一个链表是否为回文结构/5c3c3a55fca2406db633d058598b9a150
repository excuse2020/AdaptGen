class Solution {
	boolean isPail(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode fast = head, slow = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		if (fast != null) {
			slow = slow.next;
		}
		fast = head;
		ListNode reHead = reverse(slow);
		while (reHead != null) {
			if (reHead.val != fast.val) {
				return false;
			}
			reHead = reHead.next;
			fast = fast.next;
		}
		return true;
	}
	ListNode reverse(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode pre = null, cur = head;
		while (cur != null) {
			ListNode tmp = cur.next;
			cur.next = pre;
			pre = cur;
			cur = tmp;
		}
		return pre;
	}
}