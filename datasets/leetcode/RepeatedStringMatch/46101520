class Solution {
	int repeatedStringMatch(String a, String b) {
		List<Character> list1 = new ArrayList<>();
		for (int i = 0; i < a.length(); i++) {
			list1.add(a.charAt(i));
		}
		for (int i = 0; i < b.length(); i++) {
			if (!list1.contains(b.charAt(i))) {
				return -1;
			}
		}
		StringBuilder build = new StringBuilder("");
		int count = 0;
		if (a.length() >= b.length()) {
			while (!build.toString().contains(b) && build.toString().length() <= 2 * a.length()) {
				build.append(a);
				count++;
			}
		} 
		else if (b.length() >= a.length()) {
			while (!build.toString().contains(b) && build.toString().length() <= 2 * b.length()) {
				build.append(a);
				count++;
			}
		}
		if (build.toString().contains(b)) {
			return count;
		} 
		else {
			return -1;
		}
	}
}