class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		return solve(n);
	}
	List<TreeNode> solve(int n) {
		if (n % 2 == 0) {
			return (new ArrayList<>());
		}
		if (n == 1) {
			TreeNode root = new TreeNode(0);
			List<TreeNode> temp = new ArrayList<>();
			temp.add(root);
			return temp;
		}
		List<TreeNode> result = new ArrayList<>();
		for (int i = 1; i < n; i += 2) {
			List<TreeNode> leftAllFBT = solve(i);
			List<TreeNode> rightAllFBT = solve(n - i);
			for (TreeNode l: leftAllFBT) {	
				for (TreeNode r: rightAllFBT) {	
					TreeNode root = new TreeNode(0);
					root.left = l;
					root.right = r;
					result.add(root);
				}
			}
		}
		return result;
	}
}