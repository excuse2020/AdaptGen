class Solution {
	TreeNode mergeTrees(TreeNode t1, TreeNode t2) {
		return preOrder(t1,t2);
	}
	TreeNode preOrder(TreeNode t1, TreeNode t2) {
		if (t1 == null && t2 == null) {
			return null;
		}
		TreeNode root;
		int val = 0;
		if (t1 != null) {
			val += t1.val;
		}
		if (t2 != null) {
			val += t2.val;
		}
		root = new TreeNode(val);
		if (t1 != null && t2 != null) {
			root.left = preOrder(t1.left,t2.left);
			root.right = preOrder(t1.right,t2.right);
		} 
		else if (t1 == null) {
			root.left = preOrder(null,t2.left);
			root.right = preOrder(null,t2.right);
		} 
		else {
			root.left = preOrder(t1.left,null);
			root.right = preOrder(t1.right,null);
		}
		return root;
	}
}