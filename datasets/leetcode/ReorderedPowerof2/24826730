class Solution {
	boolean reorderedPowerOf2(int n) {
		int log = (int) (Math.log10(n));
		int[] digits = new int[10];
		while (n > 0) {
			digits[n % 10]++;
			n /= 10;
		}
		int i = 0;
		while (Math.pow(2,i) < Math.pow(10,log)) {
			i++;
		}
		while (Math.pow(2,i) < Math.pow(10,log + 1)) {
			int temp = (int) Math.pow(2,i);
			boolean flag = true;
			int[] cur = new int[10];
			while (flag && temp > 0) {
				cur[temp % 10]++;
				if (cur[temp % 10] > digits[temp % 10]) {
					flag = false;
				}
				temp /= 10;
			}
			if (flag) {
				return true;
			}
			i++;
		}
		return false;
	}
}