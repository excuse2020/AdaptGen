class Solution {
	int countSubarrays(int[] nums, int k) {
		int ind = 0;
		for (ind = 0; ind < nums.length; ind++) {
			if (nums[ind] == k) {
				break;
			}
		}
		Map<Integer, Integer> diffCount = new HashMap<>();
		int diff = 0;
		for (int i = ind; i < nums.length; i++) {
			if (nums[i] > k) {
				diff++;
			} 
			else if (nums[i] < k) {
				diff--;
			}
			diffCount.put(diff,diffCount.getOrDefault(diff,0) + 1);
		}
		int count = diffCount.get(0) + diffCount.getOrDefault(1,0);
		diff = 0;
		for (int i = ind - 1; i >= 0; i--) {
			if (nums[i] > k) {
				diff++;
			} 
			else if (nums[i] < k) {
				diff--;
			}
			count += diffCount.getOrDefault(-diff,0);
			count += diffCount.getOrDefault(1 - diff,0);
		}
		return count;
	}
}