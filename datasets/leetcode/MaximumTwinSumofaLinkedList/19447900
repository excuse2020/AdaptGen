class Solution {
	int pairSum(ListNode head) {
		int size = 0;
		ListNode curr = head;
		while (curr != null) {
			size++;
			curr = curr.next;
		}
		int[] twinSums = new int[size / 2];
		curr = head;
		int index = 0, count = 1;
		int maxTwinSum = Integer.MIN_VALUE;
		while (curr != null) {
			if (count <= size / 2) {
				twinSums[index] += curr.val;
				if (index + 1 < size / 2) {
					index++;
				}
			} 
			else {
				twinSums[index] += curr.val;
				maxTwinSum = Math.max(maxTwinSum,twinSums[index]);
				if (index - 1 >= 0) {
					index--;
				}
			}
			count++;
			curr = curr.next;
		}
		return maxTwinSum;
	}
}