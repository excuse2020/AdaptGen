class Solution {
	int helper(int n, int[] dp) {
		if (n <= 0) {
			return 0;
		}
		if (dp[n] != -1) {
			return dp[n];
		}
		for (int i = 1; i * i <= n; i++) {
			if (helper(n - i * i,dp) == 0) {
				return dp[n] = 1;
			}
		}
		return dp[n] = 0;
	}
	boolean winnerSquareGame(int n) {
		int[] dp = new int[n + 1];
		for (int i = 0; i <= n; i++) {
			dp[i] = -1;
		}
		return helper(n,dp) == 1;
	}
}
class Solution {
	boolean winnerSquareGame(int n) {
		int[] dp = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j * j <= i; j++) {
				if (dp[i - j * j] == 0) {
					dp[i] = 1;
					break;
				}
			}
		}
		return dp[n] == 1;
	}
}