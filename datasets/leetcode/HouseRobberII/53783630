class Solution {
	int helper(int nums) {
		int prev2 = 0;
		int prev = nums[0];
		for (int i = 1; i < nums.length; i++) {
			int pick = nums[i];
			if (i > 1) {
				pick = pick + prev2;
			}
			int notPick = prev;
			int curr = Math.max(pick,notPick);
			prev2 = prev;
			prev = curr;
		}
		return prev;
	}
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int temp1 = new int[nums.length - 1];
		int temp2 = new int[nums.length - 1];
		for (int i = 0; i < nums.length; i++) {
			if (i != 0) {
				temp1[i - 1] = nums[i];
			}
			if (i != nums.length - 1) {
				temp2[i] = nums[i];
			}
		}
		int leftArr = helper(temp1);
		int rightArr = helper(temp2);
		return Math.max(leftArr,rightArr);
	}
}