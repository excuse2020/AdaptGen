class Solution {
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (isCoPrime(firstDigit(nums[i]),lastDigit(nums[j])) == 1) {
					count++;
				}
			}
		}
		return count;
	}
	int firstDigit(int num) {
		while (num >= 10) {
			num /= 10;
		}
		return num;
	}
	int isCoPrime(int a, int b) {
		if (a == 0 || b == 0) {
			return 0;
		}
		if (a == b) {
			return a;
		}
		if (a > b) {
			return isCoPrime(a - b,b);
		}
		return isCoPrime(a,b - a);
	}
	int lastDigit(int num) {
		return num % 10;
	}
}