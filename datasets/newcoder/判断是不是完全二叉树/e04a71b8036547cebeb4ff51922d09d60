class Solution {
	boolean flag = false;
	boolean isCompleteTree(TreeNode root) {
		if (root == null) {
			return true;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.offer(root);
		while (!q.isEmpty()) {
			TreeNode node = q.poll();
			TreeNode left = node.left;
			TreeNode right = node.right;
			if ((flag && !(left == null && right == null)) || (left == null && right != null)) {
				return false;
			}
			if (left == null || right == null) {
				flag = true;
			}
			if (left != null) {
				q.offer(left);
			}
			if (right != null) {
				q.offer(right);
			}
		}
		return true;
	}
}