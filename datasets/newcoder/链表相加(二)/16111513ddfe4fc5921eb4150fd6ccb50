class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<ListNode> s1 = new Stack<>();
		Stack<ListNode> s2 = new Stack<>();
		ListNode c1 = head1;
		ListNode c2 = head2;
		ListNode head = new ListNode(-1);
		while (c1 != null) {
			s1.push(c1);
			c1 = c1.next;
		}
		while (c2 != null) {
			s2.push(c2);
			c2 = c2.next;
		}
		int result = 0;
		while (!s1.empty() || !s2.empty()) {
			int a = 0, b = 0;
			if (!s1.empty()) {
				a = s1.pop().val;
			}
			if (!s2.empty()) {
				b = s2.pop().val;
			}
			int sum = a + b;
			result = sum / 10;
			int val = sum % 10;
			ListNode cur = new ListNode(val);
			ListNode temp = head.next;
			head.next = cur;
			head.next.next = temp;
		}
		if (result == 1) {
			ListNode temp = head.next;
			ListNode cur = new ListNode(1);
			head.next = cur;
			head.next.next = temp;
		}
		return head.next;
	}
}