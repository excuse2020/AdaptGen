class Solution {
	boolean isValidColumn(char[][] board, int col) {
		Set<Character> seen = new HashSet<>();
		int i = 0;
		char current = board[i][col];
	}
	boolean isValidRow(char[][] board, int row) {
		Set<Character> seen = new HashSet<>();
		int j = 0;
		char current = board[row][j];
	}
	boolean isValidSubGrid(char[][] board, int startRow, int startCol) {
		Set<Character> seen = new HashSet<>();
		int i = startRow;
		int j = startCol;
		char current = board[i][j];
	}
	boolean isValidSudoku(char[][] board) {
		for (int i = 0; i < 9; i++) {
			if (!isValidRow(board,i)) {
				return false;
			}
		}
		for (int j = 0; j < 9; j++) {
			if (!isValidColumn(board,j)) {
				return false;
			}
		}
		for (int i = 0; i < 9; i += 3) {
			for (int j = 0; j < 9; j += 3) {
				if (!isValidSubGrid(board,i,j)) {
					return false;
				}
			}
		}
		return true;
	}
}