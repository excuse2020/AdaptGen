class Solution {
	int minimumRightShifts(List<Integer> nums) {
		int n = nums.size();
		boolean getD = false;
		int max = 0;
		int dec_i = -1;
		for (int i = 0; i < n - 1; i++) {
			if (!getD) {
				max = Math.max(max,nums.get(i));
				if (nums.get(i) - nums.get(i + 1) > 0) {
					getD = true;
				}
				dec_i = i + 1;
			} 
			else {
				if (nums.get(i) - nums.get(i + 1) > 0 || nums.get(i + 1) > max) {
					return -1;
				}
			}
		}
		return !getD ? 0 : n - dec_i;
	}
}