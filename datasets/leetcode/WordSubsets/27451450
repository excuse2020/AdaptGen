class Solution {
	List<String> wordSubsets(String[] words1, String[] words2) {
		List<String> list = new ArrayList<>();
		Map<Character, Integer> map1 = new HashMap<>();
		Map<String, Map<Character, Integer>> map2 = new HashMap<>();
		for (String word: words2) {	
			Map<Character, Integer> nest = new HashMap<>();
			for (char c: word.toCharArray()) {	
				nest.put(c,nest.getOrDefault(c,0) + 1);
			}
			map2.put(word,nest);
		}
		System.out.println(map2);
		for (String word: words1) {	
			boolean flag = false;
			for (char c: word.toCharArray()) {	
				map1.put(c,map1.getOrDefault(c,0) + 1);
			}
			for (String key: words2) {	
				for (Map.Entry<Character, Integer> entry: map2.get(key).entrySet()) {	
					int temp = entry.getValue();
					if (!map1.containsKey(entry.getKey()) || (map1.containsKey(entry.getKey()) && map1.get(entry.getKey()) < temp)) {
						flag = true;
						break;
					}
				}
			}
			map1.clear();
			if (!flag) {
				list.add(word);
			}
		}
		return list;
	}
}