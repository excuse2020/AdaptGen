class Solution {
	int numSplits(String s) {
		if (s.length() == 1) {
			return 0;
		}
		if (s.length() == 2) {
			return 1;
		}
		int ans = 0, leftdis = 1, rightdis = 0;
		Map<Character, Integer> left = new HashMap<>();
		Map<Character, Integer> right = new HashMap<>();
		left.put(s.charAt(0),1);
		for (int i = 1; i < s.length(); i++) {
			right.put(s.charAt(i),right.getOrDefault(s.charAt(i),0) + 1);
		}
		rightdis = right.size();
		if (leftdis == rightdis) {
			ans++;
		}
		for (int i = 1; i < s.length() - 1; i++) {
			char ch = s.charAt(i);
			if (!left.containsKey(ch)) {
				leftdis++;
			}
			left.put(ch,left.getOrDefault(ch,0) + 1);
			right.put(ch,right.get(ch) - 1);
			if (right.get(ch) == 0) {
				right.remove(ch);
				rightdis--;
			}
			if (leftdis == rightdis) {
				ans++;
			}
		}
		return ans;
	}
}