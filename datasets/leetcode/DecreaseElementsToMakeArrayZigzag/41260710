class Solution {
	int evenGreater(int[] nums) {
		int even = 0;
		int odd = 1;
		int answer = 0;
		while (even < nums.length && odd < nums.length) {
			if (nums[even] <= nums[odd]) {
				answer += (nums[odd] - nums[even]) + 1;
				nums[odd] = nums[even] - 1;
			}
			if (even < odd) {
				even += 2;
			} 
			else if (even > odd) {
				odd += 2;
			}
		}
		return answer;
	}
	int movesToMakeZigzag(int[] nums) {
		int even = 0;
		int odd = 1;
		if (nums.length == 1) {
			return 0;
		}
		int[] num1 = new int[nums.length];
		for (int i = 0; i < num1.length; i++) {
			num1[i] = nums[i];
		}
		int a = evenGreater(nums);
		int b = oddGreater(num1);
		return a > b ? b : a;
	}
	int oddGreater(int[] nums) {
		int even = 0;
		int odd = 1;
		int answer = 0;
		while (even < nums.length && odd < nums.length) {
			if (nums[even] >= nums[odd]) {
				answer += (nums[even] - nums[odd]) + 1;
				nums[even] = nums[odd] - 1;
			}
			if (even < odd) {
				even += 2;
			} 
			else if (even > odd) {
				odd += 2;
			}
		}
		return answer;
	}
}