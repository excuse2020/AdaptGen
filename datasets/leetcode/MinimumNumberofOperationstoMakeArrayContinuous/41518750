class Solution {
	int minOperations(int[] nums) {
		int ans = Integer.MAX_VALUE;
		int n = nums.length;
		List<Integer> uniqueArr = Arrays.stream(nums).boxed().distinct().sorted().collect(Collectors.toList());
		int end = 0;
		int maxSlidingWindowLen = Integer.MIN_VALUE;
		for (int start = 0; start < uniqueArr.size(); start++) {
			while (end < uniqueArr.size() && uniqueArr.get(end) < uniqueArr.get(start) + nums.length) {
				end++;
			}
			maxSlidingWindowLen = Math.max(maxSlidingWindowLen,end - start);
		}
		return n - maxSlidingWindowLen;
	}
}