class Solution {
	long countBadPairs(int[] nums) {
		long n = nums.length;
		long totalCount = n * (n - 1) / 2;
		long pans = 0;
		long count = 0;
		HashMap<Integer, Integer> hm = new HashMap<>();
		for (int i = 0; i < n; i++) {
			hm.put(i - nums[i],hm.getOrDefault(i - nums[i],0) + 1);
		}
		for (int key: hm.keySet()) {	
			count = hm.get(key);
			pans += (count * (count - 1)) / 2;
		}
		return (long) (totalCount - pans);
	}
}