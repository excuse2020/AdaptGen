class Solution {
	int[] concat(int[] nums1, int[] nums2) {
		int n1 = nums1.length;
		int n2 = nums2.length;
		int[] result = new int[n1 + n2];
		System.arraycopy(nums1,0,result,0,n1);
		System.arraycopy(nums2,0,result,n1,n2);
		return result;
	}
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int[] arr = concat(nums1,nums2);
		Arrays.sort(arr);
		int n = arr.length;
		double[] darr = new double[n];
		for (int i = 0; i < n; i++) {
			darr[i] = (double) arr[i];
		}
		double ans = 0.0;
		if (n % 2 == 0) {
			int mid = (n - 1) / 2;
			ans = (darr[mid] + darr[mid + 1]) / 2;
		} 
		else if (n % 2 != 0) {
			int mid = 0 + ((n - 1) - 0) / 2;
			ans = darr[mid];
		}
		return ans;
	}
}