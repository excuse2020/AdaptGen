class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		queue.offer(root);
		while (!queue.isEmpty()) {
			int len = queue.size();
			List<Integer> list = new ArrayList<>();
			for (int i = 0; i < len; i++) {
				TreeNode current = queue.poll();
				list.add(current.val);
				if (current.left != null) {
					queue.offer(current.left);
				}
				if (current.right != null) {
					queue.offer(current.right);
				}
			}
			result.add(0,list);
		}
		return result;
	}
}