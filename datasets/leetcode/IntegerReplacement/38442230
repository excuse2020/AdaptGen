class Solution {
	int integerReplacement(int n) {
		return recursion((long) n,new HashMap<>());
	}
	int recursion(long n, HashMap<Long, Integer> dp) {
		if (n == 1) {
			return 0;
		}
		if (n < 1) {
			return Integer.MAX_VALUE;
		}
		if (dp.containsKey(n)) {
			return dp.get(n);
		}
		int curr = 0;
		if (n % 2 == 0) {
			curr = 1 + recursion(n / 2,dp);
		} 
		else {
			curr = 1 + Math.min(recursion(n - 1,dp),recursion(n + 1,dp));
		}
		dp.put(n,curr);
		return curr;
	}
}