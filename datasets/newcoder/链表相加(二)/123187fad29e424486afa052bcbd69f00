class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null && head2 == null) {
			return null;
		}
		Stack<Integer> stack1 = push(head1);
		Stack<Integer> stack2 = push(head2);
		ListNode newNode = null;
		ListNode head = null;
		int carry = 0;
		while (!stack1.isEmpty() || !stack2.isEmpty()) {
			int val1 = stack1.isEmpty() ? 0 : stack1.pop();
			int val2 = stack2.isEmpty() ? 0 : stack2.pop();
			int temp = val1 + val2;
			carry = temp / 10;
			temp = temp % 10;
			newNode = new ListNode(temp);
			newNode.next = head;
			head = newNode;
		}
		return head;
	}
	Stack<Integer> push(ListNode head) {
		Stack<Integer> stack = new Stack();
		while (head != null) {
			stack.push(head.val);
			head = head.next;
		}
		return stack;
	}
}