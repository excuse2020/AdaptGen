class Solution {
	int[][] matrixBlockSum(int[][] mat, int k) {
		int ans = new int[mat.length][mat[0].length];
		for (int i = 0; i < mat.length; i++) {
			for (int j = 0; j < mat[0].length; j++) {
				int is = i - k >= 0 ? i - k : 0;
				int ie = i + k < mat.length ? i + k : mat.length - 1;
				int js = j - k >= 0 ? j - k : 0;
				int je = j + k < mat[0].length ? j + k : mat[0].length - 1;
				ans[i][j] = sumIt(mat,is,ie,js,je);
			}
		}
		return ans;
	}
	int sumIt(int[][] mat, int is, int ie, int js, int je) {
		int sum = 0;
		for (int i = is; i <= ie; i++) {
			for (int j = js; j <= je; j++) {
				sum += mat[i][j];
			}
		}
		return sum;
	}
}