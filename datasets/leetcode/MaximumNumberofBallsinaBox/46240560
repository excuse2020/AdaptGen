class Solution {
	int countBalls(int lowLimit, int highLimit) {
		int[] sum_of_digit = new int[highLimit - lowLimit + 2];
		for (int i = lowLimit; i <= highLimit; i++) {
			int v = find_sum_of_digits(i);
			sum_of_digit[i - lowLimit + 1] = v;
		}
		Map<Integer, Integer> mappings = new HashMap<>();
		for (int i: sum_of_digit) {	
			mappings.put(i,mappings.getOrDefault(i,0) + 1);
		}
		int max = 0;
		for (Map.Entry<Integer, Integer> ent: mappings.entrySet()) {	
			if (ent.getValue() > max) {
				max = ent.getValue();
			}
		}
		return max;
	}
	int find_sum_of_digits(int num) {
		int ans = 0;
		for (int i = num; i > 0; i /= 10) {
			ans += i % 10;
		}
		return ans;
	}
}