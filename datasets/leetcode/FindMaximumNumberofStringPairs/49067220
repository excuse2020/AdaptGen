class Solution {
	String getReverse(String word) {
		StringBuilder sb = new StringBuilder();
		char[] c = word.toCharArray();
		for (int i = c.length - 1; i >= 0; i--) {
			sb.append(c[i]);
		}
		return sb.toString();
	}
	int maximumNumberOfStringPairs(String[] words) {
		int count = 0;
		Map<String, Integer> map = new HashMap<>();
		for (String word: words) {	
			if (map.containsKey(word)) {
				map.put(word,map.getOrDefault(word,0) + 1);
			} 
			else if (map.containsKey(getReverse(word))) {
				map.put(getReverse(word),map.getOrDefault(getReverse(word),0) + 1);
			} 
			else {
				map.put(word,1);
			}
		}
		for (Map.Entry<String, Integer> ent: map.entrySet()) {	
			if (ent.getValue().equals(2)) {
				count++;
			}
		}
		return count;
	}
}