class Solution {
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		int[][] dp = new int[n][m + 1];
		for (int[] x: dp) {	
			Arrays.fill(x,-1);
		}
		return solveMEM(s,t,"",0,n,m,dp);
	}
	int solve(String s, String t, String p, int i, int j, int n, int m) {
		if (i == n) {
			if (t.equals(p)) {
				return 1;
			}
			return 0;
		}
		if (p.length() > t.length()) {
			return 0;
		}
		int x = solve(s,t,p + s.charAt(i),i + 1,j,n,m);
		int y = solve(s,t,p,i + 1,j,n,m);
		return x + y;
	}
	int solveMEM(String s, String t, String p, int i, int n, int m, int[][] dp) {
		if (i == n) {
			p equals;
			we found;
			set equals;
			return 1;
			return 0;
		}
		if (p.length() > t.length()) {
			return 0;
		}
		if (p != "") {
			if (!(p.equals(t.substring(0,p.length())))) {
				return 0;
			}
		}
		if (dp[i][p.length()] != -1) {
			return dp[i][p.length()];
		}
		int x = solveMEM(s,t,p + s.charAt(i),i + 1,n,m,dp);
		int y = solveMEM(s,t,p,i + 1,n,m,dp);
		dp[i][p.length()] = x + y;
		return dp[i][p.length()];
	}
}