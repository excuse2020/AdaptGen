class Solution {
	ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> list = new ArrayList<Integer>();
		boolean[] visited = new boolean[num.length];
		if (num == null || num.length <= 0) {
			return null;
		}
		Arrays.sort(num);
		dfs(num,visited,target,0,list,result);
		return result;
	}
	void dfs(int[] num, boolean[] visited, int diff, int start, ArrayList<Integer> list, ArrayList<ArrayList<Integer>> result) {
	}
}