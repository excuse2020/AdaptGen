class Solution {
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int largest = 1;
		for (int i: potions) {	
			largest = Math.max(i,largest);
		}
		int[] freq = new int[largest + 1];
		int n1 = spells.length, n2 = potions.length;
		long maxi = -1;
		for (int i = 0; i < n2; i++) {
			freq[potions[i]]++;
			maxi = Math.max(maxi,potions[i]);
		}
		int s = 0;
		for (int i = (int) (maxi); i >= 0; i--) {
			s += freq[i];
			freq[i] = s;
		}
		long x;
		for (int i = 0; i < n1; i++) {
			x = (spells[i] - 1 + success) / spells[i];
			if (x > maxi) {
				spells[i] = 0;
			} 
			else {
				spells[i] = freq[(int)x];
			}
		}
		return spells;
	}
}