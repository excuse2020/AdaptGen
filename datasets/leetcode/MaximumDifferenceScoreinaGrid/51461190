class Solution {
	int maxScore(List<List<Integer>> grid) {
		int m = grid.size();
		int n = grid.get(0).size();
		int dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				dp[i][j] = Integer.MIN_VALUE;
			}
		}
		int result = Integer.MIN_VALUE;
		for (int i = m - 1; i >= 0; i--) {
			for (int j = n - 1; j >= 0; j--) {
				if (i + 1 < m) {
					int diff = grid.get(i + 1).get(j) - grid.get(i).get(j);
					if (dp[i + 1][j] != Integer.MIN_VALUE) {
						dp[i][j] = Math.max(dp[i][j],diff + dp[i + 1][j]);
					}
					dp[i][j] = Math.max(dp[i][j],diff);
				}
				if (j + 1 < n) {
					int diff = grid.get(i).get(j + 1) - grid.get(i).get(j);
					if (dp[i][j + 1] != Integer.MIN_VALUE) {
						dp[i][j] = Math.max(dp[i][j],diff + dp[i][j + 1]);
					}
					dp[i][j] = Math.max(dp[i][j],diff);
				}
				result = Math.max(result,dp[i][j]);
			}
		}
		return result;
	}
}