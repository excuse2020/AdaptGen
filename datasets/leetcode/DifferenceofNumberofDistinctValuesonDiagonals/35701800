class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int[][] result = new int[grid.length][grid[0].length];
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				result[i][j] = getCount(grid,i,j);
			}
		}
		return result;
	}
	int getCount(int[][] grid, int initialRow, int initialCol) {
		Set<Integer> topLeftSet = new HashSet<>();
		Set<Integer> bottomRightSet = new HashSet<>();
		int row = initialRow - 1;
		int col = initialCol - 1;
		while (row >= 0 && col >= 0) {
			topLeftSet.add(grid[row][col]);
			row--;
			col--;
		}
		row = initialRow + 1;
		col = initialCol + 1;
		while (row < grid.length && col < grid[0].length) {
			bottomRightSet.add(grid[row][col]);
			row++;
			col++;
		}
		return Math.abs(topLeftSet.size() - bottomRightSet.size());
	}
}