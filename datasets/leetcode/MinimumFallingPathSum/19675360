class Solution {
	int minFallingPathSum(int[][] matrix) {
		int n = matrix.length, res = Integer.MAX_VALUE;
		int[][] dp = new int[n][n];
		for (int i = n - 1; i >= 0; i--) {
			for (int j = 0; j < n; j++) {
				if (i == n - 1) {
					dp[i][j] = matrix[i][j];
				} 
				else if (j == 0) {
					dp[i][j] = matrix[i][j] + Math.min(dp[i + 1][j],dp[i + 1][j + 1]);
				} 
				else if (j == matrix[0].length - 1) {
					dp[i][j] = matrix[i][j] + Math.min(dp[i + 1][j],dp[i + 1][j - 1]);
				} 
				else {
					dp[i][j] = matrix[i][j] + Math.min(dp[i + 1][j],Math.min(dp[i + 1][j + 1],dp[i + 1][j - 1]));
				}
				if (i == 0) {
					res = Math.min(res,dp[i][j]);
				}
			}
		}
		return res;
	}
}