class Solution {
	int maxFreq(String s, int maxLetters, int minSize, int maxSize) {
		int maxSubSize = 0;
		HashMap<String, Integer> map = new HashMap<>();
		for (int i = 0; i + minSize <= s.length(); i++) {
			HashSet<Character> characters = new LinkedHashSet<>();
			String temp = s.substring(i,i + minSize);
			for (int j = 0; j < temp.toCharArray().length; j++) {
				characters.add(temp.charAt(j));
			}
			if (characters.size() <= maxLetters) {
				map.put(temp,map.getOrDefault(temp,0) + 1);
			}
			if (map.get(temp) != null && map.get(temp) > maxSubSize) {
				maxSubSize = map.get(temp);
			}
		}
		return maxSubSize;
	}
}