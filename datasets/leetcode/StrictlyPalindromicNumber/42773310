class Solution {
	boolean isPalindrome(StringBuilder j) {
		int start = 0;
		int end = j.length() - 1;
		while (start < end) {
			if (Integer.parseInt(String.valueOf(j.charAt(start))) != Integer.parseInt(String.valueOf(j.charAt(end)))) {
				return false;
			}
			start++;
			end--;
		}
		return true;
	}
	boolean isStrictlyPalindromic(int n) {
		StringBuilder a = toBinary(n);
		int w = a.length();
		int q = 0;
		StringBuilder c = null;
		while (w >= 0) {
			c = new StringBuilder(a.substring(0,a.length() - q));
			if (isPalindrome(c)) {
				w--;
			} 
			else {
				return false;
			}
			q++;
		}
		return !Objects.requireNonNull(c).isEmpty();
	}
	StringBuilder toBinary(int n) {
		StringBuilder name = new StringBuilder();
		int temp = n;
		while (temp != 0) {
			name.append(temp % 2);
			temp = temp / 2;
		}
		return name.reverse();
	}
}