class Solution {
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int prefix1 = new int[n + 1];
		prefix1[0] = 0;
		for (int i = 1; i <= n; i++) {
			prefix1[i] = prefix1[i - 1] + nums1[i - 1];
		}
		int prefix2 = new int[n + 1];
		prefix2[0] = 0;
		for (int i = 1; i <= n; i++) {
			prefix2[i] = prefix2[i - 1] + nums2[i - 1];
		}
		int minA = 0, minB = 0;
		int diff1 = new int[n + 1];
		int diff2 = new int[n + 1];
		diff1[0] = prefix1[n];
		diff2[0] = prefix2[n];
		for (int i = 1; i <= n; i++) {
			int temp1 = prefix2[i] - prefix1[i];
			diff1[i] = prefix1[n] + temp1 - minA;
			minA = Math.min(minA,temp1);
			int temp2 = prefix1[i] - prefix2[i];
			diff2[i] = prefix2[n] + temp2 - minB;
			minB = Math.min(minB,temp2);
		}
		int ans = 0;
		for (int i = 0; i <= n; i++) {
			ans = Math.max(ans,diff1[i]);
			ans = Math.max(ans,diff2[i]);
		}
		return ans;
	}
}