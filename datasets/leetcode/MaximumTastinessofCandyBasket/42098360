class Solution {
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int low = 1, high = price[price.length - 1] - price[0];
		while (low <= high) {
			int mid = (low + high) / 2;
			if (validTaste(price,k,mid)) {
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return high;
	}
	boolean validTaste(int[] price, int k, int mid) {
		int candie = 1, lastCandie = price[0];
		for (int i = 1; i < price.length; i++) {
			if (price[i] - lastCandie >= mid) {
				lastCandie = price[i];
				candie += 1;
				if (candie == k) {
					return true;
				}
			}
		}
		return false;
	}
}