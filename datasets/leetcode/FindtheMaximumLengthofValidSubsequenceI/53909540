class Solution {
	int maximumLength(int[] nums) {
		int even = 0;
		int odd = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0) {
				even++;
			} 
			else {
				odd++;
			}
		}
		int startWithOdd = 0;
		boolean prev = true;
		for (int i = 0; i < nums.length; i++) {
			if (prev && nums[i] % 2 != 0) {
				startWithOdd++;
				prev = !prev;
			} 
			else if (!prev && nums[i] % 2 == 0) {
				startWithOdd++;
				prev = !prev;
			}
		}
		int startWithEven = 0;
		prev = false;
		for (int i = 0; i < nums.length; i++) {
			if (prev && nums[i] % 2 != 0) {
				startWithEven++;
				prev = !prev;
			} 
			else if (!prev && nums[i] % 2 == 0) {
				startWithEven++;
				prev = !prev;
			}
		}
		return Math.max(even,Math.max(odd,Math.max(startWithEven,startWithOdd)));
	}
}