class Solution {
	ListNode ReverseList(ListNode head) {
		List<ListNode> arr = new ArrayList<ListNode>();
		buildArr(arr,head);
		if (arr.size() >= 1) {
			List<ListNode> reverseArr = new ArrayList<ListNode>();
			for (int i = arr.size() - 1; i >= 0; i--) {
				ListNode node = arr.get(i);
				ListNode reverseNode = new ListNode(node.val);
				reverseArr.add(reverseNode);
			}
			Iterator<ListNode> it = reverseArr.iterator();
			int count = 1;
			while (it.hasNext()) {
				ListNode node = it.next();
				if (count < reverseArr.size()) {
					node.next = reverseArr.get(count);
				}
				count++;
			}
			return reverseArr.get(0);
		}
		return null;
	}
	void buildArr(List<ListNode> arr, ListNode head) {
		if (head != null) {
			arr.add(head);
			if (head.next != null) {
				buildArr(arr,head.next);
			}
		}
	}
}