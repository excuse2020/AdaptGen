class Solution {
	List<TreeNode> ordered = new ArrayList<>();
	TreeNode balanceBST(TreeNode root) {
		inOrder(root);
		return bst(0,ordered.size() - 1);
	}
	TreeNode bst(int start, int end) {
		if (start > end) {
			return null;
		} 
		else if (start == end) {
			TreeNode ret = ordered.get(start);
			ret.left = null;
			ret.right = null;
			return ret;
		} 
		else {
			int mid = start + (end - start) / 2;
			TreeNode ret = ordered.get(mid);
			ret.left = bst(start,mid - 1);
			ret.right = bst(mid + 1,end);
			return ret;
		}
	}
	void inOrder(TreeNode node) {
		if (node == null) {
			return;
		}
		inOrder(node.left);
		ordered.add(node);
		inOrder(node.right);
	}
}