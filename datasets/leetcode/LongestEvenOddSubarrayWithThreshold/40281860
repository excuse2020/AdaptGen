class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int count = 0;
		if (nums.length == 1 && nums[0] <= threshold && nums[0] % 2 == 0) {
			return 1;
		} 
		else if (nums.length == 1) {
			return 0;
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0 && nums[i] <= threshold) {
				int j = i + 1;
				for (j = i + 1; j < nums.length; j++) {
					if (nums[j] % 2 == nums[j - 1] % 2) {
						break;
					}
					if (nums[j] > threshold) {
						break;
					}
				}
				if (j == nums.length) {
					count = Math.max(count,j - i);
				} 
				else if (nums[j] > threshold || nums[j] % 2 == nums[j - 1] % 2) {
					count = Math.max(count,j - i);
				}
			}
		}
		return count;
	}
}