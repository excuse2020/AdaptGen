class Solution {
	int[][] dp;
	int minCost(int n, int[] cuts) {
		Arrays.sort(cuts);
		int[] temp = new int[cuts.length + 2];
		for (int i = 0; i < cuts.length; i++) {
			temp[i + 1] = cuts[i];
		}
		temp[temp.length - 1] = n;
		dp = new int[temp.length][temp.length];
		for (int start = temp.length - 2; start >= 1; start--) {
			for (int end = start; end < temp.length - 1; end++) {
				int ans = Integer.MAX_VALUE;
				for (int i = start; i <= end; i++) {
					ans = Math.min(ans,(temp[end + 1] - temp[start - 1]) + dp[start][i - 1]);
				}
				dp[start][end] = ans;
			}
		}
		return dp[1][temp.length - 2];
	}
}