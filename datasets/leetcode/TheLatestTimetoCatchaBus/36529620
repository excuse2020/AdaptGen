class Solution {
	int latestTimeCatchTheBus(int[] buses, int[] passengers, int capacity) {
		Arrays.sort(buses);
		Arrays.sort(passengers);
		int p = 0, c = 0;
		for (int bus: buses) {	
			c = 0;
			while (c < capacity && p < passengers.length && passengers[p] <= bus) {
				p++;
				c++;
			}
		}
		System.out.println(p + " ");
		int cutOff;
		if (c < capacity) {
			cutOff = buses[buses.length - 1];
		} 
		else {
			cutOff = passengers[p - 1];
		}
		Set<Integer> pass = new HashSet<>();
		for (int pas: passengers) {	
			pass.add(pas);
		}
		while (cutOff >= 2) {
			if (!pass.contains(cutOff)) {
				return cutOff;
			}
			cutOff--;
		}
		return passengers[0] - 1;
	}
}