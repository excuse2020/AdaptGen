class Solution {
	int lowestCommonAncestor(TreeNode root, int o1, int o2) {
		return traverse(root,o1,o2).val;
	}
	TreeNode traverse(TreeNode tree, int o1, int o2) {
		if (tree == null) {
			return null;
		}
		boolean found = false;
		if (tree.val == o1 || tree.val == o2) {
			found = true;
		}
		TreeNode p1 = traverse(tree.left,o1,o2);
		TreeNode p2 = traverse(tree.right,o1,o2);
		if (p1 != null && p2 != null) {
			return tree;
		}
		if ((p1 != null || p2 != null) && found) {
			return tree;
		}
		if (found) {
			return tree;
		}
		return p1 != null ? p1 : p2;
	}
}