class Solution {
	int gcd(int num1, int num2) {
		if (num1 % num2 == 0) {
			return num2;
		} 
		else {
			return gcd(num2,num1 % num2);
		}
	}
	boolean hasGroupsSizeX(int[] deck) {
		int n = deck.length;
		if (n == 1) {
			return false;
		}
		HashMap<Integer, Integer> mp = new HashMap<>();
		for (int i = 0; i < n; i++) {
			if (mp.containsKey(deck[i])) {
				mp.put(deck[i],mp.get(deck[i]) + 1);
			} 
			else {
				mp.put(deck[i],1);
			}
		}
		int n1 = mp.get(deck[0]);
		if (n1 == 1) {
			return false;
		}
		for (int itr: mp.keySet()) {	
			if (gcd(n1,mp.get(itr)) == 1) {
				return false;
			}
			n1 = gcd(n1,mp.get(itr));
		}
		return true;
	}
}