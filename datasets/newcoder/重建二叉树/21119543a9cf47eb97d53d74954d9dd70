class Solution {
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		TreeNode node = null;
		if (pre == null || pre.length == 0) {
			return null;
		}
		node = new TreeNode(pre[0]);
		if (pre.length == 1) {
			return node;
		} 
		else {
			int index = -1;
			for (int i = 0; i < vin.length; i++) {
				if (vin[i] == pre[0]) {
					index = i;
					break;
				}
			}
			node.left = reConstructBinaryTree(Arrays.copyOfRange(pre,1,1 + index),Arrays.copyOfRange(vin,0,index));
			node.right = reConstructBinaryTree(Arrays.copyOfRange(pre,1 + index,pre.length),Arrays.copyOfRange(vin,index + 1,vin.length));
		}
		return node;
	}
}