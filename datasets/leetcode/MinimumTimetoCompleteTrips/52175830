class Solution {
	boolean isPossible(int[] arr, int totalTrips, long mid) {
		long trips = 0;
		for (int i: arr) {	
			trips += mid / i;
			if (trips >= totalTrips) {
				return true;
			}
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		long low = 1;
		long high = (long) totalTrips * time[0];
		long ans = 0;
		if (time.length == 1) {
			return high;
		}
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (isPossible(time,totalTrips,mid) == true) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}