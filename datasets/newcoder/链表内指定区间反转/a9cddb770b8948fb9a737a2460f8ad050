class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (m == n) {
			return head;
		}
		ListNode tmp = head;
		ListNode head1 = null;
		ListNode tail = null;
		ListNode pre = null;
		ListNode cur;
		ListNode next;
		int index = 1;
		while (tmp != null) {
			if (index == m - 1) {
				head1 = tmp;
				tmp = tmp.next;
			} 
			else if (index == m) {
				tail = tmp;
				cur = tmp;
				next = tmp.next;
				cur.next = pre;
				pre = cur;
				tmp = next;
			} 
			else if (index > m && index < n) {
				cur = tmp;
				next = tmp.next;
				cur.next = pre;
				pre = cur;
				tmp = next;
			} 
			else if (index == n) {
				cur = tmp;
				next = tmp.next;
				cur.next = pre;
				tail.next = next;
				if (head1 != null) {
					head1.next = cur;
				} 
				else {
					head = cur;
				}
			} 
			else {
				tmp = tmp.next;
			}
			index++;
		}
		return head;
	}
}