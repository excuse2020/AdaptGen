class Solution {
	int getLongestPalindrome(String A) {
		if (A == null || A.length() == 0) {
			return 0;
		}
		if (A.length() == 1) {
			return 1;
		}
		int res = 1;
		for (int i = 0; i < A.length(); i++) {
			res = Math.max(res,Math.max(helper(A,i,i),helper(A,i,i + 1)));
		}
		return res;
	}
	int helper(String str, int left, int right) {
		boolean flag = left == right ? true : false;
		int counter = 0;
		while (left <= right && left >= 0 && right <= str.length() - 1 && str.charAt(left) == str.charAt(right)) {
			counter++;
			left--;
			right++;
		}
		return flag != true ? counter * 2 : counter * 2 - 1;
	}
}