class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> alt = new ArrayList<>();
		if (root == null) {
			return alt;
		}
		Queue<TreeNode> q = new ArrayDeque<>();
		q.add(root);
		while (!q.isEmpty()) {
			int levelSize = q.size();
			List<Integer> subAlt = new ArrayList<>();
			for (int i = 0; i < levelSize; i++) {
				TreeNode node = q.poll();
				subAlt.add(node.val);
				if (node.left != null) {
					q.add(node.left);
				}
				if (node.right != null) {
					q.add(node.right);
				}
			}
			alt.add(subAlt);
		}
		Collections.reverse(alt);
		return alt;
	}
}