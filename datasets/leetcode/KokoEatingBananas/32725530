class Solution {
	boolean checkIfTrue(int[] piles, int h, int mid) {
		int i = 0, count = 0;
		for (int pile: piles) {	
			if (count > h) {
				return false;
			}
			count += pile / mid;
			if (pile % mid != 0) {
				count++;
			}
		}
		if (count <= h) {
			return true;
		}
		return false;
	}
	int minEatingSpeed(int[] piles, int h) {
		int min = 1, max = 0, mid = 0;
		for (int pile: piles) {	
			max = Math.max(pile,max);
		}
		while (min <= max) {
			mid = ((max - min) / 2 + min);
			if (checkIfTrue(piles,h,mid)) {
				max = mid - 1;
			} 
			else {
				min = mid + 1;
			}
		}
		return min;
	}
}