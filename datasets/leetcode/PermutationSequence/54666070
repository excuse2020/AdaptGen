class Solution {
	StringBuilder sb = new StringBuilder();
	int factorial(int n) {
		int fact = 1;
		while (n > 0) {
			fact = fact * n;
			n--;
		}
		return fact;
	}
	String getPermutation(int n, int k) {
		ArrayList<Integer> data = new ArrayList<>();
		int size = n - 1;
		for (int i = 1; i <= n; i++) {
			data.add(i);
		}
		helper(data,k - 1,size);
		return sb.toString();
	}
	void helper(ArrayList<Integer> data, int k, int size) {
		if (data.size() <= 0) {
			return;
		}
		int noOfElem = factorial(size);
		if (noOfElem == 0) {
			sb.append(data.get(0));
			data.remove(0);
			helper(data,k,size - 1);
		} 
		else {
			sb.append(data.get(k / noOfElem));
			data.remove(k / noOfElem);
			helper(data,k % noOfElem,size - 1);
		}
	}
}