class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	void dfs(TreeNode root, List<Integer> path, int targetSum) {
		if (root == null) {
			return;
		}
		path.add(root.val);
		if (root.val == targetSum && root.left == null && root.right == null) {
			ans.add(new ArrayList<>(path));
		}
		dfs(root.left,path,targetSum - root.val);
		dfs(root.right,path,targetSum - root.val);
		path.remove(path.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<Integer> path = new ArrayList<>();
		dfs(root,path,targetSum);
		return ans;
	}
}