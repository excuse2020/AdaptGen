class Solution {
	List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
		PriorityQueue<int[]> pq = new PriorityQueue<>((int[] a, int[] b) -> {b[0] - a[0]});
		for (int i = 0; i < nums1.length; i++) {
			for (int j = 0; j < nums2.length; j++) {
				if (pq.size() < k) {
					pq.offer(new int{nums1[i] + nums2[j], i, j});
				} 
				else if (pq.peek()[0] > (nums1[i] + nums2[j])) {
					pq.poll();
					pq.offer(new int{nums1[i] + nums2[j], i, j});
				} 
				else {
					break;
				}
			}
		}
		List<List<Integer>> ans = new ArrayList<>();
		while (!pq.isEmpty()) {
			int[] a = pq.poll();
			ans.add(new ArrayList<>());
		}
		return ans;
	}
}