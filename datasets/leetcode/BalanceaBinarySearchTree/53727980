class Solution {
	TreeNode balanceBST(TreeNode root) {
		ArrayList<TreeNode> arr = new ArrayList<>();
		inOrderTraversal(root,arr);
		return constructBST(arr,0,arr.size() - 1);
	}
	TreeNode constructBST(ArrayList<TreeNode> arr, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = (start + end) / 2;
		TreeNode temp = arr.get(mid);
		temp.left = constructBST(arr,start,mid - 1);
		temp.right = constructBST(arr,mid + 1,end);
		return temp;
	}
	void inOrderTraversal(TreeNode root, ArrayList<TreeNode> arr) {
		if (root == null) {
			return;
		}
		inOrderTraversal(root.left,arr);
		arr.add(root);
		inOrderTraversal(root.right,arr);
	}
}