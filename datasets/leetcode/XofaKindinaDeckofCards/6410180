class Solution {
	int GCD(int a, int b) {
		if (a == 0) {
			return b;
		}
		return GCD(b % a,a);
	}
	boolean hasGroupsSizeX(int[] deck) {
		if (deck == null || deck.length <= 1) {
			return false;
		}
		Map<Integer, Integer> map = new HashMap<>();
		for (Integer i: deck) {	
			map.put(i,map.getOrDefault(i,0) + 1);
		}
		for (Map.Entry<Integer, Integer> vk: map.entrySet()) {	
			if (vk.getValue().equals(1)) {
				return false;
			}
		}
		List<Integer> list = new ArrayList<Integer>(map.values());
		int g = 0;
		for (int i = 1; i < list.size(); i++) {
			int cur = list.get(i);
			if (i == 1) {
				g = GCD(list.get(0),cur);
			} 
			else {
				g = GCD(cur,g);
			}
		}
		if (g == 1) {
			return false;
		}
		return true;
	}
}