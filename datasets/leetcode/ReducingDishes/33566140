class Solution {
	int getAns(int[] sat, int index, int time, Integer[][] dp) {
		if (index >= sat.length) {
			return 0;
		}
		if (dp[index][time] != null) {
			return dp[index][time];
		}
		int ans1 = sat[index] * time + getAns(sat,index + 1,time + 1,dp);
		int ans2 = getAns(sat,index + 1,time,dp);
		return dp[index][time] = Math.max(ans1,ans2);
	}
	int maxSatisfaction(int[] sat) {
		Arrays.sort(sat);
		int n = sat.length;
		Integer[][] dp = new Integer[n][n + 1];
		int tempAns = getAns(sat,0,1,dp);
		return tempAns > 0 ? tempAns : 0;
	}
}