class Solution {
	ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
	int[][] combination(int k, int n) {
		recurse(0,k,n,new ArrayList<>());
		int[][] _ans = new int[ans.size()];
		int i = 0;
	}
	void recurse(int last, int k, int n, ArrayList<Integer> partial) {
		if (n == 0 && k == 0) {
			ans.add(new ArrayList<>(partial));
			return;
		} 
		else if (n <= 0 || k == 0) {
			return;
		}
		for (int i = last + 1; i <= 9; i++) {
			partial.add(i);
			recurse(i,k - 1,n - i,partial);
			partial.remove(partial.size() - 1);
		}
	}
}