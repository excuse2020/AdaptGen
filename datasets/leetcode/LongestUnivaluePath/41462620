class Solution {
	int longlength = 0;
	int helper(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = helper(root.left);
		int right = helper(root.right);
		int leftsum = 0;
		int rightsum = 0;
		if (root.left != null && root.left.val == root.val) {
			leftsum = left + 1;
		}
		if (root.right != null && root.right.val == root.val) {
			rightsum = right + 1;
		}
		longlength = Math.max(longlength,leftsum + rightsum);
		return Math.max(leftsum,rightsum);
	}
	int longestUnivaluePath(TreeNode root) {
		helper(root);
		return longlength;
	}
}