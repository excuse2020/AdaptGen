class Solution {
	Integer[][] c;
	int dfs(int index, List<List<Integer>> triangle, int level) {
		if (level == triangle.size()) {
			return 0;
		}
		if (c[level][index] != null) {
			return c[level][index];
		}
		int left = triangle.get(level).get(index) + dfs(index,triangle,level + 1);
		int right = triangle.get(level).get(index + 1) + dfs(index + 1,triangle,level + 1);
		return c[level][index] = Math.min(left,right);
	}
	int minimumTotal(List<List<Integer>> triangle) {
		c = new Integer[triangle.size()][triangle.size()];
		return triangle.get(0).get(0) + dfs(0,triangle,1);
	}
}