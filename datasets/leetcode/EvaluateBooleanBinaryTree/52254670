class Solution {
	boolean evaluate(TreeNode node) {
		if (node.left == null && node.right == null) {
			return node.val == 1;
		} 
		else if (node.val == 2) {
			return evaluate(node.left) || evaluate(node.right);
		} 
		else if (node.val == 3) {
			return evaluate(node.left) && evaluate(node.right);
		} 
		else {
			return false;
		}
	}
	boolean evaluateTree(TreeNode root) {
		if (root == null) {
			return false;
		}
		boolean first = evaluateTree(root.left);
		boolean second = evaluateTree(root.right);
		if (root.val == 2) {
			return first || second;
		} 
		else if (root.val == 3) {
			return first && second;
		} 
		else if (root.val == 1) {
			return true;
		} 
		else {
			return false;
		}
	}
}