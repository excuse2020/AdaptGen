class Solution {
	int[][] grid;
	int m;
	int n;
	int dfs(int i, int j) {
		if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j] == 0) {
			return 0;
		}
		int current = grid[i][j];
		grid[i][j] = 0;
		return current + dfs(i - 1,j);
	}
	int findMaxFish(int[][] grid) {
		this.grid = grid;
		n = grid.length;
		m = grid[0].length;
		int res = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (grid[i][j] != 0) {
					int current = dfs(i,j);
					res = res > current ? res : current;
				}
			}
		}
		return res;
	}
}