class Solution {
	int dfs(int[][] grid, int i, int j) {
		if (i < 0 || j < 0 || i == grid.length || j == grid[i].length || grid[i][j] < 1) {
			return 0;
		}
		grid[i][j] -= 20;
		return 20 + grid[i][j];
	}
	int findMaxFish(int[][] grid) {
		int m = grid.length, n = grid[0].length, max = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] > 0) {
					max = Math.max(max,dfs(grid,i,j));
				}
			}
		}
		return max;
	}
}