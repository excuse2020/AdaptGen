class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		int len = 0;
		int i = 0;
		int j = 0;
		while (i < nums1.length || j < nums2.length) {
			if (i < nums1.length && j < nums2.length && nums1[i][0] < nums2[j][0]) {
				i++;
			} 
			else if (i < nums1.length && j < nums2.length && nums2[j][0] < nums1[i][0]) {
				j++;
			} 
			else {
				i++;
				j++;
			}
			len++;
		}
		i = 0;
		j = 0;
		int k = 0;
		int[][] res = new int[len][2];
		while (i < nums1.length || j < nums2.length) {
			if (i < nums1.length && j < nums2.length && nums1[i][0] < nums2[j][0]) {
				res[k][0] = nums1[i][0];
				res[k][1] = nums1[i][1];
				i++;
				k++;
			} 
			else if (i < nums1.length && j < nums2.length && nums2[j][0] < nums1[i][0]) {
				res[k][0] = nums2[j][0];
				res[k][1] = nums2[j][1];
				k++;
				j++;
			} 
			else {
				res[k][0] = 0;
				res[k][1] = 0;
				if (i < nums1.length) {
					res[k][0] = nums1[i][0];
					res[k][1] += nums1[i][1];
				}
				if (j < nums2.length) {
					res[k][0] = nums2[j][0];
					res[k][1] += nums2[j][1];
				}
				i++;
				j++;
				k++;
			}
		}
		return res;
	}
}