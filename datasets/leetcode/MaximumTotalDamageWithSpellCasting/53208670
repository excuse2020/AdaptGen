class Solution {
	long maximumTotalDamage(int[] power, int curr) {
		if (curr == power.length) {
			return 0;
		}
		long dontPick = maximumTotalDamage(power,curr + 1);
		int nextIdx = curr + 1;
		while (nextIdx < power.length && power[nextIdx] - power[curr] <= 2 && power[nextIdx] != power[curr]) {
			nextIdx++;
		}
		long pick = maximumTotalDamage(power,nextIdx) + power[curr];
		return Math.max(dontPick,pick);
	}
	long maximumTotalDamage(int[] power) {
		Arrays.sort(power);
		return maximumTotalDamage(power,0);
	}
}