class Solution {
	void dfs(int n, String s, int left, int right, ArrayList<String> result) {
		if (left > n || right > n || right > left) {
			return;
		}
		if (left == n && right == n) {
			result.add(s);
			return;
		}
		dfs(n,s + "(",left + 1,right,result);
		dfs(n,s + ")",left,right + 1,result);
	}
	ArrayList<String> generateParenthesis(int n) {
		ArrayList<String> result = new ArrayList<String>();
		if (n < 1) {
			return result;
		}
		if (n == 1) {
			result.add("()");
			return result;
		}
		dfs(n,"",0,0,result);
		return result;
	}
}