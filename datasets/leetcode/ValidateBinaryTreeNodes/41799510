class Solution {
	boolean validateBinaryTreeNodes(int n, int[] leftChild, int[] rightChild) {
		int[] indegree = new int[n];
		for (int i = 0; i < n; i++) {
			if (leftChild[i] != -1) {
				indegree[leftChild[i]]++;
			}
			if (rightChild[i] != -1) {
				indegree[rightChild[i]]++;
			}
		}
		for (int i = 0; i < n; i++) {
			if (indegree[i] > 1) {
				return false;
			}
		}
		Queue<Integer> queue = new LinkedList<>();
		for (int i = 0; i < n; i++) {
			if (indegree[i] == 0) {
				queue.add(i);
			}
		}
		if (queue.size() > 1) {
			return false;
		}
		while (!queue.isEmpty()) {
			int curNode = queue.poll();
			int left = leftChild[curNode];
			int right = rightChild[curNode];
			if (left != -1 && --indegree[left] == 0) {
				queue.add(left);
			}
			if (right != -1 && --indegree[right] == 0) {
				queue.add(right);
			}
		}
		for (int i = 0; i < n; i++) {
			if (indegree[i] != 0) {
				return false;
			}
		}
		return true;
	}
}