class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int h = horizontalCut.length;
		int v = verticalCut.length;
		long hori = 0;
		long verti = 0;
		for (int i = 0; i < h; i++) {
			hori += horizontalCut[i];
		}
		for (int j = 0; j < v; j++) {
			verti += verticalCut[j];
		}
		int i = h - 1;
		int j = v - 1;
		long cost = 0;
		while (i >= 0 && j >= 0) {
			int hi = horizontalCut[i];
			int vj = verticalCut[j];
			if (hi > vj) {
				cost += hi + verti;
				hori -= hi;
				i--;
			} 
			else {
				cost += vj + hori;
				verti -= vj;
				j--;
			}
		}
		return cost + verti;
	}
}