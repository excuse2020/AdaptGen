class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		long prev = 0;
		long maxHorizontalSize = 0;
		long modValue = (long) 1e9 + 7;
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		for (int i = 0; i < horizontalCuts.length; i++) {
			maxHorizontalSize = Math.max((horizontalCuts[i] - prev),maxHorizontalSize);
			prev = horizontalCuts[i];
		}
		maxHorizontalSize = Math.max(maxHorizontalSize,(h - prev));
		prev = 0;
		long maxVerticalSize = 0;
		for (int i = 0; i < verticalCuts.length; i++) {
			maxVerticalSize = Math.max((verticalCuts[i] - prev),maxVerticalSize);
			prev = verticalCuts[i];
		}
		maxVerticalSize = Math.max(maxVerticalSize,(w - prev));
		int ans = (int) ((maxHorizontalSize * maxVerticalSize) % (modValue));
		return ans;
	}
}