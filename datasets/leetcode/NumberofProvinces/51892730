class Solution {
	void bfs(int[][] isConnected, boolean visited, int i) {
		Queue<Integer> q = new LinkedList<>();
		q.add(i);
		while (!q.isEmpty()) {
			int curr = q.remove();
			visited[curr] = true;
			for (int j = 1; j < isConnected[curr].length; j++) {
				if (isConnected[curr][j] == 1) {
					if (!visited[j]) {
						q.add(j);
					}
				}
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		boolean visited = new boolean[isConnected.length];
		int count = 0;
		for (int i = 0; i < isConnected.length; i++) {
			if (!visited[i]) {
				bfs(isConnected,visited,i);
				count++;
			}
		}
		return count;
	}
}