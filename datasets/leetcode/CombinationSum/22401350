class Solution {
	List<List<Integer>> list = new ArrayList<List<Integer>>();
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		go(0,target,new ArrayList<Integer>(),candidates);
		return list;
	}
	void go(int pos, int target, List ll, int[] candidates) {
		int i;
		for (i = pos; i < candidates.length; i++) {
			int leftover = target - candidates[i];
			if (leftover > 0) {
				List<Integer> newlist = new ArrayList<Integer>(ll);
				newlist.add(candidates[i]);
				go(i,leftover,newlist,candidates);
			} 
			else if (leftover == 0) {
				List<Integer> newlist = new ArrayList<Integer>(ll);
				newlist.add(candidates[i]);
				list.add(newlist);
			}
		}
	}
}