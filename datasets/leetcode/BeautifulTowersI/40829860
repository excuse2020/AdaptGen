class Solution {
	long function(int ind, ArrayList<Integer> maxHeights) {
		int k = maxHeights.get(ind);
		for (int i = ind + 1; i < maxHeights.size(); i++) {
			if (maxHeights.get(i) > k) {
				maxHeights.set(i,k);
			} 
			else {
				k = maxHeights.get(i);
			}
		}
		k = maxHeights.get(ind);
		for (int i = ind - 1; i >= 0; i--) {
			if (maxHeights.get(i) > k) {
				maxHeights.set(i,k);
			} 
			else {
				k = maxHeights.get(i);
			}
		}
		long sum = 0;
		for (int i = 0; i < maxHeights.size(); i++) {
			sum += maxHeights.get(i);
		}
		return sum;
	}
	long maximumSumOfHeights(List<Integer> maxHeights) {
		int ind = 0;
		long max = Integer.MIN_VALUE;
		for (int i = maxHeights.size() - 1; i >= 0; i--) {
			max = Math.max(function(i,new ArrayList<>(maxHeights)),max);
		}
		return max;
	}
}