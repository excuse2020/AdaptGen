class Solution {
	int minCost(int n, int[] cuts) {
		int c = cuts.length;
		int[] cut = new int[c + 2];
		Arrays.sort(cuts);
		cut[0] = 0;
		cut[c + 1] = n;
		for (int i = 0; i < c; i++) {
			cut[i + 1] = cuts[i];
		}
		int[][] dp = new int[c + 2][c + 2];
		for (int[] arr: dp) {	
			Arrays.fill(arr,0);
		}
		for (int i = c; i >= 1; i--) {
			for (int j = 1; j <= c; j++) {
				if (i > j) {
					continue;
				}
				int min = Integer.MAX_VALUE;
				for (int k = i; k <= j; k++) {
					int cost = cut[j + 1] - cut[i - 1] + dp[i][k - 1] + dp[k + 1][j];
					min = Math.min(min,cost);
				}
				dp[i][j] = min;
			}
		}
		return dp[1][c];
	}
}