class Solution {
	int maxPoints(int[][] points) {
		if (points.length == 1) {
			return 1;
		}
		int max = 0;
		for (int i = 0; i < points.length; i++) {
			Map<Double, Integer> map = new HashMap<>();
			for (int j = i + 1; j < points.length; j++) {
				map.compute(slope(points[i],points[j]),(k, v) -> {v == null ? 2 : v + 1});
			}
			for (int v: map.values()) {	
				max = Math.max(max,v);
			}
		}
		return max;
	}
	Double slope(int[] p1, int[] p2) {
		return p2[0] == p1[0] ? null : ((double) p2[1] - p1[1]) / (p2[0] - p1[0]) + 0.0;
	}
}