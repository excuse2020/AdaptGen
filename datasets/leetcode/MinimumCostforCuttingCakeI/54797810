class Solution {
	int minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int x = horizontalCut.length;
		int y = verticalCut.length;
		int i = y - 1;
		int j = x - 1;
		int hp = 1;
		int vp = 1;
		int cost = 0;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[j] >= verticalCut[i]) {
				cost += horizontalCut[j] * vp;
				hp++;
				j--;
			} 
			else {
				cost += verticalCut[i] * hp;
				vp++;
				i--;
			}
		}
		while (i >= 0) {
			cost += verticalCut[i] * hp;
			vp++;
			i--;
		}
		while (j >= 0) {
			cost += horizontalCut[j] * vp;
			hp++;
			j--;
		}
		return cost;
	}
}