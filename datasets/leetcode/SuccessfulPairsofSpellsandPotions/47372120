class Solution {
	int binarySearch(int[] potions, long key) {
		int i = 0, j = potions.length;
		while (i < j) {
			int mid = (i + j) / 2;
			if (potions[mid] >= key) {
				j = mid;
			} 
			else {
				i = mid + 1;
			}
		}
		return i;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int[] res = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			long key = (success + spells[i] - 1) / spells[i];
			int idx = binarySearch(potions,key);
			res[i] = potions.length - idx;
		}
		return res;
	}
}