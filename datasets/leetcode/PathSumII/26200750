class Solution {
	List<List<Integer>> result = new ArrayList<>();
	int targetSum;
	List<Integer> temp = new ArrayList<>();
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		this.targetSum = targetSum;
		if (root == null) {
			return result;
		}
		recur(root,0);
		return result;
	}
	void recur(TreeNode root, int sum) {
		int currentSum = sum + root.val;
		temp.add(root.val);
		if (root.left != null) {
			recur(root.left,currentSum);
		}
		if (root.right != null) {
			recur(root.right,currentSum);
		}
		if (currentSum == targetSum && root.left == null && root.right == null) {
			result.add(new ArrayList<>(temp));
		}
		temp.remove(temp.size() - 1);
	}
}