class Solution {
	int helper(String s, String t, int i, int j, int[][] dp) {
		if (j == t.length()) {
			return 1;
		}
		if (i == s.length()) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (s.charAt(i) == t.charAt(j)) {
			return dp[i][j] = helper(s,t,i + 1,j + 1,dp) + helper(s,t,i + 1,j,dp);
		} 
		else {
			return dp[i][j] = helper(s,t,i + 1,j,dp);
		}
	}
	int numDistinct(String s, String t) {
		int[][] dp = new int[s.length()][t.length()];
		for (int i = 0; i < s.length(); i++) {
			for (int[] e: dp) {	
				Arrays.fill(e,-1);
			}
		}
		return helper(s,t,0,0,dp);
	}
}