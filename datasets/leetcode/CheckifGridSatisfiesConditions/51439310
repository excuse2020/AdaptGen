class Solution {
	boolean satisfiesConditions(int[][] grid) {
		int l1 = grid.length;
		int l2 = grid[0].length;
		int c = 1;
		if (l1 == 1 && l2 == 1) {
			return true;
		} 
		else if (l1 == 1 && l2 != 1) {
			for (int i = 0; i < l2 - 1; i++) {
				if (grid[0][i] != grid[0][i + 1]) {
					c++;
				}
			}
			if (c == l2) {
				return true;
			} 
			else {
				return false;
			}
		} 
		else if (l2 == 1 && l1 != 1) {
			for (int i = 0; i < l1 - 1; i++) {
				if (grid[i][0] == grid[i + 1][0]) {
					c++;
				}
			}
			if (c == l1) {
				return true;
			} 
			else {
				return false;
			}
		} 
		else {
			for (int i = 0; i < l1 - 1; i++) {
				for (int j = 0; j < l2 - 1; j++) {
					if (grid[i][j] != grid[i + 1][j] || grid[i][j] == grid[i][j + 1] || grid[i + 1][j] == grid[i + 1][j + 1]) {
						return false;
					}
				}
			}
			return true;
		}
	}
}