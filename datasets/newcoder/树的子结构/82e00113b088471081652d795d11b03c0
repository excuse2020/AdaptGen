class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		return HasSubtree2(root1,root2);
	}
	boolean HasSubtree2(TreeNode root1, TreeNode root2) {
		if (root2 == null) {
			return true;
		} 
		else if (root1 == null) {
			return false;
		} 
		else if (root1.val != root2.val) {
			return HasSubtree2(root1.left,root2) || HasSubtree2(root1.right,root2);
		} 
		else {
			return HasSubtree3(root1.left,root2.left) && HasSubtree3(root1.right,root2.right) || HasSubtree2(root1.left,root2) || HasSubtree2(root1.right,root2);
		}
	}
	boolean HasSubtree3(TreeNode root1, TreeNode root2) {
		if (root2 == null) {
			return true;
		} 
		else if (root1 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		return HasSubtree3(root1.left,root2.left) && HasSubtree3(root1.right,root2.right);
	}
}