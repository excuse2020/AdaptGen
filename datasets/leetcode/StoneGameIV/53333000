class Solution {
	boolean util(int n, ArrayList<Integer> list, int[] dp) {
		if (n == 1) {
			return true;
		}
		if (dp[n] != -1) {
			return (dp[n] == 0) ? false : true;
		}
		boolean result = true;
		for (int i: list) {	
			if (i > n) {
				break;
			}
			if (util(n - i,list,dp) == false) {
				dp[n] = 1;
				return true;
			}
		}
		dp[n] = 0;
		return false;
	}
	boolean winnerSquareGame(int n) {
		ArrayList<Integer> list = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			if (i * i > n) {
				break;
			} 
			else {
				list.add(i * i);
			}
		}
		int[] dp = new int[n + 1];
		Arrays.fill(dp,-1);
		return util(n,list,dp);
	}
}