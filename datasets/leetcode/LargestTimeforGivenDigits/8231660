class Solution {
	String largestTimeFromDigits(int[] A) {
		Map<Integer, Integer> timeMap = new HashMap<Integer, Integer>();
		StringBuilder timeFormat = new StringBuilder();
		boolean flag = false;
		int len = A.length;
		if (len > 4) {
			return "";
		}
		for (int i: A) {	
			timeMap.put(i,timeMap.getOrDefault(i,0) + 1);
		}
		int s = 0, res = 0;
		for (int i = 0; i < len; i++) {
			if (A[i] > 5) {
				res++;
			}
		}
		s = (res >= 2) ? 1 : 2;
		for (int i = s; i >= 0; i--) {
			if (timeMap.containsKey(i) && timeMap.get(i) > 0) {
				flag = true;
				timeFormat.append(i);
				timeMap.put(i,timeMap.get(i) - 1);
				break;
			}
		}
		if (!flag) {
			return "";
		}
		flag = false;
	}
}