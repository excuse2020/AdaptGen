class Solution {
	String longestPalindrome(String s) {
		if (s.length() <= 1) {
			return s;
		}
		int length = 1;
		String ans = s.charAt(0) + "";
		int n = s.length();
		boolean[][] dp = new boolean[n][n];
		for (int gap = 0; gap < n; gap++) {
			for (int i = 0, j = gap; j < n; i++, j++) {
				if (gap == 0) {
					dp[i][j] = true;
				} 
				else if (gap == 1) {
					dp[i][j] = s.charAt(i) == s.charAt(j);
				} 
				else {
					dp[i][j] = (s.charAt(i) == s.charAt(j) && dp[i + 1][j - 1]);
				}
				if (dp[i][j]) {
					if (gap + 1 > length) {
						length = gap;
						ans = s.substring(i,j + 1);
					}
				}
			}
		}
		return ans;
	}
}