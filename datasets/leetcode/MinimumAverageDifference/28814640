class Solution {
	int minimumAverageDifference(int[] nums) {
		long[] pre = new long[nums.length];
		for (int i = 0; i < nums.length; i++) {
			if (i != 0) {
				pre[i] = pre[i - 1] + nums[i];
			} 
			else {
				pre[i] = nums[i];
			}
		}
		int idx = 0;
		int n = nums.length - 1;
		long c = Long.MAX_VALUE;
		for (int i = 0; i < nums.length; i++) {
			if (Math.abs(((n - i) != 0 ? (pre[n] - pre[i]) / (n - i) : 0) - (pre[i] / (i + 1))) < c) {
				c = Math.abs(((n - i) != 0 ? (pre[n] - pre[i]) / (n - i) : 0) - (pre[i] / (i + 1)));
				idx = i;
			}
		}
		return idx;
	}
}