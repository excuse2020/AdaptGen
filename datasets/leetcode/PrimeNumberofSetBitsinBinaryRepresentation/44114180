class Solution {
	int countOnes(int n) {
		int count = 0;
		while (n != 0) {
			int last = (n & 1);
			if (last == 1) {
				count++;
			}
			n = n >>> 1;
		}
		return count;
	}
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			int prime = countOnes(i);
			if (isPrime(prime)) {
				count++;
			}
		}
		return count;
	}
	boolean isPrime(int number) {
		if (number <= 1) {
			return false;
		}
		for (int i = 2; i * i <= number; i++) {
			if (number % i == 0) {
				return false;
			}
		}
		return true;
	}
}