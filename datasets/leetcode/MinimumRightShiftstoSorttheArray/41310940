class Solution {
	boolean isSorted(List<Integer> nums) {
		for (int x = 0; x < nums.size() - 1; x++) {
			if (nums.get(x) > nums.get(x + 1)) {
				return false;
			}
		}
		return true;
	}
	int minimumRightShifts(List<Integer> nums) {
		int size = nums.size();
		List<Integer> temp = new ArrayList<Integer>();
		for (int x = 0; x < size; x++) {
			temp.add(0);
		}
		int count = 0;
		while (!isSorted(nums)) {
			if (count > size - 1) {
				return -1;
			}
			for (int x = 0; x < size; x++) {
				temp.set((x + 1) % size,nums.get(x));
			}
			for (int x = 0; x < size; x++) {
				nums.set(x,temp.get(x));
			}
			count++;
		}
		return count;
	}
}