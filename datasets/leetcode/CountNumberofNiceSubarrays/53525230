class Solution {
	int numberOfSubarrays(int[] nums, int k) {
		int n = nums.length;
		int[] odd = new int[n];
		int count = 0, result = 0;
		for (int i = 0; i < n; i++) {
			odd[i] = nums[i] % 2;
		}
		int[] prefix = new int[n + 1];
		prefix[0] = 0;
		Map<Integer, Integer> countMap = new HashMap<>();
		countMap.put(0,1);
		for (int i = 0; i < n; i++) {
			prefix[i + 1] = prefix[i] + odd[i];
			if (prefix[i + 1] >= k) {
				result += countMap.getOrDefault(prefix[i + 1] - k,0);
			}
			countMap.put(prefix[i + 1],countMap.getOrDefault(prefix[i + 1],0) + 1);
		}
		return result;
	}
}