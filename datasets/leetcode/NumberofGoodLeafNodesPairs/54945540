class Solution {
	int countPairs(TreeNode root, int distance) {
		if (root == null) {
			return 0;
		}
		int[] count = new int[1];
		find(root,distance,count);
		return count[0];
	}
	int[] find(TreeNode node, int distance, int[] count) {
		if (node == null) {
			return new int[distance + 1];
		}
		if (node.left == null && node.right == null) {
			int[] l = new int[distance + 1];
			l[1] = 1;
			return l;
		}
		int[] l = find(node.left,distance,count);
		int[] r = find(node.right,distance,count);
		for (int i = 1; i <= distance; i++) {
			for (int j = 1; j <= distance - i; j++) {
				count[0] += l[i] * r[j];
			}
		}
		int[] dist = new int[distance + 1];
		for (int i = distance; i > 0; i--) {
			dist[i] = l[i - 1] + r[i - 1];
		}
		return dist;
	}
}