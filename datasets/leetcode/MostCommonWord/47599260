class Solution {
	String mostCommonWord(String paragraph, String[] banned) {
		HashSet<String> bHashSet = new HashSet<>();
		Map<String, Integer> mapper = new HashMap<>();
		for (String word: banned) {	
			bHashSet.add(word);
		}
		int maxFreq = 0;
		String mostFreqWord = "";
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < paragraph.length(); i++) {
			if (!Character.isLetter(paragraph.charAt(i))) {
				continue;
			}
			int j = i;
			sb.setLength(0);
			while (j < paragraph.length() && Character.isLetter(paragraph.charAt(j))) {
				sb.append(toLower(paragraph.charAt(j++)));
			}
			String currentWord = sb.toString();
			if (!bHashSet.contains(currentWord)) {
				mapper.put(currentWord,mapper.getOrDefault(currentWord,0) + 1);
				int currentFreq = mapper.get(currentWord);
				if (maxFreq < currentFreq) {
					maxFreq = currentFreq;
					mostFreqWord = currentWord;
				}
			}
			if (j != i) {
				i = j - 1;
			}
		}
		return mostFreqWord;
	}
	char toLower(char c) {
	}
}