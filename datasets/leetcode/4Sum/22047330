class Solution {
	List<List<Integer>> fourSum(int[] arr, int target) {
		Arrays.sort(arr);
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		for (int k = 0; k < arr.length - 3; k++) {
			for (int l = k + 1; l < arr.length - 2; l++) {
				long get = (arr[k] + arr[l]);
				long tar = target - get;
				int i = l + 1;
				int j = arr.length - 1;
				while (i < j) {
					long sum = arr[i] + arr[j];
					if (sum < tar) {
						i++;
					} 
					else if (sum > tar) {
						j--;
					} 
					else {
						ArrayList<Integer> sub = new ArrayList<>();
						sub.add(arr[k]);
						sub.add(arr[l]);
						sub.add(arr[i]);
						sub.add(arr[j]);
						ans.add(new ArrayList(sub));
						while (i < j && arr[i] == sub.get(2)) {
							i++;
						}
						while (i < j && arr[j] == sub.get(3)) {
							j--;
						}
					}
				}
				while (k < arr.length - 1 && arr[k + 1] == arr[k]) {
					k++;
				}
				while (l < arr.length - 1 && arr[l + 1] == arr[l]) {
					l++;
				}
			}
		}
		return ans;
	}
}