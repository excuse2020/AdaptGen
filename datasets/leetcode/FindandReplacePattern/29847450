class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> ans = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			if (wordPattern(pattern,words[i])) {
				ans.add(words[i]);
			}
		}
		return ans;
	}
	boolean wordPattern(String pattern, String s) {
		char ch = pattern.charAt(0);
		int index = 0;
		HashMap<Character, Character> mp = new HashMap<>();
		HashMap<Character, Character> mp2 = new HashMap<>();
		char[] arr = s.toCharArray();
		if (arr.length == 1 && pattern.length() > 1) {
			return false;
		} 
		else if (arr.length == 1 && pattern.length() == 1) {
			return true;
		}
		for (char m: arr) {	
			if (index >= pattern.length()) {
				return false;
			}
			if (!mp.containsKey(pattern.charAt(index)) && !mp2.containsKey(m)) {
				mp.put(pattern.charAt(index),m);
				mp2.put(m,pattern.charAt(index));
			} 
			else {
				if (mp2.containsKey(m) && mp2.get(m) != pattern.charAt(index) || !mp.get(pattern.charAt(index)).equals(m)) {
					return false;
				}
			}
			index++;
		}
		return true;
	}
}