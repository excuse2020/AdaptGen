class Solution {
	ArrayList<String> result = new ArrayList<String>();
	ArrayList<String> Permutation(String str) {
		String[] input = str.split("");
		LinkedList<String> item = new LinkedList<String>();
		boolean[] visited = new boolean[input.length];
		Arrays.sort(input);
		permutate(input,item,visited);
		return result;
	}
	void permutate(String[] input, LinkedList<String> item, boolean[] visited) {
		if (item.size() == input.length) {
			result.add(String.join("",item));
			return;
		}
		for (int index = 0; index < input.length; index++) {
			if (visited[index] || index > 0 && visited[index - 1] == true && input[index - 1].equals(input[index])) {
				continue;
			}
			item.add(input[index]);
			visited[index] = true;
			permutate(input,item,visited);
			item.removeLast();
			visited[index] = false;
		}
	}
}