class Solution {
	int minChanges(int[] nums, int k) {
		int n = nums.length;
		int[] counts1 = new int[k + 1];
		int[] counts2 = new int[k + 1];
		for (int i = 0; i < n / 2; ++i) {
			int x = Math.min(nums[i],nums[n - i - 1]);
			int y = Math.max(nums[i],nums[n - i - 1]);
			++counts2[y - x];
			int maxDiff = Math.max(k - x,y);
			++counts1[maxDiff];
		}
		for (int i = k - 1; i >= 0; --i) {
			counts1[i] += counts1[i + 1];
		}
		int result = Integer.MAX_VALUE;
		for (int i = 0; i <= k; ++i) {
			int zeros = counts2[i];
			int ones = counts1[i] - zeros;
			int twos = n / 2 - counts1[i];
			result = Math.min(result,ones + twos * 2);
		}
		return result;
	}
}