class Solution {
	int numSubmatrixSumTarget(int[][] matrix, int target) {
		int m = matrix.length, n = matrix[0].length, ans = 0;
		int dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				dp[i][j] = matrix[i][j];
				if (i > 0) {
					dp[i][j] += dp[i - 1][j];
				}
				if (j > 0) {
					dp[i][j] += dp[i][j - 1];
				}
				if (i > 0 && j > 0) {
					dp[i][j] -= dp[i - 1][j - 1];
				}
			}
		}
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				for (int h = -1; h < i; h++) {
					for (int w = -1; w < j; w++) {
						int sum = dp[i][j];
						if (h >= 0) {
							sum -= dp[h][j];
						}
						if (w >= 0) {
							sum -= dp[i][w];
						}
						if (h >= 0 && w >= 0) {
							sum += dp[h][w];
						}
						if (sum == target) {
							ans++;
						}
					}
				}
			}
		}
		return ans;
	}
}