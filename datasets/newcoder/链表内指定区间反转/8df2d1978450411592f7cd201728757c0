class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head.next == null || m == n) {
			return head;
		}
		int tm = 1;
		ListNode cur = head;
		ListNode ppre = null;
		while (tm < m) {
			ppre = cur;
			cur = cur.next;
			tm++;
		}
		ListNode start = cur;
		ListNode pre = null;
		while (tm <= n) {
			ListNode tnx = cur.next;
			cur.next = pre;
			pre = cur;
			cur = tnx;
			tm++;
		}
		if (ppre != null) {
			ppre.next = pre;
		}
		if (m == 1) {
			head = pre;
		}
		if (cur != null) {
			start.next = cur;
		}
		return head;
	}
}