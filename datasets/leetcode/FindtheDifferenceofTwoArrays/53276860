class Solution {
	List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
		List<List<Integer>> l1 = new ArrayList<>();
		List<Integer> l2 = new ArrayList<>();
		Set<Integer> s1 = new HashSet<>();
		int count = 0;
		for (int i = 0; i < nums1.length; i++) {
			count = 0;
			for (int j = 0; j < nums2.length; j++) {
				if (nums1[i] != nums2[j]) {
					count = count + 1;
					if (count == nums2.length) {
						s1.add(nums1[i]);
					}
				}
			}
		}
		for (int x: s1) {	
			l2.add(x);
		}
		l1.add(l2);
		List<Integer> l3 = new ArrayList<>();
		Set<Integer> s3 = new HashSet<>();
		for (int i = 0; i < nums2.length; i++) {
			count = 0;
			for (int j = 0; j < nums1.length; j++) {
				if (nums2[i] != nums1[j]) {
					count = count + 1;
					if (count == nums1.length) {
						s3.add(nums2[i]);
					}
				}
			}
		}
		for (int x: s3) {	
			l3.add(x);
		}
		l1.add(l3);
		return l1;
	}
}