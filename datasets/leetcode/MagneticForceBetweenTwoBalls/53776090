class Solution {
	int maxDistance(int[] position, int m) {
		int result = 0;
		int n = position.length;
		int max_f = 0;
		Arrays.sort(position);
		max_f = position[n - 1] - position[0];
		int i = 1, j = max_f;
		while (i <= j) {
			int mid = i + (j - i) / 2;
			if (solve(position,mid,m)) {
				result = mid;
				i = mid + 1;
			} 
			else {
				j = mid - 1;
			}
		}
		return result;
	}
	boolean solve(int[] position, int freq, int m) {
		int last = position[0];
		m--;
		for (int i = 1; i < position.length; i++) {
			if (position[i] - last >= freq) {
				m--;
				last = position[i];
			}
			if (m == 0) {
				return true;
			}
		}
		return false;
	}
}