class Solution {
	int getLongestPalindrome(String A) {
		int count = 0;
		List<Integer> lengthRecordList = new ArrayList<>();
		boolean[][] check = new boolean[A.length()][A.length()];
		for (int i = A.length() - 1; i >= 0; i--) {
			for (int j = i; j < A.length(); j++) {
				if (A.charAt(i) == A.charAt(j)) {
					if (j - i < 2) {
						check[i][j] = true;
						count++;
						lengthRecordList.add(j - i + 1);
					} 
					else if (check[i + 1][j - 1] == true) {
						check[i][j] = true;
						count++;
						lengthRecordList.add(j - i + 1);
					}
				}
			}
		}
		return lengthRecordList.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList()).get(0);
	}
}