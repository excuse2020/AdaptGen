class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		HashSet<Integer> set = new HashSet<>();
		long ans = 0, tempSum = 0;
		int start = 0;
		for (int last = 0; last < nums.length; last++) {
			while (set.contains(nums[last]) || last - start + 1 > k) {
				set.remove(nums[start]);
				tempSum -= nums[start];
				start++;
			}
			set.add(nums[last]);
			tempSum += nums[last];
			if (last - start + 1 == k) {
				ans = Math.max(ans,tempSum);
			}
		}
		return ans;
	}
}