class Solution {
	ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
	ArrayList<ArrayList<Integer>> permute(int[] nums) {
		if (nums == null || nums.length < 1) {
			return res;
		}
		Arrays.sort(nums);
		process1(nums,0);
		return res;
	}
	void process1(int[] chs, int i) {
		if (i == chs.length) {
			ArrayList<Integer> list = new ArrayList<Integer>();
			for (int a: chs) {	
				list.add(a);
			}
			res.add(list);
			return;
		}
		for (int j = i; j < chs.length; j++) {
			swap(chs,i,j);
			process1(chs,i + 1);
		}
	}
	void swap(int[] chs, int i, int j) {
		int tmp = chs[i];
		chs[i] = chs[j];
		chs[j] = tmp;
	}
}