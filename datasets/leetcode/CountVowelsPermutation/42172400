class Solution {
	int countVowelPermutation(int n) {
		int mod = 1000000007;
		long[][] dp = new long[n + 1][5];
		for (int i = 1; i <= n; i++) {
			for (int j = 0; j < 5; j++) {
				if (i == 1) {
					dp[i][j] = 1;
				} 
				else {
					if (j == 0) {
						dp[i][j] = (dp[i - 1][1]) % mod;
					} 
					else if (j == 1) {
						dp[i][j] = (dp[i - 1][0] + dp[i - 1][2]) % mod;
					} 
					else if (j == 2) {
						dp[i][j] = (dp[i - 1][0] + dp[i - 1][1]) % mod;
					} 
					else if (j == 3) {
						dp[i][j] = (dp[i - 1][2] + dp[i - 1][4]) % mod;
					} 
					else if (j == 4) {
						dp[i][j] = (dp[i - 1][0]) % mod;
					}
				}
			}
		}
		long sum = 0;
		for (int j = 0; j < 5; j++) {
			sum = (sum + dp[n][j]) % mod;
		}
		return (int) sum;
	}
}