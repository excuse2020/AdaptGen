class Solution {
	int Jump(int n, int[] A) {
		int[] jump = new int[n];
		for (int i = 0; i < n; i++) {
			jump[i] = i + A[i];
		}
		int index = 0;
		int res = 0;
		while (index < n - 1) {
			int accessible = jump[index];
			if (accessible >= n - 1) {
				res++;
				break;
			}
			index = findMax(jump,index + 1,accessible);
			res++;
		}
		return res;
	}
	int findMax(int[] jump, int start, int end) {
		int max = start;
		for (int i = start; i <= end; i++) {
			if (jump[i] > jump[max]) {
				max = i;
			}
		}
		return max;
	}
}