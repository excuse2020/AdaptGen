class Solution {
	int helper(List<Integer> list, boolean flag) {
		if (flag) {
			for (int i = 0; i < list.size(); i += 2) {
				list.set(i,-1);
			}
		} 
		else {
			for (int i = list.size() - 1; i >= 0; i -= 2) {
				list.set(i,-1);
			}
		}
		flag = !flag;
		for (int i = 0; i < list.size(); i++) {
			if (list.get(i) < 0) {
				list.remove(i);
			}
		}
		return list.size() == 1 ? list.get(0) : helper(list,flag);
	}
	int lastRemaining(int n) {
		if (n == 1) {
			return 1;
		}
		List<Integer> list = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			list.add(i);
		}
		boolean flag = true;
		return helper(list,flag);
	}
}