class Solution {
	int lps(String s) {
		int[] arr = new int[s.length()];
		int j = 0, i = 1, n = arr.length;
		while (i < s.length()) {
			if (s.charAt(j) == s.charAt(i)) {
				arr[i] = j + 1;
				j++;
				i++;
			} 
			else {
				if (j == 0) {
					arr[i] = 0;
					i++;
				} 
				else {
					j = arr[j - 1];
				}
			}
		}
		return arr[n - 1];
	}
	String shortestPalindrome(String str) {
		int n = str.length();
		String reversedStr = new StringBuilder(str).reverse().toString();
		String modifiedStr = str + "$";
		int lpp = lps(modifiedStr.toString());
		String ans1 = new StringBuilder(str.substring(lpp)).reverse().toString();
		return ans1 + str;
	}
}