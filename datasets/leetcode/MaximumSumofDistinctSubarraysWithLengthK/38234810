class Solution {
	long maximumSubarraySum(int[] arr, int k) {
		HashMap<Integer, Integer> hm = new HashMap<>();
		int n = arr.length;
		long ans = 0, sum = 0;
		for (int i = 0; i < k; i++) {
			hm.put(arr[i],hm.getOrDefault(arr[i],0) + 1);
			sum += arr[i];
		}
		if (hm.size() == k) {
			ans = Math.max(ans,sum);
		}
		for (int i = k; i < n; i++) {
			if (hm.get(arr[i - k]) == 1) {
				hm.remove(arr[i - k]);
			} 
			else {
				hm.put(arr[i - k],hm.get(arr[i - k]) - 1);
			}
			hm.put(arr[i],hm.getOrDefault(arr[i],0) + 1);
			sum -= arr[i - k];
			sum += arr[i];
			if (hm.size() == k) {
				ans = Math.max(ans,sum);
			}
		}
		return ans;
	}
}