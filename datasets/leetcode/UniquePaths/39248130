class Solution {
	int dfs(int i, int j, int m, int n, int[][] memo) {
		if (memo[i][j] != -1) {
			return memo[i][j];
		}
		if (i == m - 1 && j == n - 1) {
			return 1;
		}
		int count = 0;
		if (i + 1 < m) {
			count += dfs(i + 1,j,m,n,memo);
		}
		if (j + 1 < n) {
			count += dfs(i,j + 1,m,n,memo);
		}
		memo[i][j] = count;
		return count;
	}
	int uniquePaths(int m, int n) {
		int[][] memo = new int[m][n];
		for (int i = 0; i < m; i++) {
			Arrays.fill(memo[i],-1);
		}
		return dfs(0,0,m,n,memo);
	}
}