class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		ListNode p1 = pHead1;
		ListNode p2 = pHead2;
		int plen1 = 0, plen2 = 0;
		while (p1 != null) {
			plen1++;
			p1 = p1.next;
		}
		while (p2 != null) {
			plen2++;
			p2 = p2.next;
		}
		int maxlen = plen1 > plen2 ? plen1 : plen2;
		int minlen = maxlen == plen2 ? plen1 : plen2;
		ListNode[] arr1 = new ListNode[maxlen];
		ListNode[] arr2 = new ListNode[maxlen];
		ListNode maxNode = maxlen == plen2 ? pHead2 : pHead1;
		ListNode minNode = maxNode == pHead1 ? pHead2 : pHead1;
		int i = 0;
		while (maxNode != null) {
			arr1[i] = maxNode;
			i++;
			maxNode = maxNode.next;
		}
		i = maxlen - minlen;
		while (minNode != null) {
			arr2[i] = minNode;
			i++;
			minNode = minNode.next;
		}
		ListNode res = null;
		for (int j = maxlen - 1; j >= maxlen - minlen; j--) {
			if (arr1[j].val == arr2[j].val) {
				res = arr1[j];
			} 
			else {
				break;
			}
		}
		return res;
	}
}