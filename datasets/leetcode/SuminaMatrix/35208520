class Solution {
	int matrixSum(int[][] nums) {
		int m = nums.length;
		int n = nums[0].length;
		HashMap<Integer, TreeMap<Integer, Integer>> map = new HashMap<>();
		for (int i = 0; i < m; i++) {
			TreeMap<Integer, Integer> mp = new TreeMap<>();
			for (int j = 0; j < n; j++) {
				mp.put(nums[i][j],mp.getOrDefault(nums[i][j],0) + 1);
			}
			map.put(i,mp);
		}
		int score = 0;
		for (int i = 0; i < n; i++) {
			int max = Integer.MIN_VALUE;
			for (int j = 0; j < m; j++) {
				int x = map.get(j).lastKey();
				max = Math.max(max,x);
				if (map.get(j).get(x) > 1) {
					map.get(j).put(x,map.get(j).getOrDefault(x,0) - 1);
				} 
				else {
					map.get(j).remove(x);
				}
			}
			score += max;
		}
		return score;
	}
}