class Solution {
	int preudoPath(int[] map, TreeNode node) {
		if (node == null) {
			return 0;
		}
		map[node.val]++;
		if (node.left == null && node.right == null) {
			int c = 0;
			for (int i = 1; i <= 9; i++) {
				c += (map[i] % 2);
			}
			map[node.val]--;
			return (c <= 1) ? 1 : 0;
		}
		int count = 0;
		if (node.left != null) {
			count += preudoPath(map,node.left);
		}
		if (node.right != null) {
			count += preudoPath(map,node.right);
		}
		map[node.val]--;
		return count;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] map = new int[10];
		return preudoPath(map,root);
	}
}