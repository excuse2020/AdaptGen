class Solution {
	int find(int r, int c, int m, int n, int k, int[][] presum) {
		if (presum[r][c] == 0) {
			return 0;
		}
		if (k == 0) {
			return 1;
		}
		int ans = 0;
		for (int i = r + 1; i < m; i++) {
			if (presum[r][c] - presum[i][c] > 0) {
				ans = (ans + find(i,c,m,n,k - 1,presum)) % 1000000007;
			}
		}
		for (int j = c + 1; j < n; j++) {
			if (presum[r][c] - presum[r][j] > 0) {
				ans = (ans + find(r,j,m,n,k - 1,presum)) % 1000000007;
			}
		}
		return ans;
	}
	int ways(String[] pizza, int k) {
		int m = pizza.length, n = pizza[0].length();
		int[][] presum = new int[m + 1][n + 1];
		int i = m - 1;
		int j = n - 1;
	}
}