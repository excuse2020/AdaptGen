class Solution {
	ListNode EntryNodeOfLoop(ListNode pHead) {
		if (pHead == null || pHead.next == null) {
			return null;
		}
		ListNode fast = pHead;
		ListNode slow = pHead;
		boolean hasLoop = false;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
			if (fast == slow) {
				hasLoop = true;
				break;
			}
		}
		if (hasLoop) {
			int loopLength = 1;
			fast = fast.next;
			while (fast != slow) {
				loopLength++;
				fast = fast.next;
			}
			fast = pHead;
			slow = pHead;
			for (int i = 0; i < loopLength; i++) {
				fast = fast.next;
			}
			while (fast != slow) {
				fast = fast.next;
				slow = slow.next;
			}
			return fast;
		} 
		else {
			return null;
		}
	}
}