class Solution {
	void helper(TreeNode root, ArrayList<Integer> temp) {
		if (root.left == null && root.right == null) {
			temp.add(root.val);
			return;
		}
		if (root == null) {
			return;
		}
		if (root.left != null) {
			helper(root.left,temp);
		}
		if (root.right != null) {
			helper(root.right,temp);
		}
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		ArrayList<Integer> temp1 = new ArrayList<>();
		helper(root1,temp1);
		ArrayList<Integer> temp2 = new ArrayList<>();
		helper(root2,temp2);
		if (temp1.size() != temp2.size()) {
			return false;
		}
		for (int i = 0; i < temp1.size(); i++) {
			if (temp1.get(i) != temp2.get(i)) {
				return false;
			}
		}
		return true;
	}
}