class Solution {
	boolean IsBalanced_Solution(TreeNode pRoot) {
		Map.Entry<Boolean, Integer> result = isBalanced(pRoot);
		return result.getKey();
	}
	Map.Entry<Boolean, Integer> isBalanced(TreeNode node) {
		if (node == null) {
			return new AbstractMap.SimpleEntry<Boolean, Integer>(true, 0);
		}
		Map.Entry<Boolean, Integer> left, right;
		left = isBalanced(node.left);
		right = isBalanced(node.right);
		int depth = Math.max(left.getValue(),right.getValue()) + 1;
		if ((!left.getKey()) || (!left.getKey())) {
			return new AbstractMap.SimpleEntry<Boolean, Integer>(false, depth);
		}
		if (((left.getValue() - right.getValue()) > 1) || ((left.getValue() - right.getValue()) < -1)) {
			return new AbstractMap.SimpleEntry<Boolean, Integer>(false, depth);
		} 
		else {
			return new AbstractMap.SimpleEntry<Boolean, Integer>(true, depth);
		}
	}
}