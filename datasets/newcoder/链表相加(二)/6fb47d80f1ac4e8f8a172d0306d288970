class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<ListNode> stack1 = new Stack<>();
		Stack<ListNode> stack2 = new Stack<>();
		ListNode tmp1 = head1;
		ListNode tmp2 = head2;
		ListNode dummy = new ListNode(-1);
		while (tmp1 != null) {
			stack1.push(tmp1);
			tmp1 = tmp1.next;
		}
		while (tmp2 != null) {
			stack2.push(tmp2);
			tmp2 = tmp2.next;
		}
		int count = 0;
		int val = 0;
		while (stack1.size() > 0 && stack2.size() > 0) {
			val = stack1.pop().val + stack2.pop().val;
			if (val >= 10) {
				val = val % 10;
				count = 1;
			} 
			else {
				count = 0;
			}
			ListNode node = new ListNode(val);
			node.next = dummy.next;
			dummy.next = node;
		}
		while (stack1.size() > 0) {
			val = stack1.pop().val + count;
			if (val >= 10) {
				val = val % 10;
				count = 1;
			} 
			else {
				count = 0;
			}
			ListNode node = new ListNode(val);
			node.next = dummy.next;
			dummy.next = node;
		}
		while (stack2.size() > 0) {
			val = stack2.pop().val + count;
			if (val >= 10) {
				val = val % 10;
				count = 1;
			} 
			else {
				count = 0;
			}
			ListNode node = new ListNode(val);
			node.next = dummy.next;
			dummy.next = node;
		}
		return dummy.next;
	}
}