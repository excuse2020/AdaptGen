class Solution {
	boolean[][] mark = new boolean[1000000][2];
	List<List<Integer>> findPrimePairs(int n) {
		List<List<Integer>> result = new ArrayList<>();
		for (int i = 2; i <= n - 2 && i <= n - i; i++) {
			if (!mark[i][0]) {
				mark[i][0] = true;
				mark[i][1] = prime(i);
			}
			if (!mark[n - i][0]) {
				mark[n - i][0] = true;
				mark[n - i][1] = prime(n - i);
			}
			if (mark[i][1] && mark[n - i][1]) {
				result.add(List.of(i,n - i));
			}
		}
		return result;
	}
	boolean prime(int n) {
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}