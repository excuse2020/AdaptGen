class Solution {
	String LCS(String str1, String str2) {
		if (str1 == null || str2 == null) {
			return "";
		}
		int i = str1.length();
		int j = str2.length();
		int max = 0;
		int tmp = 0;
		String maxStr = "";
		StringBuilder tmpStr = new StringBuilder();
		for (int k = 0; k < i; k++) {
			int tmpK = k;
			int tmph = 0;
			boolean haveSame = false;
			for (int h = 0; h < j; h++) {
				char hK = str2.charAt(h);
				if (str1.charAt(tmpK) == hK) {
					tmp++;
					tmpStr.append(str1.charAt(tmpK));
					if (tmp >= max) {
						max = tmp;
						maxStr = tmpStr.toString();
					}
					tmpK++;
					if (tmpK >= i) {
						break;
					}
					if (!haveSame) {
						tmph = h;
					}
					haveSame = true;
				} 
				else {
					tmp = 0;
					if (tmpStr.length() > 0) {
						tmpStr = new StringBuilder();
					}
					tmpK = k;
					if (haveSame) {
						h = tmph;
						haveSame = false;
					}
				}
			}
			tmp = 0;
			tmpStr = new StringBuilder();
		}
		return maxStr;
	}
}