class Solution {
	long maxStrength(int[] nums) {
		ArrayList al = new ArrayList();
		ArrayList<List<Integer>> al1 = new ArrayList<>();
		meth(0,nums,al,al1);
		long max = Integer.MIN_VALUE;
		for (List<Integer> list: al1) {	
			if (list.size() == 0) {
				continue;
			}
			long p = 1;
			for (int i = 0; i < list.size(); i++) {
				p = p * (long) list.get(i);
			}
			if (p > max) {
				max = p;
			}
		}
		return max;
	}
	void meth(int ind, int nums, ArrayList al, ArrayList<List<Integer>> al1) {
		if (ind >= nums.length) {
			al1.add(new ArrayList(al));
			return;
		}
		al.add(nums[ind]);
		meth(ind + 1,nums,al,al1);
		al.remove(al.size() - 1);
		meth(ind + 1,nums,al,al1);
	}
}