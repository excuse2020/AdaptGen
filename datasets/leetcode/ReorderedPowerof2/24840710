class Solution {
	int[] count(int n) {
		int[] a = new int[10];
		while (n > 0) {
			a[n % 10]++;
			n = n / 10;
		}
		return a;
	}
	boolean isMatch(int[] a, int[] b) {
		for (int i = 0; i < 10; i++) {
			if (a[i] != b[i]) {
				return false;
			}
		}
		return true;
	}
	boolean reorderedPowerOf2(int n) {
		int[] freq = count(n);
		for (int i = 0; i < 32; i++) {
			int[] a = count((int) Math.pow(2,i));
			if (isMatch(a,freq)) {
				return true;
			}
		}
		return false;
	}
}