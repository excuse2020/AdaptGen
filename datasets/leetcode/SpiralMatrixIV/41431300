class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int topRow = 0, bottomRow = m - 1, leftCol = 0, rightCol = n - 1;
		int current = 0;
		int[][] matrix = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				matrix[i][j] = -1;
			}
		}
		ListNode temp = head;
		while (temp != null) {
			for (int j = leftCol; temp != null && j <= rightCol && current < n * m; j++) {
				matrix[topRow][j] = temp.val;
				temp = temp.next;
				current++;
			}
			topRow++;
			for (int i = topRow; temp != null && i <= bottomRow && current < n * m; i++) {
				matrix[i][rightCol] = temp.val;
				temp = temp.next;
				current++;
			}
			rightCol--;
			for (int j = rightCol; temp != null && j >= leftCol && current < n * m; j--) {
				matrix[bottomRow][j] = temp.val;
				temp = temp.next;
				current++;
			}
			bottomRow--;
			for (int i = bottomRow; temp != null && i >= topRow && current < n * m; i--) {
				matrix[i][leftCol] = temp.val;
				temp = temp.next;
				current++;
			}
			leftCol++;
		}
		return matrix;
	}
}