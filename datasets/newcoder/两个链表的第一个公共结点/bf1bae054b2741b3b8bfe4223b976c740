class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		HashMap<Integer, ListNode> hmap = new HashMap<>();
		while (pHead1 != null) {
			hmap.put(computedHash(pHead1),pHead1);
			pHead1 = pHead1.next;
		}
		while (pHead2 != null) {
			if (hmap.containsKey(computedHash(pHead2))) {
				return pHead2;
			}
			pHead2 = pHead2.next;
		}
		return null;
	}
	int computedHash(ListNode node) {
		int hash = 0;
		if (node != null) {
			hash += (node.val << 17);
		}
		if (node.next != null) {
			hash = node.next.val << 3 ^ hash;
		}
		System.out.println(node.val);
		System.out.println(hash);
		return hash;
	}
}