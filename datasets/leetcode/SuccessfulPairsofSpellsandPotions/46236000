class Solution {
	int eachSucessfulPair(int target, int[] p, long sucs) {
		int s = 0, e = p.length - 1;
		while (s <= e) {
			int mid = s + (e - s) / 2;
			long midVal = (long) p[mid] * target;
			if (midVal >= sucs) {
				e = mid - 1;
			} 
			else {
				s = mid + 1;
			}
		}
		return p.length - s;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int sucessPair = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			sucessPair[i] = eachSucessfulPair(spells[i],potions,success);
		}
		return sucessPair;
	}
}