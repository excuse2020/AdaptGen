class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode slow = head;
		ListNode fast = head.next;
		while (fast != null) {
			if (fast.val != slow.val) {
				slow = fast;
			} 
			else {
				slow.next = fast.next;
			}
			fast = fast.next;
		}
		return head;
	}
	ListNode deleteDuplicates2(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		Set<Integer> set = new HashSet<>();
		ListNode dummy = new ListNode(-1);
		ListNode tail = dummy;
		ListNode cur = head;
		while (cur != null) {
			if (!set.contains(cur.val)) {
				tail.next = cur;
				tail = cur;
				set.add(cur.val);
			}
			cur = cur.next;
		}
		tail.next = null;
		return dummy.next;
	}
}