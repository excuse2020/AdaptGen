class Solution {
	TreeNode balanceBST(TreeNode root) {
		ArrayList<Integer> list = new ArrayList<>();
		helper(list,root);
		TreeNode ans = helper1(list,0,list.size() - 1);
		return ans;
	}
	void helper(ArrayList<Integer> list, TreeNode root) {
		if (root == null) {
			return;
		}
		helper(list,root.left);
		list.add(root.val);
		helper(list,root.right);
	}
	TreeNode helper1(ArrayList<Integer> list, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = (start + end) / 2;
		TreeNode root = new TreeNode(list.get(mid));
		root.left = helper1(list,start,mid - 1);
		root.right = helper1(list,mid + 1,end);
		return root;
	}
}