class Solution {
	int maximumTop(int[] nums, int k) {
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < nums.length; i++) {
			max = Math.max(max,nums[i]);
		}
		if (k % 2 == 1 && nums.length == 1) {
			return -1;
		}
		if (k - 1 >= nums.length) {
			return max;
		}
		if (k == 0) {
			return nums[0];
		}
		Stack<Integer> st = new Stack<>();
		for (int i = nums.length - 1; i >= 0; i--) {
			st.push(nums[i]);
		}
		int max2 = Integer.MIN_VALUE;
		for (int i = 0; i < k - 1; i++) {
			max2 = Math.max(max2,st.pop());
		}
		st.pop();
		if (st.size() > 0) {
			return Math.max(st.peek(),max2);
		}
		return max2;
	}
}