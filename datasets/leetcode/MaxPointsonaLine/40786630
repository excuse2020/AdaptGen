class Solution {
	int maxPoints(int[][] points) {
		int result = Integer.MIN_VALUE;
		for (int i = 0; i < points.length; i++) {
			Map<Double, Integer> map = new HashMap<>();
			int sameX = 0;
			int same = 1;
			int currentMost = 0;
			int[] current = points[i];
			for (int j = i + 1; j < points.length; j++) {
				int[] temp = points[j];
				if (current[0] == temp[0] && current[1] == temp[1]) {
					same++;
				} 
				else if (current[0] == temp[0]) {
					sameX++;
				} 
				else {
					double slop = (temp[1] - current[1] + 0.0) / (temp[0] - current[0] + 0.0);
					slop = slop == -0.0 ? 0.0 : slop;
					map.putIfAbsent(slop,0);
					map.put(slop,map.get(slop) + 1);
					currentMost = Math.max(currentMost,map.get(slop));
				}
			}
			currentMost = Math.max(currentMost,sameX) + same;
			result = Math.max(result,currentMost);
		}
		return result;
	}
}