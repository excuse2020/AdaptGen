class Solution {
	int binarySearch(int[] A, int target) {
		int l = 0;
		int r = A.length;
		int mid;
		while (l < r) {
			mid = (l + r) / 2;
			if (target < A[mid]) {
				r = mid;
			} 
			else {
				l = mid + 1;
			}
		}
		return l;
	}
	int[] fullBloomFlowers(int[][] flower, int[] people) {
		int m = people.length;
		int n = flower.length;
		int st = new int[n];
		int et = new int[n];
		for (int i = 0; i < flower.length; i++) {
			st[i] = flower[i][0];
			et[i] = flower[i][1] + 1;
		}
		Arrays.sort(st);
		Arrays.sort(et);
		int ans = new int[m];
		int s = 0;
		int e = 0;
		for (int i = 0; i < m; i++) {
			int tg = people[i];
			s = binarySearch(st,tg);
			e = binarySearch(et,tg);
			ans[i] = s - e;
		}
		return ans;
	}
}