class Solution {
	int rabinKarp(String text, String pattern) {
		int hashPattern = 0;
		int hashText = 0;
		int patternLength = pattern.length();
		int textLength = text.length();
		int power = 1;
		for (int i = 0; i < patternLength - 1; i++) {
			power = (33 * power) % 101;
		}
		for (int i = 0; i < patternLength; i++) {
			hashPattern = (33 * hashPattern + pattern.charAt(i)) % 101;
			hashText = (33 * hashText + text.charAt(i)) % 101;
		}
		int ans = 0;
		for (int i = 0; i <= textLength - patternLength; i++) {
			if (hashPattern == hashText) {
				int j = 0;
				for (j = 0; j < patternLength; j++) {
					if (text.charAt(i + j) != pattern.charAt(j)) {
						break;
					}
				}
				if (j == patternLength) {
					ans++;
				}
			}
			if (i < textLength - patternLength) {
				hashText = (33 * (hashText - (text.charAt(i) * power)) + text.charAt(i + patternLength)) % 101;
				if (hashText < 0) {
					hashText += 101;
				}
			}
		}
		return ans;
	}
	boolean util1(String colors) {
		if (colors.length() < 3) {
			return false;
		}
		int patternA = rabinKarp(colors,"AAA");
		int patternB = rabinKarp(colors,"BBB");
		if (patternA > patternB) {
			return true;
		} 
		else {
			return false;
		}
	}
	boolean winnerOfGame(String colors) {
		return util1(colors);
	}
}