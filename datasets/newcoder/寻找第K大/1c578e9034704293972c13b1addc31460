class Solution {
	int findKth(int[] a, int n, int K) {
		quickSort(a,0,n - 1);
		return a[n - K];
	}
	int partition(int[] a, int left, int right) {
		int pv = a[right];
		int i = left;
		int j = left;
		while (j < right) {
			if (a[j] < pv) {
				if (i != j) {
					swap(a,i,j);
				}
				i++;
			}
			j++;
		}
		swap(a,i,right);
		return i;
	}
	void quickSort(int[] a, int left, int right) {
		if (left >= right) {
			return;
		}
		int p = partition(a,left,right);
		quickSort(a,left,p - 1);
		quickSort(a,p + 1,right);
	}
	void swap(int[] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
}