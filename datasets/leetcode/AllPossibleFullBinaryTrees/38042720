class Solution {
	HashMap<Integer, List<TreeNode>> h = new HashMap<>();
	List<TreeNode> allPossibleFBT(int n) {
		if (n <= 0) {
			return null;
		}
		if (h.get(n) != null) {
			return h.get(n);
		}
		TreeNode r = new TreeNode(0);
		List<TreeNode> l = new ArrayList<>();
		if (n == 1) {
			l.add(r);
			return l;
		}
		for (int i = 1; i <= n - 2; i++) {
			List<TreeNode> left = allPossibleFBT(i);
			List<TreeNode> right = allPossibleFBT(n - 1);
			for (TreeNode p: left) {	
				for (TreeNode q: right) {	
					TreeNode y = new TreeNode(0);
					y.left = p;
					y.right = q;
					l.add(y);
				}
			}
		}
		h.put(n,l);
		return l;
	}
}