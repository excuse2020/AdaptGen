class Solution {
	int longestBeautifulSubstring(String word) {
		if (word.length() < 5) {
			return 0;
		}
		int start = 0;
		int ans = 0;
		for (int i = 0; i < word.length(); i++) {
			if (i != 0 && word.charAt(i) < word.charAt(i - 1)) {
				String check = word.substring(start,i);
				if (vowelCheck(check)) {
					ans = Math.max(ans,check.length());
				}
				start = i;
			}
		}
		String secCheck = word.substring(start);
		if (vowelCheck(secCheck)) {
			ans = Math.max(ans,secCheck.length());
		}
		return ans;
	}
	boolean vowelCheck(String check) {
		Set<Character> vowels = new HashSet<>();
		for (char ch: check.toCharArray()) {	
			vowels.add(ch);
		}
		return vowels.size() == 5;
	}
}