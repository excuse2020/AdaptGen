class Solution {
	ListNode reverse(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode rev = reverse(head.next);
		head.next.next = head;
		head.next = null;
		return rev;
	}
	ListNode reverseKGroup(ListNode head, int k) {
		ListNode temp = head;
		for (int i = 1; i < k; i++) {
			if (temp == null) {
				return head;
			} 
			else {
				temp = temp.next;
			}
		}
		ListNode n = null;
		if (temp != null) {
			n = reverseKGroup(temp.next,k);
			temp.next = null;
			head = reverse(head);
			temp = head;
			while (temp.next != null) {
				temp = temp.next;
			}
			temp.next = n;
		}
		return head;
	}
}