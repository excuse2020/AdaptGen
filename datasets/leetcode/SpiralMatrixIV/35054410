class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		if (head == null) {
			return new int[0];
		}
		int[][] res = new int[m][n];
		int left = 0, top = 0, right = n - 1, bottom = m - 1;
		while (left <= right && top <= bottom) {
			for (int i = left; i <= right; i++) {
				if (head != null) {
					res[top][i] = head.val;
					head = head.next;
				} 
				else {
					res[top][i] = -1;
				}
			}
			top++;
			for (int i = top; i <= bottom; i++) {
				if (head != null) {
					res[i][right] = head.val;
					head = head.next;
				} 
				else {
					res[i][right] = -1;
				}
			}
			right--;
			if (top <= bottom) {
				for (int i = right; i >= left; i--) {
					if (head != null) {
						res[bottom][i] = head.val;
						head = head.next;
					} 
					else {
						res[bottom][i] = -1;
					}
				}
			}
			bottom--;
			if (left <= right) {
				for (int i = bottom; i >= top; i--) {
					if (head != null) {
						res[i][left] = head.val;
						head = head.next;
					} 
					else {
						res[i][left] = -1;
					}
				}
			}
			left++;
		}
		return res;
	}
}