class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null || pHead2 == null) {
			return null;
		}
		ListNode p1 = pHead1;
		ListNode p2 = pHead2;
		int lengthOfpHead1 = 0;
		int lengthOfpHead2 = 0;
		while (p1 != null) {
			lengthOfpHead1++;
			p1 = p1.next;
		}
		while (p2 != null) {
			lengthOfpHead2++;
			p2 = p2.next;
		}
		p1 = pHead1;
		p2 = pHead2;
		int differLength = lengthOfpHead1 - lengthOfpHead2;
		ListNode result = null;
		if (differLength >= 0) {
			while (differLength > 0) {
				p1 = p1.next;
				--differLength;
			}
			while (p2 != null) {
				if (p1.next == null && p2.next == null) {
					result = null;
				}
				if (p1 == p2) {
					result = p2;
					break;
				}
				p1 = p1.next;
				p2 = p2.next;
			}
		} 
		else {
			while (differLength < 0) {
				p2 = p2.next;
				++differLength;
			}
			while (p1 != null) {
				if (p1.next == null && p2.next == null) {
					result = null;
				}
				if (p1 == p2) {
					result = p1;
					break;
				}
				p1 = p1.next;
				p2 = p2.next;
			}
		}
		return result;
	}
}