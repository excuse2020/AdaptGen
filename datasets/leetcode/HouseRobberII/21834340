class Solution {
	int helper(ArrayList<Integer> house) {
		if (house.size() == 0) {
			return 0;
		}
		if (house.size() == 1) {
			return house.get(0);
		}
		int[] maxSum = new int[house.size()];
		maxSum[0] = house.get(0);
		maxSum[1] = Math.max(house.get(0),house.get(1));
		for (int i = 2; i < house.size(); i++) {
			maxSum[i] = Math.max(maxSum[i - 1],maxSum[i - 2] + house.get(i));
		}
		return maxSum[maxSum.length - 1];
	}
	int rob(int[] nums) {
		if (nums.length == 0) {
			return 0;
		}
		if (nums.length == 1) {
			return nums[0];
		}
		ArrayList<Integer> house1 = new ArrayList<>();
		ArrayList<Integer> house2 = new ArrayList<>();
		for (int i = 0; i < nums.length - 1; i++) {
			house1.add(nums[i]);
		}
		for (int i = 1; i < nums.length; i++) {
			house2.add(nums[i]);
		}
		int max1 = helper(house1);
		int max2 = helper(house2);
		System.out.println(max1);
		System.out.println(max2);
		return Math.max(max1,max2);
	}
}