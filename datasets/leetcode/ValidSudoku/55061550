class Solution {
	int check(int i, int j, char[][] board) {
		for (int p = 0; p < 9; p++) {
			if (p != j) {
				if (board[i][j] == board[i][p]) {
					return -1;
				}
			}
		}
		for (int q = 0; q < 9; q++) {
			if (q != i) {
				if (board[i][j] == board[q][j]) {
					return -1;
				}
			}
		}
		int sr = 3 * (i / 3);
		int sc = 3 * (j / 3);
		for (int p = sr; p < sr + 3; p++) {
			for (int q = sc; q < sc + 3; q++) {
				if (i != p && j != q) {
					if (board[i][j] == board[p][q]) {
						return -1;
					}
				}
			}
		}
		return 1;
	}
	boolean isValidSudoku(char[][] board) {
		int x = 0;
		int i = 0;
		int j = 0;
	}
}