class Solution {
	int[] fullBloomFlowers(int[][] flowers, int[] people) {
		int n = flowers.length;
		int[] start = new int[n];
		int[] end = new int[n];
		for (int i = 0; i < n; i++) {
			start[i] = flowers[i][0];
			end[i] = flowers[i][1];
		}
		Arrays.sort(start);
		Arrays.sort(end);
		int pp = people.length;
		int[] res = new int[pp];
		for (int i = 0; i < pp; i++) {
			int started = upperBound(start,people[i]);
			int ended = lowerBound(end,people[i]);
			res[i] = started - ended;
		}
		return res;
	}
	int lowerBound(int[] arr, int target) {
		int left = 0;
		int right = arr.length;
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (arr[mid] < target) {
				left = mid + 1;
			} 
			else {
				right = mid;
			}
		}
		return left;
	}
	int upperBound(int[] arr, int target) {
		int left = 0;
		int right = arr.length;
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (arr[mid] <= target) {
				left = mid + 1;
			} 
			else {
				right = mid;
			}
		}
		return left;
	}
}