class Solution {
	int earliestFullBloom(int[] a, int[] s) {
		HashMap<Integer, Integer> k = new LinkedHashMap<>();
		HashMap<Integer, Integer> l = new HashMap<>();
		HashMap<Integer, Integer> kk = new HashMap<>();
		int i, z = a.length;
		for (i = 0; i < z; i++) {
			l.put(i,a[i]);
			kk.put(i,s[i]);
		}
		Arrays.sort(s);
		List<HashMap.Entry<Integer, Integer>> w = new LinkedList<HashMap.Entry<Integer, Integer>>(kk.entrySet());
		Collections.sort(w,new Comparator<HashMap.Entry<Integer, Integer>>());
		Collections.reverse(w);
		for (HashMap.Entry<Integer, Integer> p: w) {	
			k.put(p.getKey(),p.getValue());
		}
		int nm = 0, m = 0, n = 0;
		for (int j: k.keySet()) {	
			n = n + l.get(j);
			nm = Math.max(n + k.get(j),nm);
			m = k.get(j);
		}
		return nm;
	}
}