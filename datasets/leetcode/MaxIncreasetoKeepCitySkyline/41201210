class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int n = grid.length, m = grid[0].length;
		if (n == 1 && m == 1) {
			return 0;
		}
		int[] row = new int[n], col = new int[m];
		for (int i = 0; i < n; i++) {
			int max = -1;
			for (int j = 0; j < m; j++) {
				max = Integer.max(max,grid[i][j]);
			}
			row[i] = max;
		}
		for (int j = 0; j < m; j++) {
			int max = -1;
			for (int i = 0; i < n; i++) {
				max = Integer.max(max,grid[i][j]);
			}
			col[j] = max;
		}
		int increase = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				int max_min = Integer.min(row[i],col[j]);
				increase += max_min - grid[i][j];
			}
		}
		return increase;
	}
}