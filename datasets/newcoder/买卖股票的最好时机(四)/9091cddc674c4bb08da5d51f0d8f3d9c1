class Solution {
	int maxProfit(int[] prices, int k) {
		if (prices.length <= 1) {
			return 0;
		}
		int[] cash = new int[prices.length];
		for (int i = 0; i < k; i++) {
			maxProfitOnePass(prices,cash);
		}
		return cash[cash.length - 1];
	}
	void maxProfitOnePass(int[] prices, int[] cash) {
		int maxCash = Integer.MIN_VALUE;
		for (int i = 0; i < cash.length; i++) {
			cash[i] = Math.max(maxCash,cash[i] - prices[i]);
			maxCash = Math.max(maxCash,cash[i]);
		}
		maxCash = Integer.MIN_VALUE;
		for (int i = 0; i < cash.length; i++) {
			cash[i] = Math.max(maxCash,cash[i] + prices[i]);
			maxCash = Math.max(maxCash,cash[i]);
		}
	}
}