class Solution {
	List<Integer> getPrimeFactors(int number) {
		List<Integer> result = new ArrayList<>();
		while (number % 2 == 0) {
			result.add(2);
			number = number / 2;
		}
		for (int i = 3; i <= Math.sqrt(number); i = i + 2) {
			while (number % i == 0) {
				result.add(i);
				number = number / i;
			}
		}
		if (number > 2) {
			result.add(number);
		}
		return result;
	}
	int smallestValue(int n) {
		int previousSum = -1;
		int currentSum = n;
		while (true) {
			if (currentSum == previousSum) {
				break;
			}
			List<Integer> factors = getPrimeFactors(currentSum);
			previousSum = currentSum;
			currentSum = 0;
			for (int i = 0; i < factors.size(); i++) {
				currentSum = currentSum + factors.get(i);
			}
			if (factors.size() <= 1) {
				break;
			}
		}
		return currentSum;
	}
}