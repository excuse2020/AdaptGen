class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		TreeNode[] nodes = new TreeNode[100_001];
		int[] counts = new int[100_001];
		for (int[] description: descriptions) {	
			int parent = description[0];
			int child = description[1];
			int isLeft = description[2];
			if (nodes[parent] == null) {
				nodes[parent] = new TreeNode(parent);
			}
			if (nodes[child] == null) {
				nodes[child] = new TreeNode(child);
			}
			if (isLeft == 1) {
				nodes[parent].left = nodes[child];
			} 
			else {
				nodes[parent].right = nodes[child];
			}
			++counts[child];
		}
		for (int i = 0; i < 100_001; ++i) {
			if (nodes[i] != null && counts[i] == 0) {
				return nodes[i];
			}
		}
		return null;
	}
}