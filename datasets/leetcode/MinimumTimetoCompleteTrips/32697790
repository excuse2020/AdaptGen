class Solution {
	boolean canDone(int[] time, int totalTrips, long mid) {
		long sum = 0;
		for (int i = 0; i < time.length; i++) {
			sum += mid / (long) time[i];
		}
		if (sum >= totalTrips) {
			return true;
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		Arrays.sort(time);
		long l = 1;
		long h = 100000000000000L;
		long ans = Long.MAX_VALUE;
		while (l <= h) {
			long mid = l + (h - l) / 2;
			if (canDone(time,totalTrips,mid)) {
				ans = mid;
				h = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		return ans;
	}
}