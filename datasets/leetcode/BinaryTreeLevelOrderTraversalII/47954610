class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> listOfLevelsBottomUp = new ArrayList<>();
		List<List<Integer>> levels = new ArrayList<>();
		List<Integer> level = new ArrayList<>();
		if (root == null) {
			return listOfLevelsBottomUp;
		}
		List<TreeNode> parents = new ArrayList<>();
		List<TreeNode> children = new ArrayList<>();
		parents.add(root);
		while (parents.size() > 0) {
			level = new ArrayList<>();
			children = new ArrayList<>();
			for (TreeNode node: parents) {	
				level.add(node.val);
				if (node.left != null) {
					children.add(node.left);
				}
				if (node.right != null) {
					children.add(node.right);
				}
			}
			levels.add(level);
			parents = children;
		}
		for (int i = levels.size() - 1; i >= 0; i--) {
			listOfLevelsBottomUp.add(levels.get(i));
		}
		return listOfLevelsBottomUp;
	}
}