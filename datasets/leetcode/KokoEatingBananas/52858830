class Solution {
	int maxspeed(int[] piles) {
		int maxi = Integer.MIN_VALUE;
		for (int pile: piles) {	
			maxi = Math.max(maxi,pile);
		}
		return maxi;
	}
	int minEatingSpeed(int[] piles, int h) {
		int start = 1;
		int end = maxspeed(piles);
		while (start < end) {
			int mid = start + (end - start) / 2;
			int hours = totalhours(piles,mid);
			if (hours <= h) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return start;
	}
	int totalhours(int[] piles, int mid) {
		int totalhours = 0;
		for (int pile: piles) {	
			totalhours += (pile + mid - 1) / mid;
		}
		return totalhours;
	}
}