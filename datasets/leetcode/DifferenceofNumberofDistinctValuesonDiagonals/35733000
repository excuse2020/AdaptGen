class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int m = grid.length, n = grid[0].length;
		for (int i = m - 1; i >= 0; i--) {
			populateDiagonal(grid,i,0);
		}
		for (int j = 1; j < n; j++) {
			populateDiagonal(grid,0,j);
		}
		return grid;
	}
	void populateDiagonal(int[][] grid, int row, int col) {
		int m = grid.length, n = grid[0].length, botRight = 0, topLeft = 0;
		int[] botRightCount = new int[51], topLeftCount = new int[51];
		for (int i = row, j = col; i < m && j < n; i++, j++) {
			if (botRightCount[grid[i][j]]++ == 0) {
				botRight++;
			}
		}
		for (int i = row, j = col; i < m && j < n; i++, j++) {
			if (botRightCount[grid[i][j]]-- == 1) {
				botRight--;
			}
			int diff = Math.abs(topLeft - botRight);
			if (topLeftCount[grid[i][j]]++ == 0) {
				topLeft++;
			}
			grid[i][j] = diff;
		}
	}
}