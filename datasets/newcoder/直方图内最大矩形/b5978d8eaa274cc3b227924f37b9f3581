class Solution {
	int largestRectangleArea(int[] heights) {
		int n = heights.length;
		ArrayDeque<Integer> stack = new ArrayDeque<>();
		int res = 0;
		for (int i = 0; i < n; i++) {
			while (!stack.isEmpty() && heights[stack.peek()] > heights[i]) {
				int curHeight = heights[stack.pop()];
				int L = stack.isEmpty() ? 0 : stack.peek() + 1;
				res = Math.max(res,(i - L) * curHeight);
			}
			stack.push(i);
		}
		while (!stack.isEmpty()) {
			int curHeight = heights[stack.pop()];
			int L = stack.isEmpty() ? 0 : stack.peek() + 1;
			res = Math.max(res,(n - L) * curHeight);
		}
		return res;
	}
}