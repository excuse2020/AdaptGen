class Solution {
	int maxLength(int[] arr) {
		if (arr == null || arr.length == 0) {
			return 0;
		}
		Set<Integer> set = new HashSet<>();
		Queue<Integer> queue = new LinkedList<>();
		for (int i = 0; i < arr.length; i++) {
			queue.add(arr[i]);
		}
		int max = 0;
		int left = 0;
		while (!queue.isEmpty()) {
			if (!set.contains(queue.peek())) {
				set.add(queue.poll());
			} 
			else {
				max = Math.max(max,set.size());
				while (arr[left] != queue.peek() && left < arr.length) {
					set.remove(arr[left]);
					left++;
				}
				left++;
				queue.poll();
			}
		}
		max = Math.max(max,set.size());
		return max;
	}
}