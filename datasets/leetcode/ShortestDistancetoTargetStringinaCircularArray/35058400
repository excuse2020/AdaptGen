class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		int timesitratingright = words.length - 1;
		int i = 1;
		int towardsright = startIndex;
		int firstcase = 0;
		if (target.equals(words[startIndex])) {
			return 0;
		}
		while (i <= timesitratingright) {
			towardsright++;
			if (towardsright < words.length) {
				System.out.println("owardsright" + towardsright);
				if (target.equals(words[towardsright])) {
					firstcase = i;
					System.out.println("firstcasenadar" + firstcase);
					break;
				}
			} 
			else {
				if (target.equals(words[towardsright % words.length])) {
					firstcase = i;
					break;
				}
			}
			i++;
		}
		int timesitratingleft = words.length - 1;
		int j = 1;
		int secondcase = 0;
		int towardsleft = startIndex - 1;
		while (j <= timesitratingleft) {
			if (target.equals(words[(words.length + towardsleft) % words.length])) {
				secondcase = j;
				break;
			}
			j++;
			towardsleft--;
		}
		System.out.println("firstcase" + firstcase);
		System.out.println("secondcase" + secondcase);
		if (firstcase == 0 && secondcase == 0) {
			return -1;
		} 
		else {
			return Math.min(secondcase,firstcase);
		}
	}
}