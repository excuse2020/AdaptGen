class Solution {
	int getMaxLeftNode(TreeNode node) {
		if (node == null) {
			return Integer.MIN_VALUE;
		}
		while (node.right != null) {
			node = node.right;
		}
		return node.val;
	}
	int getMinRightNode(TreeNode node) {
		if (node == null) {
			return Integer.MAX_VALUE;
		}
		while (node.left != null) {
			node = node.left;
		}
		return node.val;
	}
	boolean isValidBST(TreeNode root) {
		if (root == null) {
			return true;
		}
		return getMaxLeftNode(root.left) < root.val && getMinRightNode(root.right) > root.val && isValidBST(root.left) && isValidBST(root.right);
	}
}