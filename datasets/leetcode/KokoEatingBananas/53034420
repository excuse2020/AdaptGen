class Solution {
	boolean isGoodTime(int[] piles, int h, int k) {
		int sum = 0;
		int i = 0;
		while (i < piles.length) {
			sum += Math.ceil((double) piles[i] / k);
			i++;
		}
		return sum <= h;
	}
	int minEatingSpeed(int[] piles, int h) {
		int n = piles.length;
		Arrays.sort(piles);
		int left = 1;
		int right = piles[n - 1];
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (isGoodTime(piles,h,mid)) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}