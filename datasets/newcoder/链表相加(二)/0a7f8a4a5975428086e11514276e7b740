class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		head1 = reverse(head1);
		head2 = reverse(head2);
		ListNode head = new ListNode(-1);
		ListNode nHead = head;
		int tmp = 0;
		while (head1 != null || head2 != null) {
			int val = tmp;
			if (head1 != null) {
				val += head1.val;
				head1 = head1.next;
			}
			if (head2 != null) {
				val += head2.val;
				head2 = head2.next;
			}
			tmp = val / 10;
			nHead.next = new ListNode(val % 10);
			nHead = nHead.next;
		}
		if (tmp > 0) {
			nHead.next = new ListNode(tmp);
		}
		return reverse(head.next);
	}
	ListNode reverse(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode cur = head;
		ListNode node = null;
		while (cur != null) {
			ListNode tail = cur.next;
			cur.next = node;
			node = cur;
			cur = tail;
		}
		return node;
	}
}