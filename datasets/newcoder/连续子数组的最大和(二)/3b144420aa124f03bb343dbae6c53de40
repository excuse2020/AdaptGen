class Solution {
	int[] FindGreatestSumOfSubArray(int[] array) {
		if (array.length == 0) {
			return new int[0];
		}
		int start = 0, end = 1;
		int max = Integer.MIN_VALUE, sum = array[0];
		int res = 0, ree = 1;
		for (int i = 1; i < array.length; ++i) {
			if (array[i] > sum + array[i]) {
				sum = array[i];
				start = i;
				end = i + 1;
				if (sum > max || sum == max && ree - res < end - start) {
					res = start;
					ree = end;
					max = sum;
				}
			} 
			else {
				sum = sum + array[i];
				end = i + 1;
				if (sum > max || (sum == max && end - start > ree - res)) {
					res = start;
					ree = end;
					max = sum;
				}
			}
		}
		return Arrays.copyOfRange(array,res,ree);
	}
}