class Solution {
	void merge(int[] a, int l, int r, int mid) {
		int left = Arrays.copyOfRange(a,l,mid + 1);
		int right = Arrays.copyOfRange(a,mid + 1,r + 1);
		int i = 0, j = 0, k = l;
		while (i < left.length && j < right.length) {
			if (left[i] <= right[j]) {
				a[k++] = left[i++];
			} 
			else {
				a[k++] = right[j++];
			}
		}
		while (i < left.length) {
			a[k++] = left[i++];
		}
		while (j < right.length) {
			a[k++] = right[j++];
		}
	}
	void mergeSort(int[] a, int l, int r) {
		if (l < r) {
			int mid = (l + r) / 2;
			mergeSort(a,l,mid);
			mergeSort(a,mid + 1,r);
			merge(a,l,r,mid);
			return;
		}
	}
	int[] sortArray(int[] a) {
		mergeSort(a,0,a.length - 1);
		return a;
	}
}