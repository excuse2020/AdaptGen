class Solution {
	boolean isContinuous(int[] numbers) {
		if (numbers == null || numbers.length < 1) {
			return false;
		}
		qsort(numbers);
		int len = numbers.length;
		int numZero = 0;
		int numBlank = 0;
		for (int i = 0; i < len; i++) {
			if (numbers[i] == 0) {
				numZero++;
			}
		}
		int small = numZero;
		int big = small + 1;
		while (big < len) {
			if (numbers[small] == numbers[big]) {
				return false;
			}
			numBlank += numbers[big] - numbers[small];
			small = big;
			big++;
		}
		return numBlank > numZero ? false : true;
	}
	void qsort(int[] numbers) {
		int[] map = new int[14];
		for (int i = 0; i < numbers.length; i++) {
			map[numbers[i]]++;
		}
		int j = 0;
		for (int i = 0; i < 14; i++) {
			while (map[i] > 0) {
				numbers[j++] = i;
				map[i]--;
			}
		}
	}
}