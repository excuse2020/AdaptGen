class Solution {
	int LIS(int[] arr) {
		if (arr == null || arr.length == 0) {
			return 0;
		}
		int n = arr.length;
		int res = 0;
		int[] nums = new int[n];
		int end = -1;
		for (int i = 0; i < n; i++) {
			if (i == 0 || arr[i] > nums[end]) {
				nums[++end] = arr[i];
			} 
			else {
				int index = binarySearch(nums,end,arr[i]);
				nums[index] = arr[i];
			}
		}
		return end + 1;
	}
	int binarySearch(int[] nums, int end, int target) {
		if (nums == null || end < 0) {
			return -1;
		}
		int left = 0, right = end;
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (nums[mid] == target) {
				return mid;
			} 
			else if (nums[mid] > target) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}