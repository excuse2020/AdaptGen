class Solution {
	int findCount(int i, int j, int[] nums1, int[] nums2, int[][] dp) {
		if (i == 0 || j == 0) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (nums1[i - 1] == nums2[j - 1]) {
			return dp[i][j] = 1 + findCount(i - 1,j - 1,nums1,nums2,dp);
		}
		return dp[i][j] = Math.max(findCount(i - 1,j,nums1,nums2,dp),findCount(i,j - 1,nums1,nums2,dp));
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int[][] dp = new int[nums1.length + 1][nums2.length + 1];
		for (int[] arr: dp) {	
			Arrays.fill(arr,-1);
		}
		return findCount(nums1.length,nums2.length,nums1,nums2,dp);
	}
}