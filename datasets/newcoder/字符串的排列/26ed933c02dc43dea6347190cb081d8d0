class Solution {
	ArrayList<String> Permutation(String str) {
		ArrayList<String> res = new ArrayList<>();
		if (str != null) {
			pailie(str.toCharArray(),0,res);
			Collections.sort(res);
		}
		return res;
	}
	void pailie(char[] c, int i, ArrayList<String> res) {
		Set<Character> s = new HashSet<>();
		if (i == c.length - 1) {
			res.add(String.valueOf(c));
		} 
		else {
			for (int j = i; j < c.length; ++j) {
				if (!s.contains(c[j])) {
					s.add(c[j]);
					swap(c,i,j);
					pailie(c,i + 1,res);
					swap(c,j,i);
				}
			}
		}
	}
	void swap(char[] c, int i, int j) {
		char flag = c[i];
		c[i] = c[j];
		c[j] = flag;
	}
}