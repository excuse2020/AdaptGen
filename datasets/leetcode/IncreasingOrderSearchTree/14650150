class Solution {
	TreeNode increasingBST(TreeNode root) {
		if (root == null) {
			return null;
		}
		List<TreeNode> traversal = new ArrayList<>();
		inorder(root,traversal);
		reorder(traversal);
		return traversal.get(0);
	}
	void inorder(TreeNode root, List<TreeNode> traversal) {
		if (root != null) {
			inorder(root.left,traversal);
			traversal.add(root);
			inorder(root.right,traversal);
		}
	}
	void reorder(List<TreeNode> traversal) {
		for (int i = 0; i <= traversal.size() - 1; i++) {
			TreeNode current = traversal.get(i);
			current.left = null;
			if (i < traversal.size() - 1) {
				current.right = traversal.get(i + 1);
			}
		}
	}
}