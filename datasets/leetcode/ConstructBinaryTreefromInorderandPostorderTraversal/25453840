class Solution {
	int index = 0;
	Map<Integer, Integer> map = new HashMap<>();
	TreeNode buildTree(int[] inorder, int[] postorder) {
		generateMap(inorder);
		TreeNode ans = solve(inorder,postorder,0,postorder.length - 1);
		return ans;
	}
	void generateMap(int[] inorder) {
		for (int i = 0; i < inorder.length; i++) {
			map.put(inorder[i],i);
		}
		index = inorder.length - 1;
	}
	TreeNode solve(int[] inorder, int[] postorder, int start, int end) {
		if (start > end || index < 0) {
			return null;
		}
		int e = postorder[index--];
		TreeNode ans = new TreeNode(e);
		int pos = map.get(e);
		ans.right = solve(inorder,postorder,pos + 1,end);
		ans.left = solve(inorder,postorder,start,pos - 1);
		return ans;
	}
}