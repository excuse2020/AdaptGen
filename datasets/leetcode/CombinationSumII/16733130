class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		List<List<Integer>> ansList = new ArrayList<>();
		func(0,target,candidates,new ArrayList<Integer>(),ansList);
		return ansList;
	}
	void func(int ind, int target, int[] arr, List<Integer> ds, List<List<Integer>> ansList) {
		if (target == 0) {
			ansList.add(new ArrayList<>(ds));
			return;
		}
		for (int i = ind; i < arr.length; i++) {
			if (i > ind && arr[i] == arr[i - 1]) {
				continue;
			}
			if (arr[ind] > target) {
				break;
			}
			ds.add(arr[i]);
			func(i + 1,target - arr[i],arr,ds,ansList);
			ds.remove(ds.size() - 1);
		}
	}
}