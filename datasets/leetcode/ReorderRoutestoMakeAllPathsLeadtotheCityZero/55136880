class Solution {
	int dfs(ArrayList<int[]> adj, int start, boolean[] visited) {
		visited[start] = true;
		int total = 0;
		for (int[] neighbour: adj[start]) {	
			if (!visited[neighbour[0]]) {
				total += neighbour[1] + dfs(adj,neighbour[0],visited);
			}
		}
		return total;
	}
	int minReorder(int n, int[][] connections) {
		ArrayList<int[]> adj = new ArrayList[n];
		for (int i = 0; i < n; i++) {
			adj[i] = new ArrayList<>();
		}
		for (int[] connection: connections) {	
			adj[connection[0]].add(new int{connection[1], 1});
			adj[connection[1]].add(new int{connection[0], 0});
		}
		boolean[] visited = new boolean[n];
		return dfs(adj,0,visited);
	}
}