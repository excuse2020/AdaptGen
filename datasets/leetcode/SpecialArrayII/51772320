class Solution {
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		int n = nums.length;
		int m = queries.length;
		boolean[] ret = new boolean[m];
		List<Integer> invalid = new ArrayList<>();
		for (int i = 0; i < n - 1; ++i) {
			if ((nums[i] + nums[i + 1]) % 2 == 0) {
				invalid.add(i);
			}
		}
		for (int j = 0; j < m; j++) {
			ret[j] = true;
			int r = invalid.size() - 1;
			int l = 0;
			while (l <= r) {
				int mid = (r + l) / 2;
				if (queries[j][0] > invalid.get(mid)) {
					l = mid + 1;
				} 
				else if (queries[j][1] <= invalid.get(mid)) {
					r = mid - 1;
				} 
				else {
					ret[j] = false;
					break;
				}
			}
		}
		return ret;
	}
}