class Solution {
	int maximumTastiness(int[] arr, int k) {
		int n = arr.length;
		Arrays.sort(arr);
		int l = 0;
		int h = arr[n - 1] - arr[0];
		int res = 0;
		while (l <= h) {
			int mid = l + (h - l) / 2;
			if (possible(arr,mid,k)) {
				l = mid + 1;
				res = Math.max(res,mid);
			} 
			else {
				h = mid - 1;
			}
		}
		return res;
	}
	boolean possible(int arr, int mid, int k) {
		int l = arr[0];
		int temp = 1;
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] - l >= mid) {
				l = arr[i];
				temp++;
			}
		}
		return temp >= k;
	}
}