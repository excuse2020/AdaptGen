class Solution {
	int evalRPN(String[] tokens) {
		if (tokens.length == 1) {
			return Integer.parseInt(tokens[0]);
		}
		List<String> l = new ArrayList<>(Arrays.asList(tokens));
		int i = 2;
		while (l.size() != 1) {
			if (l.get(i).equals("+")) {
				int a = Integer.parseInt(l.get(i - 1));
				int b = Integer.parseInt(l.get(i - 2));
				l.remove(i);
				l.remove(i - 1);
				l.remove(i - 2);
				l.add(i - 2,a + b);
				i -= 2;
			} 
			else if (l.get(i).equals("-")) {
				int a = Integer.parseInt(l.get(i - 1));
				int b = Integer.parseInt(l.get(i - 2));
				l.remove(i);
				l.remove(i - 1);
				l.remove(i - 2);
				l.add(i - 2,b - a + "");
				i -= 2;
			} 
			else if (l.get(i).equals("*")) {
				int a = Integer.parseInt(l.get(i - 1));
				int b = Integer.parseInt(l.get(i - 2));
				l.remove(i);
				l.remove(i - 1);
				l.remove(i - 2);
				l.add(i - 2,a * b + "");
				i -= 2;
			} 
			else if (l.get(i).equals("/")) {
				double a = Double.parseDouble(l.get(i - 1));
				double b = Double.parseDouble(l.get(i - 2));
				l.remove(i);
				l.remove(i - 1);
				l.remove(i - 2);
				l.add(i - 2,String.valueOf((int) (b / a)));
				i -= 2;
			} 
			else {
				i++;
			}
		}
		return Integer.parseInt(l.get(0));
	}
}