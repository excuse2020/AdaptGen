class Solution {
	int[] advantageCount(int[] nums1, int[] nums2) {
		TreeMap<Integer, Integer> map = new TreeMap<>();
		for (int num1: nums1) {	
			map.putIfAbsent(num1,0);
			map.put(num1,map.get(num1) + 1);
		}
		int[] result = new int[nums1.length];
		Arrays.fill(result,-1);
		for (int i = 0; i < nums2.length; i++) {
			int num2 = nums2[i];
			Integer key = map.higherKey(num2);
			if (key != null) {
				result[i] = key;
				if (map.get(key) - 1 == 0) {
					map.remove(key);
				} 
				else {
					map.put(key,map.get(key) - 1);
				}
			} 
			else {
				Integer smallest = map.firstKey();
				result[i] = smallest;
				if (map.get(smallest) - 1 == 0) {
					map.remove(smallest);
				} 
				else {
					map.put(smallest,map.get(smallest) - 1);
				}
			}
		}
		return result;
	}
}