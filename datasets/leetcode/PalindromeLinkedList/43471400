class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode revHead = reverseList(slow);
		slow.next = null;
		while (head != null && revHead != null) {
			if (head.val != revHead.val) {
				return false;
			}
			head = head.next;
			revHead = revHead.next;
		}
		return true;
	}
	ListNode reverseList(ListNode head) {
		ListNode newHead = null;
		while (head != null) {
			ListNode tmpNode = head;
			head = head.next;
			tmpNode.next = newHead;
			newHead = tmpNode;
		}
		return newHead;
	}
}