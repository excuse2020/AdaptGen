class Solution {
	int lc;
	int rc;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		lc = 0;
		rc = 0;
		int c = count(root,x);
		int nnpwx = n - (lc + rc);
		int maxcount = Math.max(nnpwx,Math.max(lc,rc));
		return maxcount > n / 2;
	}
	int count(TreeNode root, int x) {
		if (root == null) {
			return 0;
		}
		int left = count(root.left,x);
		int right = count(root.right,x);
		if (root.val == x) {
			lc = left;
			rc = right;
		}
		return left + right;
	}
}