class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		int n = words.length;
		int d1 = Integer.MAX_VALUE;
		int d2 = Integer.MAX_VALUE;
		if (words[startIndex].equals(target)) {
			return 0;
		}
		int ld = -1, rd = -1, ans = Integer.MAX_VALUE;
		for (int i = (startIndex + 1) % n; i != startIndex; i = (i + 1) % n) {
			if (words[i].equals(target)) {
				ld = i > startIndex ? startIndex + (n - i) : startIndex - i;
				rd = i > startIndex ? i - startIndex : n - startIndex + i;
				ans = Math.min(ans,Math.min(ld,rd));
			}
		}
		if (ld == -1) {
			return -1;
		}
		return ans;
	}
}