class Solution {
	int createPQ(PriorityQueue<Integer> pq) {
		if (pq.isEmpty()) {
			return 0;
		} 
		else if (pq.size() == 1) {
			return pq.element();
		}
		int temp1 = pq.remove();
		int temp2 = pq.remove();
		if (temp1 != temp2) {
			pq.add(temp1 - temp2);
		}
		return createPQ(pq);
	}
	int lastStoneWeight(int[] stones) {
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		for (Integer i: stones) {	
			pq.add(i);
		}
		return createPQ(pq);
	}
}