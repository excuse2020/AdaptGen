class Solution {
	int getMaxDiff(int[] arr1, int[] arr2) {
		int diff = 0, sum1 = 0, sum2 = 0, n = arr1.length;
		for (int i = 0; i < n; i++) {
			sum1 += arr1[i];
			sum2 += arr2[i];
			if (sum1 > sum2) {
				sum1 = sum2 = 0;
			} 
			else {
				diff = Math.max(sum2 - sum1,diff);
			}
		}
		return diff;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int sum1 = 0, sum2 = 0;
		for (int i = 0; i < nums1.length; i++) {
			sum1 += nums1[i];
			sum2 += nums2[i];
		}
		int leftMax = getMaxDiff(nums1,nums2) + sum1;
		int rightMax = getMaxDiff(nums2,nums1) + sum2;
		return Math.max(leftMax,rightMax);
	}
}