class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		inOrder(root,list);
		return createBalancedBST(list,0,list.size() - 1);
	}
	TreeNode createBalancedBST(List<Integer> list, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode left = createBalancedBST(list,start,mid - 1);
		TreeNode right = createBalancedBST(list,mid + 1,end);
		return new TreeNode(list.get(mid), left, right);
	}
	void inOrder(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		inOrder(root.left,list);
		list.add(root.val);
		inOrder(root.right,list);
	}
}