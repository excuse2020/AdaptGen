class Solution {
	int[][] dp;
	int[] nums;
	int dfs(int i, int j) {
		if (i == j) {
			return nums[i];
		}
		if (i > j || j < 0) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		dp[i][j] = Math.max(dfs(i,j - 2) + nums[j],dfs(i,j - 1));
		return dp[i][j];
	}
	int rob(int[] nums) {
		int n = nums.length;
		this.nums = nums;
		this.dp = new int[2][n];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return Math.max(dfs(0,n - 2),dfs(1,n - 1));
	}
}