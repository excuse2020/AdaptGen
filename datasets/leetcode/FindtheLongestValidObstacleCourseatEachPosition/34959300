class Solution {
	int bs(int[] arr, int b, int e, int t) {
		int idx = -1;
		while (b <= e) {
			int m = (b + e) / 2;
			if (arr[m] <= t) {
				idx = m;
				b = m + 1;
			} 
			else {
				e = m - 1;
			}
		}
		return idx;
	}
	int[] longestObstacleCourseAtEachPosition(int[] arr) {
		int n = arr.length;
		int[] res = new int[n];
		int[] dp = new int[n];
		int max = -1;
		for (int i = 0; i < n; i++) {
			int idx = bs(dp,0,max,arr[i]);
			max = Math.max(max,idx + 1);
			res[i] = idx + 2;
			dp[idx + 1] = arr[i];
		}
		return res;
	}
}