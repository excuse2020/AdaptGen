class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> res = new ArrayList<>();
		getCombinationSum(candidates,target,new ArrayList<>(),0,0,res);
		return res;
	}
	void getCombinationSum(int[] candidates, int target, List<Integer> temp, int sumSoFar, int pos, List<List<Integer>> res) {
		if (sumSoFar == target) {
			res.add(new ArrayList<>(temp));
			return;
		}
		if (sumSoFar > target) {
			return;
		}
		for (int i = pos; i < candidates.length; i++) {
			temp.add(candidates[i]);
			getCombinationSum(candidates,target,temp,sumSoFar + candidates[i],i,res);
			temp.remove(temp.size() - 1);
		}
	}
}