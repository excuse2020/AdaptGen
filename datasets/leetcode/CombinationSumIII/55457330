class Solution {
	List<List<Integer>> output = new ArrayList();
	List<List<Integer>> combinationSum3(int k, int n) {
		count(n,k,new HashSet());
		return output;
	}
	boolean count(int amount, int total, Set<Integer> st) {
		if (amount == 0) {
			return true;
		}
		if (amount < 0 || st.size() > total) {
			return false;
		}
		for (int i = 1; i <= 9; i++) {
			if (!st.contains(i)) {
				amount -= i;
				st.add(i);
				if (count(amount,total,st) && st.size() == total) {
					setToArray(st);
				}
				st.remove(i);
				amount += i;
			}
		}
		return amount == 0;
	}
	void setToArray(Set<Integer> st) {
		List<Integer> list = new ArrayList(st);
		if (!output.contains(list)) {
			output.add(list);
		}
	}
}