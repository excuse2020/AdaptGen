class Solution {
	int helper(int i, int j, String s, String t, int[][] dp) {
		if (i == 0 && j != 0) {
			return 0;
		}
		if (j == 0) {
			return 1;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (s.charAt(i - 1) == t.charAt(j - 1)) {
			dp[i][j] = helper(i - 1,j - 1,s,t,dp) + helper(i - 1,j,s,t,dp);
		} 
		else {
			dp[i][j] = helper(i - 1,j,s,t,dp);
		}
		return dp[i][j];
	}
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		int[][] dp = new int[n + 1][m + 1];
		for (int[] x: dp) {	
			Arrays.fill(x,-1);
		}
		return helper(n,m,s,t,dp);
	}
}