class Solution {
	int counter(HashMap<Character, Integer> hs) {
		int count = 0;
		for (Map.Entry<Character, Integer> d: hs.entrySet()) {	
			char l = d.getKey();
			int l1 = d.getValue();
			count = count + l1;
		}
		return count;
	}
	int maxVowels(String s, int k) {
		HashMap<Character, Integer> hs = new HashMap<>();
		String m = "aeiou";
		int i = 0;
		int j = 0;
		int n = s.length();
		int maxi = Integer.MIN_VALUE;
		while (j < n) {
			char d = s.charAt(j);
			if (j - i + 1 == k) {
				if (m.contains(d + "")) {
					hs.put(d,hs.getOrDefault(d,0) + 1);
				}
				int l = counter(hs);
				maxi = Math.max(l,maxi);
				char c = s.charAt(i);
				if (hs.containsKey(c)) {
					hs.put(c,hs.get(c) - 1);
				}
				i++;
			} 
			else {
				if (m.contains(d + "")) {
					hs.put(d,hs.getOrDefault(d,0) + 1);
				}
			}
			j++;
		}
		return maxi;
	}
}