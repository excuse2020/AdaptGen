class Solution {
	TreeNode reConstructBinaryTree(int[] preOrder, int[] vinOrder) {
		int m = preOrder.length;
		int n = vinOrder.length;
		if (m == 0 || n == 0) {
			return null;
		}
		TreeNode root = new TreeNode(preOrder[0]);
		for (int i = 0; i < n; i++) {
			if (preOrder[0] == vinOrder[i]) {
				root.left = reConstructBinaryTree(Arrays.copyOfRange(preOrder,1,i + 1),Arrays.copyOfRange(vinOrder,0,i));
				root.right = reConstructBinaryTree(Arrays.copyOfRange(preOrder,i + 1,n),Arrays.copyOfRange(vinOrder,i + 1,n));
				break;
			}
		}
		return root;
	}
}