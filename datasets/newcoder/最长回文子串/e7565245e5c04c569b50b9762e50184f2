class Solution {
	int calc(char[] cArr, int low, int high) {
		int count = 1 ^ (high - low);
		if (low == high) {
			--low;
			++high;
		}
		while (low >= 0 && high < cArr.length) {
			if (cArr[low] == cArr[high]) {
				--low;
				++high;
				count += 2;
			} 
			else {
				break;
			}
		}
		return count;
	}
	int getLongestPalindrome(String A, int n) {
		char[] cArr = A.toCharArray();
		int max = 1;
		for (int i = 0; i < n - 1; ++i) {
			int a = calc(cArr,i,i);
			int b = calc(cArr,i,i + 1);
			int currentMax = a > b ? a : b;
			max = currentMax > max ? currentMax : max;
		}
		return max;
	}
}