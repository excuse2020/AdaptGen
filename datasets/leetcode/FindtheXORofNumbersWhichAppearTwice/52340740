class Solution {
	int duplicateNumbersXOR(int[] nums) {
		HashMap<Integer, Integer> map = new HashMap<>();
		int ans = 0;
		for (int i = 0; i < nums.length; i++) {
			if (map.containsKey(nums[i])) {
				map.put(nums[i],map.get(nums[i]) + 1);
			} 
			else {
				map.put(nums[i],1);
			}
		}
		int count = 0;
		for (Entry<Integer, Integer> entry: map.entrySet()) {	
			if (entry.getValue() == 1) {
				count++;
			}
		}
		if (count == nums.length) {
			return ans;
		}
		List<Integer> list = new ArrayList<>();
		for (Entry<Integer, Integer> entry: map.entrySet()) {	
			if (entry.getValue() == 2) {
				list.add(entry.getKey());
			}
		}
		for (int el: list) {	
			ans = ans ^ el;
		}
		return ans;
	}
}