class Solution {
	int count(ListNode head) {
		int cou = 0;
		ListNode c = head;
		while (c != null) {
			cou++;
			c = c.next;
		}
		return cou;
	}
	ListNode swapPairs(ListNode head) {
		if (count(head) == 0 || count(head) == 1) {
			return head;
		} 
		else {
			int c = 1;
			int count = count(head);
			ListNode curr = head;
			ListNode temp = head;
			while (curr != null) {
				if (c % 2 == 0 && c <= count) {
					int l = curr.val;
					curr.val = temp.val;
					temp.val = l;
				}
				c++;
				temp = curr;
				curr = curr.next;
			}
		}
		return head;
	}
}