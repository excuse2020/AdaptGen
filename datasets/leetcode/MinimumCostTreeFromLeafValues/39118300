class Solution {
	int ans = 0;
	int mcV(int arr, int low, int high) {
		if (low > high) {
			return 0;
		}
		if (low == high) {
			return arr[low];
		}
		if (low + 1 == high) {
			ans += arr[low] * arr[high];
			return Math.max(arr[low],arr[high]);
		}
		int max = low;
		for (int i = low; i <= high; i++) {
			if (arr[i] > arr[max]) {
				max = i;
			}
		}
		int left = mcV(arr,low,max - 1);
		int right = mcV(arr,max + 1,high);
		if (left != 0) {
			ans += arr[max] * left;
		}
		if (right != 0) {
			ans += arr[max] * right;
		}
		return arr[max];
	}
	int mctFromLeafValues(int[] arr) {
		mcV(arr,0,arr.length - 1);
		return ans;
	}
}