class Solution {
	boolean CompletesEatingAll(int[] piles, int h, int mid) {
		int time = 0;
		for (int i = 0; i < piles.length; i++) {
			time += (piles[i] - 1) / mid + 1;
		}
		if (time > h) {
			return false;
		}
		return true;
	}
	int minEatingSpeed(int[] piles, int h) {
		int left = 1, right = Arrays.stream(piles).max().getAsInt();
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (CompletesEatingAll(piles,h,mid)) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}