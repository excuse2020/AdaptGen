class Solution {
	int minimumOperations(int[] nums, int start, int goal) {
		Queue<Integer> q = new LinkedList<>();
		int arr = new int[1001];
		arr[start] = 1;
		q.add(start);
		int level = 1;
		while (q.isEmpty() == false) {
			int size = q.size();
			while (size-- > 0) {
				int el = q.poll();
				for (int i: nums) {	
					int val1 = el + i;
					int val2 = el - i;
					int val3 = el ^ i;
					if (val1 == goal || val2 == goal || val3 == goal) {
						return level;
					}
					if (val1 <= 1000 && val1 >= 0 && arr[val1] == 0) {
						arr[val1] = 1;
						q.add(val1);
					}
					if (val2 <= 1000 && val2 >= 0 && arr[val2] == 0) {
						arr[val2] = 1;
						q.add(val2);
					}
					if (val3 <= 1000 && val3 >= 0 && arr[val3] == 0) {
						arr[val3] = 1;
						q.add(val3);
					}
				}
			}
			level++;
		}
		return -1;
	}
}