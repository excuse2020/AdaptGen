class Solution {
	boolean[] check;
	ArrayList<Integer> path;
	ArrayList<ArrayList<Integer>> ret;
	void dfc(int[] num) {
		if (num.length == path.size()) {
			ret.add(new ArrayList<>(path));
			return;
		}
		for (int i = 0; i < num.length; i++) {
			if (check[i] == false) {
				path.add(num[i]);
				check[i] = true;
				dfc(num);
				check[i] = false;
				path.remove(path.size() - 1);
			}
		}
	}
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		ret = new ArrayList<ArrayList<Integer>>();
		path = new ArrayList<Integer>();
		check = new boolean[num.length];
		dfc(num);
		return ret;
	}
}