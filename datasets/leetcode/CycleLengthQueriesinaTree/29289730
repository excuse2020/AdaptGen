class Solution {
	int[] cycleLengthQueries(int n, int[][] queries) {
		int[] ans = new int[queries.length];
		for (int i = 0; i < queries.length; i++) {
			int val = solve(queries[i][0],queries[i][1]);
			ans[i] = val + 1;
		}
		return ans;
	}
	int len(int a) {
		return Integer.toBinaryString(a).length();
	}
	int solve(int a, int b) {
		int cnt = 0;
		while (len(a) < len(b)) {
			b = b / 2;
			cnt++;
		}
		while (len(a) > len(b)) {
			a = a / 2;
			cnt++;
		}
		int cnt1 = 0;
		while (a != b) {
			a = a / 2;
			b = b / 2;
			cnt1++;
		}
		return cnt + cnt1 * 2;
	}
}