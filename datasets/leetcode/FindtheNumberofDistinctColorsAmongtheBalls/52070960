class Solution {
	int[] queryResults(int limit, int[][] queries) {
		int m = queries.length;
		int[] ans = new int[m];
		HashMap<Integer, Integer> map = new HashMap<>();
		HashMap<Integer, Integer> distinct = new HashMap<>();
		int distinct_count = 0;
		for (int i = 0; i < m; i++) {
			int ball = queries[i][0];
			int color = queries[i][1];
			if (!map.containsKey(ball)) {
				map.put(ball,color);
				distinct.put(color,distinct.getOrDefault(color,0) + 1);
				int curr_color_count = distinct.get(color);
				if (curr_color_count == 1) {
					distinct_count++;
				}
				ans[i] = distinct_count;
			} 
			else {
				int prev_ball_color = map.get(ball);
				distinct.put(prev_ball_color,distinct.get(prev_ball_color) - 1);
				if (distinct.get(prev_ball_color) == 0) {
					distinct_count--;
				}
				map.put(ball,color);
				distinct.put(color,distinct.getOrDefault(color,0) + 1);
				int curr_color_count = distinct.get(color);
				if (curr_color_count == 1) {
					distinct_count++;
				}
				ans[i] = distinct_count;
			}
		}
		return ans;
	}
}