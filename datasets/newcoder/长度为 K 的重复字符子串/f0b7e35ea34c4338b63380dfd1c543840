class Solution {
	boolean check(String str) {
		int len = str.length();
		boolean res = false;
		HashMap<Character, Integer> maps = new HashMap<>();
		for (int i = 0; i < len; i++) {
			if (maps.isEmpty()) {
				maps.put(str.charAt(i),maps.getOrDefault(str.charAt(i),0) + 1);
			} 
			else {
				if (maps.containsKey(str.charAt(i))) {
					res = true;
					break;
				}
				maps.put(str.charAt(i),maps.getOrDefault(str.charAt(i),0) + 1);
			}
		}
		return res;
	}
	int numKLenSubstrRepeats(String s, int k) {
		int res = 0;
		int fast = 0;
		int slow = 0;
		fast += k;
		while (slow < s.length() - k + 1) {
			if (check(s.substring(slow,fast))) {
				res++;
			}
			slow++;
			fast++;
		}
		return res;
	}
}