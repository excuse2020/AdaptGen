class Solution {
	boolean fun(int[] piles, int m, int h) {
		int cnt = 0;
		for (int i = 0; i < piles.length; i++) {
			cnt += Math.ceil(piles[i] / (double) m);
			if (cnt > h) {
				return false;
			}
		}
		return true;
	}
	int minEatingSpeed(int[] piles, int h) {
		int end = 0;
		for (int x: piles) {	
			end = Math.max(end,x);
		}
		int start = 1, mid = 0;
		while (start <= end) {
			mid = (start + end) / 2;
			if (!fun(piles,mid,h)) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return start;
	}
}