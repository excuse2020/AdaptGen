class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null) {
			return null;
		}
		ArrayList<Integer> quchong = new ArrayList<>();
		ArrayList<Integer> chongfu = new ArrayList<>();
		ArrayList<Integer> list = new ArrayList<>();
		ListNode getQuChong = head;
		while (getQuChong != null) {
			if (quchong.contains(getQuChong.val)) {
				chongfu.add(getQuChong.val);
				getQuChong = getQuChong.next;
			} 
			else {
				quchong.add(getQuChong.val);
				getQuChong = getQuChong.next;
			}
		}
		for (Integer num: quchong) {	
			if (!chongfu.contains(num)) {
				list.add(num);
			}
		}
		if (list.isEmpty()) {
			return null;
		}
		int i = 1;
		Integer first = list.get(0);
		ListNode tmp = new ListNode(first);
		ListNode returnList = tmp;
		for (Integer num: list) {	
			if (i == 1) {
				i++;
				continue;
			}
			ListNode tmpNode = new ListNode(num);
			tmp.next = tmpNode;
			tmp = tmp.next;
		}
		return returnList;
	}
}