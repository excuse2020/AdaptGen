class Solution {
	int num = 0;
	int NumberOf1Between1AndN_Solution(int n) {
		int a = n;
		int count = 0;
		while (a != 0) {
			a = a / 10;
			count++;
		}
		bit(n,count);
		return num;
	}
	void bit(int n, int count) {
		if (n == 0) {
			return;
		}
		if (n < 10) {
			num++;
			return;
		}
		if (n / pow(10,count - 1) > 1) {
			num += pow(10,count - 1);
		} 
		else {
			num += (n % pow(10,count - 1) + 1);
		}
		num += (n / pow(10,count - 1)) * (count - 1);
		bit(n % pow(10,count - 1),count - 1);
	}
	int pow(int i, int n) {
		if (n == 0) {
			return 1;
		}
		int a = i;
		while (n > 1) {
			i *= a;
			n--;
		}
		return i;
	}
}