class Solution {
	boolean insertSorted(ListNode head, ListNode inserted) {
		if (head.val >= inserted.val) {
			inserted.next = head;
			return true;
		}
		ListNode origHead = head;
		while (head.next != null) {
			if (head.next.val >= inserted.val) {
				inserted.next = head.next;
				head.next = inserted;
				return false;
			}
			head = head.next;
		}
		head.next = inserted;
		inserted.next = null;
		return false;
	}
	ListNode insertionSortList(ListNode head) {
		if (head != null) {
			ListNode curNode = head.next;
			ListNode newHead = head;
			newHead.next = null;
			head = curNode;
			while (curNode != null) {
				curNode = curNode.next;
				if (insertSorted(newHead,head)) {
					newHead = head;
				}
				head = curNode;
			}
			return newHead;
		}
		return head;
	}
}