class Solution {
	int constrainedSubsetSum(int[] nums, int k) {
		PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> {b[0] - a[0]});
		int temp = new int[nums.length];
		System.arraycopy(nums,0,temp,0,nums.length);
		int result = nums[0];
		pq.add(new int{nums[0], 0});
		for (int i = 1; i < nums.length; i++) {
			while (pq.size() > 0 && i - pq.peek()[1] > k) {
				pq.poll();
			}
			temp[i] = Math.max(temp[i],pq.peek()[0] + nums[i]);
			pq.add(new int{temp[i], i});
			result = Math.max(result,temp[i]);
		}
		return result;
	}
}