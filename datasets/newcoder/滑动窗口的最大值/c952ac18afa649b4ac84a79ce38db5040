class Solution {
	ArrayDeque<Integer> Q = new ArrayDeque<Integer>();
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		ArrayList<Integer> ans = new ArrayList<>();
		if (size == 0 || size > num.length) {
			return ans;
		}
		for (int i = 0; i < num.length; i++) {
			push(num[i]);
			if (i < size - 1) {
				continue;
			}
			ans.add(Q.getFirst());
			pop(num[i - size + 1]);
		}
		return ans;
	}
	void pop(int val) {
		if (!Q.isEmpty() && Q.getFirst() == val) {
			Q.removeFirst();
		}
	}
	void push(int val) {
		while (!Q.isEmpty() && Q.getLast() < val) {
			Q.removeLast();
		}
		Q.addLast(val);
	}
}