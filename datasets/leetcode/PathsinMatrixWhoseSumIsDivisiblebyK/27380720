class Solution {
	int mod = 1000000007;
	int bfs(int[][] grid, int k, int row, int col, int sum, boolean[][] visited) {
		if (row >= grid.length || col >= grid[0].length || visited[row][col]) {
			return 0;
		}
		if (row == grid.length - 1 && col == grid[0].length - 1) {
			if ((sum + grid[row][col]) % k == 0) {
				return 1;
			}
			return 0;
		}
		visited[row][col] = true;
		int x = bfs(grid,k,row + 1,col,sum + grid[row][col],visited) % mod;
		int y = bfs(grid,k,row,col + 1,sum + grid[row][col],visited) % mod;
		visited[row][col] = false;
		return (x + y) % mod;
	}
	int numberOfPaths(int[][] grid, int k) {
		boolean[][] visited = new boolean[grid.length][grid[0].length];
		return bfs(grid,k,0,0,0,visited) % mod;
	}
}