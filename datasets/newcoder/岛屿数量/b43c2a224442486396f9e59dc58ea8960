class Solution {
	void search(char[][] grid, int row, int col) {
		if (row < 0 || row >= grid.length || col < 0 || col >= grid[0].length || grid[row][col] == '0') {
			return;
		}
		grid[row][col] = '0';
		search(grid,row,col - 1);
		search(grid,row,col + 1);
		search(grid,row - 1,col);
		search(grid,row + 1,col);
	}
	int solve(char[][] grid) {
		if (grid == null || grid.length == 0) {
			return 0;
		}
		int islandNums = 0;
		for (int row = 0; row < grid.length; ++row) {
			for (int col = 0; col < grid[0].length; ++col) {
				if (grid[row][col] == '1') {
					islandNums++;
					search(grid,row,col);
				}
			}
		}
		return islandNums;
	}
}