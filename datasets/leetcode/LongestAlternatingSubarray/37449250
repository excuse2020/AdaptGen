class Solution {
	int max = -1;
	int alternatingSubarray(int[] nums) {
		ch(nums,0,-4,1,1);
		return max;
	}
	void ch(int[] n, int i, int p, int f, int len) {
		if (i == n.length) {
			if (len >= 2) {
				max = Math.max(max,len);
			}
			return;
		}
		int ne = f == -1 ? 1 : -1;
		if (f == n[i] - p) {
			ch(n,i + 1,n[i],ne,len + 1);
		} 
		else {
			if (len >= 2) {
				max = Math.max(max,len);
			}
			if (f == -1) {
				if (ne == n[i] - p) {
					ch(n,i + 1,n[i],f,2);
				} 
				else {
					ch(n,i + 1,n[i],1,1);
				}
			} 
			else {
				ch(n,i + 1,n[i],1,1);
			}
		}
		return;
	}
}