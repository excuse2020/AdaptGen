class Solution {
	LinkedList<Integer> path = new LinkedList<Integer>();
	ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
	ArrayList<ArrayList<Integer>> combinationCount(int target, int[] nums) {
		getCombine(target,0,nums);
		return res;
	}
	void getCombine(int target, int startIndex, int[] nums) {
		if (target < 0) {
			return;
		}
		if (target == 0) {
			res.add(new ArrayList(path));
		}
		for (int i = startIndex; i < nums.length; ++i) {
			path.add(nums[i]);
			getCombine(target - nums[i],i,nums);
			path.removeLast();
		}
	}
}