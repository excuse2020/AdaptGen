class Solution {
	int ans;
	int averageOfSubtree(TreeNode root) {
		ans = 0;
		helper(root);
		return ans;
	}
	int getSum(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return getSum(node.left) + getSum(node.right);
	}
	void helper(TreeNode node) {
		if (node == null) {
			return;
		}
		int sum = getSum(node.left) + getSum(node.right);
		int n = numOfNodes(node.left) + numOfNodes(node.right);
		if (n != 0 && (node.val == (sum / n))) {
			ans++;
		}
		helper(node.left);
		helper(node.right);
	}
	int numOfNodes(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return numOfNodes(node.left) + numOfNodes(node.right);
	}
}