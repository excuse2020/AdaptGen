class Solution {
	boolean count(int n) {
		int count = 0;
		while (n != 0) {
			int a = n & 1;
			if (a == 1) {
				count++;
			}
			n = n >> 1;
		}
		if (isprime(count)) {
			return true;
		}
		return false;
	}
	int countPrimeSetBits(int left, int right) {
		int count1 = 0;
		for (int i = left; i <= right; i++) {
			boolean result = count(i);
			if (result) {
				count1++;
			}
		}
		return count1;
	}
	boolean isprime(int num) {
		if (num == 1 || num == 0) {
			return false;
		}
		for (int i = 2; i <= num / 2; i++) {
			if (num % i == 0) {
				return false;
			}
		}
		return true;
	}
}