class Solution {
	boolean checkPossibility(int[] nums) {
		int nums1 = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			nums1[i] = nums[i];
		}
		if (chekRightToLeft(nums) == true) {
			return true;
		}
		if (chekLeftToRight(nums1) == true) {
			return true;
		}
		return false;
	}
	boolean chekLeftToRight(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length - 1; i++) {
			if (nums[i] <= nums[i + 1]) {
				continue;
			} 
			else {
				if (count > 0) {
					return false;
				}
				count++;
				nums[i + 1] = nums[i];
			}
		}
		return true;
	}
	boolean chekRightToLeft(int[] nums) {
		int count = 0;
		for (int i = nums.length - 1; i > 0; i--) {
			if (nums[i - 1] <= nums[i]) {
				continue;
			} 
			else {
				if (count > 0) {
					return false;
				}
				count++;
				nums[i - 1] = nums[i];
			}
		}
		return true;
	}
}