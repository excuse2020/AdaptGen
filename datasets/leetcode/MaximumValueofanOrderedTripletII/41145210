class Solution {
	long maximumTripletValue(int[] nums) {
		long res = 0;
		int n = nums.length, tmpMax = nums[n - 1];
		int[] dp = new int[n];
		for (int i = n - 1; i >= 0; i--) {
			dp[i] = tmpMax;
			tmpMax = Math.max(tmpMax,nums[i]);
		}
		Deque<Integer> stack = new LinkedList<>();
		int[] next = new int[n];
		for (int i = 0; i < n; i++) {
			next[i] = n - 1;
			while (!stack.isEmpty() && nums[i] < nums[stack.peek()]) {
				next[stack.peek()] = i;
				stack.pop();
			}
			stack.push(i);
		}
		for (int i = 0; i < n - 2; i++) {
			for (int j = next[i]; j < n - 1; j = next[j]) {
				res = Math.max(res,(long) (nums[i] - nums[j]) * dp[j]);
			}
		}
		return res;
	}
}