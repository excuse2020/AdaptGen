class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int n = nums.length;
		HashMap<Integer, Integer> hMap = new HashMap<>();
		int left = 0;
		long sum = 0;
		long maxSum = 0;
		for (int right = 0; right < n; right++) {
			sum += nums[right];
			hMap.put(nums[right],hMap.getOrDefault(nums[right],0) + 1);
			if (right - left + 1 > k) {
				sum -= nums[left];
				int freq = hMap.get(nums[left]);
				if (freq == 1) {
					hMap.remove(nums[left]);
				} 
				else {
					hMap.put(nums[left],freq - 1);
				}
				left++;
			}
			if (hMap.size() == k) {
				maxSum = Math.max(sum,maxSum);
			}
		}
		return maxSum;
	}
}