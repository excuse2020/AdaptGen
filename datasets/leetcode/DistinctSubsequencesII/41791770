class Solution {
	int distinctSubseqII(String s) {
		int[] dp = new int[s.length() + 1];
		dp[0] = 1;
		int mod = 1000000007;
		HashMap<Character, Integer> hm = new HashMap<>();
		for (int i = 1; i < dp.length; i++) {
			dp[i] = (2 * dp[i - 1]) % mod;
			char ch = s.charAt(i - 1);
			if (hm.containsKey(ch)) {
				int j = hm.get(ch) % mod;
				dp[i] = (dp[i] - dp[j - 1]) % mod;
			}
			if (dp[i] < 0) {
				dp[i] += mod;
			}
			hm.put(ch,i);
		}
		return (dp[s.length()] - 1 + mod) % mod;
	}
}