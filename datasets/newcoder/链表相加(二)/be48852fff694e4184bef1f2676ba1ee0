class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		Stack<ListNode> st1 = new Stack<>();
		ListNode tmp1 = head1;
		while (tmp1 != null) {
			st1.push(tmp1);
			tmp1 = tmp1.next;
		}
		Stack<ListNode> st2 = new Stack<>();
		ListNode tmp2 = head2;
		while (tmp2 != null) {
			st2.push(tmp2);
			tmp2 = tmp2.next;
		}
		ListNode res = new ListNode(0);
		int n, m, s = 0, b = 0;
		while (!st1.isEmpty() || !st2.isEmpty()) {
			n = st1.isEmpty() ? 0 : st1.pop().val;
			m = st2.isEmpty() ? 0 : st2.pop().val;
			s = n + m;
			b = s >= 10 ? 1 : 0;
			ListNode newNode = new ListNode(s % 10);
			newNode.next = res.next;
			res.next = newNode;
		}
		if (b > 0) {
			ListNode newNode = new ListNode(b);
			newNode.next = res.next;
			res.next = newNode;
		}
		return res.next;
	}
}