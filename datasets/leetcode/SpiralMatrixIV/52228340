class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] res = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				res[i][j] = -1;
			}
		}
		ListNode curr = head;
		int left = 0, right = n - 1, top = 0, bottom = m - 1;
		while (top <= bottom && left <= right && curr != null) {
			for (int i = left; i <= right && curr != null; i++) {
				res[top][i] = curr.val;
				curr = curr.next;
			}
			top++;
			for (int i = top; i <= bottom && curr != null; i++) {
				res[i][right] = curr.val;
				curr = curr.next;
			}
			right--;
			for (int i = right; i >= left && curr != null; i--) {
				res[bottom][i] = curr.val;
				curr = curr.next;
			}
			bottom--;
			for (int i = bottom; i >= top && curr != null; i--) {
				res[i][left] = curr.val;
				curr = curr.next;
			}
			left++;
		}
		return res;
	}
}