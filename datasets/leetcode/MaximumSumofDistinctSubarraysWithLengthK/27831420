class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int i = 0;
		int j = 0;
		long sum = 0;
		long max = 0;
		HashMap<Integer, Integer> hm = new HashMap<>();
		while (j < nums.length) {
			sum += nums[j];
			hm.put(nums[j],hm.getOrDefault(nums[j],0) + 1);
			if (j - i + 1 < k) {
				j++;
			} 
			else if (j - i + 1 == k) {
				if (hm.size() == k) {
					max = Math.max(max,sum);
				}
				sum -= nums[i];
				hm.put(nums[i],hm.get(nums[i]) - 1);
				if (hm.get(nums[i]) == 0) {
					hm.remove(nums[i]);
				}
				i++;
				j++;
			}
		}
		return max;
	}
}