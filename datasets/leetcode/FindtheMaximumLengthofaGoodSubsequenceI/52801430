class Solution {
	int maximumLength(int[] nums, int k) {
		int n = nums.length;
		int[][] dp = new int[n][k + 1];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= k; j++) {
				dp[i][j] = 1;
			}
		}
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < i; j++) {
				int mismatch = nums[i] != nums[j] ? 1 : 0;
				for (int l = 0; l <= k; l++) {
					if (l - mismatch >= 0) {
						dp[i][l] = Math.max(dp[i][l],dp[j][l - mismatch] + 1);
					}
				}
			}
		}
		int maxLength = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= k; j++) {
				maxLength = Math.max(maxLength,dp[i][j]);
			}
		}
		return maxLength;
	}
}