class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		return jude(root1,root2) || HasSubtree(root1.left,root2);
	}
	boolean jude(TreeNode node, TreeNode no) {
		if (no == null) {
			return true;
		}
		if (node == null) {
			return false;
		}
		if (node.val == no.val) {
			return jude(node.left,no.left) && jude(node.right,no.right);
		} 
		else {
			return false;
		}
	}
}