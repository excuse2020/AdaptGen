class Solution {
	int earliestFullBloom(int[] plantTime, int[] growTime) {
		PriorityQueue<int[]> toPlant = new PriorityQueue<>((a, b) -> {a[1] == b[1] ? b[0] - a[0] : b[1] - a[1]});
		for (int i = 0; i < plantTime.length; i++) {
			toPlant.offer(new int{plantTime[i], growTime[i]});
		}
		int currentTime = 0;
		int maxGrowth = 0;
		while (toPlant.peek() != null) {
			int[] next = toPlant.poll();
			currentTime += next[0];
			maxGrowth = Math.max(maxGrowth,currentTime + next[1]);
		}
		return maxGrowth;
	}
}