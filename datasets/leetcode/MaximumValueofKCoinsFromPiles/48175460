class Solution {
	int[][] memo;
	int dp(List<List<Integer>> piles, int k, int i) {
		if (i == piles.size()) {
			return 0;
		}
		if (memo[i][k] != -1) {
			return memo[i][k];
		}
		int ans = dp(piles,k,i + 1), sum = 0;
		for (int j = 0; j < Math.min(piles.get(i).size(),k); j++) {
			sum += piles.get(i).get(j);
			ans = Math.max(ans,sum + dp(piles,k - j,i + 1));
		}
		return memo[i][k] = ans;
	}
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		int n = piles.size();
		memo = new int[n][k + 1];
		for (int[] i: memo) {	
			Arrays.fill(i,-1);
		}
		return dp(piles,k,0);
	}
}