class Solution {
	void sort(String[] arr, int[] wordIndex) {
		int i = 0;
		while (i < arr.length) {
			int correctIndex = wordIndex[i] - 1;
			if (wordIndex[i] != wordIndex[correctIndex]) {
				swap(arr,i,correctIndex);
				swap(wordIndex,i,correctIndex);
			} 
			else {
				i++;
			}
		}
	}
	String sortSentence(String s) {
		StringBuilder str = new StringBuilder();
		String[] wordsArray = s.split(" ");
		int[] wordIndex = new int[wordsArray.length];
		int i = 0;
		for (i = 0; i < wordsArray.length; i++) {
			wordIndex[i] = Integer.parseInt(wordsArray[i].substring(wordsArray[i].length() - 1));
			wordsArray[i] = wordsArray[i].substring(0,wordsArray[i].length() - 1);
		}
		sort(wordsArray,wordIndex);
		for (i = 0; i < wordsArray.length; i++) {
			str.append(wordsArray[i]);
			if (i != wordsArray.length - 1) {
				str.append(" ");
			}
		}
		return str.toString();
	}
	void swap(int[] arr, int first, int second) {
		int t = arr[first];
		arr[first] = arr[second];
		arr[second] = t;
	}
	void swap(String[] arr, int first, int second) {
		String t = arr[first];
		arr[first] = arr[second];
		arr[second] = t;
	}
}