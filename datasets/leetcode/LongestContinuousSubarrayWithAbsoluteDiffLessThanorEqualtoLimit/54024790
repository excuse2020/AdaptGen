class Solution {
	int longestSubarray(int[] nums, int limit) {
		int i = 0, j = 0, n = nums.length, max = 0;
		PriorityQueue<Integer> maxi = new PriorityQueue<>(Comparator.reverseOrder());
		PriorityQueue<Integer> mini = new PriorityQueue<>();
		while (j < n) {
			maxi.add(nums[j]);
			mini.add(nums[j]);
			while (maxi.peek() - mini.peek() > limit) {
				maxi.remove(nums[i]);
				mini.remove(nums[i]);
				i++;
			}
			j++;
			max = Math.max(max,j - i);
		}
		return max;
	}
}