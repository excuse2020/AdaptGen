class Solution {
	int checkforarray(int[] arr) {
		int i, j, flag = 1, n = arr.length;
		for (i = 0; i < n - 1; i++) {
			if (arr[i] < arr[i + 1]) {
				flag = 1;
			} 
			else {
				flag = 0;
				break;
			}
		}
		return flag;
	}
	int minimumRightShifts(List<Integer> nums) {
		int[] arr = new int[nums.size()];
		int i, count = 0, temp = 0, j, check = 0, n = arr.length;
		for (i = 0; i < arr.length; i++) {
			arr[i] = nums.get(i);
		}
		while (n != 0) {
			check = checkforarray(arr);
			if (check == 1) {
				break;
			} 
			else {
				temp = arr[arr.length - 1];
				for (j = arr.length - 1; j > 0; j--) {
					arr[j] = arr[j - 1];
				}
				arr[0] = temp;
				count++;
			}
			n--;
		}
		if (check == 1) {
			return count;
		} 
		else {
			return -1;
		}
	}
}