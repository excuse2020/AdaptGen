class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		if (target <= startFuel) {
			return 0;
		}
		int counter = 0;
		int level = 0;
		Queue<Integer> q = new PriorityQueue<>((a, b) -> {b - a});
		while (startFuel < target) {
			level++;
			while (counter < stations.length && startFuel >= stations[counter][0]) {
				q.add(stations[counter++][1]);
			}
			if (q.isEmpty()) {
				return -1;
			}
			startFuel += q.poll();
			if (startFuel >= target) {
				return level;
			}
		}
		return -1;
	}
}