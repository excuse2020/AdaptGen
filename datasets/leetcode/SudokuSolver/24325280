class Solution {
	boolean backtrack(char[][] board, int i, int j) {
		int m = 9, n = 9;
		if (j == n) {
			return backtrack(board,i + 1,0);
		}
		if (i == m) {
			return true;
		}
	}
	boolean isValid(char[][] board, int i, int j, char ch) {
		for (int k = 0; k < 9; k++) {
			if (board[i][k] == ch) {
				return false;
			}
			if (board[k][j] == ch) {
				return false;
			}
			if (board[(i / 3) * 3 + k / 3][(j / 3) * 3 + k % 3] == ch) {
				return false;
			}
		}
		return true;
	}
	void solveSudoku(char[][] board) {
		backtrack(board,0,0);
		return;
	}
}