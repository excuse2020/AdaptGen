class Solution {
	int difference = Integer.MAX_VALUE;
	int result = Integer.MAX_VALUE;
	int threeSumClosest(int[] nums, int target) {
		int n = nums.length;
		Arrays.sort(nums);
		for (int i = 0; i < n; i++) {
			twoSum(i,nums,target);
		}
		return this.result;
	}
	void twoSum(int i, int[] nums, int target) {
		int diff = target - nums[i];
		int L = i + 1;
		int R = nums.length - 1;
		while (L < R) {
			if (nums[L] + nums[R] > diff) {
				int sum = nums[L] + nums[R];
				int localDiff = Math.abs(sum - target);
				if (localDiff < this.difference) {
					this.result = sum;
					this.difference = localDiff;
				}
				R--;
			} 
			else if (nums[L] + nums[R] < diff) {
				int sum = nums[L] + nums[R];
				int localDiff = Math.abs(sum - target);
				if (localDiff < this.difference) {
					this.result = sum;
					this.difference = localDiff;
				}
				L++;
			} 
			else {
				this.result = nums[L] + nums[R];
				return;
			}
		}
	}
}