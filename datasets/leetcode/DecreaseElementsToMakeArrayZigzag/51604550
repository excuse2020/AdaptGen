class Solution {
	int movesToMakeZigzag(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return 0;
		}
		int oddMoves = 0;
		int evenMoves = 0;
		for (int i = 0; i < n; i++) {
			if (i % 2 == 1) {
				if (i == n - 1) {
					if (nums[n - 1] >= nums[n - 2]) {
						oddMoves += nums[n - 1] - nums[n - 2] + 1;
					}
				} 
				else if (nums[i] >= Math.min(nums[i + 1],nums[i - 1])) {
					oddMoves += nums[i] - Math.min(nums[i + 1],nums[i - 1]) + 1;
				}
			} 
			else {
				if (i == 0) {
					if (nums[0] >= nums[1]) {
						evenMoves += nums[0] - nums[1] + 1;
					}
				} 
				else if (i == n - 1) {
					if (nums[n - 1] >= nums[n - 2]) {
						evenMoves += nums[n - 1] - nums[n - 2] + 1;
					}
				} 
				else if (nums[i] >= Math.min(nums[i + 1],nums[i - 1])) {
					evenMoves += nums[i] - Math.min(nums[i + 1],nums[i - 1]) + 1;
				}
			}
		}
		return Math.min(evenMoves,oddMoves);
	}
}