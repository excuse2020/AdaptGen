class Solution {
	TreeNode Balance(ArrayList<Integer> list, int st, int end) {
		if (st > end) {
			return null;
		}
		int mid = (st + end) / 2;
		TreeNode root = new TreeNode(list.get(mid));
		root.left = Balance(list,st,mid - 1);
		root.right = Balance(list,mid + 1,end);
		return root;
	}
	TreeNode balanceBST(TreeNode root) {
		ArrayList<Integer> list = new ArrayList<>();
		if (root == null) {
			return null;
		}
		inorder(root,list);
		TreeNode root1 = Balance(list,0,list.size() - 1);
		return root1;
	}
	void inorder(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		inorder(root.left,list);
		list.add(root.val);
		inorder(root.right,list);
	}
}