class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		int i, index, flag, ans, c, count, ans1;
		flag = index = count = 0;
		c = 1;
		i = startIndex;
		ans = Integer.MAX_VALUE;
		if (startIndex == 0) {
			if (words[words.length - 1].equalsIgnoreCase(target)) {
				return 1;
			}
		}
		if (startIndex == words.length - 1) {
			if (words[0].equalsIgnoreCase(target)) {
				return 1;
			}
		}
		while (true) {
			if (words[i].equalsIgnoreCase(target)) {
				ans = Math.min(ans,count);
				flag = 1;
			}
			if (c == 2 && i == startIndex) {
				break;
			}
			i = (i + 1) % words.length;
			count++;
			if (i == 0) {
				c++;
			}
		}
		i = startIndex;
		c = 1;
		count = 0;
		ans1 = Integer.MAX_VALUE;
		while (true) {
			if (words[i].equalsIgnoreCase(target)) {
				ans1 = Math.min(ans1,count);
				flag = 1;
			}
			if (c == 2 && i == startIndex) {
				break;
			}
			i = (i - 1 + words.length) % words.length;
			count++;
			if (i == words.length - 1) {
				c++;
			}
		}
		if (flag == 1) {
			return Math.min(ans,ans1);
		}
		return -1;
	}
}