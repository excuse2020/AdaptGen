class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int[] arr = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			int prefix = findPref(i,nums);
			int sufix = findSuf(i,nums);
			arr[i] = prefix - sufix;
		}
		return arr;
	}
	int findPref(int j, int[] nums) {
		HashSet<Integer> hashSet = new HashSet<>();
		for (int i = 0; i <= j; i++) {
			hashSet.add(nums[i]);
		}
		return hashSet.size();
	}
	int findSuf(int j, int[] nums) {
		HashSet<Integer> hashSet = new HashSet<>();
		for (int i = j + 1; i < nums.length; i++) {
			hashSet.add(nums[i]);
		}
		return hashSet.size();
	}
}