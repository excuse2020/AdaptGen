class Solution {
	int findKth(int[] a, int n, int K) {
		return quickSort(a,0,n - 1,K);
	}
	int quickSort(int[] a, int low, int high, int k) {
		int v = a[low];
		int i = low + 1;
		int j = high;
		while (true) {
			while (j >= i && a[j] < v) {
				j--;
			}
			while (i <= j && a[i] > v) {
				i++;
			}
			if (i >= j) {
				break;
			}
			swap(a,i,j);
			i++;
			j--;
		}
		swap(a,low,j);
		if (j + 1 == k) {
			return a[j];
		} 
		else if (j + 1 < k) {
			return quickSort(a,j + 1,high,k);
		} 
		else {
			return quickSort(a,low,j - 1,k);
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}