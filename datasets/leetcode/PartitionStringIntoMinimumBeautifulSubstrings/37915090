class Solution {
	int helper(String s, int i, int[] dp) {
		if (i >= s.length()) {
			return 0;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		int min = (int) 1e9;
		for (int k = i; k < s.length(); k++) {
			if (isPowerOf5(i,k,s)) {
				int ans = 1 + helper(s,k + 1,dp);
				min = Math.min(min,ans);
			}
		}
		dp[i] = min;
		return dp[i];
	}
	boolean isPowerOf5(int l, int r, String s) {
	}
	int minimumBeautifulSubstrings(String s) {
		int[] dp = new int[s.length() + 1];
		Arrays.fill(dp,-1);
		int ans = helper(s,0,dp);
		return ans >= (int) 1e9 ? -1 : ans;
	}
}