class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.offer(root);
		while (!q.isEmpty()) {
			int size = q.size();
			List<Integer> list = new ArrayList<>();
			for (int i = 0; i < size; i++) {
				TreeNode cur = q.poll();
				if (cur != null) {
					list.add(cur.val);
					if (cur.left != null) {
						q.offer(cur.left);
					}
					if (cur.right != null) {
						q.offer(cur.right);
					}
				}
			}
			result.add(list);
		}
		List<List<Integer>> res = new ArrayList<>();
		for (int i = result.size() - 1; i >= 0; i--) {
			res.add(result.get(i));
		}
		return res;
	}
}