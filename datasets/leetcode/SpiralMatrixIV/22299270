class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] mat = new int[m][n];
		int cnt = 0;
		int lb = 0, rb = n - 1;
		int c = 0, f = m - 1;
		while (cnt < (m * n)) {
			for (int i = lb; i <= rb; i++) {
				cnt++;
				if (head != null) {
					mat[c][i] = head.val;
					head = head.next;
				} 
				else {
					mat[c][i] = -1;
				}
			}
			for (int j = c + 1; j <= f; j++) {
				cnt++;
				if (head != null) {
					mat[j][rb] = head.val;
					head = head.next;
				} 
				else {
					mat[j][rb] = -1;
				}
			}
			if (f != c) {
				for (int i = rb - 1; i >= lb; i--) {
					cnt++;
					if (head != null) {
						mat[f][i] = head.val;
						head = head.next;
					} 
					else {
						mat[f][i] = -1;
					}
				}
			}
			if (lb != rb) {
				for (int j = f - 1; j > c; j--) {
					cnt++;
					if (head != null) {
						mat[j][lb] = head.val;
						head = head.next;
					} 
					else {
						mat[j][lb] = -1;
					}
				}
			}
			lb++;
			rb--;
			c++;
			f--;
		}
		return mat;
	}
}