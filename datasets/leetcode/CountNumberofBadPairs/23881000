class Solution {
	long countBadPairs(int[] nums) {
		if (nums.length == 1) {
			return 0;
		}
		long length = (long) nums.length;
		long total = (length * (length - 1)) / 2;
		long good = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			int diff = nums[i] - i;
			map.put(diff,map.getOrDefault(diff,0) + 1);
		}
		for (Integer key: map.keySet()) {	
			long val = map.get(key);
			if (val >= 2) {
				good = good + (val * (val - 1)) / 2;
			}
		}
		return total - good;
	}
}