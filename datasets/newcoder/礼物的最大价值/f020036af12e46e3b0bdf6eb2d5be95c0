class Solution {
	int[][] maxArr;
	int maxValue(int[][] grid) {
		if (grid == null) {
			return 0;
		}
		maxArr = new int[grid.length][grid[0].length];
		return maxValue(grid,0,0);
	}
	int maxValue(int[][] grid, int i, int j) {
		if (i == grid.length - 1 && j == grid[0].length - 1) {
			return grid[grid.length - 1][grid[0].length - 1];
		}
		if (maxArr[i][j] != 0) {
			return maxArr[i][j];
		}
		int max1 = 0;
		if (j < grid[0].length - 1) {
			max1 = grid[i][j] + maxValue(grid,i,j + 1);
		}
		int max2 = 0;
		if (i < grid.length - 1) {
			max2 = grid[i][j] + maxValue(grid,i + 1,j);
		}
		int max = max1 > max2 ? max1 : max2;
		maxArr[i][j] = max;
		return max;
	}
}