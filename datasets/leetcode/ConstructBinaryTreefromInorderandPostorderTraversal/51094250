class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		HashMap<Integer, Integer> h1 = new HashMap<>();
		for (int i = 0; i < inorder.length; i++) {
			h1.put(inorder[i],i);
		}
		return helper(inorder,0,inorder.length - 1,postorder,0,postorder.length - 1,h1);
	}
	TreeNode helper(int[] inorder, int is, int ie, int[] postorder, int ps, int pe, HashMap<Integer, Integer> h1) {
		if (ps > pe || is > ie) {
			return null;
		}
		TreeNode root = new TreeNode(postorder[pe]);
		int inroot = h1.get(postorder[pe]);
		int numleft = inroot - is;
		root.left = helper(inorder,is,inroot - 1,postorder,ps,ps + numleft - 1,h1);
		root.right = helper(inorder,inroot + 1,ie,postorder,ps + numleft,pe - 1,h1);
		return root;
	}
}