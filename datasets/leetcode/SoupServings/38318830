class Solution {
	double soupServings(int n) {
		if (n >= 5000) {
			return 1.0;
		}
		n = (n + 24) / 25;
		double[][] dp = new double[n + 1][n + 1];
		dp[0][0] = 0.5;
		for (int i = 1; i <= n; i++) {
			dp[i][0] = 0.0;
			dp[0][i] = 1.0;
		}
		for (int a = 1; a <= n; a++) {
			for (int b = 1; b <= n; b++) {
				dp[a][b] = 0.25 * (dp[Math.max(0,a - 4)][b] + dp[Math.max(0,a - 3)][Math.max(0,b - 1)]);
			}
		}
		return dp[n][n];
	}
}