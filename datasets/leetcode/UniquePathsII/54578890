class Solution {
	int uniquePathsWithObstacles(int[][] obstacleGrid) {
		int rowLength = obstacleGrid.length;
		int columnLength = obstacleGrid[0].length;
		int[][] dp = new int[rowLength][columnLength];
		for (int i = 0; i < rowLength; i++) {
			for (int j = 0; j < columnLength; j++) {
				if (i == 0 && j == 0) {
					if (obstacleGrid[0][0] == 0) {
						dp[0][0] = 1;
					} 
					else if (obstacleGrid[0][0] == 1) {
						dp[0][0] = 0;
					}
				} 
				else if (obstacleGrid[i][j] == 1) {
					dp[i][j] = 0;
				} 
				else if (i == 0) {
					dp[i][j] = dp[i][j - 1];
				} 
				else if (j == 0) {
					dp[i][j] = dp[i - 1][j];
				} 
				else {
					dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
				}
			}
		}
		return dp[rowLength - 1][columnLength - 1];
	}
}