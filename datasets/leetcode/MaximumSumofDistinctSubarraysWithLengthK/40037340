class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		HashMap<Integer, Integer> hm = new HashMap<>();
		long sum = 0;
		long maxsum = 0;
		int count = 0;
		int i = 0;
		int j = 0;
		while (i < nums.length) {
			sum += nums[i];
			hm.put(nums[i],hm.getOrDefault(nums[i],0) + 1);
			count++;
			if (count == k) {
				if (hm.size() == k) {
					maxsum = Math.max(maxsum,sum);
				}
				sum -= nums[j];
				hm.put(nums[j],hm.get(nums[j]) - 1);
				if (hm.get(nums[j]) == 0) {
					hm.remove(nums[j]);
				}
				j++;
				count--;
			}
			i++;
		}
		return maxsum;
	}
}