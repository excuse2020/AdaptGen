class Solution {
	List<int[]> ans;
	void merge(int[][] nums1, int[][] nums2, int x, int y) {
		if (x >= nums1.length && y >= nums2.length) {
			return;
		}
		if (x >= nums1.length) {
			ans.add(new int{nums2[y][0], nums2[y][1]});
			merge(nums1,nums2,x,y + 1);
		} 
		else if (y >= nums2.length) {
			ans.add(new int{nums1[x][0], nums1[x][1]});
			merge(nums1,nums2,x + 1,y);
		} 
		else {
			if (nums1[x][0] == nums2[y][0]) {
				ans.add(new int{nums1[x][0], nums1[x][1] + nums2[y][1]});
				merge(nums1,nums2,x + 1,y + 1);
			} 
			else if (nums1[x][0] > nums2[y][0]) {
				ans.add(new int{nums2[y][0], nums2[y][1]});
				merge(nums1,nums2,x,y + 1);
			} 
			else if (nums1[x][0] < nums2[y][0]) {
				ans.add(new int{nums1[x][0], nums1[x][1]});
				merge(nums1,nums2,x + 1,y);
			}
		}
	}
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		int length = nums1.length > nums2.length ? nums1.length : nums2.length;
		ans = new ArrayList();
		merge(nums1,nums2,0,0);
		int[][] result = new int[ans.size()][2];
		for (int i = 0; i < ans.size(); i++) {
			result[i] = ans.get(i);
		}
		return result;
	}
}