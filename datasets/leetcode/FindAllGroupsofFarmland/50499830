class Solution {
	int bottom = 0;
	int right = 0;
	void doBFS(int[][] land, int row, int col) {
		if (row < 0 || row >= land.length || col < 0 || col >= land[row].length || land[row][col] == 0) {
			return;
		}
		land[row][col] = 0;
		bottom = Math.max(bottom,row);
		right = Math.max(right,col);
		if (row + 1 < land.length && land[row + 1][col] == 1) {
			doBFS(land,row + 1,col);
		}
		if (col + 1 < land[row].length && land[row][col + 1] == 1) {
			doBFS(land,row,col + 1);
		}
	}
	int[][] findFarmland(int[][] land) {
		ArrayList<int[]> list = new ArrayList<>();
		for (int i = 0; i < land.length; i++) {
			for (int j = 0; j < land[i].length; j++) {
				if (land[i][j] == 1) {
					bottom = 0;
					right = 0;
					doBFS(land,i,j);
					list.add(new int{i, j, bottom, right});
				}
			}
		}
		int[][] ans = new int[list.size()][4];
		for (int i = 0; i < list.size(); i++) {
			ans[i] = list.get(i);
		}
		return ans;
	}
}