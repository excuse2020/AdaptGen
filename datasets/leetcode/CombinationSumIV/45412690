class Solution {
	int Memonize(int nums, int target, int memory) {
		if (target == 0) {
			return 1;
		}
		if (target < 0) {
			return 0;
		}
		if (memory[target] != -1) {
			return memory[target];
		}
		int totalWays = 0;
		for (int num: nums) {	
			totalWays += Memonize(nums,target - num,memory);
		}
		return memory[target] = totalWays;
	}
	int Recurse(int nums, int target) {
		if (target == 0) {
			return 1;
		}
		if (target < 0) {
			return 0;
		}
		int ways = 0;
		for (int num: nums) {	
			ways += Recurse(nums,target - num);
		}
		return ways;
	}
	int combinationSum4(int[] nums, int target) {
		int memory = new int[target + 1];
		Arrays.fill(memory,-1);
		return Memonize(nums,target,memory);
	}
}