class Solution {
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		int dp = new int[n];
		Arrays.fill(dp,-1);
		int ans1 = robber(nums,0,n - 1,dp);
		Arrays.fill(dp,-1);
		int ans2 = robber(nums,1,n,dp);
		return Math.max(ans1,ans2);
	}
	int robber(int[] nums, int i, int n, int[] dp) {
		if (i >= n) {
			return 0;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		int include = robber(nums,i + 2,n,dp) + nums[i];
		int exclude = robber(nums,i + 1,n,dp);
		return dp[i] = Math.max(include,exclude);
	}
}