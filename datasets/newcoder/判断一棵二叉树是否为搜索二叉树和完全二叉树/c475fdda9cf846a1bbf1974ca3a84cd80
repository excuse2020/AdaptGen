class Solution {
	List<Integer> list = new ArrayList<>();
	int treeLen = 0;
	void helper(TreeNode root) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			treeLen++;
		}
		helper(root.left);
		list.add(root.val);
		helper(root.right);
	}
	boolean[] judgeIt(TreeNode root) {
		boolean[] flag = new boolean[2];
		if (root == null) {
			return flag;
		}
		helper(root);
		int len = list.size();
		int tmp = (len % 2 == 1 ? (len + 1) / 2 : len / 2);
		if (tmp == treeLen) {
			flag[1] = true;
		}
		for (int i = 1; i < len; i++) {
			if (list.get(i) < list.get(i - 1)) {
				return flag;
			}
		}
		flag[0] = true;
		return flag;
	}
}