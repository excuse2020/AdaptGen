class Solution {
	TreeNode findLCA(TreeNode root, int startValue, int destValue) {
		if (root == null) {
			return null;
		}
		if (root.val == startValue || root.val == destValue) {
			return root;
		}
		TreeNode left = findLCA(root.left,startValue,destValue);
		TreeNode right = findLCA(root.right,startValue,destValue);
		if (left != null && right != null) {
			return root;
		}
		return (left != null) ? left : right;
	}
	boolean findPath(TreeNode root, int target, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		TreeNode lca = findLCA(root,startValue,destValue);
		StringBuilder startPath = new StringBuilder();
		findPath(lca,startValue,startPath);
		StringBuilder destPath = new StringBuilder();
		findPath(lca,destValue,destPath);
		StringBuilder result = new StringBuilder();
		int i = 0;
	}
}