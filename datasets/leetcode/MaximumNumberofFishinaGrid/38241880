class Solution {
	int count;
	void dfs(int[][] mat, int i, int j) {
		if (i < 0 || j < 0 || i >= mat.length || j >= mat[0].length || mat[i][j] == 0) {
			return;
		}
		count += mat[i][j];
		mat[i][j] = 0;
		dfs(mat,i + 1,j);
		dfs(mat,i - 1,j);
		dfs(mat,i,j + 1);
		dfs(mat,i,j - 1);
	}
	int findMaxFish(int[][] mat) {
		int n = mat.length;
		int m = mat[0].length;
		int ans = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				count = 0;
				if (mat[i][j] != 0) {
					dfs(mat,i,j);
					ans = Math.max(count,ans);
				}
			}
		}
		return ans;
	}
}