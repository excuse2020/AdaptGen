class Solution {
	TreeNode convertArrayToBinarySearch(int[] arr, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode node = new TreeNode(arr[mid]);
		node.left = convertArrayToBinarySearch(arr,start,mid - 1);
		node.right = convertArrayToBinarySearch(arr,mid + 1,end);
		return node;
	}
	TreeNode sortedListToBST(ListNode head) {
		int findLength = 0;
		ListNode curr = head;
		while (curr != null) {
			findLength++;
			curr = curr.next;
		}
		int[] arr = new int[findLength];
		ListNode nextVal = head;
		int add = 0;
		while (nextVal != null) {
			arr[add] = nextVal.val;
			nextVal = nextVal.next;
			add++;
		}
		return convertArrayToBinarySearch(arr,0,arr.length - 1);
	}
}