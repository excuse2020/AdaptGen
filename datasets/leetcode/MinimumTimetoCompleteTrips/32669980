class Solution {
	boolean isPossible(int[] arr, int trips, long mid) {
		long poss = 0;
		for (int x: arr) {	
			poss += mid / x;
		}
		if (poss >= trips) {
			return true;
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		int n = time.length;
		long low = 1, high = (long) Math.pow(10,7) * totalTrips;
		System.out.println(high);
		long ans = 0;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (isPossible(time,totalTrips,mid)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}