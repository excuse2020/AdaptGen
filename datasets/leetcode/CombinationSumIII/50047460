class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = rec(k,n,1,new ArrayList<>());
		if (n < k) {
			return ans;
		}
		return ans;
	}
	List<List<Integer>> rec(int k, int n, int i, List<Integer> in) {
		if (n == 0 && k == 0) {
			List<List<Integer>> out = new ArrayList<>();
			out.add(new ArrayList<>(in));
			return out;
		}
		List<List<Integer>> ans = new ArrayList<>();
		for (int j = i; j <= 9; j++) {
			if (n - j < 0 || k - 1 < 0) {
				break;
			}
			in.add(j);
			ans.addAll(rec(k - 1,n - j,j + 1,in));
			in.remove(in.size() - 1);
		}
		return ans;
	}
}