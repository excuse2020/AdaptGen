class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode fake_head1 = new ListNode(-1);
		ListNode fake_head2 = new ListNode(-1);
		ListNode pre1 = fake_head1, pre2 = fake_head2;
		int count = 1;
		for (ListNode cur = head; cur != null; cur = cur.next, count++) {
			if ((count & 1) == 0) {
				pre2.next = new ListNode(cur.val);
				pre2 = pre2.next;
			} 
			else {
				pre1.next = new ListNode(cur.val);
				pre1 = pre1.next;
			}
		}
		pre1.next = fake_head2.next;
		return fake_head1.next;
	}
}