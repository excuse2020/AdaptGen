class Solution {
	boolean isPalindrome(ListNode head) {
		ListNode mid = middleNode(head);
		ListNode reverse = reverseList(mid);
		while (reverse != null) {
			if (reverse.val != head.val) {
				return false;
			}
			reverse = reverse.next;
			head = head.next;
		}
		return true;
	}
	ListNode middleNode(ListNode head) {
		ListNode fast = head, slow = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		return slow;
	}
	ListNode reverseList(ListNode head) {
		ListNode prev = null;
		ListNode curr = head;
		while (curr != null) {
			ListNode next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}