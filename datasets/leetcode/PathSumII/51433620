class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<Integer> list = new ArrayList<>();
		List<List<Integer>> listOfLists = new ArrayList<>();
		pathSumII(root,targetSum,list,listOfLists);
		return listOfLists;
	}
	void pathSumII(TreeNode root, int targetSum, List<Integer> list, List<List<Integer>> listOfLists) {
		if (root == null) {
			return;
		}
		targetSum -= root.val;
		list.add(root.val);
		if (root.left == null && root.right == null && targetSum == 0) {
			listOfLists.add(list);
			return;
		}
		pathSumII(root.left,targetSum,new ArrayList<>(list),listOfLists);
		pathSumII(root.right,targetSum,new ArrayList<>(list),listOfLists);
	}
}