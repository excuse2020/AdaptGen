class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int n = nums1.length - 1;
		int m = nums2.length - 1;
		int[] nums3 = new int[n + m];
		int i = 0;
		int j = 0;
		int k = 0;
		while (i <= n && j <= m) {
			if (nums1[i] <= nums2[j]) {
				nums3[k++] = nums1[i];
				i++;
			} 
			else if (nums1[i] >= nums2[j]) {
				nums3[k++] = nums2[j];
				j++;
			}
		}
		while (i <= n) {
			nums3[k++] = nums1[i];
			i++;
		}
		while (j <= m) {
			nums3[k++] = nums2[j];
			j++;
		}
		int mid = nums3.length / 2;
		if (nums3.length % 2 == 1) {
			return nums3[mid];
		}
		double b = (double) (nums3[mid] + nums3[mid - 1]) / 2;
		return b;
	}
}