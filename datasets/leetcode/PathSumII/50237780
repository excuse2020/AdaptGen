class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> answerlist = new ArrayList<>();
		List<Integer> locallist = new ArrayList<>();
		return pathSumHelper(root,targetSum,answerlist,locallist);
	}
	List<List<Integer>> pathSumHelper(TreeNode root, int targetSum, List<List<Integer>> answerlist, List<Integer> locallist) {
		if (root == null) {
			return answerlist;
		}
		locallist.add(root.val);
		if (root.val == targetSum && root.left == null && root.right == null) {
			answerlist.add(new ArrayList<>(locallist));
		}
		pathSumHelper(root.left,targetSum - root.val,answerlist,locallist);
		pathSumHelper(root.right,targetSum - root.val,answerlist,locallist);
		locallist.remove(locallist.size() - 1);
		return answerlist;
	}
}