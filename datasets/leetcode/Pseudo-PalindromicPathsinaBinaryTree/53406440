class Solution {
	int dfs(TreeNode node, int count) {
		if (node == null) {
			return 0;
		}
		count ^= (1 << node.val);
		if (node.left == null && node.right == null) {
			if ((count & (count - 1)) == 0) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		return dfs(node.left,count) + dfs(node.right,count);
	}
	void main(String[] args) {
		Solution sol = new Solution();
		TreeNode root = new TreeNode(2);
		root.left = new TreeNode(3);
		root.right = new TreeNode(1);
		root.left.left = new TreeNode(3);
		root.left.right = new TreeNode(1);
		root.right.right = new TreeNode(1);
		System.out.println(sol.pseudoPalindromicPaths(root));
	}
	int pseudoPalindromicPaths(TreeNode root) {
		return dfs(root,0);
	}
}