class Solution {
	int[][] flipChess(int[][] A, int[][] f) {
		for (int i = 0; i < f.length; i++) {
			int l = f[i][0] - 1, r = f[i][1] - 1;
			if (l - 1 >= 0) {
				A[l - 1][r] = (A[l - 1][r] == 0) ? 1 : 0;
			}
			if (l + 1 <= A.length - 1) {
				A[l + 1][r] = (A[l + 1][r] == 0) ? 1 : 0;
			}
			if (r - 1 >= 0) {
				A[l][r - 1] = (A[l][r - 1] == 0) ? 1 : 0;
			}
			if (r + 1 <= A[0].length - 1) {
				A[l][r + 1] = (A[l][r + 1] == 0) ? 1 : 0;
			}
		}
		return A;
	}
}