class Solution {
	int height(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return 1 + Math.max(height(node.left),height(node.right));
	}
	TreeNode helper(TreeNode n) {
		if (n == null) {
			return n;
		}
		if (height(n.left) > height(n.right)) {
			return helper(n.left);
		} 
		else if (height(n.right) > height(n.left)) {
			return helper(n.right);
		}
		return n;
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		return helper(root);
	}
}