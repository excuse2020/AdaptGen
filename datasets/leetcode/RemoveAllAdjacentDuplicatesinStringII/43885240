class Solution {
	String removeDuplicates(String s, int k) {
		Deque<Character> deque = new ArrayDeque<>();
		Deque<Integer> counters = new ArrayDeque<>();
		char[] chs = s.toCharArray();
		for (int i = 0; i < chs.length; i++) {
			if (!deque.isEmpty() && deque.getLast() == chs[i]) {
				if (counters.getLast() == k - 1) {
					deque.removeLast();
					counters.removeLast();
				} 
				else {
					Integer counter = counters.removeLast() + 1;
					counters.addLast(counter);
				}
			} 
			else {
				deque.addLast(chs[i]);
				counters.addLast(1);
			}
		}
		StringBuilder sb = new StringBuilder();
		for (Character ch: deque) {	
			int counter = counters.removeFirst();
			for (int i = 0; i < counter; i++) {
				sb.append(ch);
			}
		}
		return sb.toString();
	}
}