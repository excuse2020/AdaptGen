class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return pRootOfTree;
		}
		ArrayList<TreeNode> list = new ArrayList<>();
		Convert(list,pRootOfTree);
		return Convert(list);
	}
	void Convert(ArrayList<TreeNode> list, TreeNode node) {
		if (node.left != null) {
			Convert(list,node.left);
		}
		list.add(node);
		if (node.right != null) {
			Convert(list,node.right);
		}
	}
	TreeNode Convert(ArrayList<TreeNode> list) {
		for (int i = 0; i < list.size() - 1; i++) {
			list.get(i + 1).left = list.get(i);
			list.get(i).right = list.get(i + 1);
		}
		return list.get(0);
	}
}