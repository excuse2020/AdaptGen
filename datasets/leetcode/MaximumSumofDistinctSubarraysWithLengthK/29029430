class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Set<Integer> seen = new HashSet<>();
		long sum = 0;
		long current = 0;
		int i = 0;
		int j = 0;
		while (j < nums.length) {
			while (seen.contains(nums[j])) {
				int val = nums[i++];
				seen.remove(val);
				current -= val;
			}
			seen.add(nums[j]);
			current += nums[j];
			j++;
			if (seen.size() == k) {
				sum = Math.max(sum,current);
				current -= nums[i];
				seen.remove(nums[i]);
				i++;
			}
		}
		return sum;
	}
}