class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int[] mergedNums = mergeSortedArray(nums1,nums2);
		int mid = (mergedNums.length - 1) / 2;
		if (mergedNums.length % 2 == 0) {
			return (mergedNums[mid] + mergedNums[mid + 1]) / 2.0;
		} 
		else {
			return mergedNums[mid];
		}
	}
	int[] mergeSortedArray(int[] nums1, int[] nums2) {
		int[] mergedArray = new int[nums1.length + nums2.length];
		int i = 0, j = 0;
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i] < nums2[j]) {
				mergedArray[i + j] = nums1[i];
				i++;
			} 
			else {
				mergedArray[i + j] = nums2[j];
				j++;
			}
		}
		if (i < nums1.length) {
			for (i = i; i < nums1.length; i++) {
				mergedArray[i + j] = nums1[i];
			}
		}
		if (j < nums2.length) {
			for (j = j; j < nums2.length; j++) {
				mergedArray[i + j] = nums2[j];
			}
		}
		return mergedArray;
	}
}