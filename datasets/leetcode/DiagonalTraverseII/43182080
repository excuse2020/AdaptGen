class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		Map<Integer, List<Integer>> mp = new HashMap<>();
		int n = 0;
		for (int r = nums.size() - 1; r >= 0; r--) {
			for (int c = 0; c < nums.get(r).size(); c++) {
				if (!mp.containsKey(r + c)) {
					mp.put(r + c,new ArrayList<Integer>());
				}
				mp.get(r + c).add(nums.get(r).get(c));
				n++;
			}
		}
		int[] res = new int[n];
		int i = 0;
		int diagonal = 0;
		while (mp.containsKey(diagonal)) {
			for (int num: mp.get(diagonal)) {	
				res[i] = num;
				i++;
			}
			diagonal++;
		}
		return res;
	}
}