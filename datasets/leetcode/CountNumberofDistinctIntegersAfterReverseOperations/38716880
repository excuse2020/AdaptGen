class Solution {
	int countDistinctIntegers(int[] nums) {
		HashSet<Integer> h = new HashSet<Integer>();
		int a = new int[nums.length * 2];
		int q = 0, p = 0;
		for (int i = 0; i < nums.length; i++) {
			a[p++] = nums[i];
			q = reverse(nums[i]);
			a[p++] = q;
		}
		nums = new int[a.length];
		for (int i = 0; i < a.length; i++) {
			nums[i] = a[i];
		}
		for (int j = 0; j < a.length; j++) {
			h.add(nums[j]);
		}
		return h.size();
	}
	int reverse(int n) {
		int n1, a, s = 0;
		n1 = n;
		while (n1 > 0) {
			a = n1 % 10;
			n1 = n1 / 10;
			s = (s * 10) + a;
		}
		return s;
	}
}