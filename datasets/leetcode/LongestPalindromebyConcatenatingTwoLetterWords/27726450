class Solution {
	int longestPalindrome(String[] words) {
		int ans = 0, sc = 0;
		boolean odd = false;
		Map<String, Integer> map = new HashMap<>();
		for (int i = 0; i < words.length; i++) {
			map.put(words[i],map.getOrDefault(words[i],0) + 1);
		}
		for (Map.Entry<String, Integer> v: map.entrySet()) {	
			String val = v.getKey();
			int count = v.getValue();
			char x = val.charAt(0), y = val.charAt(1);
			String tmp = "" + y;
			if (map.containsKey(tmp)) {
				if (x != y) {
					ans += (Math.min(count,map.get(tmp)) * 2);
				} 
				else {
					if (count % 2 != 0) {
						sc += (count - 1);
						odd = true;
					} 
					else {
						sc += (count);
					}
				}
			}
		}
		ans += sc * 2;
		if (odd) {
			ans += 2;
		}
		return ans;
	}
}