class Solution {
	int numberOfGoodSubarraySplits(int[] nums) {
		int count1 = 0;
		List<Integer> lst = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				count1++;
				lst.add(i);
			}
		}
		if (count1 == 0) {
			return 0;
		}
		if (count1 == 1) {
			return 1;
		}
		int mod = (int) 1e9 + 7;
		long ans = 1;
		for (int i = 0; i < lst.size() - 1; i++) {
			int val1 = lst.get(i);
			int val2 = lst.get(i + 1);
			int val = val2 - val1;
			ans = (ans * val) % mod;
		}
		return (int) ans;
	}
}