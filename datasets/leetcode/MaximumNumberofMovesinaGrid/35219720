class Solution {
	int maxMoves(int[][] grid) {
		int maxi = 0;
		for (int i = 0; i < grid.length; i++) {
			maxi = Math.max(maxi,move(grid,i,0));
		}
		return maxi;
	}
	int move(int[][] grid, int i, int j) {
		if (i < 0 || j < 0 || i > grid.length - 1 || j > grid[0].length - 1) {
			return 0;
		}
		int above = 0;
		int front = 0;
		int below = 0;
		if (i - 1 >= 0 && j + 1 < grid[0].length && grid[i - 1][j + 1] > grid[i][j]) {
			above = 1 + move(grid,i - 1,j + 1);
		}
		if (j + 1 < grid[0].length && grid[i][j + 1] > grid[i][j]) {
			front = 1 + move(grid,i,j + 1);
		}
		if (i + 1 < grid.length && j + 1 < grid[0].length && grid[i + 1][j + 1] > grid[i][j]) {
			below = 1 + move(grid,i + 1,j + 1);
		}
		return Math.max(above,Math.max(front,below));
	}
}