class Solution {
	int nextGreaterElement(int n) {
		String str = n + "";
		char[] chrs = str.toCharArray();
		for (int currentIndex = chrs.length - 1; currentIndex > 0; currentIndex--) {
			if (chrs[currentIndex] > chrs[currentIndex - 1]) {
				char previousValue = chrs[currentIndex - 1];
				int swapIndex = currentIndex;
				for (int tmpIndex = currentIndex + 1; tmpIndex < chrs.length; tmpIndex++) {
					if (chrs[tmpIndex] > previousValue && chrs[tmpIndex] < chrs[swapIndex]) {
						swapIndex = tmpIndex;
					}
				}
				chrs[currentIndex - 1] = chrs[swapIndex];
				chrs[swapIndex] = previousValue;
				Arrays.sort(chrs,currentIndex,chrs.length);
				break;
			}
		}
		StringBuffer sb = new StringBuffer("");
		for (char chr: chrs) {	
			sb.append(chr);
		}
		return Integer.valueOf(new String(sb)) == n ? -1 : Integer.valueOf(new String(sb));
	}
}