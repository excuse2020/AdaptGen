class Solution {
	int distance(int x, int y) {
		return Math.abs(x - y);
	}
	int[] getStrongest(int[] arr, int k) {
		Arrays.sort(arr);
		int l = arr.length;
		int m = ((l & 1) == 1) ? arr[l / 2] : arr[l / 2 - 1];
		PriorityQueue<Integer> pq = new PriorityQueue<>(new Comparator<>());
		for (int n: arr) {	
			pq.offer(n);
		}
		int[] res = new int[k];
		for (int i = 0; i < k; i++) {
			res[i] = pq.poll();
		}
		return res;
	}
}