class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		if (words[startIndex].equals(target)) {
			return 0;
		}
		int ans = Integer.MAX_VALUE;
		int move = 0, n = words.length;
		for (int i = startIndex + 1; i < n; i++) {
			move++;
			if (words[i].equals(target)) {
				ans = Math.min(ans,move);
				break;
			}
		}
		if (move < ans) {
			for (int i = 0; i < startIndex; i++) {
				move++;
				if (words[i].equals(target)) {
					ans = Math.min(ans,move);
				}
			}
		}
		move = 0;
		for (int i = startIndex - 1; i >= 0 && move < ans; i--) {
			move++;
			if (words[i].equals(target)) {
				ans = Math.min(ans,move);
				break;
			}
		}
		if (move < ans) {
			for (int i = n - 1; i > startIndex && move < ans; i--) {
				move++;
				if (words[i].equals(target)) {
					ans = Math.min(ans,move);
					break;
				}
			}
		}
		return ans == Integer.MAX_VALUE ? -1 : ans;
	}
}