class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int preH = 0;
		int preV = 0;
		int maxH = 0;
		int maxV = 0;
		for (int i = 0; i < horizontalCuts.length; i++) {
			maxH = Math.max(horizontalCuts[i] - preH,maxH);
			preH = horizontalCuts[i];
		}
		maxH = Math.max(h - preH,maxH);
		for (int i = 0; i < verticalCuts.length; i++) {
			maxV = Math.max(verticalCuts[i] - preV,maxV);
			preV = verticalCuts[i];
		}
		maxV = Math.max(w - preV,maxV);
		int ans = 0;
		int mod = 1000000007;
		while (maxV > 0) {
			if (maxV % 2 == 1) {
				ans = (ans + maxH) % mod;
			}
			maxH = (maxH * 2) % mod;
			maxV /= 2;
		}
		return ans;
	}
}