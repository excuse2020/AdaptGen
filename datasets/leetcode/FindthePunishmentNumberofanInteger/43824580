class Solution {
	boolean backtrack(int sum, int num, int actualNumber) {
		if (num == 0 && sum == actualNumber) {
			return true;
		}
		if (num == 0) {
			return false;
		}
		int d = 10;
		int n = num;
		while (num > 0) {
			if (backtrack(sum + n % d,num / 10,actualNumber)) {
				return true;
			}
			d *= 10;
			num /= 10;
		}
		return false;
	}
	int punishmentNumber(int n) {
		int ans = 0;
		for (int i = 1; i <= n; i++) {
			int square = i * i;
			if (backtrack(0,square,i)) {
				ans += square;
			}
		}
		return ans;
	}
}