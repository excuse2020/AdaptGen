class Solution {
	int[] dp;
	int helper(int idx, int[] energy, int k) {
		int n = energy.length;
		if (idx >= n) {
			return 0;
		}
		if (dp[idx] != -1) {
			return dp[idx];
		}
		int eg = 0;
		eg += energy[idx] + helper(idx + k,energy,k);
		return dp[idx] = eg;
	}
	int maximumEnergy(int[] energy, int k) {
		dp = new int[energy.length + 1];
		Arrays.fill(dp,-1);
		int ans = Integer.MIN_VALUE;
		for (int i = 0; i < energy.length; i++) {
			ans = Math.max(ans,helper(i,energy,k));
		}
		return ans;
	}
}