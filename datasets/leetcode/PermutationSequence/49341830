class Solution {
	List<String> list = new ArrayList<>();
	String getPermutation(int n, int k) {
		StringBuilder sb = new StringBuilder();
		StringBuilder ss = new StringBuilder();
		for (int i = 1; i <= n; i++) {
			sb.append(i);
		}
		char[] str = sb.toString().toCharArray();
		boolean[] used = new boolean[str.length];
		helper(str,used,ss);
		return list.get(k - 1);
	}
	void helper(char[] str, boolean[] used, StringBuilder sb) {
		if (sb.length() == str.length) {
			list.add(sb.toString());
			return;
		}
		for (int i = 0; i < str.length; i++) {
			if (used[i]) {
				continue;
			}
			used[i] = true;
			sb.append(str[i]);
			helper(str,used,sb);
			sb.deleteCharAt(sb.length() - 1);
			used[i] = false;
		}
	}
}