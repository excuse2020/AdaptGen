class Solution {
	boolean f(String s1, String s2, int i, int j, boolean[][] dp, boolean[][] isVisited) {
		if (j <= 0 && i <= 0) {
			return true;
		}
		if (j <= 0 && i > 0) {
			return false;
		}
		int nI = 1;
	}
	boolean isMatch(String s1, String s2) {
		int s1Len = s1.length();
		int s2Len = s2.length();
		boolean[] prev = new boolean[s2Len + 1];
		prev[0] = true;
		boolean isAllStars = true;
		int j = 1;
	}
	boolean isMatch2(String s1, String s2) {
		int s1Len = s1.length();
		int s2Len = s2.length();
		boolean[][] dp = new boolean[s1Len + 1][s2Len + 1];
		dp[0][0] = true;
		for (int i = 1; i <= s1Len; i++) {
			dp[i][0] = false;
		}
		boolean isAllStars = true;
		int j = 1;
	}
	boolean isMatch3(String s1, String s2) {
		int s1Len = s1.length();
		int s2Len = s2.length();
		return f(s1,s2,s1Len,s2Len,new boolean[s1Len + 1][s2Len + 1],new boolean[s1Len + 1][s2Len + 1]);
	}
}