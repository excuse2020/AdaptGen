class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		int carry = 0;
		ListNode head = new ListNode();
		ListNode prvs = null;
		ListNode anshead = head;
		while (l1 != null && l2 != null) {
			int sum = l1.val + l2.val;
			if (carry != 0) {
				sum += carry;
				carry = 0;
			}
			if (sum >= 10) {
				carry = sum / 10;
				sum = sum % 10;
			}
			l1 = l1.next;
			l2 = l2.next;
			head.val = sum;
			prvs = head;
			head.next = new ListNode();
			head = head.next;
		}
		if (l1 == null && l2 == null) {
			if (carry > 0) {
				head.val = carry;
			} 
			else {
				prvs.next = null;
			}
			return anshead;
		}
		while (l1 != null) {
			if (carry == 0) {
				head.val = l1.val;
				l1 = l1.next;
				head.next = new ListNode();
				prvs = head;
				head = head.next;
				continue;
			} 
			else {
				int sum = l1.val + carry;
				carry = 0;
				if (sum >= 10) {
					carry = sum / 10;
					sum = sum % 10;
				}
				head.val = sum;
				l1 = l1.next;
				head.next = new ListNode();
				prvs = head;
				head = head.next;
				continue;
			}
		}
		while (l2 != null) {
			if (carry == 0) {
				head.val = l2.val;
				l2 = l2.next;
				head.next = new ListNode();
				prvs = head;
				head = head.next;
				continue;
			} 
			else {
				int sum = l2.val + carry;
				carry = 0;
				if (sum >= 10) {
					carry = sum / 10;
					sum = sum % 10;
				}
				head.val = sum;
				l2 = l2.next;
				head.next = new ListNode();
				prvs = head;
				head = head.next;
				continue;
			}
		}
		if (carry > 0) {
			head.val = carry;
			return anshead;
		}
		prvs.next = null;
		return anshead;
	}
}