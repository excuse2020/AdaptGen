class Solution {
	void bt(TreeNode root, int sumLeft, List<Integer> currPath, List<List<Integer>> ans) {
		if (root == null) {
			return;
		}
		currPath.add(root.val);
		if (root.left == null && root.right == null && root.val == sumLeft) {
			ans.add(new ArrayList<>(currPath));
		} 
		else {
			bt(root.left,sumLeft - root.val,currPath,ans);
			bt(root.right,sumLeft - root.val,currPath,ans);
		}
		currPath.remove(currPath.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		bt(root,targetSum,new ArrayList<Integer>(),ans);
		return ans;
	}
}