class Solution {
	int minStoneSum(int[] piles, int k) {
		int minSum = 0;
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());
		for (int i = 0; i < piles.length; i++) {
			maxHeap.offer(piles[i]);
		}
		while (!maxHeap.isEmpty() && k > 0) {
			int num = maxHeap.poll();
			num = num - num / 2;
			maxHeap.offer(num);
			k--;
		}
		while (!maxHeap.isEmpty()) {
			minSum += maxHeap.poll();
		}
		return minSum;
	}
}