class Solution {
	double soupServeA(int A, int B, HashMap<String, Double> map) {
		if (A <= 0 && B > 0) {
			return 1;
		} 
		else if (B <= 0 && A <= 0) {
			return 0.5;
		} 
		else if (B <= 0) {
			return 0;
		}
		String key = A + ",";
		if (map.containsKey(key)) {
			return map.get(key);
		}
		double out = 0.25 * (soupServeA(A - 100,B,map) + soupServeA(A - 75,B - 25,map));
		map.put(key,out);
		return out;
	}
	double soupServings(int n) {
		HashMap<String, Double> map = new HashMap<>();
		if (n >= 5000) {
			return 1;
		}
		return soupServeA(n,n,map);
	}
}