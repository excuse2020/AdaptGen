class Solution {
	int dp(int[] cost, int n, int[] book) {
		if (n == 0 || n == 1) {
			return 0;
		}
		if (book[n - 1] == -1) {
			book[n - 1] = Math.min(dp(cost,n - 1,book) + cost[n - 1],dp(cost,n - 2,book) + cost[n - 2]);
		}
		return book[n - 1];
	}
	int minCostClimbingStairs(int[] cost) {
		int n = cost.length;
		int[] book = new int[n];
		for (int i = 0; i < n; i++) {
			book[i] = -1;
		}
		return dp(cost,n,book);
	}
}