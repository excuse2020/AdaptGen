class Solution {
	long minimumTime(int[] time, int totalTrips) {
		double eff = 0;
		long left, right = 0;
		for (int i = 0; i < time.length; ++i) {
			eff += (double) 1 / (time[i]);
			if (time[i] > right) {
				right = time[i];
			}
		}
		left = (long) Math.ceil(totalTrips / eff);
		right = right + left;
		long mid, count;
		while (left < right) {
			mid = (left + right) / 2;
			count = 0;
			for (int i = 0; i < time.length; ++i) {
				count += mid / time[i];
			}
			if (count >= totalTrips) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}