class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		List<List<Integer>> tempresult = new ArrayList<>();
		int i = 0;
		int j = 0;
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i][0] == nums2[j][0]) {
				int number1 = nums1[i][1];
				int number2 = nums2[j][1];
				int sum = number1 + number2;
				List<Integer> temp = new ArrayList<>();
				temp.add(nums1[i][0]);
				temp.add(sum);
				tempresult.add(temp);
				i++;
				j++;
			} 
			else if (nums1[i][0] > nums2[j][0]) {
				List<Integer> temp = new ArrayList<>();
				temp.add(nums2[j][0]);
				temp.add(nums2[j][1]);
				tempresult.add(temp);
				j++;
			} 
			else {
				List<Integer> temp = new ArrayList<>();
				temp.add(nums1[i][0]);
				temp.add(nums1[i][1]);
				tempresult.add(temp);
				i++;
			}
		}
		for (int a = i; a < nums1.length; a++) {
			List<Integer> temp = new ArrayList<>();
			temp.add(nums1[a][0]);
			temp.add(nums1[a][1]);
			tempresult.add(temp);
		}
		for (int a = j; a < nums2.length; a++) {
			List<Integer> temp = new ArrayList<>();
			temp.add(nums2[a][0]);
			temp.add(nums2[a][1]);
			tempresult.add(temp);
		}
		int[][] finalresult = new int[tempresult.size()][2];
		for (int a = 0; a < finalresult.length; a++) {
			List<Integer> finalstore = tempresult.get(a);
			for (int b = 0; b < 1; b++) {
				finalresult[a][b] = finalstore.get(b);
				finalresult[a][b + 1] = finalstore.get(b + 1);
			}
		}
		return finalresult;
	}
}