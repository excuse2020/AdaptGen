class Solution {
	ArrayList<Integer> arr;
	int dfs(int i, int[] cookies, int k, int zeroCount) {
		if (i == cookies.length) {
			return arr.stream().max().orElse(Integer.MAX_VALUE);
		}
		if (cookies.length - i < zeroCount) {
			return Integer.MAX_VALUE;
		}
		int mn = 10000000;
		for (int j = 0; j < k; j++) {
			boolean flagZero = false;
			if (arr.get(j) == 0) {
				flagZero = true;
				zeroCount--;
			}
			arr.set(j,arr.get(j) + cookies[i]);
			mn = Math.min(dfs(i + 1,cookies,k,zeroCount),mn);
			arr.set(j,arr.get(j) - cookies[i]);
			if (flagZero) {
				zeroCount++;
			}
		}
		return mn;
	}
	int distributeCookies(int[] cookies, int k) {
		arr = new ArrayList<>();
		for (int i = 0; i < k; i++) {
			arr.add(0);
		}
		return dfs(0,cookies,k,k);
	}
}