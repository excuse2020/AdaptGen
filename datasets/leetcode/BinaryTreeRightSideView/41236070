class Solution {
	List<Integer> rightSideView(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		List<Integer> wrapList = new ArrayList<>();
		if (root == null) {
			return wrapList;
		}
		queue.offer(root);
		while (!queue.isEmpty()) {
			int noofnodes = queue.size();
			for (int i = 0; i < noofnodes; i++) {
				TreeNode curr = queue.poll();
				if (i == noofnodes - 1) {
					wrapList.add(curr.val);
				}
				if (curr.left != null) {
					queue.offer(curr.left);
				}
				if (curr.right != null) {
					queue.offer(curr.right);
				}
			}
		}
		return wrapList;
	}
}