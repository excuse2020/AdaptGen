class Solution {
	String solve(String str1, String str2) {
		int aLen = str1.length();
		int bLen = str2.length();
		int maxLen = aLen > bLen ? aLen : bLen;
		int sum = new int[maxLen + 1];
		int a = new int[maxLen + 1];
		Arrays.fill(a,0);
		for (int i = 0; i < aLen; i++) {
			a[i] = str1.charAt(aLen - i) - '0';
		}
		int b = new int[maxLen + 1];
		Arrays.fill(b,0);
		for (int i = 0; i < bLen; i++) {
			b[i] = str2.charAt(bLen - i) - '0';
		}
		int modNum = 0;
		for (int i = 0; i < maxLen; i++) {
			int t = a[i] + b[i];
			if (t >= 10) {
				sum[i] = t - 10;
				modNum = 1;
			} 
			else {
				sum[i] = t;
				modNum = 0;
			}
		}
		int endIdx = maxLen;
		if (modNum != 0) {
			endIdx += 1;
			sum[maxLen] = 1;
		}
		StringBuilder builder = new StringBuilder();
		for (int i = 0; i < endIdx; i++) {
			if (i == maxLen && sum[i] != 0) {
				builder.append("1");
			} 
			else {
				builder.append(String.valueOf(sum[i]));
			}
		}
		return builder.reverse().toString();
	}
}