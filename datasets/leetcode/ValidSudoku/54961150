class Solution {
	boolean check(char ch, boolean[] check) {
	}
	boolean isValidSudoku(char[][] board) {
		for (int i = 0; i < 9; i++) {
			boolean[] rowCheck = new boolean[9];
			for (int j = 0; j < 9; j++) {
				if (!check(board[i][j],rowCheck)) {
					return false;
				}
			}
		}
		for (int j = 0; j < 9; j++) {
			boolean[] colCheck = new boolean[9];
			for (int i = 0; i < 9; i++) {
				if (!check(board[i][j],colCheck)) {
					return false;
				}
			}
		}
		for (int block = 0; block < 9; block++) {
			boolean[] boxCheck = new boolean[9];
			for (int i = block / 3 * 3; i < block / 3 * 3 + 3; i++) {
				for (int j = block % 3 * 3; j < block % 3 * 3 + 3; j++) {
					if (!check(board[i][j],boxCheck)) {
						return false;
					}
				}
			}
		}
		return true;
	}
}