class Solution {
	int totalFruit(int[] fruits) {
		if (fruits.length < 2) {
			return fruits.length;
		}
		var deque = new LinkedList<Integer>();
		int i = 0;
		var res = 1;
		deque.addLast(0);
		for (int j = 1; j < fruits.length; j++) {
			var current = fruits[j];
			if (fruits[j - 1] != current) {
				deque.addLast(j);
			}
			if (deque.size() > 2) {
				var p = deque.removeFirst();
				if (fruits[p] != current && !deque.isEmpty()) {
					i = deque.peekFirst();
				}
			}
			res = Math.max(res,j - i + 1);
		}
		return res;
	}
}