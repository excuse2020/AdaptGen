class Solution {
	long makeSimilar(int[] nums, int[] target) {
		Arrays.sort(nums);
		Arrays.sort(target);
		int n = nums.length;
		long resp = 0;
		int en = 0;
		int et = 0;
		int on = 0;
		int ot = 0;
		while (en < n && nums[en] % 2 != 0) {
			en++;
		}
		while (et < n && target[et] % 2 != 0) {
			et++;
		}
		while (on < n && nums[on] % 2 == 0) {
			on++;
		}
		while (ot < n && target[ot] % 2 == 0) {
			ot++;
		}
		while (en < n) {
			resp += Math.abs(nums[en++] - target[et++]);
			while (en < n && nums[en] % 2 != 0) {
				en++;
			}
			while (et < n && target[et] % 2 != 0) {
				et++;
			}
		}
		while (on < n) {
			resp += Math.abs(nums[on++] - target[ot++]);
			while (on < n && nums[on] % 2 == 0) {
				on++;
			}
			while (ot < n && target[ot] % 2 == 0) {
				ot++;
			}
		}
		return resp / 4;
	}
}