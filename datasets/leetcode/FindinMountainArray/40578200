class Solution {
	int binarySearch(MountainArray mountainArray, int target, int si, int ei) {
		boolean isAsc = mountainArray.get(si) < mountainArray.get(ei);
		while (si <= ei) {
			int mid = si + (ei - si) / 2;
			if (target == mountainArray.get(mid)) {
				return mid;
			}
			if (isAsc) {
				if (target > mountainArray.get(mid)) {
					si = mid + 1;
				} 
				else {
					ei = mid - 1;
				}
			} 
			else {
				if (target > mountainArray.get(mid)) {
					ei = mid - 1;
				} 
				else {
					si = mid + 1;
				}
			}
		}
		return -1;
	}
	int findInMountainArray(int target, MountainArray mountainArray) {
		int peak = peakIndex(mountainArray);
		int index = binarySearch(mountainArray,target,0,peak);
		if (index != -1) {
			return index;
		}
		return binarySearch(mountainArray,target,peak + 1,mountainArray.length() - 1);
	}
	int peakIndex(MountainArray mountainArray) {
		int si = 0;
		int ei = mountainArray.length() - 1;
		while (si < ei) {
			int mid = si + (ei - si) / 2;
			if (mountainArray.get(mid) > mountainArray.get(mid + 1)) {
				ei = mid;
			} 
			else {
				si = mid + 1;
			}
		}
		return si;
	}
}