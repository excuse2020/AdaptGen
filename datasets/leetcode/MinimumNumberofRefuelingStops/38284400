class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		if (startFuel >= target) {
			return 0;
		}
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		int stops = 0;
		int i = 0;
		int n = stations.length;
		int maxFuel = startFuel;
		while (maxFuel < target) {
			while (i < n && stations[i][0] <= maxFuel) {
				pq.add(stations[i][1]);
				i++;
			}
			if (pq.isEmpty()) {
				return -1;
			}
			maxFuel += pq.remove();
			stops++;
		}
		return stops;
	}
}