class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		int[][] dp = new int[triangle.size()][triangle.size()];
		for (int[] arr: dp) {	
			Arrays.fill(arr,-1);
		}
		return path(triangle,0,0,dp);
	}
	int path(List<List<Integer>> grid, int i, int j, int[][] dp) {
		if (i == grid.size() - 1) {
			return grid.get(i).get(j);
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int right = grid.get(i).get(j) + path(grid,i + 1,j,dp);
		int down = grid.get(i).get(j) + path(grid,i + 1,j + 1,dp);
		return dp[i][j] = Math.min(right,down);
	}
}