class Solution {
	long mod = (long) 1e9 + 7;
	int count(String num1, String num2, int min_sum, int max_sum) {
		StringBuilder sb1 = new StringBuilder(num1);
		int diff = num2.length() - num1.length();
		if (diff > 0) {
			sb1 = sb1.reverse();
			while (diff-- > 0) {
				sb1.append("0");
			}
			sb1 = sb1.reverse();
		}
		num1 = sb1.toString();
		Integer[][][][] dp = new Integer[num2.length()][2][2][400];
		return helper(num1,num2,min_sum,max_sum,0,1,1,0,dp);
	}
	int helper(String num1, String num2, int min_sum, int max_sum, int idx, int lowBound, int highBound, int sum, Integer[][][][] dp) {
		if (idx == num1.length()) {
			return sum >= min_sum ? 1 : 0;
		}
		if (dp[idx][lowBound][highBound][sum] != null) {
			return dp[idx][lowBound][highBound][sum];
		}
		int max = 9;
		int min = 0;
	}
}