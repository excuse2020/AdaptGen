class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		ListNode ans = new ListNode(0, null);
		ListNode toReturn = ans;
		int carry = 0;
		int sum;
		while (l1 != null && l2 != null) {
			sum = l1.val + l2.val;
			if (sum == 10) {
				ListNode a = new ListNode(0, null);
				ans.next = a;
				ans = ans.next;
				carry = 1;
			} 
			else if (sum > 9) {
				sum = sum % 10;
				ListNode a = new ListNode(sum, null);
				ans.next = a;
				ans = ans.next;
				carry = 1;
			} 
			else {
				ListNode a = new ListNode(sum, null);
				ans.next = a;
				ans = ans.next;
				carry = 0;
			}
			l1 = l1.next;
			l2 = l2.next;
		}
		while (l1 != null) {
			sum = l1.val + carry;
			if (sum == 10) {
				ListNode a = new ListNode(0, null);
				ans.next = a;
				ans = ans.next;
				carry = 1;
			} 
			else if (sum < 10) {
				ListNode a = new ListNode(sum, null);
				ans.next = a;
				ans = ans.next;
				carry = 0;
			}
			l1 = l1.next;
		}
		while (l2 != null) {
			sum = l2.val + carry;
			if (sum == 10) {
				ListNode a = new ListNode(0, null);
				ans.next = a;
				ans = ans.next;
				carry = 1;
			} 
			else if (sum < 10) {
				ListNode a = new ListNode(sum, null);
				ans.next = a;
				ans = ans.next;
				carry = 0;
			}
			l2 = l2.next;
		}
		if (carry == 1) {
			ListNode a = new ListNode(1, null);
			ans.next = a;
		}
		return toReturn.next;
	}
}