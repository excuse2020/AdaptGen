class Solution {
	int maxSumSubmatrix(int[][] matrix, int k) {
		int x = matrix[0].length;
		int y = matrix.length;
		int[][] sum = new int[y][x];
		sum[0][0] = matrix[0][0];
		for (int i = 1; i < y; i++) {
			sum[i][0] = sum[i - 1][0] + matrix[i][0];
		}
		for (int j = 1; j < x; j++) {
			sum[0][j] = sum[0][j - 1] + matrix[0][j];
		}
		for (int i = 1; i < y; i++) {
			for (int j = 1; j < x; j++) {
				sum[i][j] = sum[i][j - 1] + sum[i - 1][j] - sum[i - 1][j - 1];
				if (sum[i][j] == k) {
					return k;
				}
			}
		}
		int max_value = Integer.MIN_VALUE;
		for (int i = 0; i < y; i++) {
			for (int j = 0; j < x; j++) {
				for (int my = i; my < y; my++) {
					for (int mx = j; mx < x; mx++) {
						int area = sum[my][mx] - (i - 1 < 0 ? 0 : sum[i - 1][mx]) + (i - 1 < 0 || j - 1 < 0 ? 0 : sum[i - 1][j - 1]);
						if (area == k) {
							return k;
						}
						if (area < k) {
							max_value = Math.max(area,max_value);
						}
					}
				}
			}
		}
		return max_value;
	}
}