class Solution {
	int binarySearch(int[] arr, int target) {
		int low = 0;
		int high = arr.length - 1;
		int ans = -100;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (arr[mid] <= target) {
				low = mid + 1;
			} 
			else {
				ans = mid;
				high = mid - 1;
			}
		}
		return ans;
	}
	int findTimes(String str) {
		int[] arr = new int[26];
		int i = 0;
	}
	int[] numSmallerByFrequency(String[] queries, String[] words) {
		int n1 = queries.length;
		int n2 = words.length;
		int[] arr1 = new int[n1];
		int[] arr2 = new int[n2];
		for (int i = 0; i < n1; i++) {
			arr1[i] = findTimes(queries[i]);
		}
		for (int i = 0; i < n2; i++) {
			arr2[i] = findTimes(words[i]);
		}
		Arrays.sort(arr2);
		for (int i = 0; i < n1; i++) {
			int index = binarySearch(arr2,arr1[i]);
			if (index == -100) {
				arr1[i] = 0;
			} 
			else {
				arr1[i] = n2 - index;
			}
		}
		return arr1;
	}
}