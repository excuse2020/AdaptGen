class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> ds = new ArrayList<>();
		helper(1,0,n,ans,ds,k);
		return ans;
	}
	void helper(int ind, int sum, int n, List<List<Integer>> ans, List<Integer> ds, int k) {
		if (sum == n && k == 0) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		if (sum > n || k < 0) {
			return;
		}
		for (int i = ind; i <= 9; i++) {
			if (i > n) {
				break;
			}
			ds.add(i);
			helper(i + 1,sum + i,n,ans,ds,k - 1);
			ds.remove(ds.size() - 1);
		}
	}
}