class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return null;
		}
		if (pRootOfTree.left == null && pRootOfTree.right == null) {
			return pRootOfTree;
		}
		TreeNode leftp, rightp;
		rightp = Convert(pRootOfTree.right);
		leftp = Convert(pRootOfTree.left);
		pRootOfTree.right = rightp;
		if (rightp != null) {
			rightp.left = pRootOfTree;
		}
		if (leftp == null) {
			return pRootOfTree;
		}
		TreeNode ptr = leftp;
		while (ptr.right != null) {
			ptr = ptr.right;
		}
		pRootOfTree.left = ptr;
		ptr.right = pRootOfTree;
		return leftp;
	}
}