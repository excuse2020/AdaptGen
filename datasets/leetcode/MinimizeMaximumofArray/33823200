class Solution {
	boolean isValidNumber(long minVal, int[] nums) {
		int i = nums.length - 1;
		long nextVal = nums[i - 1];
		long currVal = nums[i];
		while (i >= 0) {
			if (currVal > minVal) {
				long d = currVal - minVal;
				nextVal += d;
			}
			currVal = nextVal;
			i--;
			if (i - 1 >= 0) {
				nextVal = nums[i - 1];
			}
		}
		if (currVal > minVal) {
			return false;
		}
		return true;
	}
	int minimizeArrayValue(int[] nums) {
		int n = nums.length;
		int minimizeArrayValue = nums[0];
		long l = nums[0];
		long h = nums[0];
		for (int i = 0; i < n; i++) {
			h = Math.max(h,nums[i]);
		}
		while (l <= h) {
			long mid = (l + h) / 2;
			if (isValidNumber(mid,nums)) {
				if (isValidNumber(mid - 1,nums) == false) {
					minimizeArrayValue = (int) mid;
					break;
				} 
				else {
					h = mid - 1;
				}
			} 
			else {
				l = mid + 1;
			}
		}
		return minimizeArrayValue;
	}
}