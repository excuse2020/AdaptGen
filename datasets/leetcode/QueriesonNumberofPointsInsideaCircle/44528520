class Solution {
	int[][] points;
	int cntForCirle(int cx, int cy, int r) {
		int cnt = 0;
		int r2 = r * r;
		for (int[] p: points) {	
			if (dist(p[0],p[1],cx,cy) <= r2) {
				cnt++;
			}
		}
		return cnt;
	}
	int[] countPoints(int[][] points, int[][] queries) {
		int qn = queries.length;
		int[] ans = new int[qn];
		this.points = points;
		for (int i = 0; i < qn; i++) {
			int cx = queries[i][0];
			int cy = queries[i][1];
			int r = queries[i][2];
			ans[i] += cntForCirle(cx,cy,r);
		}
		return ans;
	}
	double dist(int x1, int y1, int x2, int y2) {
		int dx = x1 - x2;
		int dy = y1 - y2;
		return dx * dx + dy * dy;
	}
}