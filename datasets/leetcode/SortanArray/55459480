class Solution {
	int[] merge(int[] left, int[] right) {
		int[] result = new int[left.length + right.length];
		int resultIndex = 0, leftIndex = 0, rightIndex = 0;
		while (leftIndex < left.length && rightIndex < right.length) {
			if (left[leftIndex] <= right[rightIndex]) {
				result[resultIndex++] = left[leftIndex++];
			} 
			else {
				result[resultIndex++] = right[rightIndex++];
			}
		}
		while (leftIndex < left.length) {
			result[resultIndex++] = left[leftIndex++];
		}
		while (rightIndex < right.length) {
			result[resultIndex++] = right[rightIndex++];
		}
		return result;
	}
	int[] sortArray(int[] nums) {
		if (nums.length < 2) {
			return nums;
		}
		int mid = nums.length / 2;
		int[] left = new int[mid];
		int[] right = new int[nums.length - mid];
		System.arraycopy(nums,0,left,0,mid);
		System.arraycopy(nums,mid,right,0,nums.length - mid);
		left = sortArray(left);
		right = sortArray(right);
		return merge(left,right);
	}
}