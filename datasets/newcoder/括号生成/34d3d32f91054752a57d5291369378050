class Solution {
	ArrayList<String> list;
	void dfs(StringBuilder sBuilder, int i, int j, int n) {
		if (j == n) {
			list.add(sBuilder.toString());
			return;
		}
		if (i < j) {
			return;
		}
		if (i < n) {
			sBuilder.append('(');
			dfs(sBuilder,i + 1,j,n);
			sBuilder.deleteCharAt(i + j);
		}
		if (i > j) {
			sBuilder.append(')');
			dfs(sBuilder,i,j + 1,n);
			sBuilder.deleteCharAt(i + j);
		}
	}
	ArrayList<String> generateParenthesis(int n) {
		list = new ArrayList<String>();
		StringBuilder sBuilder = new StringBuilder();
		dfs(sBuilder,0,0,n);
		return list;
	}
}