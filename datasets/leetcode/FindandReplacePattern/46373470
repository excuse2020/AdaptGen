class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		int n = words.length;
		List<String> rslt = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			Map<Character, Character> map = new HashMap<>();
			boolean matched = true;
			if (words[i].length() == pattern.length()) {
				for (int j = 0; j < pattern.length(); j++) {
					if (!map.containsKey(pattern.charAt(j))) {
						if (map.containsValue(words[i].charAt(j))) {
							matched = false;
						}
						map.put(pattern.charAt(j),words[i].charAt(j));
					} 
					else if (map.containsKey(pattern.charAt(j))) {
						if (map.get(pattern.charAt(j)) != words[i].charAt(j)) {
							matched = false;
						}
					}
				}
			}
			if (matched) {
				rslt.add(words[i]);
			}
		}
		return rslt;
	}
}