class Solution {
	boolean check(int[] numsDivide, int i) {
		for (int j = 0; j < numsDivide.length; j++) {
			if (numsDivide[j] % i != 0) {
				return false;
			}
		}
		return true;
	}
	int minOperations(int[] nums, int[] numsDivide) {
		Arrays.sort(nums);
		ArrayList<Integer> a = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			a.add(nums[i]);
		}
		int count = 0;
		boolean confirm = false;
		while (confirm == false && !a.isEmpty()) {
			boolean c = check(numsDivide,a.get(0));
			if (c == true) {
				confirm = true;
			} 
			else {
				int j = 0;
				int num = a.get(0);
				while (!a.isEmpty() && a.get(j) == num) {
					a.remove(0);
					count++;
				}
			}
		}
		if (a.isEmpty()) {
			return -1;
		}
		return count;
	}
}