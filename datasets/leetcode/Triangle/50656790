class Solution {
	int[][] dp;
	int len;
	List<List<Integer>> triangle;
	int minimumTotal(List<List<Integer>> triangle) {
		this.triangle = triangle;
		len = triangle.size();
		dp = new int[len][len];
		for (int i = 0; i < len; i++) {
			Arrays.fill(dp[i],Integer.MIN_VALUE);
		}
		return traverse(0,0);
	}
	int traverse(int level, int row) {
		if (level >= len) {
			return 0;
		}
		int value = dp[level][row];
		if (value != Integer.MIN_VALUE) {
			return value;
		}
		List<Integer> list = triangle.get(level);
		int min = traverse(level + 1,row) + list.get(row);
		if (row + 1 < list.size()) {
			min = Math.min(min,traverse(level + 1,row + 1) + list.get(row + 1));
		}
		return dp[level][row] = min;
	}
}