class Solution {
	Deque<Integer> leaf = new LinkedList<Integer>();
	boolean out = true;
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		makeLeaf(root1);
		testLeaf(root2);
		if (leaf.isEmpty()) {
			return out;
		} 
		else {
			return false;
		}
	}
	void makeLeaf(TreeNode root) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			leaf.addLast(root.val);
		}
		makeLeaf(root.left);
		makeLeaf(root.right);
	}
	void testLeaf(TreeNode root) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			if (leaf.isEmpty() || leaf.peek() != root.val) {
				out = false;
				return;
			} 
			else {
				leaf.removeFirst();
			}
		}
		testLeaf(root.left);
		testLeaf(root.right);
	}
}