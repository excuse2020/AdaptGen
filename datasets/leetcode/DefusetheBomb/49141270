class Solution {
	int[] decrypt(int[] code, int k) {
		int[] p = new int[code.length];
		p[0] = code[0];
		for (int i = 1; i < code.length; i++) {
			p[i] = code[i] + p[i - 1];
		}
		int[] r = new int[p.length];
		r[p.length - 1] = code[p.length - 1];
		for (int i = code.length - 2; i >= 0; i--) {
			r[i] = r[i + 1] + code[i];
		}
		if (k == 0) {
			int[] ans = new int[code.length];
			return ans;
		} 
		else if (k > 0) {
			int[] ans = new int[code.length];
			for (int i = 0; i < code.length - k; i++) {
				ans[i] = p[i + k] - p[i];
			}
			for (int i = code.length - k; i < code.length; i++) {
				ans[i] = p[code.length - 1] - p[i] + p[i + k - code.length];
			}
			return ans;
		} 
		else {
			int[] ans = new int[code.length];
			for (int i = code.length - 1; i >= -k; i--) {
				ans[i] = r[i + k] - r[i];
			}
			for (int i = -k - 1; i >= 0; i--) {
				ans[i] = r[0] - r[i] + r[code.length + k + i];
			}
			return ans;
		}
	}
}