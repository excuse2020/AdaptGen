class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		get(ans,new ArrayList<>(),1,n,0,k,0);
		return ans;
	}
	void get(List<List<Integer>> ans, List<Integer> a, int i, int n, int size, int k, int sum) {
		if (i == 10 || size > k) {
			return;
		}
		if (sum + i < n) {
			a.add(i);
			get(ans,a,i + 1,n,size + 1,k,sum + i);
			a.remove(size);
			get(ans,a,i + 1,n,size,k,sum);
		} 
		else if (sum + i > n) {
			return;
		} 
		else if (sum + i == n && size + 1 == k) {
			a.add(i);
			ans.add(new ArrayList<>(a));
			a.remove(size);
		}
		return;
	}
}