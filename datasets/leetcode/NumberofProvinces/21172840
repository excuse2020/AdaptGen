class Solution {
	void DFS(int vertex, int[][] isConnected, boolean[] visited) {
		visited[vertex] = true;
		for (int nextVertex = 0; nextVertex < isConnected[vertex].length; nextVertex++) {
			if (isConnected[vertex][nextVertex] == 1 && !visited[nextVertex]) {
				DFS(nextVertex,isConnected,visited);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int provinces = 0;
		int nodes = isConnected.length;
		boolean[] visited = new boolean[nodes];
		for (int vertex = 0; vertex < nodes; vertex++) {
			if (!visited[vertex]) {
				DFS(vertex,isConnected,visited);
				provinces++;
			}
		}
		return provinces;
	}
}