class Solution {
	void flatten(TreeNode root) {
		if (root == null) {
			return;
		}
		flatten(root.left);
		flatten(root.right);
		makeRight(root);
	}
	void makeRight(TreeNode node) {
		if (node.left != null && node.right == null) {
			node.right = node.left;
			node.left = null;
			return;
		}
		if (node.left == null || node.right == null) {
			return;
		}
		TreeNode a = node.right;
		TreeNode b = node.left;
		node.right = null;
		node.left = null;
		node.right = b;
		TreeNode temp = b;
		while (temp.right != null) {
			temp = temp.right;
		}
		temp.right = a;
	}
}