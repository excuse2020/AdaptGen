class Solution {
	int ans = 0;
	void help(int sum, int i, int take, int k, List<List<Integer>> piles) {
		if (take == k) {
			ans = Math.max(ans,sum);
		}
		if (i >= piles.size()) {
			return;
		}
		for (int j = i; j < piles.size(); j++) {
			help(sum,j + 1,take,k,piles);
			for (int m = 0; m < piles.get(j).size(); m++) {
				help(sum + piles.get(j).get(m),j + 1,take + m,k,piles);
			}
		}
	}
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		List<List<Integer>> psum = new ArrayList<>();
		for (int i = 0; i < piles.size(); i++) {
			int sum = 0;
			psum.add(new ArrayList<>());
			for (int j = 0; j < piles.get(i).size(); j++) {
				sum += piles.get(i).get(j);
				psum.get(i).add(sum);
			}
		}
		help(0,0,0,k,psum);
		return ans;
	}
}