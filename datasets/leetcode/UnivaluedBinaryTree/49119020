class Solution {
	boolean isUnivalTree(TreeNode root) {
		int hold = 0;
		Stack<TreeNode> st = new Stack<>();
		boolean bFlag = true;
		TreeNode temp = root;
		if (root == null) {
			return true;
		}
		int iVal = root.val;
		while (bFlag == true) {
			if (root != null) {
				if (root.val != iVal) {
					bFlag = false;
					break;
				}
				st.push(root);
				root = root.left;
			}
			if (root == null && !st.isEmpty()) {
				root = st.pop();
				root = root.right;
			} 
			else if (st.isEmpty()) {
				break;
			}
		}
		return bFlag;
	}
}