class Solution {
	int helper(int i, int j, String s, String t, int[][] memo) {
		if (j == t.length()) {
			return 1;
		}
		if (i == s.length()) {
			return 0;
		}
		if (memo[i][j] != -1) {
			return memo[i][j];
		}
		int take = 0;
		if (s.charAt(i) == t.charAt(j)) {
			take = helper(i + 1,j + 1,s,t,memo);
		}
		int dont = helper(i + 1,j,s,t,memo);
		int res = take + dont;
		return memo[i][j] = res;
	}
	int numDistinct(String s, String t) {
		int[][] memo = new int[s.length() + 1][t.length() + 1];
		for (int[] mem: memo) {	
			Arrays.fill(mem,-1);
		}
		return helper(0,0,s,t,memo);
	}
}