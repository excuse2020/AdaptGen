class Solution {
	int findMaxFish(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		boolean vis = new boolean[m][n];
		int max = new int[1];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] != 0 && !vis[i][j]) {
					int sum = new int[1];
					helper(grid,i,j,m,n,sum,vis);
					max[0] = Math.max(max[0],sum[0]);
				}
			}
		}
		return max[0];
	}
	void helper(int arr, int i, int j, int m, int n, int sum, boolean vis) {
		if (i < 0 || i >= m || j < 0 || j >= n || vis[i][j] || arr[i][j] == 0) {
			return;
		}
		vis[i][j] = true;
		sum[0] = sum[0] + arr[i][j];
		helper(arr,i,j + 1,m,n,sum,vis);
		helper(arr,i,j - 1,m,n,sum,vis);
		helper(arr,i + 1,j,m,n,sum,vis);
		helper(arr,i - 1,j,m,n,sum,vis);
	}
}