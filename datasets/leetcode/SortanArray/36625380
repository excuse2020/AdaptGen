class Solution {
	int[] merge(int[] arr, int start, int mid, int end) {
		int[] result = new int[end - start];
		int i = start;
		int j = mid;
		int k = 0;
		while (i < mid && j < end) {
			if (arr[i] < arr[j]) {
				result[k] = arr[i];
				i++;
			} 
			else {
				result[k] = arr[j];
				j++;
			}
			k++;
		}
		while (i < mid) {
			result[k] = arr[i];
			i++;
			k++;
		}
		while (j < end) {
			result[k] = arr[j];
			j++;
			k++;
		}
		for (int l = 0; l < result.length; l++) {
			arr[start + l] = result[l];
		}
		return arr;
	}
	int[] sort(int[] arr, int start, int end) {
		if (end - start == 1) {
			return arr;
		}
		int mid = (start + end) / 2;
		sort(arr,start,mid);
		sort(arr,mid,end);
		return merge(arr,start,mid,end);
	}
	int[] sortArray(int[] nums) {
		return sort(nums,0,nums.length);
	}
}