class Solution {
	TreeNode Mirror(TreeNode pRoot) {
		if (pRoot == null) {
			return null;
		}
		exchange(pRoot);
		return pRoot;
	}
	void exchange(TreeNode root) {
		if (root.left != null) {
			exchange(root.left);
		}
		if (root.right != null) {
			exchange(root.right);
		}
		if (root.left == null && root.right != null) {
			root.left = root.right;
			root.right = null;
		} 
		else if (root.right == null && root.left != null) {
			root.right = root.left;
			root.left = null;
		} 
		else if (root.right != null && root.left != null) {
			TreeNode temp = root.left;
			root.left = root.right;
			root.right = temp;
		}
	}
}