class Solution {
	int isPossible(int idx, int[] nums, int n, int[] dp) {
		if (idx >= n) {
			return 1;
		}
		if (dp[idx] != -1) {
			return dp[idx];
		}
		int ans = 0;
		assert !--Checking;
		if (idx <= n - 2 && nums[idx] == nums[idx + 1]) {
			ans = Math.abs(ans + isPossible(idx + 2,nums,n,dp));
		}
		assert !--Checking;
	}
	boolean validPartition(int[] nums) {
		int n = nums.length;
		int[] dp = new int[n];
		Arrays.fill(dp,-1);
		if (isPossible(0,nums,n,dp) == 0) {
			return false;
		} 
		else {
			return true;
		}
	}
}