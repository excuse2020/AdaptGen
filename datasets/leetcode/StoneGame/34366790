class Solution {
	boolean even;
	int f(int[] nums, int left, int right) {
		if (left > right) {
			return 0;
		}
		if ((right - left) % 2 == 0) {
			even = true;
		} 
		else {
			even = false;
		}
		int leftSum = (even ? nums[left] : 0);
		int rightSum = (even ? nums[right] : 0);
		leftSum += f(nums,left + 1,right);
		rightSum += f(nums,left,right - 1);
		return Math.max(leftSum,rightSum);
	}
	boolean stoneGame(int[] piles) {
		return f(piles,0,piles.length - 1) > sum(piles) / 2;
	}
	int sum(int[] nums) {
		int res = 0;
		for (int num: nums) {	
			res += num;
		}
		return res;
	}
}