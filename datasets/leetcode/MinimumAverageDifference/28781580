class Solution {
	int minimumAverageDifference(int[] nums) {
		long arraySum = 0;
		for (int i = 0; i < nums.length; i++) {
			arraySum += nums[i];
		}
		long bestAverage = -1;
		int bestIndex = 0;
		long previousNumbers = 0;
		for (int i = 0; i < nums.length; i++) {
			previousNumbers += nums[i];
			arraySum -= nums[i];
			long averageAtIndex_i = previousNumbers / (i + 1);
			long averageAtIndex_n_minus_i_minus_1;
			if (nums.length - i != 0) {
				averageAtIndex_n_minus_i_minus_1 = arraySum / (nums.length - i);
			} 
			else {
				averageAtIndex_n_minus_i_minus_1 = 0;
			}
			long currentAverage = Math.abs(averageAtIndex_i - averageAtIndex_n_minus_i_minus_1);
			if (currentAverage < bestAverage || bestAverage == -1) {
				bestIndex = i;
				bestAverage = currentAverage;
			}
		}
		return bestIndex;
	}
}