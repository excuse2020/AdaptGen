class Solution {
	boolean dfs(char[][] board) {
		int i = 0;
		int j = 0;
	}
	boolean isSafe(char[][] board, int i, int j, int c) {
		for (int p = 0; p < 9; p++) {
			if (board[p][j] == c) {
				return false;
			}
		}
		for (int p = 0; p < 9; p++) {
			if (board[i][p] == c) {
				return false;
			}
		}
		int row = i - i % 3;
		int col = j - j % 3;
		for (int p = row; p < row + 3; p++) {
			for (int q = col; q < col + 3; q++) {
				if (board[p][q] == c) {
					return false;
				}
			}
		}
		return true;
	}
	void solveSudoku(char[][] board) {
		if (board.length == 0) {
			return;
		}
		dfs(board);
	}
}