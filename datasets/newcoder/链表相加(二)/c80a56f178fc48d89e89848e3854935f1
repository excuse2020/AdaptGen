class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<Integer> s1 = new Stack();
		Stack<Integer> s2 = new Stack();
		while (head1 != null) {
			s1.push(head1.val);
			head1 = head1.next;
		}
		while (head2 != null) {
			s2.push(head2.val);
			head2 = head2.next;
		}
		ListNode res = null;
		int cnt = 0;
		while (!s1.empty() || !s2.empty()) {
			int x1 = s1.isEmpty() ? 0 : s1.pop();
			int x2 = s2.isEmpty() ? 0 : s2.pop();
			int sum = x1 + x2;
			cnt = sum / 10;
			ListNode tempNode = new ListNode(sum % 10);
			tempNode.next = res;
			res = tempNode;
		}
		if (cnt > 0) {
			ListNode tempNode = new ListNode(cnt);
			tempNode.next = res;
			res = tempNode;
		}
		return res;
	}
}