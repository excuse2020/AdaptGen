class Solution {
	int[] getAverages(int[] nums, int k) {
		if (k == 0) {
			return nums;
		}
		if (nums.length == 1) {
			return new int{-1};
		}
		int[] subArray = new int[nums.length];
		long windows = 0;
		if (nums.length < 2 * k + 1) {
			for (int i = 0; i < nums.length; i++) {
				subArray[i] = -1;
			}
			return subArray;
		}
		for (int j = 0; j < 2 * k + 1; j++) {
			windows += nums[j];
		}
		for (int i = 0; i < nums.length; i++) {
			if (i < k || i >= nums.length - k) {
				subArray[i] = -1;
			} 
			else if (i == k) {
				subArray[i] = (int) (windows / (2 * k + 1));
			} 
			else {
				windows = windows - nums[i - k - 1] + nums[i + k];
				subArray[i] = (int) (windows / (2 * k + 1));
			}
		}
		return subArray;
	}
}