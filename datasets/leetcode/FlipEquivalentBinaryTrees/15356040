class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return getHash(root1,0) == getHash(root2,0);
	}
	int getHash(TreeNode root, int parent) {
		if (root == null) {
			return -1;
		}
		if (root.left == null && root.right == null) {
			return root.val + parent;
		} 
		else if (root.left == null) {
			return getHash(root.right,root.val) * 31 + root.val + parent;
		} 
		else if (root.right == null) {
			return getHash(root.left,root.val) * 31 + root.val + parent;
		} 
		else {
			return (getHash(root.left,root.val) + getHash(root.right,root.val)) * 31 + root.val + parent;
		}
	}
}