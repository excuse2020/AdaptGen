class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums1.length; i++) {
			if (map.containsKey(nums1[i][0])) {
				map.put(nums1[i][0],nums1[i][1] + map.get(nums1[i][0]));
			} 
			else {
				map.put(nums1[i][0],nums1[i][1]);
			}
		}
		for (int i = 0; i < nums2.length; i++) {
			if (map.containsKey(nums2[i][0])) {
				map.put(nums2[i][0],nums2[i][1] + map.get(nums2[i][0]));
			} 
			else {
				map.put(nums2[i][0],nums2[i][1]);
			}
		}
		HashSet<Integer> set = new HashSet<>();
		for (int i = 0; i < nums1.length; i++) {
			set.add(nums1[i][0]);
		}
		for (int i = 0; i < nums2.length; i++) {
			set.add(nums2[i][0]);
		}
		int ans = new int[set.size()][2];
		int i = 0;
		for (int k: set) {	
			ans[i][0] = k;
			ans[i][1] = map.get(ans[i][0]);
			i++;
		}
		Arrays.sort(ans,(a, b) -> {a[0] - b[0]});
		return ans;
	}
}