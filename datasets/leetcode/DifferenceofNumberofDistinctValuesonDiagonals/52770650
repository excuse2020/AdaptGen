class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int n = grid.length, m = grid[0].length;
		long[][] la = new long[n][m], rb = new long[n][m];
		int[][] res = new int[n][m];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				la[i][j] = (i == 0 || j == 0 ? 0 : la[i - 1][j - 1]) | (1l << grid[i][j]);
				int x = n - 1, y = m - 1;
				rb[x][y] = (x == n - 1 || y == m - 1 ? 0 : rb[x + 1][y + 1]) | (1l << grid[x][y]);
			}
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				res[i][j] = Math.abs(Long.bitCount(i == 0 || j == 0 ? 0 : la[i - 1][j - 1]) - Long.bitCount(i == n - 1 || j == m - 1 ? 0 : rb[i + 1][j + 1]));
			}
		}
		return res;
	}
}