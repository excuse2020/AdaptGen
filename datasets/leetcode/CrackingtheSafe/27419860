class Solution {
	String crackSafe(int n, int k) {
		StringBuilder res = new StringBuilder();
		if (n == 1 && k == 1) {
			return "0";
		}
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < n - 1; i++) {
			sb.append("0");
		}
		String start = sb.toString();
		Set<String> visited = new HashSet<>();
		dfs(start,k,visited,res);
		res.append(start);
		return res.toString();
	}
	void dfs(String start, int k, Set<String> visited, StringBuilder res) {
		for (int i = 0; i < k; i++) {
			String nbr = start + i;
			if (!visited.contains(nbr)) {
				visited.add(nbr);
				dfs(nbr.substring(1),k,visited,res);
				res.append(i);
			}
		}
	}
}