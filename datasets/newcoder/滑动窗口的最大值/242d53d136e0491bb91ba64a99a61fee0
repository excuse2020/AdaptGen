class Solution {
	PriorityQueue<Integer> pq = new Comparator<Integer>();
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		ArrayList<Integer> res = new ArrayList<>();
		if (num == null || num.length == 0 || size > num.length || size <= 0) {
			return res;
		}
		for (int i = 0; i < size; i++) {
			pq.add(num[i]);
		}
		int pointer_out = 0, pointer_in = size;
		while (pointer_in <= num.length) {
			res.add(pq.peek());
			if (pq.peek() == num[pointer_out++]) {
				pq.poll();
			}
			if (pointer_in < num.length) {
				pq.add(num[pointer_in]);
			}
			pointer_in++;
		}
		return res;
	}
}