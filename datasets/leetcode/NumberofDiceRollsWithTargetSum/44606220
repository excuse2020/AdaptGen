class Solution {
	int arr;
	int mod = (int) (1e9 + 7);
	int numRollsToTarget(int n, int k, int target) {
		arr = new int[n][target + 20];
		for (int i = 0; i < n; i++) {
			Arrays.fill(arr[i],-1);
		}
		return solve(0,n,k,target,0);
	}
	int solve(int ind, int n, int k, int target, int sum) {
		if (ind == n && sum == target) {
			return 1;
		} 
		else if (sum > target) {
			return 0;
		} 
		else if (ind >= n) {
			return 0;
		}
		if (arr[ind][sum] != -1) {
			return arr[ind][sum];
		}
		int res = 0;
		for (int i = 1; i <= k; i++) {
			if (sum + i <= target) {
				res += solve(ind + 1,n,k,target,sum + i);
			} 
			else {
				break;
			}
			res %= mod;
		}
		arr[ind][sum] = (res % mod);
		return arr[ind][sum];
	}
}