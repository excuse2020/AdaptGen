class Solution {
	long countBadPairs(int[] nums) {
		long totalPairs = (long) (nums.length) * (long) ((nums.length - 1)) / 2;
		long goodPairs = 0;
		Map<Integer, Integer> pairs = new HashMap<>();
		for (int i = 0; i < nums.length; ++i) {
			pairs.put(nums[i] - i,pairs.getOrDefault(nums[i] - i,0) + 1);
		}
		for (int i = 0; i < nums.length; ++i) {
			if (pairs.get(nums[i] - i) > 1) {
				long temp = pairs.get(nums[i] - i);
				goodPairs += temp * (temp - 1) / 2;
				pairs.put(nums[i] - i,0);
			}
		}
		return totalPairs - goodPairs;
	}
}