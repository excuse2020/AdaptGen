class Solution {
	int minStoneSum(int[] p, int k) {
		int sum = 0;
		for (int i = 0; i < p.length; i++) {
			sum += p[i];
		}
		int change = 0;
		PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());
		for (int i = 0; i < p.length; i++) {
			pq.offer(p[i]);
		}
		for (int i = 0; i < k; i++) {
			int z = pq.poll();
			if (z == 0) {
				break;
			}
			change += (int) Math.floor(z / 2);
			System.out.println(change + " ");
			int yy = z - (int) Math.floor(z / 2);
			if (yy == 1) {
				break;
			}
			pq.add(yy);
		}
		return sum - change;
	}
}