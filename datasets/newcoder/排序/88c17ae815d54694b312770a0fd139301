class Solution {
	int[] MySort(int[] arr) {
		quickSort(0,arr.length - 1,arr);
		return arr;
	}
	int partition(int start, int end, int[] arr) {
		int pV = arr[start];
		int i = start, j = end;
		while (i < j) {
			while (i < end && arr[i] <= pV) {
				i++;
			}
			while (j > start && arr[j] >= pV) {
				j--;
			}
			if (i < j) {
				swap(i,j,arr);
			}
		}
		swap(start,j,arr);
		return j;
	}
	void quickSort(int start, int end, int[] arr) {
		if (start < end) {
			int pivot = partition(start,end,arr);
			quickSort(start,pivot - 1,arr);
			quickSort(pivot + 1,end,arr);
		}
	}
	void swap(int i, int j, int[] arr) {
		int tmp = arr[i];
		arr[i] = arr[j];
		arr[j] = tmp;
	}
}