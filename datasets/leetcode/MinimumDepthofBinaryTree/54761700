class Solution {
	int minDepth;
	int minDepth(TreeNode root) {
		minDepth = Integer.MAX_VALUE;
		if (root == null) {
			return 0;
		}
		traverseAndUpdate(root,1);
		return minDepth;
	}
	void traverseAndUpdate(TreeNode curNode, int curDepth) {
		if (curDepth > minDepth) {
			return;
		}
		if (curNode.left == null && curNode.right == null) {
			minDepth = Math.min(curDepth,minDepth);
		}
		if (curNode.left != null) {
			traverseAndUpdate(curNode.left,curDepth + 1);
		}
		if (curNode.right != null) {
			traverseAndUpdate(curNode.right,curDepth + 1);
		}
	}
}