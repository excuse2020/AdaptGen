class Solution {
	int threeSumMulti(int[] arr, int target) {
		int[] HashMap = new int[101];
		for (int iter: arr) {	
			HashMap[iter]++;
		}
		int n = HashMap.length;
		long ans = 0, inBound = 1000000007;
		for (int i = 0; i < n; i++) {
			if (HashMap[i] == 0) {
				continue;
			}
			for (int j = 0; j <= i; j++) {
				int k = target - i;
				if (k < j || k > i || HashMap[j] == 0 || HashMap[k] == 0) {
					continue;
				}
				long x = HashMap[i], y = HashMap[k], z = HashMap[j];
				if (i == j && i == k && HashMap[i] > 2) {
					ans += x * (y - 1) / 6;
				} 
				else if (j == k && i != k && HashMap[j] > 1) {
					ans += x * y / 2;
				} 
				else if (k == i && j != k && HashMap[i] > 1) {
					ans += x * (y - 1) / 2;
				} 
				else if (i != k && k != j) {
					ans += x * y;
				}
			}
		}
		return (int) (ans % inBound);
	}
}