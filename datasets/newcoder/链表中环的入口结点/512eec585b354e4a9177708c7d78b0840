class Solution {
	ListNode EntryNodeOfLoop(ListNode pHead) {
		ListNode node1 = new ListNode(-1);
		node1 = isCirCle(pHead);
		if (node1 == null) {
			return null;
		}
		ListNode node2 = pHead;
		while (node2 != null) {
			ListNode temp = node1;
			if (node2 == temp) {
				return node2;
			}
			temp = temp.next;
			while (temp != node1) {
				if (node2 == temp) {
					return node2;
				} 
				else {
					temp = temp.next;
				}
			}
			node2 = node2.next;
		}
		return null;
	}
	ListNode isCirCle(ListNode pHead) {
		if (pHead == null || pHead.next == null || pHead.next.next == null) {
			return null;
		}
		ListNode fast = pHead;
		ListNode low = pHead;
		while (fast != null && fast.next != null) {
			low = low.next;
			fast = fast.next.next;
			if (low == fast) {
				return fast;
			}
		}
		return null;
	}
}