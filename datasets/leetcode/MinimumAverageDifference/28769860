class Solution {
	long firstSum = 0;
	long lastSum = 0;
	long getAverageDiff(int[] nums, int n, int ind) {
		firstSum += nums[ind];
		long first = firstSum / (ind + 1);
		lastSum -= nums[ind];
		long second = 0;
		if ((n - ind) != 0) {
			second = lastSum / (n - ind);
		}
		return Math.abs(first - second);
	}
	int minimumAverageDifference(int[] nums) {
		int n = nums.length;
		int minInd = 0;
		long minDiff = Long.MAX_VALUE;
		for (int i: nums) {	
			lastSum += i;
		}
		for (int i = 0; i < n; i++) {
			long averageDiff = getAverageDiff(nums,n,i);
			if (minDiff > averageDiff) {
				minDiff = averageDiff;
				minInd = i;
			}
		}
		return minInd;
	}
}