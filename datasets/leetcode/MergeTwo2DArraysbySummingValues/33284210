class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		HashMap<Integer, Integer> map = new LinkedHashMap<>();
		for (int[] i: nums1) {	
			map.put(i[0],i[1]);
		}
		for (int[] i: nums2) {	
			if (!map.containsKey(i[0])) {
				map.put(i[0],i[1]);
			} 
			else {
				map.merge(i[0],i[1],);
			}
		}
		LinkedHashMap<Integer, Integer> map2 = map.entrySet().stream().sorted(Map.Entry.comparingByKey()).collect(Collectors.toMap(,,(id, val) -> {id},));
		int[][] output = new int[map.size()][2];
		for (int i = 1; i <= map2.size(); i++) {
			output[i - 1][0] = (int) map2.keySet().toArray()[i - 1];
			output[i - 1][1] = map2.get((int) map2.keySet().toArray()[i - 1]);
		}
		return output;
	}
}