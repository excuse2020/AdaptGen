class Solution {
	boolean isValid(char[][] board, int r, int c) {
		for (int i = 0; i < 9; i++) {
			if (r != i && board[i][c] == board[r][c]) {
				return false;
			}
			if (c != i && board[r][i] == board[r][c]) {
				return false;
			}
		}
		int rowStart = 3 * (r / 3);
		int colStart = 3 * (c / 3);
		for (int i = rowStart; i < rowStart + 3; i++) {
			for (int j = colStart; j < colStart + 3; j++) {
				if (i != r && j != c && board[i][j] == board[r][c]) {
					return false;
				}
			}
		}
		return true;
	}
	boolean isValidSudoku(char[][] board) {
		int i = 0;
		int j = 0;
		char c = board[i][j];
	}
}