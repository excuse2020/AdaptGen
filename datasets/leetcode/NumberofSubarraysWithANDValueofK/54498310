class Solution {
	long countSubarrays(int[] nums, int k) {
		long ans = 0;
		List<HashMap<Integer, Integer>> dp = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			dp.add(new HashMap<>());
		}
		dp.get(0).put(nums[0],1);
		if (nums[0] == k) {
			ans++;
		}
		for (int i = 1; i < nums.length; i++) {
			dp.get(i).put(nums[i],1);
			for (Map.Entry<Integer, Integer> itr: dp.get(i - 1).entrySet()) {	
				int x = itr.getKey();
				int freq = itr.getValue();
				int temp = x & nums[i];
				if (dp.get(i).containsKey(temp)) {
					dp.get(i).put(temp,dp.get(i).get(temp) + freq);
				} 
				else {
					dp.get(i).put(temp,freq);
				}
			}
			if (dp.get(i).containsKey(k)) {
				ans += dp.get(i).get(k);
			}
		}
		return ans;
	}
}