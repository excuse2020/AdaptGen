class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int i = 0;
		int j = 0;
		int k = 0;
		int n = nums1.length;
		int m = nums2.length;
		int total = m + n;
		boolean totalIsEven = isEven(total);
		int max = (m + n) / 2 + 1;
		int[] newArray = new int[max];
		while (i < n && j < m && k < max) {
			if (nums1[i] < nums2[j]) {
				newArray[k] = nums1[i];
				i++;
			} 
			else {
				newArray[k] = nums2[j];
				j++;
			}
			k++;
		}
		while (i < n && k < max) {
			newArray[k] = nums1[i];
			i++;
			k++;
		}
		while (j < m && k < max) {
			newArray[k] = nums2[j];
			j++;
			k++;
		}
		if (totalIsEven) {
			double result = newArray[max - 1] + newArray[max - 2];
			result = result / 2;
			return result;
		} 
		else {
			return newArray[max - 1];
		}
	}
	boolean isEven(int num) {
		return num % 2 == 0;
	}
}