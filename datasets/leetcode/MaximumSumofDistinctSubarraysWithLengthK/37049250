class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Set<Integer> set = new HashSet<>();
		int i = 0, j = 0, n = nums.length;
		long sum = 0, maxSum = 0;
		while (j < n) {
			sum += nums[j];
			while (set.contains(nums[j])) {
				sum -= nums[i];
				set.remove(nums[i++]);
			}
			if (j - i + 1 == k) {
				maxSum = Math.max(maxSum,sum);
				sum -= nums[i];
				set.remove(nums[i++]);
			}
			set.add(nums[j++]);
		}
		return maxSum;
	}
}