class Solution {
	int max;
	TreeNode tn;
	int dfs(TreeNode tn, int level) {
		if (tn == null) {
			max = Math.max(level,max);
			return level;
		}
		int right = dfs(tn.right,level + 1);
		int left = dfs(tn.left,level + 1);
		if (right == left && left == max) {
			this.tn = tn;
		}
		return Math.max(left,right);
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		dfs(root,0);
		return tn;
	}
}