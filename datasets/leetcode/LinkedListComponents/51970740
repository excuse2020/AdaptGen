class Solution {
	int numComponents(ListNode head, int[] nums) {
		if (head == null) {
			return 0;
		}
		int l = nums.length;
		ListNode a = head;
		int c = 0;
		while (a != null) {
			int g = a.val;
			if (search(nums,g)) {
				while (true) {
					if (a.next == null) {
						break;
					}
					a = a.next;
					g = a.val;
					if (search(nums,g)) {
					} 
					else {
						break;
					}
				}
				c++;
			}
			if (a != null) {
				a = a.next;
			}
		}
		return c;
	}
	boolean search(int nums, int val) {
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == val) {
				return true;
			}
		}
		return false;
	}
}