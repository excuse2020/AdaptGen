class Solution {
	String longestPalindrome(String s) {
		String res = "";
		for (int ax = 0; ax < s.length(); ax++) {
			int len = 1;
			int or = 1;
			while (ax - or >= 0 && ax + or < s.length()) {
				if (s.charAt(ax - or) == s.charAt(ax + or)) {
					or++;
					len += 2;
				} 
				else {
					break;
				}
			}
			if (len > res.length()) {
				int si = ax - len / 2;
				res = s.substring(si,si + len);
			}
		}
		for (int ax = 0; ax < s.length() - 1; ax++) {
			int len = 0;
			int or = 1;
			while (ax - or + 1 >= 0 && ax + or < s.length()) {
				if (s.charAt(ax - or + 1) == s.charAt(ax + or)) {
					or++;
					len += 2;
				} 
				else {
					break;
				}
			}
			if (len > res.length()) {
				int si = ax - len / 2 + 1;
				res = s.substring(si,si + len);
			}
		}
		return res;
	}
}