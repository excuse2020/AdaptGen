class Solution {
	int knightDialer(int n) {
		long currArr = new long[10];
		int mod = 1000000007;
		Arrays.fill(currArr,1);
		for (int i = 2; i <= n; i++) {
			long newArr = new long[10];
			newArr[0] = (currArr[4] + currArr[6]) % mod;
			newArr[1] = (currArr[6] + currArr[8]) % mod;
			newArr[2] = (currArr[7] + currArr[9]) % mod;
			newArr[3] = (currArr[4] + currArr[8]) % mod;
			newArr[4] = (currArr[0] + currArr[3]) % mod;
			newArr[5] = 0;
			newArr[6] = (currArr[0] + currArr[1]) % mod;
			newArr[7] = (currArr[2] + currArr[6]) % mod;
			newArr[8] = (currArr[1] + currArr[3]) % mod;
			newArr[9] = (currArr[2] + currArr[4]) % mod;
			currArr = newArr;
		}
		long ans = 0;
		for (long num: currArr) {	
			ans = (ans + num) % mod;
		}
		return (int) ans;
	}
}