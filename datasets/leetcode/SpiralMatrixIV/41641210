class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int ans = new int[m][n];
		int c = m * n;
		int sr = 0, er = m - 1, sc = 0, ec = n - 1;
		int k = 1;
		ListNode cur = head;
		while (c > 0) {
			for (int i = sc; c > 0 && i <= ec; i++) {
				if (cur != null) {
					ans[sr][i] = cur.val;
					cur = cur.next;
				} 
				else {
					ans[sr][i] = -1;
				}
				c--;
			}
			sr++;
			for (int i = sr; c > 0 && i <= er; i++) {
				if (cur != null) {
					ans[i][ec] = cur.val;
					cur = cur.next;
				} 
				else {
					ans[i][ec] = -1;
				}
				c--;
			}
			ec--;
			for (int i = ec; c > 0 && i >= sc; i--) {
				if (cur != null) {
					ans[er][i] = cur.val;
					cur = cur.next;
				} 
				else {
					ans[er][i] = -1;
				}
				c--;
			}
			er--;
			for (int i = er; c > 0 && i >= sr; i--) {
				if (cur != null) {
					ans[i][sc] = cur.val;
					cur = cur.next;
				} 
				else {
					ans[i][sc] = -1;
				}
				c--;
			}
			sc++;
		}
		return ans;
	}
}