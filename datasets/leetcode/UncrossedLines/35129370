class Solution {
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int m = nums2.length;
		int[][] dp = new int[n + 1][m + 1];
		for (int i = 0; i < dp.length; i++) {
			for (int j = 0; j < dp[i].length; j++) {
				dp[i][j] = -1;
			}
		}
		return solve(nums1,nums2,0,0,dp);
	}
	int solve(int[] nums1, int[] nums2, int i, int j, int[][] dp) {
		if (i == nums1.length) {
			return 0;
		}
		if (j == nums2.length) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (nums1[i] == nums2[j]) {
			dp[i][j] = 1 + solve(nums1,nums2,i + 1,j + 1,dp);
		} 
		else {
			dp[i][j] = Math.max(solve(nums1,nums2,i + 1,j,dp),solve(nums1,nums2,i,j + 1,dp));
		}
		return dp[i][j];
	}
}