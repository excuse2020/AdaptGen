class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		ArrayList<ArrayList<Integer>> list = new ArrayList<ArrayList<Integer>>();
		if (pRoot == null) {
			return list;
		}
		Deque<TreeNode> deque = new LinkedList<TreeNode>();
		deque.offer(pRoot);
		while (!deque.isEmpty()) {
			int count = deque.size();
			ArrayList<Integer> leveList = new ArrayList<Integer>();
			for (int i = 0; i < count; i++) {
				TreeNode node = deque.poll();
				leveList.add(node.val);
				if (node.left != null) {
					deque.offer(node.left);
				}
				if (node.right != null) {
					deque.offer(node.right);
				}
			}
			list.add(leveList);
		}
		return list;
	}
}