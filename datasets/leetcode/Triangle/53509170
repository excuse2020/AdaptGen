class Solution {
	int countMemo(int i, int j, List<List<Integer>> triangle, int[][] dp) {
		if (i == triangle.size()) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int down = triangle.get(i).get(j) + countMemo(i + 1,j,triangle,dp);
		int diagonal = triangle.get(i).get(j) + countMemo(i + 1,j + 1,triangle,dp);
		return dp[i][j] = Math.min(down,diagonal);
	}
	int minimumTotal(List<List<Integer>> triangle) {
		int[][] dp = new int[triangle.size()][triangle.size()];
		for (int row: dp) {	
			Arrays.fill(row,-1);
		}
		return countMemo(0,0,triangle,dp);
	}
}