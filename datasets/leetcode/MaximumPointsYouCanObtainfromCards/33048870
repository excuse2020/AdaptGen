class Solution {
	int maxScore(int[] cardPoints, int k) {
		int lastIndex = cardPoints.length - 1;
		int windowStartIndex = 0;
		int windowEndIndex = lastIndex - k;
		int totalSum = 0;
		for (int cardPoint: cardPoints) {	
			totalSum += cardPoint;
		}
		int currentWindowSum = 0;
		for (int i = 0; i <= windowEndIndex; i++) {
			currentWindowSum += cardPoints[i];
		}
		windowStartIndex++;
		windowEndIndex++;
		int minWindowSum = currentWindowSum;
		while (windowEndIndex <= lastIndex) {
			currentWindowSum = currentWindowSum - cardPoints[windowStartIndex - 1] + cardPoints[windowEndIndex];
			minWindowSum = Math.min(minWindowSum,currentWindowSum);
			windowStartIndex++;
			windowEndIndex++;
		}
		return totalSum - minWindowSum;
	}
}