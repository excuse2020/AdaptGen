class Solution {
	int result;
	int DFS(TreeNode node, int start) {
		if (node == null) {
			return 0;
		}
		int leftdepth = DFS(node.left,start);
		int rightdepth = DFS(node.right,start);
		if (node.val == start) {
			result = Math.max(leftdepth,rightdepth);
			return -1;
		} 
		else if (leftdepth >= 0 && rightdepth >= 0) {
			return Math.max(leftdepth,rightdepth) + 1;
		}
		result = Math.max(result,Math.abs(leftdepth - rightdepth));
		return Math.min(leftdepth,rightdepth) - 1;
	}
	int amountOfTime(TreeNode root, int start) {
		DFS(root,start);
		return result;
	}
}