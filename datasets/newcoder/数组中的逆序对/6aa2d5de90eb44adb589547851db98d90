class Solution {
	int mod = 1000000007;
	int InversePairs(int[] array) {
		int left = 0, right = array.length - 1;
		int[] temp = new int[array.length];
		int res = mergeSort(left,right,array,temp);
		return res;
	}
	int mergeSort(int left, int right, int[] data, int[] temp) {
		if (left >= right) {
			return 0;
		}
		int mid = (left + right) / 2;
		int res = mergeSort(left,mid,data,temp) + mergeSort(mid + 1,right,data,temp);
		res %= mod;
		for (int k = left; k <= right; k++) {
			temp[k] = data[k];
		}
		int i = left, j = mid + 1;
		for (int k = left; k <= right; k++) {
			if (i == mid + 1) {
				data[k] = temp[j++];
			} 
			else if (j == right + 1 || temp[i] <= temp[j]) {
				data[k] = temp[i++];
			} 
			else {
				data[k] = temp[j++];
				res += mid - i + 1;
			}
		}
		return res % mod;
	}
}