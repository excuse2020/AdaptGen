class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int rowcnt = n;
		int colcnt = n;
		HashSet<Integer> rowVal = new HashSet<>();
		HashSet<Integer> colVal = new HashSet<>();
		long ans = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int type = queries[i][0];
			int ind = queries[i][1];
			long val = (long) queries[i][2];
			if (type == 0 && !rowVal.contains(ind)) {
				ans += (long) val * (long) colcnt;
				rowcnt--;
				rowVal.add(ind);
			} 
			else if (type == 1 && !colVal.contains(ind)) {
				ans += (long) val * (long) rowcnt;
				colcnt--;
				colVal.add(ind);
			}
		}
		return ans;
	}
}