class Solution {
	int countSetBits(int num) {
		int count = 0;
		while (num != 0) {
			count += num & 1;
			num = num >> 1;
		}
		return count;
	}
	int[] sortByBits(int[] arr) {
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int num: arr) {	
			int bit = countSetBits(num);
			if (!map.containsKey(bit)) {
				map.put(bit,new ArrayList<>());
			}
			map.get(bit).add(num);
		}
		int k = 0;
		List<Integer> keyList = new ArrayList<>(map.keySet());
		Collections.sort(keyList);
		for (int key: keyList) {	
			List<Integer> nums = map.get(key);
			Collections.sort(nums);
			for (int n: nums) {	
				arr[k++] = n;
			}
		}
		return arr;
	}
}