class Solution {
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int m = nums2.length;
		int[][] dp = new int[n + 1][m + 1];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= m; j++) {
				dp[i][j] = -1;
			}
		}
		return solve(n - 1,m - 1,nums1,nums2,dp);
	}
	int solve(int index1, int index2, int[] nums1, int[] nums2, int[][] dp) {
		if (index1 < 0 || index2 < 0) {
			return 0;
		}
		if (dp[index1][index2] != -1) {
			return dp[index1][index2];
		}
		if (nums1[index1] == nums2[index2]) {
			return dp[index1][index2] = 1 + solve(index1 - 1,index2 - 1,nums1,nums2,dp);
		}
		return dp[index1][index2] = Math.max(solve(index1 - 1,index2,nums1,nums2,dp),solve(index1,index2 - 1,nums1,nums2,dp));
	}
}