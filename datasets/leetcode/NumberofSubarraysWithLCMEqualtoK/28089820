class Solution {
	int gcd(int a, int b) {
		if (a == 0) {
			return b;
		}
		return gcd(b % a,a);
	}
	int lcm(int a, int b) {
		return (a / gcd(a,b)) * b;
	}
	int subarrayLCM(int[] nums, int k) {
		int n = nums.length;
		int[][] dp = new int[n][n];
		int size = 1;
		int count = 0;
		for (int i = 0; i < n; i++) {
			dp[0][i] = nums[i];
			if (dp[0][i] == k) {
				count++;
			}
		}
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < n - size; j++) {
				dp[i][j] = lcm(dp[i - 1][j],dp[i - 1][j + 1]);
				if (dp[i][j] == k) {
					count++;
				}
			}
			size++;
		}
		return count;
	}
}