class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		Arrays.sort(stations,(a, b) -> {a[0] - b[0]});
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		int count = 0;
		long My_fuel = startFuel;
		for (int i = 0; i < stations.length; i++) {
			int pos = stations[i][0];
			int fuel = stations[i][1];
			while (pos > My_fuel) {
				if (pq.size() == 0) {
					return -1;
				}
				My_fuel += pq.poll();
				count++;
			}
			pq.add(fuel);
		}
		while (pq.size() != 0 && My_fuel < target) {
			My_fuel += pq.poll();
			count++;
		}
		if (My_fuel >= target) {
			return count;
		}
		return -1;
	}
}