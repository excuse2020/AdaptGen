class Solution {
	String oddString(String[] words) {
		HashMap<List<Integer>, Integer> map = new LinkedHashMap<>();
		HashMap<List<Integer>, String> list = new LinkedHashMap<>();
		int i = 0;
		int cnt = 0;
		for (String s: words) {	
			List<Integer> diff = new ArrayList<>();
			for (int j = 0; j < s.length() - 1; j++) {
				diff.add(((int) s.charAt(j + 1) - 48) - ((int) s.charAt(j) - 48));
			}
			if (map.containsKey(diff)) {
				map.put(diff,map.get(diff) + 1);
			} 
			else {
				map.put(diff,1);
			}
			list.put(diff,s);
		}
		for (Map.Entry<List<Integer>, Integer> m: map.entrySet()) {	
			if (m.getValue() == 1) {
				return list.get(m.getKey());
			}
		}
		return "";
	}
}