class Solution {
	int maxDotProduct(int[] nums1, int[] nums2) {
		boolean Positive = false;
		boolean Negative = false;
		int m1 = 1001, m2 = -1001;
		if (nums1[0] > 0) {
			Positive = true;
			for (int num: nums1) {	
				if (num <= 0) {
					Positive = false;
					break;
				}
				m1 = Math.min(m1,num);
			}
			if (Positive) {
				Negative = true;
				for (int num: nums2) {	
					if (num >= 0) {
						Negative = false;
						break;
					}
					m2 = Math.max(m2,num);
				}
			}
		} 
		else if (nums1[0] < 0) {
			Negative = true;
			for (int num: nums1) {	
				if (num >= 0) {
					Negative = false;
					break;
				}
				m2 = Math.max(m2,num);
			}
			if (Negative) {
				Positive = true;
				for (int num: nums2) {	
					if (num <= 0) {
						Positive = false;
					}
					m1 = Math.min(m1,num);
				}
			}
		}
		if (Positive && Negative) {
			return m1 * m2;
		}
		int[][] dp = new int[nums1.length + 1][nums2.length + 1];
		for (int i = 1; i <= nums1.length; i++) {
			for (int j = 1; j <= nums2.length; j++) {
				dp[i][j] = Math.max(nums1[i - 1] * nums2[j - 1] + dp[i - 1][j - 1],Math.max(dp[i - 1][j],dp[i][j - 1]));
			}
		}
		return dp[nums1.length][nums2.length];
	}
}