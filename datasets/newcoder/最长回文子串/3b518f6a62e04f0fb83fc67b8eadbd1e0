class Solution {
	int getLongestPalindrome(String A) {
		if (A.length() < 2) {
			return A.length();
		}
		int max = 1;
		int l = A.length();
		boolean[][] dp = new boolean[l][l];
		for (int right = 1; right < l; right++) {
			for (int left = 0; left <= right; left++) {
				if (A.charAt(left) != A.charAt(right)) {
					continue;
				}
				if (right - left <= 2) {
					dp[left][right] = true;
				} 
				else {
					dp[left][right] = dp[left + 1][right - 1];
				}
				if (dp[left][right] && right - left + 1 > max) {
					max = right - left + 1;
				}
			}
		}
		return max;
	}
}