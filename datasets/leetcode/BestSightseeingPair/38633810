class Solution {
	int maxScoreSightseeingPair(int[] values) {
		Stack<Integer> s = new Stack<>();
		int n = values.length, ans = 0;
		for (int j = 0; j < n; j++) {
			while (!s.isEmpty() && values[j] >= values[s.peek()]) {
				int i = s.pop();
				ans = Math.max(ans,values[i] + values[j] - j);
			}
			if (!s.isEmpty()) {
				int i = s.peek();
				ans = Math.max(ans,values[i] + values[j] - j);
			}
			s.push(j);
		}
		return ans;
	}
}