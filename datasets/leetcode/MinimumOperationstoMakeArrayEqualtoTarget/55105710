class Solution {
	long minimumOperations(int[] nums, int[] target) {
		long ans = 0;
		int i = 0;
		while (i < nums.length) {
			if (target[i] - nums[i] == 0) {
				while (i < nums.length && target[i] - nums[i] == 0) {
					i++;
				}
			} 
			else if (target[i] - nums[i] > 0) {
				long curr = target[i] - nums[i];
				ans += curr;
				while (i < nums.length && target[i] - nums[i] > 0) {
					if (target[i] - nums[i] >= curr) {
						ans += (target[i] - nums[i]) - curr;
						curr = target[i] - nums[i];
					} 
					else {
						curr = target[i] - nums[i];
					}
					i++;
				}
			} 
			else {
				long curr = target[i] - nums[i];
				ans += curr;
				while (i < nums.length && target[i] - nums[i] < 0) {
					if (Math.abs(target[i] - nums[i]) >= curr) {
						ans += Math.abs(target[i] - nums[i]) - curr;
						curr = Math.abs(target[i] - nums[i]);
					} 
					else {
						curr = Math.abs(target[i] - nums[i]);
					}
					i++;
				}
			}
		}
		return ans;
	}
}