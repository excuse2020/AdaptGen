class Solution {
	ListNode ReverseList(ListNode head) {
		ListNode pre = null;
		ListNode cur = head;
		while (cur != null) {
			ListNode cur_Next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = cur_Next;
		}
		return pre;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode vNode = new ListNode(0);
		vNode.next = head;
		ListNode before = vNode;
		for (int i = 0; i < m - 1; i++) {
			before = before.next;
		}
		ListNode right = before;
		for (int i = 0; i < n - m + 1; i++) {
			right = right.next;
		}
		ListNode left = before.next;
		ListNode after = right.next;
		before.next = null;
		right.next = null;
		ReverseList(left);
		before.next = right;
		left.next = after;
		return vNode.next;
	}
}