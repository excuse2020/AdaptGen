class Solution {
	int findPermutationDifference(String s, String t) {
		Map<Character, Integer> maps = new TreeMap<>();
		Map<Character, Integer> mapt = new TreeMap<>();
		for (int i = 0; i < s.length(); i++) {
			maps.put(s.charAt(i),i);
		}
		for (int i = 0; i < t.length(); i++) {
			mapt.put(t.charAt(i),i);
		}
		int[] ress = new int[s.length()];
		int[] rest = new int[t.length()];
		int n = 0;
		int m = 0;
		for (Map.Entry<Character, Integer> map: maps.entrySet()) {	
			ress[n++] = map.getValue();
		}
		for (Map.Entry<Character, Integer> map: mapt.entrySet()) {	
			rest[m++] = map.getValue();
		}
		int ttl = 0;
		for (int j = 0; j < s.length(); j++) {
			ttl += Math.abs(ress[j] - rest[j]);
		}
		return ttl;
	}
}