class Solution {
	int countCharacters(String[] words, String chars) {
		HashMap<Character, Integer> hm = new HashMap<>();
		for (int i = 0; i < chars.length(); i++) {
			char currentChar = chars.charAt(i);
			hm.put(currentChar,hm.getOrDefault(currentChar,0) + 1);
		}
		int ans = 0;
		for (int i = 0; i < words.length; i++) {
			if (goodString(hm,words[i])) {
				ans += words[i].length();
			}
		}
		return ans;
	}
	boolean goodString(HashMap<Character, Integer> pm, String str) {
		HashMap<Character, Integer> tempMap = new HashMap<>(pm);
		for (int i = 0; i < str.length(); i++) {
			char currentChar = str.charAt(i);
			if (!tempMap.containsKey(currentChar)) {
				return false;
			} 
			else {
				if (tempMap.get(currentChar) == 1) {
					tempMap.remove(currentChar);
				} 
				else {
					tempMap.put(currentChar,tempMap.get(currentChar) - 1);
				}
			}
		}
		return true;
	}
}