class Solution {
	int minimumArea(int[][] grid) {
		int last = 0;
		int first = -1;
		int width = 0;
		int len = 0;
		int wfirst = -1;
		int wlast = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1 && wfirst == -1) {
					wfirst = i;
					width++;
				} 
				else if (grid[i][j] == 1) {
					wlast = Math.max(wlast,i);
				}
			}
		}
		for (int i = 0; i < grid[0].length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if (grid[j][i] == 1 && first == -1) {
					first = i;
					len++;
				} 
				else if (grid[j][i] == 1) {
					last = Math.max(last,i);
				}
			}
		}
		int wid = Math.max(width,wlast - wfirst + 1);
		int size = Math.max(len,last - first + 1);
		int ans = size * wid;
		return ans;
	}
}