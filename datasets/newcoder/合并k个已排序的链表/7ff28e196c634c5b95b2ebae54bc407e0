class Solution {
	ListNode compare(ListNode listnode1, ListNode listnode2) {
		if (listnode1 == null) {
			return listnode2;
		}
		if (listnode2 == null) {
			return listnode1;
		}
		if (listnode1.val < listnode2.val) {
			listnode1.next = compare(listnode1.next,listnode2);
			return listnode1;
		} 
		else {
			listnode2.next = compare(listnode1,listnode2.next);
			return listnode2;
		}
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		ListNode result = new ListNode(0);
		if (lists.size() == 0 || lists == null) {
			return null;
		}
		if (lists.size() < 2) {
			return lists.get(0);
		}
		int begin = 0;
		int end = lists.size() - 1;
		while (begin < end) {
			ListNode tem = lists.get((0));
			lists.set(0,compare(lists.get(0),lists.get(end)));
			end--;
		}
		return lists.get(0);
	}
}