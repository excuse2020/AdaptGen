class Solution {
	int[] findingUsersActiveMinutes(int[][] logs, int k) {
		int res = new int[k];
		int n = logs.length;
		int key;
		int val;
		HashMap<Integer, Set<Integer>> freq = new HashMap<>();
		TreeMap<Integer, Integer> uam = new TreeMap<>();
		int i;
		int idx;
		int times;
		for (i = 0; i < n; i++) {
			idx = logs[i][0];
			times = logs[i][1];
			freq.putIfAbsent(idx,new HashSet<Integer>());
			freq.get(idx).add(times);
		}
		for (Map.Entry<Integer, Set<Integer>> entry: freq.entrySet()) {	
			val = entry.getValue().size();
			uam.put(val,uam.getOrDefault(val,0) + 1);
		}
		for (Map.Entry<Integer, Integer> entry: uam.entrySet()) {	
			key = entry.getKey();
			val = entry.getValue();
			res[key - 1] = val;
		}
		return res;
	}
}