class Solution {
	int getCount(int i) {
		int cnt = 0;
		while (i > 0) {
			cnt += (i & 1);
			i = i >> 1;
		}
		return cnt;
	}
	boolean isPresent(int mask, int i) {
		return ((mask >> i) & 1) == 1;
	}
	int maximumRows(int[][] mat, int cols) {
		int rows = mat.length;
		int col = mat[0].length;
		int res = 0;
		for (int i = 0; i < (1 << col); i++) {
			if (getCount(i) == cols) {
				int cnt = 0;
				for (int r = 0; r < rows; r++) {
					int flag = 0;
					for (int c = 0; c < col; c++) {
						if (mat[r][c] == 1 && !isPresent(i,c)) {
							flag = 1;
							break;
						}
					}
					if (flag == 0) {
						cnt++;
					}
				}
				res = Math.max(res,cnt);
			}
		}
		return res;
	}
}