class Solution {
	int findInMountainArray(int t, MountainArray arr) {
		int n = arr.length();
		int s = 0;
		int e = n - 1;
		int m = s + (e - s) / 2;
		int mv = 0, mp1 = 0, mm1 = 0;
		int max = -1, index = -1;
		while (s <= e) {
			m = s + (e - s) / 2;
			if (m - 1 == -1) {
				m++;
			}
			if (m + 1 == n) {
				m--;
			}
			mv = arr.get(m);
			mp1 = arr.get(m + 1);
			mm1 = arr.get(m - 1);
			if (mp1 < mv && mv > mm1) {
				max = mv;
				index = m;
				break;
			} 
			else if (mp1 > mv && mv > mm1) {
				s = m + 1;
			} 
			else if (mp1 < mv && mv < mm1) {
				e = m - 1;
			}
		}
		if (max == t) {
			return index;
		}
		s = 0;
		e = index - 1;
		m = s + (e - s) / 2;
		mv = 0;
		while (s <= e) {
			m = s + (e - s) / 2;
			mv = arr.get(m);
			if (mv == t) {
				return m;
			} 
			else if (mv > t) {
				e = m - 1;
			} 
			else {
				s = m + 1;
			}
		}
		s = index + 1;
		e = n - 1;
		m = s + (e - s) / 2;
		mv = 0;
		while (s <= e) {
			m = s + (e - s) / 2;
			mv = arr.get(m);
			if (mv == t) {
				return m;
			} 
			else if (mv > t) {
				s = m + 1;
			} 
			else {
				e = m - 1;
			}
		}
		return -1;
	}
}