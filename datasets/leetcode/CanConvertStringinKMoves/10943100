class Solution {
	boolean canConvertString(String s, String t, int k) {
		int a = s.length();
		int b = t.length();
		if (a != b) {
			return false;
		}
		Map<Integer, Integer> moves = new HashMap<>();
		int diff = 0;
		for (int i = 0; i < a; i++) {
			diff = t.charAt(i) - s.charAt(i);
			diff = diff >= 0 ? diff : 26 - Math.abs(diff);
			if (diff > k) {
				return false;
			}
			if (diff == 0) {
				continue;
			}
			moves.put(diff,moves.getOrDefault(diff,0) + 1);
		}
		for (int key: moves.keySet()) {	
			int n = (moves.get(key) - 1) * 26 + key;
			if (n > k) {
				return false;
			}
		}
		return true;
	}
}