class Solution {
	ListNode ReverseList(ListNode head) {
		ListNode root = new ListNode(0);
		ListNode nextNode = root;
		if (head == null || head.next == null) {
			return head;
		}
		int count = 1;
		Stack<Integer> stack1 = new Stack();
		while (head != null) {
			stack1.push(head.val);
			System.out.println(head.val);
			head = head.next;
		}
		while (stack1.size() != 0) {
			ListNode node = new ListNode(count);
			nextNode.next = node;
			nextNode = nextNode.next;
			node.val = stack1.pop();
			count++;
		}
		return root.next;
	}
}