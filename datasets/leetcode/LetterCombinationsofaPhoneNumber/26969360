class Solution {
	void backTrack(int i, String temp, String digits, List<String> answer, HashMap<Character, String> hm) {
		if (i == digits.length()) {
			answer.add(temp);
			return;
		}
		char digit = digits.charAt(i);
		String str = hm.get(digit);
		for (int j = 0; j < str.length(); j++) {
			char c = str.charAt(j);
			temp += c;
			backTrack(i + 1,temp,digits,answer,hm);
			temp = temp.substring(0,temp.length() - 1);
		}
	}
	List<String> letterCombinations(String digits) {
		List<String> answer = new ArrayList<>();
		if (digits.length() == 0) {
			return answer;
		}
		HashMap<Character, String> hm = new HashMap<>();
	}
}