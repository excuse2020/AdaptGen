class Solution {
	int kadane(int[] array) {
		int sum = 0;
		int maxsum = Integer.MIN_VALUE;
		for (int i = 0; i < array.length; i++) {
			sum = sum + array[i];
			if (sum > maxsum) {
				maxsum = sum;
			}
			if (sum < 0) {
				sum = 0;
			}
		}
		return maxsum;
	}
	int maxSubarraySumCircular(int[] nums) {
		int max1 = kadane(nums);
		int csum = 0;
		for (int i = 0; i < nums.length; i++) {
			csum = csum + nums[i];
			nums[i] = -nums[i];
		}
		int min = kadane(nums);
		int max2 = csum + min;
		if (max2 == 0) {
			return max1;
		}
		return Math.max(max1,max2);
	}
}