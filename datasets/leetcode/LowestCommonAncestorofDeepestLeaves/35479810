class Solution {
	TreeNode ans = null;
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		if (height(root.left) == height(root.right)) {
			ans = root;
		} 
		else if (height(root.left) > height(root.right)) {
			dfs(root.left);
		} 
		else {
			dfs(root.right);
		}
	}
	int height(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = height(root.left);
		int right = height(root.right);
		return Math.max(left,right) + 1;
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		if (root.right == null && root.left == null) {
			return root;
		}
		dfs(root);
		return ans;
	}
}