class Solution {
	long maximumTripletValue(int[] nums) {
		int n = nums.length;
		long[] maxLeft = new long[n];
		long[] maxRight = new long[n];
		maxLeft[0] = nums[0];
		for (int i = 1; i < n; i++) {
			maxLeft[i] = Math.max(maxLeft[i - 1],nums[i]);
		}
		maxRight[n - 1] = nums[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			maxRight[i] = Math.max(maxRight[i + 1],nums[i]);
		}
		long maxTripletValue = 0;
		for (int i = 1; i < n - 1; i++) {
			long tripletValue = (maxLeft[i - 1] - nums[i]) * maxRight[i + 1];
			maxTripletValue = Math.max(maxTripletValue,tripletValue);
		}
		return maxTripletValue;
	}
}