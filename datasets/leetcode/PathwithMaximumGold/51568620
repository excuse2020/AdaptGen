class Solution {
	int getMaximumGold(int[][] grid) {
		boolean[][] vis = new boolean[grid.length][grid[0].length];
		int ans = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] != 0) {
					ans = Math.max(ans,solve(vis,grid,i,j));
				}
			}
		}
		return ans;
	}
	int solve(boolean[][] vis, int[][] grid, int i, int j) {
		if (i == -1 || i == grid.length || j == -1 || j == grid[0].length || vis[i][j] == true || grid[i][j] == 0) {
			return 0;
		}
		vis[i][j] = true;
		int a = solve(vis,grid,i - 1,j);
		a = Math.max(a,solve(vis,grid,i + 1,j));
		a = Math.max(a,solve(vis,grid,i,j - 1));
		a = Math.max(a,solve(vis,grid,i,j + 1));
		vis[i][j] = false;
		return grid[i][j] + a;
	}
}