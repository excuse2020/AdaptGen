class Solution {
	boolean isEqual(int[] arr, int[] arr2, int n) {
		for (int i = 0; i < n; i++) {
			if (arr[i] != arr2[i]) {
				return false;
			}
		}
		return true;
	}
	String oddString(String[] words) {
		int n = words[0].length();
		int arr = new int[n - 1];
		for (int i = 0; i < n - 1; i++) {
			arr[i] = words[0].charAt(i + 1) - words[0].charAt(i);
		}
		int arr2 = new int[n - 1];
		for (int i = 0; i < n - 1; i++) {
			arr2[i] = words[1].charAt(i + 1) - words[1].charAt(i);
		}
		boolean b1 = isEqual(arr,arr2,n - 1);
		for (int j = 2; j < words.length; j++) {
			int arr3 = new int[n - 1];
			for (int i = 0; i < n - 1; i++) {
				arr3[i] = words[j].charAt(i + 1) - words[j].charAt(i);
			}
			boolean b2 = isEqual(arr3,arr2,n - 1);
			boolean b3 = isEqual(arr3,arr,n - 1);
			if (b1 & !b2 && !b3) {
				return words[j];
			}
			if (!b1 & !b2 && b3) {
				return words[1];
			}
			if (!b1 & b2 && !b3) {
				return words[0];
			}
		}
		return "";
	}
}