class Solution {
	long maximumSumOfHeights(List<Integer> maxHeights) {
		int n = maxHeights.size();
		long maxSum = 0;
		for (int i = 0; i < n; i++) {
			long sum = solve(maxHeights,i,n);
			maxSum = Math.max(sum,maxSum);
		}
		return maxSum;
	}
	long solve(List<Integer> maxHeights, int peakIndex, int n) {
		int peakElement = maxHeights.get(peakIndex);
		long sum = 0;
		int minSoFar = peakElement;
		for (int i = peakIndex; i < n; i++) {
			int element = maxHeights.get(i);
			minSoFar = Math.min(element,minSoFar);
			sum += minSoFar;
		}
		minSoFar = peakElement;
		for (int i = peakIndex - 1; i >= 0; i--) {
			int element = maxHeights.get(i);
			minSoFar = Math.min(element,minSoFar);
			sum += minSoFar;
		}
		return sum;
	}
}