class Solution {
	int MOD = (int) 1e9 + 7;
	int dfs(int row, int col, int[][] grid, int[][][] dp, int sum, int k) {
		if (row >= grid.length || col >= grid[0].length) {
			return 0;
		}
		if (row == grid.length - 1 && col == grid[0].length - 1) {
			return (sum + grid[row][col]) % k == 0 ? 1 : 0;
		}
		if (dp[row][col][sum] == 0) {
			dp[row][col][sum] = (1 + dfs(row + 1,col,grid,dp,(sum + grid[row][col]) % k,k)) % MOD;
		}
		return dp[row][col][sum] - 1;
	}
	int numberOfPaths(int[][] grid, int k) {
		int[][][] dp = new int[grid.length][grid[0].length][k + 1];
		return dfs(0,0,grid,dp,0,k);
	}
}