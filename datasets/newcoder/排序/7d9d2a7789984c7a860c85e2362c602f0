class Solution {
	int[] MySort(int[] arr) {
		quickSort(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] arr, int left, int right) {
		int pivot = arr[left];
		int l = left, r = right;
		while (l < r) {
			while (l < r && arr[r] >= pivot) {
				r--;
			}
			while (l < r && arr[l] <= pivot) {
				l++;
			}
			if (l < r) {
				int tmp = arr[l];
				arr[l] = arr[r];
				arr[r] = tmp;
			}
		}
		arr[left] = arr[l];
		arr[l] = pivot;
		return l;
	}
	void quickSort(int[] arr, int left, int right) {
		if (left >= right) {
			return;
		}
		int index = partition(arr,left,right);
		quickSort(arr,left,index - 1);
		quickSort(arr,index + 1,right);
	}
}