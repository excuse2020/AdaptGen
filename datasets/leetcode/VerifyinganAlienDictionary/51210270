class Solution {
	int[] CO = new int[125];
	boolean compareWords(String aString, String bString) {
		int cl = 1;
		int la = aString.length();
		int lb = bString.length();
		while (cl < la && cl < lb) {
			char a = aString.charAt(cl);
			char b = bString.charAt(cl);
			int aCO = CO[a];
			int bCO = CO[b];
			if (aCO == bCO) {
			} 
			else if (aCO < bCO) {
				return true;
			} 
			else {
				return false;
			}
			cl++;
		}
		if (lb < la) {
			return false;
		}
		return true;
	}
	boolean isAlienSorted(String[] strs, String order) {
		prepareCO(order);
		int col = strs[0].length();
		int row = strs.length;
		int cl = 0;
		for (int i = 1; i < strs.length; i++) {
			char a = strs[i - 1].charAt(0);
			char b = strs[i].charAt(0);
			int aCO = CO[a];
			int bCO = CO[b];
			if (aCO < bCO) {
			} 
			else if (aCO == bCO) {
				if (!compareWords(strs[i - 1],strs[i])) {
					return false;
				}
			} 
			else {
				return false;
			}
		}
		return true;
	}
	void prepareCO(String word) {
		for (int i = 0; i < word.length(); i++) {
			CO[word.charAt(i)] = i;
		}
	}
}