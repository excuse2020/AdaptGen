class Solution {
	List<Boolean> checkIfPrerequisite(int num, int[][] pre, int[][] q) {
		int p = pre.length;
		int ql = q.length;
		boolean reach = new boolean[num][num];
		for (int i = 0; i < p; i++) {
			int s = pre[i][0];
			int d = pre[i][1];
			reach[s][d] = true;
		}
		for (int i = 0; i < reach.length; i++) {
			for (int j = 0; j < reach.length; j++) {
				if (j == i) {
					continue;
				}
				if (reach[i][j]) {
					for (int k = 0; k < reach.length; k++) {
						if (reach[j][k]) {
							reach[i][k] = true;
						}
					}
				}
			}
		}
		for (int i = 0; i < reach.length; i++) {
			for (int j = 0; j < reach.length; j++) {
				if (j == i) {
					continue;
				}
				if (reach[i][j]) {
					for (int k = 0; k < reach.length; k++) {
						if (reach[j][k]) {
							reach[i][k] = true;
						}
					}
				}
			}
		}
		List<Boolean> l = new ArrayList<>();
		for (int i = 0; i < ql; i++) {
			int f = q[i][0];
			int s = q[i][1];
			l.add(reach[f][s]);
		}
		return l;
	}
}