class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode temp = new ListNode(-1);
		head1 = reversalList(head1);
		head2 = reversalList(head2);
		ListNode tempTail = temp;
		int res = 0;
		while (head1 != null || head2 != null) {
			int sum = res;
			if (head1 != null) {
				sum = sum + head1.val;
				head1 = head1.next;
			}
			if (head2 != null) {
				sum = sum + head2.val;
				head2 = head2.next;
			}
			res = sum / 10;
			int val = sum % 10;
			ListNode node = new ListNode(val);
			tempTail.next = node;
			tempTail = tempTail.next;
		}
		if (res > 0) {
			ListNode node = new ListNode(res);
			tempTail.next = node;
		}
		return reversalList(temp.next);
	}
	ListNode reversalList(ListNode head) {
		Stack<ListNode> stack = new Stack<>();
		while (head != null) {
			stack.push(head);
			head = head.next;
		}
		head = stack.pop();
		ListNode cur = head;
		while (!stack.isEmpty()) {
			ListNode node = stack.pop();
			node.next = null;
			cur.next = node;
			cur = cur.next;
		}
		return head;
	}
}