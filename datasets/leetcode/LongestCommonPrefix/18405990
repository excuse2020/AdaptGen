class Solution {
	String longestCommonPrefix(String[] strs) {
		Arrays.sort(strs);
		String first = strs[0];
		String second = strs[strs.length - 1];
		String result = "";
		for (int i = 0; i < first.length(); i++) {
			if (first.charAt(i) == second.charAt(i)) {
				result += first.charAt(i);
			} 
			else {
				break;
			}
		}
		return result;
	}
}
class Solution {
	String longestCommonPrefix(String[] strs) {
		Arrays.sort(strs);
		String first = strs[0];
		String second = strs[strs.length - 1];
		StringBuilder result = new StringBuilder();
		for (int i = 0; i < first.length(); i++) {
			if (first.charAt(i) == second.charAt(i)) {
				result.append(first.charAt(i));
			} 
			else {
				break;
			}
		}
		return result.toString();
	}
}
class Solution {
	String longestCommonPrefix(String[] strs) {
		if (strs.length == 0) {
			return "";
		}
		String prefix = strs[0];
		for (int i = 1; i < strs.length; i++) {
			while (strs[i].indexOf(prefix) != 0) {
				prefix = prefix.substring(0,prefix.length() - 1);
			}
		}
		return prefix;
	}
}