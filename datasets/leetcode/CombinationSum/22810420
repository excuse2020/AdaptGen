class Solution {
	List<List<Integer>> combinationSum(int[] arr, int t) {
		Arrays.sort(arr);
		List<Integer> l = new ArrayList<Integer>();
		List<List<Integer>> list = new ArrayList<List<Integer>>();
		return fun(list,arr,t,0,0,l);
	}
	List<List<Integer>> fun(List<List<Integer>> list, int[] arr, int t, int i, int sum, List<Integer> li) {
		for (int j = i; j < arr.length; j++) {
			if (sum + arr[j] == t) {
				li.add(arr[j]);
				list.add(new ArrayList<Integer>(li));
				li.remove(li.size() - 1);
				break;
			} 
			else if (sum + arr[j] < t) {
				li.add(arr[j]);
				sum += arr[j];
				list = fun(list,arr,t,j,sum,li);
				sum -= arr[j];
				li.remove(li.size() - 1);
			} 
			else {
				break;
			}
		}
		return list;
	}
}