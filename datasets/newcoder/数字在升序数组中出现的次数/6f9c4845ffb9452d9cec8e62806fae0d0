class Solution {
	int GetNumberOfK(int[] array, int k) {
		return upper_bound(array,k) - lower_bound(array,k);
	}
	int lower_bound(int[] data, int k) {
		int left = 0;
		int right = data.length;
		while (left < right) {
			int mid = (left + right) / 2;
			if (data[mid] >= k) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return right;
	}
	int upper_bound(int[] data, int k) {
		int left = 0;
		int right = data.length;
		while (left < right) {
			int mid = (left + right) / 2;
			if (data[mid] > k) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return right;
	}
}