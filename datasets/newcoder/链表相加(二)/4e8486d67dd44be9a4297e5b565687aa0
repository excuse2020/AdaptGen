class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<ListNode> s1 = new Stack<>();
		Stack<ListNode> s2 = new Stack<>();
		while (head1 != null) {
			s1.push(head1);
			head1 = head1.next;
		}
		while (head2 != null) {
			s2.push(head2);
			head2 = head2.next;
		}
		int tmp = 0;
		ListNode dummy = new ListNode(-1);
		ListNode head = dummy.next;
		while (!s1.empty() || !s2.empty()) {
			int val = tmp;
			if (!s1.empty()) {
				val += s1.pop().val;
			}
			if (!s2.empty()) {
				val += s2.pop().val;
			}
			ListNode p = new ListNode(val % 10);
			tmp = val / 10;
			p.next = head;
			dummy.next = p;
			head = p;
		}
		if (tmp != 0) {
			ListNode p = new ListNode(tmp);
			p.next = head;
			dummy.next = p;
		}
		return dummy.next;
	}
}