class Solution {
	int d;
	int helper(int[] arr, int[] max, boolean[] visi, int i) {
		if (i >= arr.length) {
			return 0;
		}
		if (visi[i]) {
			return max[i];
		}
		int temp = helper(arr,max,visi,i + d) + arr[i];
		visi[i] = true;
		max[i] = temp;
		return temp;
	}
	int maximumEnergy(int[] energy, int k) {
		int[] max = new int[energy.length];
		boolean[] visi = new boolean[max.length];
		d = k;
		for (int i = energy.length - 1; i >= 0; i--) {
			int temp = helper(energy,max,visi,i);
		}
		int min = Integer.MIN_VALUE;
		for (int i = 0; i < energy.length; i++) {
			if (visi[i]) {
				if (min < max[i]) {
					min = max[i];
				}
			}
		}
		return min;
	}
}