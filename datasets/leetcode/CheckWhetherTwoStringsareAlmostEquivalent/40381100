class Solution {
	boolean checkAlmostEquivalent(String word1, String word2) {
		Set<Character> set = new HashSet<>();
		Map<Character, Integer> map1 = new HashMap<>();
		for (int i = 0; i < word1.length(); i++) {
			map1.put(word1.charAt(i),map1.getOrDefault(word1.charAt(i),0) + 1);
			set.add(word1.charAt(i));
		}
		Map<Character, Integer> map2 = new HashMap<>();
		for (int i = 0; i < word2.length(); i++) {
			map2.put(word2.charAt(i),map2.getOrDefault(word2.charAt(i),0) + 1);
			set.add(word2.charAt(i));
		}
		for (char ch: set) {	
			if (map1.containsKey(ch) && map2.containsKey(ch)) {
				if (Math.abs(map1.get(ch) - map2.get(ch)) > 3) {
					return false;
				}
			} 
			else if (map1.containsKey(ch)) {
				if (map1.get(ch) > 3) {
					return false;
				}
			} 
			else {
				if (map2.get(ch) > 3) {
					return false;
				}
			}
		}
		return true;
	}
}