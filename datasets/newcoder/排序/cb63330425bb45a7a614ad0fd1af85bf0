class Solution {
	int[] MySort(int[] arr) {
		if (arr == null || arr.length == 0) {
			return arr;
		}
		quickSort(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] arr, int start, int end) {
		int pivot = arr[start];
		while (start < end) {
			while (start < end && arr[end] >= pivot) {
				end--;
			}
			arr[start] = arr[end];
			while (start < end && arr[start] <= pivot) {
				start++;
			}
			arr[end] = arr[start];
		}
		arr[start] = pivot;
		return start;
	}
	void quickSort(int[] arr, int start, int end) {
		if (start >= end) {
			return;
		}
		int pivotPos = partition(arr,start,end);
		quickSort(arr,start,pivotPos - 1);
		quickSort(arr,pivotPos + 1,end);
	}
}