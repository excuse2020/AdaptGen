class Solution {
	String removeDuplicates(String s, int k) {
		Stack<Pair<Character, Integer>> stack = new Stack();
		for (int i = 0; i < s.length(); i++) {
			char c = s.charAt(i);
			if (stack.isEmpty()) {
				stack.add(new Pair(c, 1));
			} 
			else {
				if (c == stack.peek().getKey()) {
					Pair<Character, Integer> p = stack.pop();
					if (p.getValue() + 1 < k) {
						stack.add(new Pair(p.getKey(), p.getValue() + 1));
					}
				} 
				else {
					stack.add(new Pair(c, 1));
				}
			}
		}
		StringBuilder sb = new StringBuilder();
		while (!stack.isEmpty()) {
			Pair<Character, Integer> p = stack.pop();
			for (int j = 0; j < p.getValue(); j++) {
				sb.append(p.getKey());
			}
		}
		return sb.reverse().toString();
	}
}