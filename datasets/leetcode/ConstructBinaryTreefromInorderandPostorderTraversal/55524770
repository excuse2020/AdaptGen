class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		int postlo = 0, posthi = postorder.length - 1;
		int inlo = 0, inhi = inorder.length - 1;
		return helper(inorder,postorder,postlo,posthi,inlo,inhi);
	}
	TreeNode helper(int[] inorder, int[] postorder, int postlo, int posthi, int inlo, int inhi) {
		if (postlo > posthi || inlo > inhi) {
			return null;
		}
		int rootIndex = 0;
		while (inorder[rootIndex] != postorder[posthi]) {
			rootIndex++;
		}
		TreeNode root = new TreeNode(postorder[posthi]);
		root.left = helper(inorder,postorder,postlo,postlo + rootIndex - inlo - 1,inlo,rootIndex - 1);
		root.right = helper(inorder,postorder,postlo + rootIndex - inlo,posthi - 1,rootIndex + 1,inhi);
		return root;
	}
}