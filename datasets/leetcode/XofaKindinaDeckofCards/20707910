class Solution {
	int findGCD(List<Integer> arr) {
		int result = arr.get(0);
		for (int i: arr) {	
			result = gcd(result,i);
			if (result == 1) {
				return 1;
			}
		}
		return result;
	}
	int gcd(int a, int b) {
		if (a == 0) {
			return b;
		}
		return gcd(b % a,a);
	}
	boolean hasGroupsSizeX(int[] deck) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i: deck) {	
			if (!map.containsKey(i)) {
				map.put(i,1);
			} 
			else {
				map.put(i,map.get(i) + 1);
			}
		}
		List<Integer> list = new ArrayList<>();
		for (int i: map.values()) {	
			if (i < 2) {
				return false;
			}
			list.add(i);
		}
		int min = findGCD(list);
		if (min < 2) {
			return false;
		}
		return true;
	}
}