class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode l1, l2;
		l1 = reverseList(head1);
		l2 = reverseList(head2);
		ListNode dummyHead = new ListNode(0);
		ListNode current = dummyHead;
		int carry = 0;
		while (l1 != null || l2 != null) {
			int x = (l1 != null) ? l1.val : 0;
			int y = (l2 != null) ? l2.val : 0;
			int sum = carry + x;
			carry = sum / 10;
			current.next = new ListNode(sum % 10);
			current = current.next;
			if (l1 != null) {
				l1 = l1.next;
			}
			if (l2 != null) {
				l2 = l2.next;
			}
		}
		if (carry > 0) {
			current.next = new ListNode(carry);
		}
		return reverseList(dummyHead.next);
	}
	ListNode reverseList(ListNode head) {
		ListNode prev = null;
		ListNode current = head;
		while (current != null) {
			ListNode next = current.next;
			current.next = prev;
			prev = current;
			current = next;
		}
		return prev;
	}
}