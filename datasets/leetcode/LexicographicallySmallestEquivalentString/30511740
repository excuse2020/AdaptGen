class Solution {
	void dfs(int index, boolean[][] edge, char[] cc, boolean[] visited, char minChar) {
		if (visited[index] == true) {
			return;
		}
		visited[index] = true;
		cc[index] = minChar;
		for (int i = 0; i < 26; i++) {
			if (i == index) {
				continue;
			}
			if (edge[index][i] == true) {
				dfs(i,edge,cc,visited,minChar);
			}
		}
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		boolean[][] edge = new boolean[26][26];
		int i = 0;
		char c1 = s1.charAt(i);
		char c2 = s2.charAt(i);
	}
}