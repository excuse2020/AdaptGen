class Solution {
	int binarySearch(int[] nums, int k) {
		int lo = 0;
		int hi = nums.length;
		while (lo < hi) {
			int mid = lo + ((hi - lo) >> 1);
			if (nums[mid] < k) {
				lo = mid + 1;
			} 
			else if (nums[mid] > k) {
				hi = mid;
			} 
			else if (lo != mid) {
				hi = mid;
			} 
			else {
				return mid;
			}
		}
		return lo;
	}
	int numberOfPairs(int[] nums1, int[] nums2, int k) {
		for (int i = 0; i < nums2.length; ++i) {
			nums2[i] *= k;
		}
		Arrays.sort(nums1);
		int res = 0;
		for (int j = 0; j < nums2.length; ++j) {
			int n = nums2[j];
			int idx = binarySearch(nums1,nums2[j]);
			for (int i = idx; i < nums1.length; ++i) {
				if (nums1[i] % n == 0) {
					++res;
				}
			}
		}
		return res;
	}
}