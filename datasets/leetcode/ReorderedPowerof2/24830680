class Solution {
	boolean areSimilar(int[] a, int[] b) {
		for (int i = 0; i < 10; i++) {
			if (a[i] != b[i]) {
				return false;
			}
		}
		return true;
	}
	int[] getDigitsOf(int curr) {
		int[] count = new int[10];
		while (curr > 0) {
			count[curr % 10]++;
			curr /= 10;
		}
		return count;
	}
	boolean reorderedPowerOf2(int n) {
		int[] nDigits = getDigitsOf(n);
		for (int i = 0; i < 32; i++) {
			int curr = (int) Math.pow(2,i);
			if ((int) Math.log10(n) == (int) Math.log10(curr)) {
				int[] digits = getDigitsOf(curr);
				if (areSimilar(nDigits,digits)) {
					return true;
				}
			}
		}
		return false;
	}
}