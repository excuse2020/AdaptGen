class Solution {
	ListNode findmiddle(ListNode head) {
		ListNode pp = head;
		ListNode sp = head;
		ListNode fp = head;
		while (fp != null && fp.next != null) {
			pp = sp;
			sp = sp.next;
			fp = fp.next.next;
		}
		if (pp != null) {
			pp.next = null;
		}
		return sp;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		if (head.next == null) {
			return new TreeNode(head.val);
		}
		ListNode middle = findmiddle(head);
		TreeNode root = new TreeNode(middle.val);
		root.right = sortedListToBST(middle.next);
		middle.next = null;
		root.left = sortedListToBST(head);
		return root;
	}
}