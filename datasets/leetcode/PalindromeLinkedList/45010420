class Solution {
	boolean isPalindrome(ListNode head) {
		if (head.next == null) {
			return true;
		}
		ListNode sp = head;
		ListNode fp = head;
		ListNode prev = null;
		while (fp != null && fp.next != null) {
			prev = sp;
			sp = sp.next;
			fp = fp.next.next;
		}
		prev.next = null;
		ListNode firstHalf = head;
		ListNode secondHalf = sp;
		secondHalf = reverseList(secondHalf);
		while (firstHalf != null && secondHalf != null) {
			if (firstHalf.val != secondHalf.val) {
				return false;
			}
			firstHalf = firstHalf.next;
			secondHalf = secondHalf.next;
		}
		return true;
	}
	ListNode reverseList(ListNode head) {
		ListNode ans = null;
		while (head != null) {
			ListNode temp = head.next;
			head.next = ans;
			ans = head;
			head = temp;
		}
		return ans;
	}
}