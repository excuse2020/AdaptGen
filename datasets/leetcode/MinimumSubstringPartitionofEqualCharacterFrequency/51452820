class Solution {
	Integer[] dp;
	boolean isValid1(int[] freq, int val) {
		for (int i = 0; i < 26; i++) {
			if (freq[i] == 0) {
				continue;
			}
			if (freq[i] != val) {
				return false;
			}
		}
		return true;
	}
	int minimumSubstringsInPartition(String s) {
		dp = new Integer[s.length()];
		return splitString(s,0);
	}
	int splitString(String s, int idx) {
		if (idx == s.length()) {
			return 0;
		}
		if (idx > s.length()) {
			return Integer.MAX_VALUE;
		}
		if (dp[idx] != null) {
			return dp[idx];
		}
		int minSplit = Integer.MAX_VALUE;
		int[] fq = new int[26];
		int maxFq = Integer.MIN_VALUE;
		int i = idx;
	}
}