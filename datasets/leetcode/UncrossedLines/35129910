class Solution {
	int max(int[] nums1, int[] nums2, int i, int j, int[][] storage) {
		if (i == nums1.length || j == nums2.length) {
			return 0;
		}
		if (storage[i][j] != -1) {
			return storage[i][j];
		}
		if (nums1[i] == nums2[j]) {
			return storage[i][j] = 1 + max(nums1,nums2,i + 1,j + 1,storage);
		} 
		else {
			return storage[i][j] = Math.max(max(nums1,nums2,i + 1,j,storage),max(nums1,nums2,i,j + 1,storage));
		}
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int ans = 0;
		int[][] storage = new int[nums1.length][nums2.length];
		for (int[] i: storage) {	
			Arrays.fill(i,-1);
		}
		return max(nums1,nums2,0,0,storage);
	}
}