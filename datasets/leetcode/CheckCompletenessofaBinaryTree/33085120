class Solution {
	boolean isCompleteTree(TreeNode root) {
		if (root.right == null && root.left == null) {
			return true;
		}
		boolean flag = true;
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		queue.add(root);
		while (!queue.isEmpty()) {
			int len = queue.size();
			for (int i = 0; i < len; i++) {
				TreeNode pop = queue.poll();
				if (pop.left == null && pop.right != null) {
					return false;
				}
				if (pop.left != null && pop.right == null) {
					if (!flag) {
						return false;
					}
					flag = false;
					queue.add(pop.left);
				} 
				else if (pop.left != null && pop.right != null) {
					if (!flag) {
						return false;
					}
					queue.add(pop.left);
					queue.add(pop.right);
				} 
				else {
					flag = false;
				}
			}
		}
		return true;
	}
}