class Solution {
	int[] MySort(int[] arr) {
		int length = arr.length;
		buildHead(arr);
		for (int i = length - 1; i > 0; i--) {
			swap(arr,0,i);
			downJust(arr,0,i);
		}
		return arr;
	}
	void buildHead(int[] arr) {
		int length = arr.length;
		for (int i = length / 2; i >= 0; i--) {
			downJust(arr,i,length);
		}
	}
	void downJust(int[] arr, int parent, int length) {
		int large = parent;
		int leftChild = 2 * parent + 1;
		int rightChile = 2 * parent + 2;
		if (leftChild < length && (arr[leftChild] > arr[large])) {
			large = leftChild;
		}
		if (rightChile < length && (arr[rightChile] > arr[large])) {
			large = rightChile;
		}
		if (large == parent) {
			return;
		}
		if (large != parent) {
			swap(arr,large,parent);
			downJust(arr,large,length);
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}