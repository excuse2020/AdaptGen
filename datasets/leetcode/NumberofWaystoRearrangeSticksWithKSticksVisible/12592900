class Solution {
	int MOD = (int) (1e9 + 7);
	int getReArrangeCount(int n, int k, int[][] cache) {
		if (k == 0) {
			return 0;
		}
		if (n == k) {
			return 1;
		}
		if (cache[n][k] != 0) {
			return cache[n][k];
		}
		long ways1 = 1L * getReArrangeCount(n - 1,k - 1,cache);
		long ways2 = 1L * getReArrangeCount(n - 1,k,cache);
		cache[n][k] = (int) ((ways1 + ways2) % MOD);
		return cache[n][k];
	}
	int rearrangeSticks(int n, int k) {
		int[][] cache = new int[1001][1001];
		return getReArrangeCount(n,k,cache);
	}
}