class Solution {
	String crackSafe(int n, int k) {
		Set<String> hs = new HashSet<>();
		StringBuilder sb = new StringBuilder();
		int i = 0;
	}
	boolean dfs(StringBuilder sb, Set<String> hs, int lim, int n, int k) {
		if (hs.size() == lim) {
			return true;
		}
		String preString = sb.substring(sb.length() - (n - 1));
		for (int i = 0; i < k; i++) {
			String newPassword = preString + i;
			if (!hs.contains(newPassword)) {
				hs.add(newPassword);
				sb.append(i);
				boolean flag = dfs(sb,hs,lim,n,k);
				if (flag) {
					return true;
				}
				hs.remove(newPassword);
				sb.deleteCharAt(sb.length() - 1);
			}
		}
		return false;
	}
}