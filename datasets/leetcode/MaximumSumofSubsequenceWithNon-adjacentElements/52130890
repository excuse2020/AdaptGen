class Solution {
	int helper(int[] nums) {
		int[] dp = new int[nums.length];
		dp[nums.length - 1] = Math.max(nums[nums.length - 1],0);
		for (int i = nums.length - 2; i >= 0; i--) {
			dp[i] = Math.max(dp[i + 1],nums[i] + (i + 2 <= nums.length - 1 ? dp[i + 2] : 0));
		}
		return dp[0];
	}
	int maximumSumSubsequence(int[] nums, int[][] queries) {
		int result = 0;
		for (int[] query: queries) {	
			int pos = query[0];
			int value = query[1];
			nums[pos] = value;
			result = (result + helper(nums)) % 1000000007;
		}
		return result;
	}
}