class Solution {
	void dfs(int[][] adj, boolean[] visited, int i) {
		if (visited[i] == true) {
			return;
		}
		visited[i] = true;
		for (int j = 0; j < adj[i].length; j++) {
			if (adj[i][j] == 1 && visited[j] == false) {
				dfs(adj,visited,j);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		boolean[] visited = new boolean[n];
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (visited[i] == false) {
				dfs(isConnected,visited,i);
				count++;
			}
		}
		return count;
	}
}