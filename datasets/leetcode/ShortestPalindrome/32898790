class Solution {
	long base = 31;
	long mod = 1_000_000_000 + 7;
	int encode(char c) {
	}
	String shortestPalindrome(String s) {
		int length = s.length();
		long prefix = 0;
		long suffix = 0;
		long muli = 1;
		int end = 0;
		for (int i = 0; i < length; i++) {
			char cur = s.charAt(i);
			prefix = (prefix * base + encode(cur)) % mod;
			suffix = (suffix + encode(cur) * muli) % mod;
			muli = (muli * base) % mod;
			if (prefix == suffix) {
				end = i;
			}
		}
		StringBuilder sb = new StringBuilder();
		for (int idx = length - 1; idx > end; idx--) {
			sb.append(s.charAt(idx));
		}
		sb.append(s);
		return sb.toString();
	}
}