class Solution {
	TreeNode helper(TreeNode root, int[] nums, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = (end - start) / 2 + start;
		root = insert(root,nums[mid]);
		root.left = helper(root.left,nums,start,mid - 1);
		root.right = helper(root.right,nums,mid + 1,end);
		return root;
	}
	TreeNode insert(TreeNode root, int value) {
		if (root == null) {
			root = new TreeNode(value);
		} 
		else {
			if (root.val > value) {
				root.left = insert(root.left,value);
			} 
			else {
				root.right = insert(root.right,value);
			}
		}
		return root;
	}
	TreeNode sortedArrayToBST(int[] nums) {
		if (nums.length == 0) {
			return null;
		}
		TreeNode root = null;
		root = helper(root,nums,0,nums.length - 1);
		return root;
	}
}