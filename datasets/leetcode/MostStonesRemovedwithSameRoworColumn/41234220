class Solution {
	void DFS(int[][] stones, boolean visited, int idx) {
		visited[idx] = true;
		System.out.println(idx);
		for (int p = 0; p < stones.length; p++) {
			if (visited[p]) {
				continue;
			}
			int i = stones[idx][0];
			int j = stones[idx][1];
			if (i == stones[p][0] || j == stones[p][1]) {
				DFS(stones,visited,p);
			}
		}
	}
	int removeStones(int[][] stones) {
		int n = stones.length;
		boolean visited = new boolean[n];
		int c = 0;
		for (int i = 0; i < n; i++) {
			if (visited[i]) {
				continue;
			}
			c++;
			DFS(stones,visited,i);
		}
		System.out.println(c);
		return n - c;
	}
}