class Solution {
	int findCircleNum(int[][] isConnected) {
		List<List<Integer>> vertices = new ArrayList<List<Integer>>();
		for (int i = 0; i < isConnected.length; i++) {
			vertices.add(new ArrayList<Integer>());
		}
		for (int i = 0; i < isConnected.length; i++) {
			for (int j = 0; j < isConnected[0].length; j++) {
				if (isConnected[i][j] == 1 && i != j) {
					vertices.get(i).add(j);
				}
			}
		}
		int visited = new int[isConnected.length];
		int states = 0;
		for (int i = 0; i < isConnected.length; i++) {
			if (visited[i] == 0) {
				states++;
				DepthFirstSearch(i,visited,vertices);
			}
		}
		return states;
	}
}