class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int i = 0, j = 0;
		long sum = 0, max = 0;
		HashMap<Integer, Integer> hs = new HashMap<>();
		while (j < nums.length) {
			hs.put(nums[j],hs.getOrDefault(nums[j],0) + 1);
			sum += nums[j];
			if (j - i + 1 < k) {
				j++;
			} 
			else if (j - i + 1 == k) {
				if (hs.size() == k) {
					max = Math.max(max,sum);
				}
				sum = sum - nums[i];
				hs.put(nums[i],hs.get(nums[i]) - 1);
				if (hs.get(nums[i]) == 0) {
					hs.remove(nums[i]);
				}
				i++;
				j++;
			}
		}
		return max;
	}
}