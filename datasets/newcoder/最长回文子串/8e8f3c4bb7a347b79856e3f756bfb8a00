class Solution {
	int getLongestPalindrome(String A) {
		int len = A.length();
		if (len < 2) {
			return len;
		}
		int maxLen = 1;
		boolean[][] dp = new boolean[len][len];
		for (int i = 0; i < len; i++) {
			dp[i][i] = true;
		}
		char[] arr = A.toCharArray();
		for (int L = 2; L <= len; L++) {
			for (int i = 0; i < len; i++) {
				int j = L + i - 1;
				if (j >= len) {
					break;
				}
				if (arr[i] != arr[j]) {
					dp[i][j] = false;
				} 
				else {
					if (j - i < 3) {
						dp[i][j] = true;
					} 
					else {
						dp[i][j] = dp[i + 1][j - 1];
					}
				}
				if (dp[i][j] && j - i + 1 > maxLen) {
					maxLen = j - i + 1;
				}
			}
		}
		return maxLen;
	}
}