class Solution {
	int findKth(int[] arr, int n, int k) {
		return quickSort(arr,0,n - 1,k);
	}
	int partion(int[] arr, int from, int to) {
		int lt = from, rt = to;
		int pivot = arr[from];
		while (lt < rt) {
			while (lt < rt && arr[rt] <= pivot) {
				rt--;
			}
			arr[lt] = arr[rt];
			while (lt < rt && arr[lt] >= pivot) {
				lt++;
			}
			arr[rt] = arr[lt];
		}
		arr[lt] = pivot;
		return lt;
	}
	int quickSort(int[] arr, int from, int to, int k) {
		int index = partion(arr,from,to);
		if (k == index - from + 1) {
			return arr[index];
		}
		if (index - from + 1 > k) {
			return quickSort(arr,from,index - 1,k);
		}
		return quickSort(arr,index + 1,to,k - (index - from + 1));
	}
}