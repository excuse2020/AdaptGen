class Solution {
	void dfs(int[] num, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> temp, int start) {
		result.add(new ArrayList<>(temp));
		for (int i = start; i < num.length; i++) {
			temp.add(num[i]);
			dfs(num,result,temp,i + 1);
			temp.remove(temp.size() - 1);
		}
	}
	ArrayList<ArrayList<Integer>> subsets(int[] S) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<>();
		ArrayList<Integer> temp = new ArrayList<>();
		Arrays.sort(S);
		dfs(S,result,temp,0);
		return result;
	}
}