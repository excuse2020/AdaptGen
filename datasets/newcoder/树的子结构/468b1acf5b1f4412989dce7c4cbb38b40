class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		boolean result = false;
		if (root1 != null && root2 != null) {
			if (root1.val == root2.val) {
				result = subtreeIsEqual(root1,root2);
			}
			if (!result) {
				result = HasSubtree(root1.left,root2);
			}
			if (!result) {
				result = HasSubtree(root1.right,root2);
			}
		}
		return result;
	}
	boolean subtreeIsEqual(TreeNode subroot1, TreeNode subroot2) {
		if (subroot2 == null) {
			return true;
		}
		if (subroot1 == null) {
			return false;
		}
		if (subroot1.val != subroot2.val) {
			return false;
		} 
		else {
			return subtreeIsEqual(subroot1.left,subroot2.left) && subtreeIsEqual(subroot1.right,subroot2.right);
		}
	}
}