class Solution {
	int answer = 0;
	int averageOfSubtree(TreeNode root) {
		averageOfSubtreeUtil(root);
		return answer;
	}
	void averageOfSubtreeUtil(TreeNode root) {
		if (root == null) {
			return;
		}
		int sum = root.val + getSum(root.left);
		int count = 1 + getCount(root.left);
		if (root.val == sum / count) {
			answer++;
		}
		averageOfSubtreeUtil(root.left);
		averageOfSubtreeUtil(root.right);
	}
	int getCount(TreeNode root) {
		if (root == null) {
			return 0;
		}
		if (root.left == null && root.right == null) {
			return 1;
		}
		return (1 + getCount(root.left));
	}
	int getSum(TreeNode root) {
		if (root == null) {
			return 0;
		}
		if (root.left == null && root.right == null) {
			return root.val;
		}
		return (root.val + getSum(root.left));
	}
}