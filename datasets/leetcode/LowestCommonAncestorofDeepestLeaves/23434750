class Solution {
	int lcaAtDeepest(TreeNode root, int depth, Node node) {
		node.deepest = Math.max(node.deepest,depth);
		if (root == null) {
			return depth;
		}
		int left = lcaAtDeepest(root.left,depth + 1,node);
		int right = lcaAtDeepest(root.right,depth + 1,node);
		if (left == node.deepest && right == node.deepest) {
			node.lca = root;
		}
		return Math.max(left,right);
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		Node node = new Node();
		lcaAtDeepest(root,0,node);
		return node.lca;
	}
	class Node {
		int deepest;
		TreeNode lca;
	}
}