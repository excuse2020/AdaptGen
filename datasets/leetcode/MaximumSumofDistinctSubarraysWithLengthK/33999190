class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int left = 0, len = nums.length;
		long res = 0, sum = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < len; i++) {
			sum += nums[i];
			map.put(nums[i],map.getOrDefault(nums[i],0) + 1);
			if (i - left + 1 > k) {
				sum -= nums[left];
				if (map.get(nums[left]) == 1) {
					map.remove(nums[left]);
				} 
				else {
					map.put(nums[left],map.get(nums[left]) - 1);
				}
				left++;
			}
			if (map.size() == k) {
				res = Math.max(res,sum);
			}
		}
		return res;
	}
}