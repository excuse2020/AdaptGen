class Solution {
	boolean isPail(ListNode head) {
		if (head == null) {
			return false;
		}
		if (head.next == null) {
			return true;
		}
		ListNode slow = head;
		ListNode fast = head;
		Stack<Integer> s = new Stack<Integer>();
		while (fast != null && fast.next != null) {
			s.push(slow.val);
			slow = slow.next;
			fast = fast.next.next;
		}
		if (fast != null) {
			slow = slow.next;
		}
		while (slow != null || !s.isEmpty()) {
			if (slow.val != s.pop()) {
				return false;
			}
			slow = slow.next;
		}
		return true;
	}
}