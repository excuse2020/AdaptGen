class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode fast = head;
		ListNode slow = head;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode secondHead = reverse(slow.next);
		slow.next = null;
		ListNode p1 = head;
		ListNode p2 = secondHead;
		while (p1 != null && p2 != null) {
			if (p1.val != p2.val) {
				return false;
			}
			p1 = p1.next;
			p2 = p2.next;
		}
		return true;
	}
	ListNode reverse(ListNode temp) {
		ListNode prev = null;
		ListNode nextNode = null;
		while (temp != null) {
			nextNode = temp.next;
			temp.next = prev;
			prev = temp;
			temp = nextNode;
		}
		return prev;
	}
}