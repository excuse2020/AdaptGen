class Solution {
	int maxDistance(int[][] grid) {
		int n = grid.length;
		ArrayList<int[]> water = new ArrayList<>();
		ArrayList<int[]> land = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] == 0) {
					water.add(new int{i, j});
				} 
				else {
					land.add(new int{i, j});
				}
			}
		}
		if (water.size() == 0 || land.size() == 0) {
			return -1;
		}
		int distance = 0;
		for (int i = 0; i < water.size(); i++) {
			int a = water.get(i);
			int min = Integer.MAX_VALUE;
			for (int j = 0; j < land.size(); j++) {
				int b = land.get(j);
				min = Math.min(min,Math.abs(b[0] - a[0]) + Math.abs(b[1] - a[1]));
			}
			distance = Math.max(distance,min);
		}
		return distance == Integer.MAX_VALUE ? -1 : distance;
	}
}