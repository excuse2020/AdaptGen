class Solution {
	int semiOrderedPermutation(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[0] != 1) {
				for (int j = 1; j < nums.length; j++) {
					if (nums[j] == 1) {
						int temp = nums[j];
						nums[j] = nums[j - 1];
						nums[j - 1] = temp;
						count++;
					}
				}
			}
		}
		int last = nums.length - 1;
		int acc = nums.length;
		for (int i = last; i >= 0; i--) {
			if (nums[last] != nums.length) {
				for (int j = last - 1; j >= 0; j--) {
					if (nums[j] == acc) {
						int temp = nums[j];
						nums[j] = nums[j + 1];
						nums[j + 1] = temp;
						count++;
					}
				}
			}
		}
		for (int i = 0; i < nums.length; i++) {
			System.out.print(nums[i] + " ");
		}
		return count;
	}
}