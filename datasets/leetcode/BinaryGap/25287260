class Solution {
	int binaryGap(int n) {
		if (n == 0) {
			return 0;
		}
		int num = n;
		int count = 0;
		while (num > 0) {
			num &= (num - 1);
			count += 1;
		}
		if (count == 1) {
			return 0;
		}
		List<Integer> l = new ArrayList<>();
		long i = 1;
		int c = 0;
		while (i <= n) {
			if ((n & (1 << c)) != 0) {
				l.add(c + 1);
			}
			i <<= 1;
			c += 1;
		}
		int max = Integer.MIN_VALUE;
		for (int j = 0; j < l.size() - 1; j++) {
			max = (int) Math.max(max,(l.get(j + 1) - l.get(j)));
		}
		return max;
	}
}