class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		List<String> ans = new ArrayList<>();
		String test = "";
		for (int i = 0; i < words.length; i++) {
			int length = 0;
			if (test.trim().equals("")) {
				length = words[i].length();
			} 
			else {
				length = words[i].length() + 1;
			}
			if (length < maxWidth) {
				test = test + " ";
				if (i == words.length - 1) {
					String finalStr = test.trim();
					int diff = maxWidth - finalStr.length();
					for (int l = 0; l < diff; l++) {
						finalStr += " ";
					}
					ans.add(finalStr);
				}
			} 
			else if (length == maxWidth) {
				test = test + " ";
				ans.add(test.trim());
				test = "";
				continue;
			} 
			else {
				String[] line = test.trim().split(" ");
				int rem = maxWidth - test.trim().length();
				String addition = "";
				int noSpace = line.length - 1;
				if (noSpace > 0) {
					int ispace = rem / noSpace;
					int lspace = rem % noSpace;
					for (int j = 0; j < line.length; j++) {
						if (j == 0) {
							addition = addition + line[j];
							for (int k = 0; k <= ispace; k++) {
								addition = addition + " ";
							}
							if (lspace > 0) {
								addition = addition + " ";
								lspace--;
							}
						} 
						else {
							addition = addition + line[j];
							if (j != line.length - 1) {
								for (int k = 0; k <= ispace; k++) {
									addition = addition + " ";
									if (lspace > 0) {
										addition += " ";
										lspace--;
									}
								}
							}
						}
					}
				} 
				else {
					addition += line[0];
					for (int m = 0; m < rem; m++) {
						addition += " ";
					}
				}
				ans.add(addition);
				test = "";
				test = words[i];
				if (i == words.length - 1) {
					String finalStr = test;
					int diff = maxWidth - finalStr.length();
					for (int l = 0; l < diff; l++) {
						finalStr += " ";
					}
					ans.add(finalStr);
				}
			}
		}
		return ans;
	}
}