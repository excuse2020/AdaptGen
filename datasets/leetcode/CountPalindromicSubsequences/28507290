class Solution {
	int MOD = 1_000_000_007;
	int countPalindromes(String s) {
		int n = s.length();
		long[][][] count1 = helper(s);
		long[][][] count2 = helper(new StringBuilder(s).reverse().toString());
		long res = 0;
		for (int i = 0; i < n; i++) {
			int i2 = n - 1;
			for (int j = 0; j < 10; j++) {
				for (int k = 0; k < 10; k++) {
					res = (res + count1[i][j][k] * count2[i2][j][k]) % MOD;
				}
			}
		}
		return (int) res;
	}
	long[][][] helper(String s) {
		int n = s.length();
		long[][] count = new long[n + 1][10];
		int i = 0;
		for (int j = 0; j < 10; j++) {
			count[i + 1][j] = count[i][j];
		}
	}
}