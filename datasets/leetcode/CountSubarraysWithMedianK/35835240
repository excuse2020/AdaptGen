class Solution {
	int countSubarrays(int[] nums, int k) {
		int[] binary = new int[nums.length];
		int pos = -1;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < k) {
				binary[i] = -1;
			} 
			else if (nums[i] > k) {
				binary[i] = 1;
			} 
			else {
				binary[i] = 0;
				pos = i;
			}
		}
		int[] prefix = new int[nums.length + 1];
		for (int i = 0; i < nums.length; i++) {
			prefix[i + 1] = prefix[i] + binary[i];
		}
		HashMap<Integer, Integer> m = new HashMap<>();
		for (int i = 0; i <= pos; i++) {
			m.put(prefix[i],m.getOrDefault(prefix[i],0) + 1);
		}
		int res = 0;
		for (int i = pos + 1; i < prefix.length; i++) {
			res += m.getOrDefault(prefix[i],0) + m.getOrDefault(prefix[i] - 1,0);
		}
		return res;
	}
}