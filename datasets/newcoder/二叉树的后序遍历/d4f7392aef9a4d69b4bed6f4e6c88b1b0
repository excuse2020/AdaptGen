class Solution {
	int[] postorderTraversal(TreeNode root) {
		if (root == null) {
			return new int[0];
		}
		Stack<TreeNode> stack1 = new Stack<>();
		Stack<TreeNode> stack2 = new Stack<>();
		stack1.push(root);
		TreeNode cur = root;
		while (!stack1.isEmpty()) {
			cur = stack1.pop();
			stack2.push(cur);
			if (cur.left != null) {
				stack1.push(cur.left);
			}
			if (cur.right != null) {
				stack1.push(cur.right);
			}
		}
		List<Integer> list = new ArrayList<>();
		while (!stack2.isEmpty()) {
			list.add(stack2.pop().val);
		}
		int[] res = new int[list.size()];
		for (int i = 0; i < list.size(); i++) {
			res[i] = list.get(i);
		}
		return res;
	}
}