class Solution {
	int xLeftSubtreeSum = 0;
	int xRightSubtreeSum = 0;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		size(root,x);
		int otherSubtreeSize = n - (xLeftSubtreeSum + xRightSubtreeSum);
		int yMax = Math.max(otherSubtreeSize,Math.max(xLeftSubtreeSum,xRightSubtreeSum));
		int rest = n - yMax;
		if (rest > yMax) {
			return false;
		}
		return true;
	}
	int size(TreeNode root, int x) {
		if (root == null) {
			return 0;
		}
		int leftSize = size(root.left,x);
		int rightSize = size(root.right,x);
		if (root.val == x) {
			xRightSubtreeSum = rightSize;
			xLeftSubtreeSum = leftSize;
		}
		return leftSize + rightSize;
	}
}