class Solution {
	boolean solve(int n, Boolean[] dp) {
		if (dp[n] != null) {
			return dp[n];
		}
		boolean awin = false;
		for (int i = 1; i * i <= n; i++) {
			if (i * i == n) {
				awin = true;
				break;
			} 
			else {
				awin = awin || !solve(n - i * i,dp);
			}
		}
		return dp[n] = awin;
	}
	boolean solveTab(int n) {
		boolean[] dp = new boolean[n + 1];
		for (int j = 1; j <= n; j++) {
			boolean awin = false;
			for (int i = 1; i * i <= j; i++) {
				if (i * i == j) {
					awin = true;
					break;
				} 
				else {
					awin = awin || !dp[j - i * i];
				}
			}
			dp[j] = awin;
		}
		return dp[n];
	}
	boolean winnerSquareGame(int n) {
		return solveTab(n);
	}
}