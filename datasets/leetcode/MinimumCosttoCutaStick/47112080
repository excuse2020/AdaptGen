class Solution {
	int minCost(int n, int[] cuts) {
		Arrays.sort(cuts);
		int[] newCuts = new int[cuts.length + 2];
		newCuts[0] = 0;
		newCuts[newCuts.length - 1] = n;
		for (int i = 0; i < cuts.length; i++) {
			newCuts[i + 1] = cuts[i];
		}
		int[][] dp = new int[newCuts.length][newCuts.length];
		for (int len = 2; len < newCuts.length; len++) {
			for (int i = 0; i + len < newCuts.length; i++) {
				int j = i + len;
				dp[i][j] = Integer.MAX_VALUE;
				for (int k = i + 1; k < j; k++) {
					dp[i][j] = Math.min(dp[i][j],dp[i][k] + dp[k][j] - newCuts[i]);
				}
			}
		}
		return dp[0][newCuts.length - 1];
	}
}