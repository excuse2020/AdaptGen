class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		PriorityQueue<Integer> maxFuelFromPassedStation = new PriorityQueue<>(Collections.reverseOrder());
		int countStops = 0;
		int stationCount = 0;
		int currFuel = startFuel;
		while (currFuel < target) {
			while (stationCount < stations.length && currFuel >= stations[stationCount][0]) {
				maxFuelFromPassedStation.add(stations[stationCount][1]);
				stationCount++;
			}
			if (maxFuelFromPassedStation.size() <= 0) {
				return -1;
			}
			currFuel += maxFuelFromPassedStation.poll();
			countStops++;
		}
		return countStops;
	}
}