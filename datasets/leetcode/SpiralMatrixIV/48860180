class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] res = new int[m][n];
		for (int[] row: res) {	
			Arrays.fill(row,-1);
		}
		int x = 0, y = 0;
		while (m > 0 && n > 0) {
			if (m == 1) {
				for (int i = 0; i < n; i++) {
					if (head == null) {
						return res;
					}
					res[x][y + i] = head.val;
					head = head.next;
				}
				return res;
			}
			if (n == 1) {
				for (int i = x; i < m; i++) {
					if (head == null) {
						return res;
					}
					res[i][y] = head.val;
					head = head.next;
				}
				return res;
			}
			for (int i = 0; i < n - 1; i++) {
				if (head == null) {
					return res;
				}
				res[x][y++] = head.val;
				head = head.next;
			}
			for (int i = 0; i < m - 1; i++) {
				if (head == null) {
					return res;
				}
				res[x++][y] = head.val;
				head = head.next;
			}
			for (int i = 0; i < n - 1; i++) {
				if (head == null) {
					return res;
				}
				res[x][y--] = head.val;
				head = head.next;
			}
			for (int i = 0; i < m - 1; i++) {
				if (head == null) {
					return res;
				}
				res[x--][y] = head.val;
				head = head.next;
			}
			x++;
			y++;
			m -= 2;
			n -= 2;
		}
		return res;
	}
}