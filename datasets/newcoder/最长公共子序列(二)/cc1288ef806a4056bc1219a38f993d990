class Solution {
	String x = "";
	String y = "";
	String LCS(String s1, String s2) {
		if (s1.length() == 0 || s2.length() == 0) {
			return "-1";
		}
		int len1 = s1.length(), len2 = s2.length();
		int[][] dp = new int[len1 + 1][len2 + 1];
		x = s1;
		y = s2;
		int[][] b = new int[len1 + 1][len2 + 1];
		for (int i = 1; i <= len1; i++) {
			for (int j = 1; j <= len2; j++) {
				if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
					b[i][j] = 1;
				} 
				else {
					if (dp[i - 1][j] > dp[i][j - 1]) {
						dp[i][j] = dp[i - 1][j];
						b[i][j] = 2;
					} 
					else {
						dp[i][j] = dp[i][j - 1];
						b[i][j] = 3;
					}
				}
			}
		}
		String res = ans(len1,len2,b);
		if (res.isEmpty()) {
			return "-1";
		}
		return res;
	}
	String ans(int len1, int len2, int[][] b) {
		StringBuilder strb = new StringBuilder();
		if (len1 == 0 || len2 == 0) {
			return strb.toString();
		}
		if (b[len1][len2] == 1) {
			strb.append(ans(len1 - 1,len2 - 1,b));
			strb.append(x.charAt(len1 - 1));
		} 
		else if (b[len1][len2] == 2) {
			strb.append(ans(len1 - 1,len2,b));
		} 
		else if (b[len1][len2] == 3) {
			strb.append(ans(len1,len2 - 1,b));
		}
		return strb.toString();
	}
}