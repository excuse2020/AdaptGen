class Solution {
	boolean isPail(ListNode head) {
		if (head == null) {
			return false;
		}
		if (head.next == null) {
			return true;
		}
		ListNode temp1 = head;
		ListNode temp2 = new ListNode(-9999);
		ListNode flag = temp2;
		while (true) {
			temp2.next = new ListNode(temp1.val);
			if (temp1.next == null) {
				break;
			}
			temp2 = temp2.next;
			temp1 = temp1.next;
		}
		ListNode reverseList = reverseList(head);
		while (flag.next != null) {
			flag = flag.next;
			if (flag.val != reverseList.val) {
				return false;
			}
			reverseList = reverseList.next;
		}
		return true;
	}
	ListNode reverseList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode current = head;
		ListNode previous = null;
		while (current != null) {
			ListNode temp = current.next;
			current.next = previous;
			previous = current;
			current = temp;
		}
		return previous;
	}
}