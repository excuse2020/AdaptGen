class Solution {
	int helper(int r, int c, int[][] grid) {
		int sum = 0;
		if (r + 3 <= grid.length && c + 3 <= grid[0].length) {
			for (int i = r; i < r + 3; ++i) {
				for (int j = c; j < c + 3; ++j) {
					sum += grid[i][j];
				}
			}
			return sum - grid[r + 1][c];
		} 
		else {
			return 0;
		}
	}
	int maxSum(int[][] grid) {
		if (grid.length < 3 && grid[0].length < 3) {
			return 0;
		}
		int r = grid.length - 3;
		int c = grid[0].length - 3;
		int ans = 0;
		for (int i = 0; i <= r; ++i) {
			for (int j = 0; j <= c; ++j) {
				ans = Math.max(ans,helper(i,j,grid));
			}
		}
		return ans;
	}
}