class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode tmp = head;
		ListNode mPre = null;
		ListNode nNext = null;
		int len = 0;
		for (; tmp != null; tmp = tmp.next) {
			len = len + 1;
			if (len == m - 1) {
				mPre = tmp;
			}
			if (len == n + 1) {
				nNext = tmp;
			}
		}
		if (m > n || m < 1 || n > len) {
			return head;
		}
		ListNode node1 = (mPre == null) ? head : mPre.next;
		ListNode node2 = node1.next;
		ListNode node3 = null;
		node1.next = nNext;
		while (node2 != nNext) {
			node3 = node2.next;
			node2.next = node1;
			node1 = node2;
			node2 = node3;
		}
		if (mPre == null) {
			return node1;
		} 
		else {
			mPre.next = node1;
			return head;
		}
	}
}