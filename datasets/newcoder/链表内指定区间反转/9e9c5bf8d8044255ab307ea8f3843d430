class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (m == n) {
			return head;
		}
		ListNode headNode = head;
		int count = 1;
		ListNode beforeNode = null;
		ListNode fristNode = null;
		ListNode preNode = null;
		ListNode nextNode = null;
		while (count < m) {
			beforeNode = head;
			head = head.next;
			count++;
		}
		fristNode = head;
		while (count <= n) {
			nextNode = head.next;
			head.next = preNode;
			preNode = head;
			head = nextNode;
			count++;
		}
		if (beforeNode != null) {
			beforeNode.next = preNode;
		}
		fristNode.next = head;
		if (m == 1) {
			return preNode;
		}
		return headNode;
	}
}