class Solution {
	int longestSubsequence(int[] arr, int difference) {
		return util1(arr,difference);
	}
	int util1(int arr, int k) {
		HashMap<Integer, Integer> hm = new HashMap<>();
		int ans = 1;
		for (int i = arr.length - 1; i >= 0; i--) {
			int toLookFor = arr[i] + k;
			if (hm.containsKey(toLookFor)) {
				int currentAns = hm.get(toLookFor) + 1;
				ans = Math.max(ans,currentAns);
				hm.put(arr[i],currentAns);
			} 
			else {
				hm.put(arr[i],1);
			}
		}
		return ans;
	}
}