class Solution {
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int[] gap1_2 = new int[nums1.length];
		int[] gap2_1 = new int[nums2.length];
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < nums1.length; i++) {
			gap1_2[i] = nums1[i] - nums2[i];
			gap2_1[i] = nums2[i] - nums1[i];
			sum1 += nums1[i];
			sum2 += nums2[i];
		}
		int gap1 = 0;
		int gap2 = 0;
		int max1 = 0;
		int max2 = 0;
		for (int i = 0; i < nums1.length; i++) {
			if (gap1 < 0) {
				gap1 = gap1_2[i];
			} 
			else {
				gap1 = gap1 + gap1_2[i];
			}
			if (gap2 < 0) {
				gap2 = gap2_1[i];
			} 
			else {
				gap2 = gap2 + gap2_1[i];
			}
			max1 = Math.max(max1,gap1);
			max2 = Math.max(max2,gap2);
		}
		return (Math.max(sum1 + max2,sum2 + max1));
	}
}