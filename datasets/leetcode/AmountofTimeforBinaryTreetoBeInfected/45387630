class Solution {
	int mi = Integer.MIN_VALUE;
	int amountOfTime(TreeNode root, int start) {
		height(root,start,true);
		return mi;
	}
	int height(TreeNode root, int st, boolean isSt) {
		if (root == null) {
			return 0;
		}
		if (root.val == st && isSt) {
			mi = Math.max(mi,height(root,st,false) - 1);
			return -1;
		}
		int ltHeight = height(root.left,st,isSt);
		int rtHeight = height(root.right,st,isSt);
		if (ltHeight < 0 || rtHeight < 0) {
			mi = Math.max(mi,Math.abs(ltHeight) + Math.abs(rtHeight));
			return Math.min(ltHeight,rtHeight) - 1;
		}
		return Math.max(ltHeight,rtHeight) + 1;
	}
}