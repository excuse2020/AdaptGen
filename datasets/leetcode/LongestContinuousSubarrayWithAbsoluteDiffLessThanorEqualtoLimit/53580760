class Solution {
	int longestSubarray(int[] nums, int limit) {
		PriorityQueue<Integer> min = new PriorityQueue<>();
		PriorityQueue<Integer> max = new PriorityQueue<>((a, b) -> {Integer.compare(b,a)});
		int a = 0, b = 0;
		int res = 0;
		while (b < nums.length) {
			min.add(nums[b]);
			max.add(nums[b]);
			while (Math.abs(max.peek() - min.peek()) > limit) {
				min.remove(nums[a]);
				max.remove(nums[a]);
				a++;
			}
			res = Math.max(b - a + 1,res);
			b++;
		}
		return res;
	}
}