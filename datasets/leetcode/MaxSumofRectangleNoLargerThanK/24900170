class Solution {
	int maxSumSubmatrix(int[][] matrix, int k) {
		int result = Integer.MIN_VALUE;
		int rows = matrix.length, cols = matrix[0].length;
		for (int left = 0; left < cols; left++) {
			int[] sum = new int[rows];
			for (int right = left; right < cols; right++) {
				for (int i = 0; i < rows; i++) {
					sum[i] += matrix[i][right];
				}
				result = Math.max(result,validSum(sum,k));
			}
		}
		return result;
	}
	int validSum(int[] arr, int k) {
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < arr.length; i++) {
			int sum = 0;
			for (int j = i; j < arr.length; j++) {
				sum += arr[j];
				if (sum <= k) {
					max = Math.max(max,sum);
				}
			}
		}
		return max;
	}
}