class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		int n = s.length(), maxAns = 0;
		for (int i = 0; i < n - 1; i++) {
			int sum = 0, count = 0, count2 = 0;
			if (s.charAt(i) == s.charAt(i + 1)) {
				for (int k = i; k >= 1; k--) {
					if (s.charAt(k) != s.charAt(k - 1)) {
						count++;
					} 
					else {
						break;
					}
				}
				for (int k = i + 1; k < n - 1; k++) {
					if (s.charAt(k) != s.charAt(k + 1)) {
						count2++;
					} 
					else {
						break;
					}
				}
				sum = sum + count;
			}
			maxAns = Math.max(sum,maxAns);
		}
		return maxAns == 0 ? s.length() : maxAns;
	}
}