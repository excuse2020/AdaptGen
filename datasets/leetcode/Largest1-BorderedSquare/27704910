class Solution {
	int largest1BorderedSquare(int[][] grid) {
		int row = grid.length;
		int col = grid[0].length;
		int vr = new int[row][col];
		int hr = new int[row][col];
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				if (grid[i][j] == 1) {
					vr[i][j] = (i == 0) ? 1 : vr[i - 1][j] + 1;
					hr[i][j] = (j == 0) ? 1 : hr[i][j - 1] + 1;
				}
			}
		}
		int max = 0;
		for (int i = row - 1; i >= 0; i--) {
			for (int j = col - 1; j >= 0; j--) {
				int min = Math.min(hr[i][j],vr[i][j]);
				while (min > max) {
					if (hr[i - min + 1][j] >= min && vr[i][j - min + 1] >= min) {
						max = min;
					}
					min--;
				}
			}
		}
		return max * max;
	}
}