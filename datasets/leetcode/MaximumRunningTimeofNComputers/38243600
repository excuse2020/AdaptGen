class Solution {
	boolean isPossible(int n, long mid, int batteries, int m) {
		long sum = 0;
		long target = n * mid;
		for (int val: batteries) {	
			if (val > mid) {
				sum += mid;
			} 
			else {
				sum += val;
			}
			if (sum >= target) {
				return true;
			}
		}
		return sum >= target;
	}
	long maxRunTime(int n, int[] batteries) {
		int m = batteries.length;
		long sum = 0;
		for (int val: batteries) {	
			sum += val;
		}
		long low = 0;
		long high = sum / n;
		long res = -1;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (isPossible(n,mid,batteries,m)) {
				res = mid;
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return res;
	}
}