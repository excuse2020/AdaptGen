class Solution {
	int minimumAverageDifference(int[] nums) {
		if (nums.length == 1) {
			return 0;
		}
		long left = new long[nums.length];
		long right = new long[nums.length];
		left[0] = nums[0];
		for (int i = 1; i < nums.length; i++) {
			left[i] = left[i - 1] + nums[i];
		}
		right[(nums.length) - 1] = 0;
		for (int i = (nums.length) - 2; i >= 0; i--) {
			right[i] = nums[i + 1] + right[i + 1];
		}
		int minIdx = nums.length;
		long minAvg = Integer.MAX_VALUE;
		int n = nums.length - 1;
		for (int i = 0; i < (nums.length); i++) {
			long leftAvg = left[i] / (i + 1);
			long rightAvg = (i == n) ? 0 : (int) (right[i] / (n - i));
			long diffAvg = Math.abs(leftAvg - rightAvg);
			if (diffAvg < minAvg) {
				minIdx = i;
				minAvg = diffAvg;
			}
			System.out.print(minIdx + " ");
		}
		return minIdx;
	}
}