class Solution {
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		Iterator<ListNode> listNodeListIterator = lists.iterator();
		List<Integer> intList = new ArrayList<>();
		while (listNodeListIterator.hasNext()) {
			ListNode head = listNodeListIterator.next();
			while (null != head) {
				intList.add(head.val);
				head = head.next;
			}
		}
		intList = intList.stream().sorted().collect(Collectors.toList());
		Iterator<Integer> intListIterator = intList.iterator();
		ListNode tempNode = null;
		ListNode newHead = null;
		while (intListIterator.hasNext()) {
			if (null != tempNode) {
				tempNode.next = new ListNode(intListIterator.next());
				tempNode = tempNode.next;
			} 
			else {
				tempNode = new ListNode(intListIterator.next());
				newHead = tempNode;
			}
		}
		return newHead;
	}
}