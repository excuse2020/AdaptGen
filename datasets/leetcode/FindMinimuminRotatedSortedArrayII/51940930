class Solution {
	int findMin(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int n = nums.length;
		int min = Integer.MAX_VALUE;
		int end = 0;
		int high = n - 1;
		while (end <= high) {
			int mid = end + (high - end) / 2;
			if (nums[end] == nums[high]) {
				min = Math.min(min,nums[end]);
				end++;
				high--;
				continue;
			}
			if (nums[end] <= nums[high]) {
				min = Math.min(min,nums[end]);
				break;
			} 
			else {
				min = Math.min(min,nums[high]);
			}
			if (nums[end] <= nums[mid]) {
				min = Math.min(min,nums[end]);
				end = mid + 1;
			} 
			else {
				min = Math.min(min,nums[mid]);
				high = mid - 1;
			}
		}
		return min;
	}
}