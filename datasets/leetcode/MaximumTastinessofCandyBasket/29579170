class Solution {
	boolean isPossible(int mid, int[] price, int k) {
		int prev = 0;
		int cnt = 1, i = 0;
		while (i < price.length) {
			if (price[i] - price[prev] >= mid) {
				prev = i;
				cnt++;
			}
			i++;
		}
		return cnt >= k;
	}
	int maximumTastiness(int[] price, int k) {
		int n = price.length;
		Arrays.sort(price);
		int h = price[n - 1] - price[0];
		int l = 0;
		int ans = h;
		while (l <= h) {
			int mid = l + (h - l) / 2;
			if (isPossible(mid,price,k)) {
				ans = mid;
				l = mid + 1;
			} 
			else {
				h = mid - 1;
			}
		}
		return ans;
	}
}