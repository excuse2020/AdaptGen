class Solution {
	int[] getStrongest(int[] arr, int k) {
		Arrays.sort(arr);
		int l = 0;
		int r = arr.length - 1;
		int n = arr.length;
		int m = (n - 1) / 2;
		Queue<Integer> q = new LinkedList<>();
		while (l <= m && r >= m) {
			if (Math.abs(arr[r] - arr[m]) >= Math.abs(arr[l] - arr[m])) {
				q.add(arr[r]);
				r--;
			} 
			else {
				q.add(arr[l]);
				l++;
			}
		}
		while (l <= m) {
			q.add(arr[l]);
			l++;
		}
		while (r >= m) {
			q.add(arr[r]);
			r--;
		}
		int[] res = new int[k];
		for (int i = 0; i < k; i++) {
			res[i] = q.poll();
		}
		return res;
	}
}