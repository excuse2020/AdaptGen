class Solution {
	int GetNumberOfK(int[] array, int k) {
		int leftIndex = binarySearch(array,k,true);
		int rightIndex = binarySearch(array,k,false) - 1;
		if (leftIndex <= rightIndex && rightIndex < array.length && array[leftIndex] == k && array[rightIndex] == k) {
			return rightIndex - leftIndex + 1;
		}
		return 0;
	}
	int binarySearch(int[] nums, int k, boolean lower) {
		int left = 0, right = nums.length - 1, ans = nums.length;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			if (nums[mid] > k || lower && nums[mid] >= k) {
				right = mid - 1;
				ans = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return ans;
	}
}