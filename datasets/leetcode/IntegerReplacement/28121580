class Solution {
	int integerReplacement(int n) {
		int cnt = 0;
		while (n > 1) {
			if (n == Integer.MAX_VALUE) {
				n = 1;
				cnt = 32;
				System.out.println(n + " ");
			} 
			else if (n == 3) {
				n = 1;
				cnt += 2;
			} 
			else if (n == 2) {
				n = 1;
				cnt++;
			} 
			else if (n % 2 == 0 && isPower(n)) {
				cnt += (int) (Math.ceil(Math.log(n) / Math.log(2)));
				n = 1;
				System.out.println(n + " ");
			} 
			else if (n % 2 == 0) {
				n /= 2;
				cnt++;
			} 
			else {
				if (isPower(n + 1)) {
					n = n + 1;
					cnt++;
					System.out.println(n + " ");
				} 
				else if (isPower(n - 1)) {
					n = n - 1;
					cnt++;
					System.out.println(n + " ");
				} 
				else if (((n + 1) / 2) % 2 == 0) {
					n = (n + 1) / 2;
					cnt += 2;
				} 
				else {
					n = (n - 1) / 2;
					cnt += 2;
					System.out.println(n + " ");
				}
			}
		}
		return cnt;
	}
	boolean isPower(int n) {
		return (int) (Math.ceil(Math.log(n) / Math.log(2))) == (int) (Math.floor(Math.log(n) / Math.log(2)));
	}
}