class Solution {
	long calculateNumberOfPossibleSubarray(int subarrayLength) {
		return (subarrayLength * (subarrayLength + 1L)) / 2L;
	}
	long zeroFilledSubarray(int[] nums) {
		long result = 0L;
		int currectSubarrayLength = 0;
		for (int num: nums) {	
			if (num == 0) {
				currectSubarrayLength++;
			} 
			else if (currectSubarrayLength > 0) {
				result += calculateNumberOfPossibleSubarray(currectSubarrayLength);
				currectSubarrayLength = 0;
			}
		}
		if (currectSubarrayLength > 0) {
			result += calculateNumberOfPossibleSubarray(currectSubarrayLength);
		}
		return result;
	}
}