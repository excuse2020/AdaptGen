class Solution {
	boolean checkSubStringPalindrom(String s) {
		for (int i = 0, j = s.length() - 1; i <= j; i++, j--) {
			if (s.charAt(i) != s.charAt(j)) {
				return false;
			}
		}
		return true;
	}
	boolean validPalindrome(String s) {
		for (int i = 0, j = s.length() - 1; i <= j; ) {
			if (s.charAt(i) != s.charAt(j)) {
				boolean ok1 = false, ok2 = false;
				if (i + 1 >= j || i >= j - 1) {
					return true;
				}
				if (i + 1 < j && s.charAt(i + 1) == s.charAt(j)) {
					ok1 = checkSubStringPalindrom(s.substring(i + 2,j));
				}
				if (!ok1 && i < j - 1 && s.charAt(i) == s.charAt(j - 1)) {
					ok2 = checkSubStringPalindrom(s.substring(i + 1,j - 1));
				}
				return ok1 || ok2;
			} 
			else {
				i++;
				j--;
			}
		}
		return true;
	}
}