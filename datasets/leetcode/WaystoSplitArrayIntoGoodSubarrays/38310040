class Solution {
	int numberOfGoodSubarraySplits(int[] nums) {
		int ans = 1;
		int start = 0;
		int end = nums.length - 1;
		int count = 0;
		int mod = 1000000007;
		while (start < nums.length && nums[start] != 1) {
			start++;
		}
		while (end >= 0 && nums[end] != 1) {
			end--;
		}
		if (end < start) {
			return 0;
		}
		for (int i = start; i <= end; i++) {
			if (nums[i] == 1) {
				ans = (int) ((1L * (count + 1)) % mod);
				count = 0;
			} 
			else {
				count += 1;
			}
		}
		return ans;
	}
}