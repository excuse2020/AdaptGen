class Solution {
	int maxMoves(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		int[][] dp = new int[n][m];
		int max = 0;
		for (int j = m - 2; j >= 0; j--) {
			for (int i = 0; i < n; i++) {
				if (i > 0 && grid[i][j] < grid[i - 1][j + 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i - 1][j + 1] + 1);
				}
				if (grid[i][j] < grid[i][j + 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i][j + 1] + 1);
				}
				if (i + 1 < n && grid[i][j] < grid[i + 1][j + 1]) {
					dp[i][j] = Math.max(dp[i][j],dp[i + 1][j + 1] + 1);
				}
				if (j == 0) {
					max = Math.max(max,dp[i][j]);
				}
			}
		}
		return max;
	}
}