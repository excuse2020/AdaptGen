class Solution {
	int getLastMoment(int n, int[] left, int[] right) {
		int largeL = Integer.MIN_VALUE;
		for (int i = 0; i < left.length; i++) {
			largeL = Math.max(largeL,left[i]);
		}
		int largeR = Integer.MAX_VALUE;
		for (int i = 0; i < right.length; i++) {
			largeR = Math.min(largeR,right[i]);
		}
		int countLeft = 0;
		int countRight = 0;
		if (largeL != Integer.MIN_VALUE) {
			while (largeL >= 0) {
				largeL--;
				countLeft++;
			}
		}
		if (largeR != Integer.MAX_VALUE) {
			while (largeR <= n) {
				largeR++;
				countRight++;
			}
		}
		return Math.max(countLeft,countRight) - 1;
	}
}