class Solution {
	int dfs(TreeNode root, List<Integer> lst) {
		if (root == null) {
			return 0;
		}
		lst.add(root.val);
		int sum = 0;
		sum = dfs(root.left,lst) + dfs(root.right,lst);
		if (root.left == null && root.right == null) {
			sum += toDecimal(lst);
		}
		lst.remove(lst.size() - 1);
		return sum;
	}
	int sumRootToLeaf(TreeNode root) {
		return dfs(root,new ArrayList<Integer>());
	}
	int toDecimal(List<Integer> nums) {
		int res = 0;
		int power = 0;
		for (int j = (nums.size() - 1); j >= 0; j--) {
			int multiplier = (int) Math.pow(2,power);
			res += nums.get(j) * multiplier;
			power += 1;
		}
		return res;
	}
}