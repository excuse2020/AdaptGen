class Solution {
	int extraIn = 0;
	int extraOut = 0;
	void checkMinRemoval(String s) {
		Stack<Character> st = new Stack<>();
	}
	void dfs(String s, int index, int extraOut, int extraIn, StringBuilder str, HashSet<String> ans, Stack<Character> st) {
		if (index >= s.length()) {
			if (extraOut == 0 && extraIn == 0 && st.size() == 0) {
				ans.add(new StringBuilder(str).toString());
			}
			return;
		}
		char ch = s.charAt(index);
	}
	List<String> removeInvalidParentheses(String s) {
		checkMinRemoval(s);
		HashSet<String> set = new HashSet<>();
		Stack<Character> st = new Stack<>();
		dfs(s,0,extraOut,extraIn,new StringBuilder(),set,st);
		return new ArrayList<>(set);
	}
}