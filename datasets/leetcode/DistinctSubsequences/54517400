class Solution {
	int Matching(String s1, String s2, int n, int m, int[][] dp) {
		if (n == 0 && m == 0) {
			if (s1.charAt(n) == s2.charAt(m)) {
				return 1;
			}
		}
		if (n < 0) {
			return 0;
		}
		if (m < 0) {
			return 1;
		}
		if (dp[n][m] != -1) {
			return dp[n][m];
		}
		dp[n][m] = Matching(s1,s2,n - 1,m - 1,dp) + Matching(s1,s2,n - 1,m,dp);
		dp[n][m] = Matching(s1,s2,n - 1,m,dp);
		return dp[n][m];
	}
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		int[][] dp = new int[n][m];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return Matching(s,t,n - 1,m - 1,dp);
	}
}