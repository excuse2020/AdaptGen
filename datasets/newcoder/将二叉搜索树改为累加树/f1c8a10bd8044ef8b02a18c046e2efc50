class Solution {
	TreeNode convertBST(TreeNode root) {
		if (null == root || (null == root.left && null == root.right)) {
			return root;
		}
		Stack<TreeNode> stack = new Stack<>();
		ArrayList<Integer> arr = new ArrayList<>();
		TreeNode node = root;
		while (null != node) {
			stack.push(node);
			node = node.left;
		}
		while (!stack.isEmpty()) {
			node = stack.pop();
			arr.add(node.val);
			if (null != node.right) {
				node = node.right;
				while (null != node) {
					stack.push(node);
					node = node.left;
				}
			}
		}
		for (int i = arr.size() - 2; i > -1; i--) {
			arr.set(i,arr.get(i) + arr.get(i + 1));
		}
		int index = 0;
		node = root;
		while (null != node) {
			stack.push(node);
			node = node.left;
		}
		while (!stack.isEmpty()) {
			node = stack.pop();
			node.val = arr.get(index);
			index++;
			arr.add(node.val);
			if (null != node.right) {
				node = node.right;
				while (null != node) {
					stack.push(node);
					node = node.left;
				}
			}
		}
		return root;
	}
}