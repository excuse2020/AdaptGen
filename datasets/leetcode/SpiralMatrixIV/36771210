class Solution {
	int[][] spiralMatrix(int m, int n, ListNode node) {
		int matrix = new int[m][n];
		int rowStart = 0, colStart = 0, rowEnd = m - 1, colEnd = n - 1;
		for (int i = 0; i < m; i++) {
			Arrays.fill(matrix[i],-1);
		}
		while (node != null && rowStart <= rowEnd && colStart <= colEnd) {
			for (int j = colStart; node != null && j <= colEnd; j++) {
				matrix[rowStart][j] = node.val;
				node = node.next;
			}
			rowStart++;
			for (int i = rowStart; node != null && i <= rowEnd; i++) {
				matrix[i][colEnd] = node.val;
				node = node.next;
			}
			colEnd--;
			if (rowStart <= rowEnd) {
				for (int j = colEnd; node != null && j >= colStart; j--) {
					matrix[rowEnd][j] = node.val;
					node = node.next;
				}
			}
			rowEnd--;
			if (colStart <= colEnd) {
				for (int i = rowEnd; node != null && i >= rowStart; i--) {
					matrix[i][colStart] = node.val;
					node = node.next;
				}
			}
			colStart++;
		}
		return matrix;
	}
}