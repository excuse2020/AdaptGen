class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode mNode = head;
		ListNode preMNode = null;
		for (int i = 1; i < m; i++) {
			if ((i + 1) >= m) {
				preMNode = mNode;
			}
			mNode = mNode.next;
		}
		ListNode tailNode = mNode;
		ListNode preNode = null;
		for (int i = 0; i <= n - m; i++) {
			ListNode next = mNode.next;
			mNode.next = preNode;
			preNode = mNode;
			if (i == (n - m)) {
				if (preMNode != null) {
					preMNode.next = mNode;
				}
				tailNode.next = next;
			} 
			else {
				mNode = next;
			}
		}
		if (m == 1) {
			return preNode;
		} 
		else {
			return head;
		}
	}
}