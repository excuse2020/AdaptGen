class Solution {
	int longestCycle(int[] edges) {
		int n = edges.length;
		boolean[] visit = new boolean[n];
		int ans = -1;
		for (int i = 0; i < n; i++) {
			if (visit[i]) {
				continue;
			}
			int j = i;
			List<Integer> cycle = new ArrayList<>();
			for (; j != -1 && !visit[j]; j = edges[j]) {
				visit[j] = true;
				cycle.add(j);
			}
			if (j == -1) {
				continue;
			}
			for (int x = 0; x < cycle.size(); x++) {
				if (cycle.get(x) == j) {
					ans = Math.max(ans,cycle.size() - x);
					break;
				}
			}
		}
		return ans;
	}
}