class Solution {
	long cal(int m) {
		return (long) (m + 1) * m / 2;
	}
	long countSubarrays(int[] nums, long k) {
		int n = nums.length;
		long[] prefixSum = new long[n];
		for (int i = 0; i < n; i++) {
			prefixSum[i] = (i > 0 ? prefixSum[i - 1] : 0) + nums[i];
		}
		long res = cal(n);
		int l = 0, r = 0;
		while (l < n) {
			long score = (prefixSum[r] - prefixSum[l] + nums[l]) * (r - l + 1);
			if (score >= k) {
				res -= (n - r);
				l++;
				if (l > r) {
					r++;
				}
			} 
			else {
				if (r < n - 1) {
					r++;
				} 
				else {
					l++;
				}
			}
		}
		return res;
	}
}