class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		head1 = reserver(head1);
		head2 = reserver(head2);
		ListNode head = new ListNode(-1);
		ListNode p = head;
		int temp = 0;
		while (head1 != null || head2 != null) {
			if (head1 == null) {
				temp = head2.val + temp / 10;
			} 
			else if (head2 == null) {
				temp = head1.val + temp / 10;
			} 
			else {
				temp = head1.val + head2.val;
			}
			ListNode cur = new ListNode(temp % 10);
			p.next = cur;
			p = cur;
			if (head1 != null) {
				head1 = head1.next;
			}
			if (head2 != null) {
				head2 = head2.next;
			}
		}
		if (temp / 10 != 0) {
			ListNode cur = new ListNode(temp / 10);
			p.next = cur;
			p = cur;
		}
		p.next = null;
		return reserver(head.next);
	}
	ListNode reserver(ListNode head) {
		ListNode p = head;
		while (p.next != null) {
			ListNode cur = p.next;
			p.next = cur.next;
			cur.next = head;
			head = cur;
		}
		return head;
	}
}