class Solution {
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int i = 0; i < queries.length; i++) {
			if (map.containsKey(queries[i][1])) {
				map.get(queries[i][1]).add(i);
			} 
			else {
				map.put(queries[i][1],new ArrayList<>(Arrays.asList(i)));
			}
		}
		boolean[] ans = new boolean[queries.length];
		Map<Integer, Integer> mp = new HashMap<>();
		mp.put(0,0);
		int count = 0;
		for (int i = 1; i < nums.length; i++) {
			if ((nums[i] % 2 == 0 && nums[i - 1] % 2 == 1) || (nums[i] % 2 == 1 && nums[i - 1] % 2 == 0)) {
				count++;
			}
			if (map.containsKey(i)) {
				List<Integer> list = map.get(i);
				for (int ind: list) {	
					if (queries[ind][0] == queries[ind][1] || count - mp.get(queries[ind][0]) == queries[ind][1] - queries[ind][0]) {
						ans[ind] = true;
					} 
					else {
						ans[ind] = false;
					}
				}
			}
			mp.put(i,count);
		}
		if (map.containsKey(0)) {
			List<Integer> list = map.get(0);
			for (int ind: list) {	
				ans[ind] = true;
			}
		}
		return ans;
	}
}