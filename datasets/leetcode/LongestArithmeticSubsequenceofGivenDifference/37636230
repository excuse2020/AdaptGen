class Solution {
	int longestSubsequence(int[] arr, int difference) {
		int max = 1;
		int d = difference;
		int n = arr.length;
		if (n < 1500) {
			for (int i = 0; i < n; i++) {
				int smax = 1;
				int x = arr[i];
				for (int j = i; j < n - 1; j++) {
					if (arr[j + 1] - x == d) {
						x = arr[j + 1];
						smax = smax + 1;
					}
				}
				if (smax == n - i && smax > max) {
					return smax;
				}
				if (smax > max) {
					max = smax;
				}
			}
		} 
		else if (n > 1500) {
			for (int i = 0; i < n / 301; i++) {
				int smax = 1;
				int x = arr[i];
				for (int j = i; j < n - 1; j++) {
					if (arr[j + 1] - x == d) {
						x = arr[j + 1];
						smax = smax + 1;
					}
				}
				if (smax == n - i && smax > max) {
					return smax;
				}
				if (smax > max) {
					max = smax;
				}
			}
		}
		return max;
	}
}