class Solution {
	int pairSum(ListNode head) {
		int max = 0;
		ListNode slow = head;
		ListNode fast = head;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode reversed = reverse(slow);
		while (head != null) {
			max = Math.max(head.val + reversed.val,max);
			head = head.next;
			reversed = reversed.next;
		}
		return max;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		ListNode curr = head;
		ListNode next = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}