class Solution {
	long makeSimilar(int[] nums, int[] target) {
		Arrays.sort(nums);
		Arrays.sort(target);
		List<Integer> oddList = new ArrayList<Integer>();
		List<Integer> evenList = new ArrayList<Integer>();
		List<Integer> oddTargetList = new ArrayList<Integer>();
		List<Integer> evenTargetList = new ArrayList<Integer>();
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0) {
				evenList.add(nums[i]);
			} 
			else {
				oddList.add(nums[i]);
			}
		}
		for (int i = 0; i < target.length; i++) {
			if (target[i] % 2 == 0) {
				evenTargetList.add(target[i]);
			} 
			else {
				oddTargetList.add(target[i]);
			}
		}
		long sum = 0;
		for (int i = 0; i < oddList.size(); i++) {
			sum += Math.abs(oddList.get(i) - oddTargetList.get(i));
		}
		for (int i = 0; i < evenList.size(); i++) {
			sum += Math.abs(evenList.get(i) - evenTargetList.get(i));
		}
		return sum / 4;
	}
}