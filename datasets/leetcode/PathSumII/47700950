class Solution {
	void dfs(TreeNode root, int targetSum, List<Integer> list, List<List<Integer>> result) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		if (root.left == null && root.right == null && targetSum == root.val) {
			result.add(new ArrayList<>(list));
		}
		dfs(root.left,targetSum - root.val,list,result);
		dfs(root.right,targetSum - root.val,list,result);
		list.removeLast();
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> result = new ArrayList<>();
		dfs(root,targetSum,new ArrayList<>(),result);
		return result;
	}
}