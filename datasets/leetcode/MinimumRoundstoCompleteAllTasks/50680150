class Solution {
	int minimumRounds(int[] tasks) {
		int n = tasks.length;
		Arrays.sort(tasks);
		int round = 0;
		int start = 0;
		int end = 0;
		while (end < n) {
			int current = tasks[end];
			int count = 1;
			while (end + 1 < n && current == tasks[end + 1]) {
				count++;
				end++;
			}
			if (count == 1) {
				return -1;
			}
			if (count % 3 == 0) {
				round += count / 3;
			} 
			else if (count % 3 == 2) {
				round += (count / 3) + 1;
			} 
			else {
				round += (count / 3) + 1;
				if (start > 0 && tasks[start - 1] == current - 1) {
					start--;
				}
			}
			end++;
			start = end;
		}
		return round;
	}
}