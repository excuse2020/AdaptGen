class Solution {
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (isCoprime(getFirstDigit(nums[i]),getLastDigit(nums[j]))) {
					count++;
				}
			}
		}
		return count;
	}
	int gcd(int x, int y) {
		while (y != 0) {
			int temp = y;
			y = x % y;
			x = temp;
		}
		return x;
	}
	int getFirstDigit(int num) {
		while (num >= 10) {
			num /= 10;
		}
		return num;
	}
	int getLastDigit(int num) {
		return num % 10;
	}
	boolean isCoprime(int x, int y) {
		return gcd(x,y) == 1;
	}
}