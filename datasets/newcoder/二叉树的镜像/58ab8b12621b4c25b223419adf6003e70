class Solution {
	TreeNode Mirror(TreeNode pRoot) {
		if (pRoot == null) {
			return null;
		}
		Queue<TreeNode> we = new LinkedList<TreeNode>();
		Queue<TreeNode> you = new LinkedList<TreeNode>();
		TreeNode newroot = new TreeNode(pRoot.val);
		TreeNode ow;
		TreeNode oy;
		we.offer(pRoot);
		you.offer(newroot);
		while (true) {
			ow = we.poll();
			oy = you.poll();
			if (ow.left != null) {
				we.offer(ow.left);
				oy.right = new TreeNode(ow.left.val);
				you.offer(oy.right);
			}
			if (ow.right != null) {
				we.offer(ow.right);
				oy.left = new TreeNode(ow.right.val);
				you.offer(oy.left);
			}
			if (we.isEmpty()) {
				break;
			}
		}
		return newroot;
	}
}