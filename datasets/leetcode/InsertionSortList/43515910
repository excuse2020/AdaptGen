class Solution {
	ListNode insertionSortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode secondhead = new ListNode(head.val);
		ListNode current = head.next;
		while (current != null) {
			ListNode node = new ListNode(current.val);
			if (node.val <= secondhead.val) {
				node.next = secondhead;
				secondhead = node;
			} 
			else {
				ListNode currentsecond = secondhead;
				ListNode previous = null;
				while (node.val > currentsecond.val) {
					previous = currentsecond;
					currentsecond = currentsecond.next;
					if (currentsecond == null) {
						break;
					}
				}
				node.next = currentsecond;
				previous.next = node;
			}
			current = current.next;
		}
		return secondhead;
	}
}