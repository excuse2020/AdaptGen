class Solution {
	void findPaths(TreeNode root, int targetSum, List<Integer> current, List<List<Integer>> paths) {
		if (root == null) {
			return;
		}
		current.add(root.val);
		if (root.val == targetSum && root.right == null && root.left == null) {
			paths.add(current);
		}
		findPaths(root.left,targetSum - root.val,new ArrayList<Integer>(current),paths);
		findPaths(root.right,targetSum - root.val,new ArrayList<Integer>(current),paths);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> paths = new ArrayList<>();
		findPaths(root,targetSum,new ArrayList<Integer>(),paths);
		return paths;
	}
}