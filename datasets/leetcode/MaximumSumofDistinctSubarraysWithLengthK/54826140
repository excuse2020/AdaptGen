class Solution {
	long maximumSubarraySum(int[] arr, int k) {
		int start = 0, end = 0;
		long sum = 0, max = 0;
		HashSet<Integer> set = new HashSet<>();
		while (end < arr.length) {
			if (!set.contains(arr[end])) {
				sum += arr[end];
				set.add(arr[end]);
				if (end - start + 1 == k) {
					max = Math.max(max,sum);
					sum -= arr[start];
					set.remove(arr[start]);
					start++;
				}
				end++;
			} 
			else {
				sum -= arr[start];
				set.remove(arr[start]);
				start++;
			}
		}
		return max;
	}
}