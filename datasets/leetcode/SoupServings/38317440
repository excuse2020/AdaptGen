class Solution {
	double dp;
	double soupServings(int n) {
		int temp = n;
		n = (n + 24) / 25;
		System.out.println(n);
		if (temp > 4800) {
			return 1.0;
		}
		dp = new double[n + 1][n + 1];
		return soupServings(n,n);
	}
	double soupServings(int A, int B) {
		if (A <= 0 && B <= 0) {
			return 0.5;
		}
		if (A <= 0) {
			return 1;
		}
		if (B <= 0) {
			return 0;
		}
		if (dp[A][B] != 0) {
			return dp[A][B];
		}
		double ans = 0;
		ans += soupServings(A - 4,B);
		ans += soupServings(A - 3,B - 1);
		ans += soupServings(A - 2,B - 2);
		ans += soupServings(A - 1,B - 3);
		return dp[A][B] = (0.25) * ans;
	}
}