class Solution {
	int cal(int[][] grid, int i, int j) {
		int ans = 0;
		for (int col = j; col <= j + 2; col++) {
			ans += grid[i][col];
			ans += grid[i + 2][col];
		}
		ans += grid[i + 1][j + 1];
		return ans;
	}
	boolean checkGrid(int[][] grid, int i, int j) {
		if (i + 2 > grid.length - 1 || j + 2 > grid[0].length - 1) {
			return false;
		}
		return true;
	}
	int maxSum(int[][] grid) {
		int maxi = Integer.MIN_VALUE;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (checkGrid(grid,i,j)) {
					maxi = Math.max(maxi,cal(grid,i,j));
				}
			}
		}
		return maxi;
	}
}