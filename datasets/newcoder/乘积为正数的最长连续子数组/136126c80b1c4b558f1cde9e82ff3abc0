class Solution {
	int findLongestSubArray(ArrayList<Integer> nums) {
		if (1 == nums.size()) {
			return nums.get(0) > 0 ? 1 : 0;
		}
		int res = 0;
		int[] dp = new int[nums.size()];
		dp[0] = nums.get(0) > 0 ? 1 : 0;
		for (int i = 1; i < nums.size(); i++) {
			if (nums.get(i) > 0) {
				dp[i] = dp[i - 1] + 1;
			} 
			else if (nums.get(i) < 0) {
				if ((i - 1) >= 0 && nums.get(i - 1) < 0) {
					dp[i] = dp[i - 1] + 2;
					if ((i - 2) >= 0) {
						dp[i] = dp[i] + dp[i - 2 - dp[i - 1]];
					}
				}
			}
			res = Math.max(res,dp[i]);
		}
		return res;
	}
}