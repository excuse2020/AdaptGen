class Solution {
	int[][] dp;
	int atMostNGivenDigitSet(String[] digits, int n) {
		int l = ("" + n).length();
		dp = new int[4][l];
		for (int i = 0; i < 4; i++) {
			Arrays.fill(dp[i],-1);
		}
		return f(0,0,1,("" + n).toCharArray(),digits);
	}
	int f(int i, int isStarted, int isBound, char[] str, String[] digits) {
		if (i == str.length) {
			return isStarted;
		}
		int mask = (isStarted << 1) + isBound;
		if (dp[mask][i] != -1) {
			return dp[mask][i];
		}
		int ans = 0;
		if (isStarted == 0) {
			ans += f(i + 1,0,0,str,digits);
		}
		int upto;
	}
}