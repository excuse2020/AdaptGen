class Solution {
	String[] better(String s1, String s2) {
		String s3 = s1 + " ";
		Map<String, Integer> mp = new HashMap<>();
		List<String> ans = new ArrayList<>();
		for (String word: s3.split(" ")) {	
			mp.put(word,mp.getOrDefault(word,0) + 1);
		}
		for (Map.Entry<String, Integer> entry: mp.entrySet()) {	
			if (entry.getValue() == 1) {
				ans.add(entry.getKey());
			}
		}
		return ans.toArray();
	}
	String[] nasty(String s1, String s2) {
		String _SPACE_ = " ";
		int l1 = s1.length();
		int l2 = s2.length();
		String s3 = _SPACE_ + s1;
		List<String> ans = new ArrayList<>();
		for (String word: s1.split(_SPACE_)) {	
			String spacedWord = _SPACE_ + word;
			int i = s3.indexOf(spacedWord);
			int li = s3.lastIndexOf(spacedWord);
			if (i == li) {
				ans.add(word);
			}
		}
		s3 = _SPACE_ + s2;
		for (String word: s2.split(_SPACE_)) {	
			String spacedWord = _SPACE_ + word;
			int i = s3.indexOf(spacedWord);
			int li = s3.lastIndexOf(spacedWord);
			if (i == li) {
				ans.add(word);
			}
		}
		return ans.toArray();
	}
	String[] uncommonFromSentences(String s1, String s2) {
		return better(s1,s2);
	}
}