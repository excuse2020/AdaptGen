class Solution {
	boolean canEatInTime(int piles, int k, int h) {
		int hours = 0;
		for (int pile: piles) {	
			hours += Math.ceil(pile / (double) k);
			if (hours > h) {
				return false;
			}
		}
		return hours <= h;
	}
	int minEatingSpeed(int[] piles, int h) {
		int left = 1, right = 1000000000;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			if (canEatInTime(piles,mid,h)) {
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}