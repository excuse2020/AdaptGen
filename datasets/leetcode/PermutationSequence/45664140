class Solution {
	int getFactorial(int n) {
		int res = 1;
		while (n > 1) {
			res *= n;
			n--;
		}
		return res;
	}
	String getPermutation(int n, int k) {
		List<Integer> list = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			list.add(i);
		}
		return helper(new StringBuilder(),list,k);
	}
	String helper(StringBuilder sb, List<Integer> list, int k) {
		if (k == 1) {
			for (int num: list) {	
				sb.append(num);
			}
			return sb.toString();
		}
		int n = list.size();
		int cnt = getFactorial(n - 1);
		int group = (k - 1) / cnt;
		sb.append(list.get(group));
		list.remove(group);
		return helper(sb,list,k - group * cnt);
	}
}