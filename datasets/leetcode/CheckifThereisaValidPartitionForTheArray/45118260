class Solution {
	boolean validPartition(int[] nums) {
		int n = nums.length;
		boolean dp = new boolean[n];
		dp[0] = false;
		dp[1] = nums[0] == nums[1];
		if (n >= 3) {
			dp[2] = (nums[0] == nums[1] && nums[1] == nums[2]) || (nums[0] + 1 == nums[1] && nums[1] + 1 == nums[2]);
		}
		for (int i = 3; i < n; i++) {
			dp[i] = dp[i] || (nums[i] == nums[i - 1] && dp[i - 2]);
			dp[i] = dp[i] || (nums[i] == nums[i - 1] && nums[i - 1] == nums[i - 2] && dp[i - 3]);
			dp[i] = dp[i] || (nums[i] - 1 == nums[i - 1] && nums[i - 1] - 1 == nums[i - 2] && dp[i - 3]);
		}
		return dp[n - 1];
	}
}