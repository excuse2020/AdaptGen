class Solution {
	int ret = 0;
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		solve(root);
		return ret;
	}
	int solve(TreeNode root) {
		if (root == null) {
			return 0;
		}
		if (root.left == null && root.right == null) {
			return 0;
		}
		int leftBranch = solve(root.left);
		int rightBranch = solve(root.right);
		if (root.left != null && root.left.val == root.val) {
			leftBranch++;
		} 
		else {
			leftBranch = 0;
		}
		if (root.right != null && root.right.val == root.val) {
			rightBranch++;
		} 
		else {
			rightBranch = 0;
		}
		ret = Math.max(ret,rightBranch + leftBranch);
		return Math.max(rightBranch,leftBranch);
	}
}