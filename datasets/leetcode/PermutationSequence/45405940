class Solution {
	int factorial(int n) {
		if (n == 0) {
			return 1;
		}
		return n * factorial(n - 1);
	}
	String getPermutation(int n, int k) {
		ArrayList<Character> arr = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			arr.add(Integer.toString(i).charAt(0));
		}
		char[] perm = new char[n];
		int size = factorial(n);
		int bkt_size;
		int pos = -1;
		for (int i = 0; i < n; i++) {
			bkt_size = size / (n - i);
			pos = Math.ceilDiv(k,bkt_size);
			perm[i] = arr.remove((pos == 0) ? (arr.size() - 1) : pos - 1);
			k = k % bkt_size;
			size = bkt_size;
		}
		return new String(perm);
	}
}