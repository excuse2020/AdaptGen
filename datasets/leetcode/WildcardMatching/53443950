class Solution {
	int helper(int i, int j, String s, String t, int[][] dp) {
		if (i < 0 && j < 0) {
			return 1;
		}
		if (i < 0 && j >= 0) {
			return 0;
		}
		if (i >= 0 && j < 0) {
			return isStar(s,i) ? 1 : 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
	}
	boolean isMatch(String s, String p) {
		int n = p.length();
		int m = s.length();
		int[][] dp = new int[n][m];
		if (m <= 0) {
			return isStar(p,n - 1);
		}
		if (n <= 0) {
			return false;
		}
		for (int[] rows: dp) {	
			Arrays.fill(rows,-1);
		}
		helper(n - 1,m - 1,p,s,dp);
		return dp[n - 1][m - 1] == 1 ? true : false;
	}
	boolean isStar(String S1, int i) {
		int j = 0;
	}
}