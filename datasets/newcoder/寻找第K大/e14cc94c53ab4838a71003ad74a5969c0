class Solution {
	int findKth(int[] a, int n, int K) {
		quickSort(a,0,n - 1);
		return a[K - 1];
	}
	int partition(int[] A, int L, int R) {
		int pivot = A[R];
		int i = L - 1;
		for (int j = L; j < R; j++) {
			if (A[j] >= pivot) {
				swap(A,++i,j);
			}
		}
		swap(A,i + 1,R);
		return i + 1;
	}
	void quickSort(int[] A, int L, int R) {
		if (L < R) {
			int p = partition(A,L,R);
			quickSort(A,L,p - 1);
			quickSort(A,p + 1,R);
		}
	}
	void swap(int[] A, int i, int j) {
		int tmp = A[i];
		A[i] = A[j];
		A[j] = tmp;
	}
}