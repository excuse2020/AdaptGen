class Solution {
	String shortestPalindrome(String s) {
		String pal_str = s;
		String left_add_str = "";
		String right_add_str = "";
		String right_str = "";
		String left_str = "";
		for (int index = s.length() - 1; index >= 0; index--) {
			right_str = pal_str.substring((pal_str.length() + 1) / 2);
			left_str = new StringBuilder(pal_str.substring(0,pal_str.length() / 2)).reverse().toString();
			if (right_str.equals(left_str)) {
				return left_add_str + pal_str;
			}
			left_add_str += pal_str.charAt(pal_str.length() - 1);
			right_add_str = pal_str.charAt(pal_str.length() - 1) + right_add_str;
			pal_str = pal_str.substring(0,pal_str.length() - 1);
		}
		return "";
	}
}