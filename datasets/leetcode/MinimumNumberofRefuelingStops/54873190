class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		int n = stations.length;
		if (target <= startFuel) {
			return 0;
		}
		PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> {b[1] - a[1]});
		int distance = startFuel;
		int reffil = 0;
		int i = 0;
		while (distance < target) {
			while (i < n && distance >= stations[i][0]) {
				pq.add(stations[i++]);
			}
			if (pq.isEmpty()) {
				return -1;
			}
			distance += pq.poll()[1];
			reffil++;
		}
		return reffil;
	}
}