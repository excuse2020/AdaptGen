class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int arr = new int[m][n];
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[0].length; j++) {
				arr[i][j] = -1;
			}
		}
		int i = 0;
		int j = 0;
		int iMax = 0;
		int jMax = 0;
		int left = 0;
		int right = 1;
		int up = 0;
		int down = 0;
		while (head != null) {
			arr[j][i] = head.val;
			head = head.next;
			if (right == 1) {
				if (i == n - iMax) {
					right = 0;
					down = 1;
					j++;
				} 
				else {
					i++;
				}
			} 
			else if (down == 1) {
				if (j == m - jMax) {
					down = 0;
					left = 1;
					i--;
				} 
				else {
					j++;
				}
			} 
			else if (left == 1) {
				if (i == iMax) {
					left = 0;
					up = 1;
					jMax++;
					j--;
				} 
				else {
					i--;
				}
			} 
			else if (up == 1) {
				if (j == jMax) {
					up = 0;
					right = 1;
					iMax++;
					i++;
				} 
				else {
					j--;
				}
			}
		}
		return arr;
	}
}