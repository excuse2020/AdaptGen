class Solution {
	int pairSum(ListNode head) {
		if (head == null) {
			return 0;
		}
		ListNode slow = head;
		ListNode fast = head;
		while (fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode newHead = reverse(slow.next);
		ListNode temp = newHead;
		slow = head;
		int maxSum = 0;
		while (temp != null) {
			maxSum = Math.max(maxSum,slow.val + temp.val);
			temp = temp.next;
			slow = slow.next;
		}
		return maxSum;
	}
	ListNode reverse(ListNode head) {
		ListNode temp = head;
		ListNode prev = null;
		while (temp != null) {
			ListNode nextNode = temp.next;
			temp.next = prev;
			prev = temp;
			temp = nextNode;
		}
		return prev;
	}
}