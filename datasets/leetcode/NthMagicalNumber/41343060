class Solution {
	int GCD(int a, int b) {
		if (b == 0) {
			return a;
		}
		return GCD(b,a % b);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long mod = (long) 1e9 + 7;
		long low = Math.min(a,b);
		long high = low * n;
		long lcm = (a * b) / GCD(a,b);
		while (low < high) {
			long mid = low + (high - low) / 2;
			long count = (mid / a) + (mid / b) - (mid / lcm);
			if (count < n) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return (int) (low % mod);
	}
}