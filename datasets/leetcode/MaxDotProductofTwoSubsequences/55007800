class Solution {
	int maxDotProduct(int[] a, int[] b) {
		int n = a.length;
		int m = b.length;
		int[][] dp = new int[n + 1][m + 1];
		int maxAfterSkipInAnyOneArray, maxAfterIncludeCurr;
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= m; j++) {
				if (i == 0 || j == 0) {
					dp[i][j] = -1000001;
				} 
				else {
					maxAfterSkipInAnyOneArray = Math.max(dp[i][j - 1],dp[i - 1][j]);
					maxAfterIncludeCurr = a[i - 1] * b[j - 1];
					maxAfterIncludeCurr = Math.max(maxAfterIncludeCurr,maxAfterIncludeCurr + dp[i - 1][j - 1]);
					dp[i][j] = Math.max(maxAfterSkipInAnyOneArray,maxAfterIncludeCurr);
				}
			}
		}
		return dp[n][m];
	}
}