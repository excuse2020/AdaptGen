class Solution {
	boolean isMatch(Character perfix, char c) {
		if (perfix == '(') {
			return c == ')';
		} 
		else if (perfix == '{') {
			return c == '}';
		} 
		else if (perfix == '[') {
			return c == ']';
		} 
		else {
			return false;
		}
	}
	boolean isValid(String s) {
		Stack<Character> st = new Stack<>();
		char[] chs = s.toCharArray();
		for (char c: chs) {	
			if (!st.isEmpty() && isMatch(st.peek(),c)) {
				st.pop();
				continue;
			}
			st.push(c);
		}
		return st.isEmpty();
	}
}