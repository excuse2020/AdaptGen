class Solution {
	int[] finalPrices(int[] arr) {
		int n = arr.length;
		int nse = nse(arr);
		int ans = new int[n];
		for (int i = 0; i < n; i++) {
			if (nse[i] != -1) {
				ans[i] = arr[i] - nse[i];
			} 
			else {
				ans[i] = arr[i];
			}
		}
		return ans;
	}
	int[] nse(int arr) {
		int n = arr.length;
		int nse = new int[n];
		nse[n - 1] = -1;
		Stack<Integer> st = new Stack<>();
		st.add(arr[n - 1]);
		for (int i = n - 2; i >= 0; i--) {
			while (st.size() != 0 && st.peek() > arr[i]) {
				st.pop();
			}
			if (st.size() == 0) {
				nse[i] = -1;
			} 
			else {
				nse[i] = st.peek();
			}
			st.push(arr[i]);
		}
		return nse;
	}
}