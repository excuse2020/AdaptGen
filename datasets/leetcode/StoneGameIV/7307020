class Solution {
	int helper(int stones, Set<Integer> set, int player, Integer[][] dp) {
		if (set.contains(stones)) {
			return player;
		}
		if (dp[stones][player] != null) {
			return dp[stones][player];
		}
		boolean canWin = false;
		for (int num: set) {	
			if (stones > num && helper(stones - num,set,player ^ 1,dp) == player) {
				canWin = true;
				break;
			}
		}
		return dp[stones][player] = canWin ? player : player ^ 1;
	}
	boolean winnerSquareGame(int n) {
		Set<Integer> set = new HashSet<>();
		for (int i = 1; i * i <= n; i++) {
			set.add(i * i);
		}
		Integer[][] dp = new Integer[n + 1][2];
		return helper(n,set,0,dp) == 0;
	}
}