class Solution {
	void comb(int index, int[] arr, List<List<Integer>> result, List<Integer> ans, int target) {
		if (target == 0) {
			result.add(new ArrayList<>(ans));
			return;
		}
		for (int i = index; i < arr.length; i++) {
			if (i > index && arr[i] == arr[i - 1]) {
				continue;
			}
			if (arr[i] > target) {
				break;
			}
			ans.add(arr[i]);
			comb(i + 1,arr,result,ans,target - arr[i]);
			ans.remove(ans.size() - 1);
		}
	}
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> result = new ArrayList<>();
		List<Integer> ans = new ArrayList<>();
		Arrays.sort(candidates);
		comb(0,candidates,result,ans,target);
		return result;
	}
}