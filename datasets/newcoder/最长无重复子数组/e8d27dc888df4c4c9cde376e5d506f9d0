class Solution {
	int maxLength(int[] arr) {
		if (arr == null) {
			return 0;
		}
		if (arr.length <= 1) {
			return arr.length;
		}
		int l1 = 1;
		int ltemp = 1;
		int head = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		int i = 0;
		int temp = arr[i];
		map.put(temp,i);
		for (i = 1; i < arr.length; i++) {
			temp = arr[i];
			if (map.get(temp) == null) {
				map.put(temp,i);
				l1 = l1 + 1;
			} 
			else {
				ltemp = Math.max(l1,ltemp);
				int ohead = head;
				head = Math.max(head,map.get(temp) + 1);
				for (int j = ohead; j < head; j++) {
					int tj = arr[j];
					map.remove(tj);
				}
				l1 = i - head + 1;
				map.put(temp,i);
			}
		}
		return Math.max(l1,ltemp);
	}
}