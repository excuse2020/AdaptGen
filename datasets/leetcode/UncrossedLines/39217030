class Solution {
	int helper(int dp, int n1, int n2, int i, int j) {
		if (i >= n1.length || j >= n2.length) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int pick = 0;
		if (n1[i] == n2[j]) {
			pick = 1 + helper(dp,n1,n2,i + 1,j + 1);
		}
		int notpick = Math.max(helper(dp,n1,n2,i + 1,j),helper(dp,n1,n2,i,j + 1));
		return dp[i][j] = Math.max(pick,notpick);
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int dp = new int[nums1.length + 1][nums2.length + 1];
		for (int a: dp) {	
			Arrays.fill(a,-1);
		}
		return helper(dp,nums1,nums2,0,0);
	}
}