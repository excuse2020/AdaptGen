class Solution {
	int firstMissingPositive(int[] nums) {
		int index = 0;
		int n = nums.length;
		while (index < n) {
			if (nums[index] > 0 && nums[index] <= n) {
				int currentIndexValue = nums[index];
				int currentIndexValueAsIndexValue = nums[nums[index] - 1];
				if (currentIndexValue != currentIndexValueAsIndexValue) {
					swap(nums,index,nums[index] - 1);
				} 
				else {
					index++;
				}
			} 
			else {
				index++;
			}
		}
		for (int i = 0; i < n; i++) {
			if (nums[i] != i + 1) {
				return i + 1;
			}
		}
		return nums.length + 1;
	}
	void swap(int[] nums, int i, int j) {
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}