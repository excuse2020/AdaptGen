class Solution {
	int findmax(int[] arr) {
		int maxi = 0;
		for (int i = 0; i < arr.length; i++) {
			maxi = Math.max(maxi,arr[i]);
		}
		return maxi;
	}
	int minEatingSpeed(int[] piles, int h) {
		int low = 1;
		int high = findmax(piles);
		while (low <= high) {
			int mid = (low + high) / 2;
			int totalhrs = reqhrs(piles,mid);
			if (totalhrs <= h) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int reqhrs(int[] arr, int hourly) {
		int totalhrs = 0;
		for (int i = 0; i < arr.length; i++) {
			totalhrs += Math.ceil((double) arr[i] / hourly);
		}
		return totalhrs;
	}
}