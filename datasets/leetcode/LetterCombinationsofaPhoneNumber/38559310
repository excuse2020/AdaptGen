class Solution {
	void backTrack(String digits, int i, Map<Character, String> hm, StringBuilder sb, List<String> res) {
		if (i == digits.length()) {
			res.add(sb.toString());
			return;
		}
		String curr = hm.get(digits.charAt(i));
		for (int k = 0; k < curr.length(); k++) {
			sb.append(curr.charAt(k));
			backTrack(digits,i + 1,hm,sb,res);
			sb.deleteCharAt(sb.length() - 1);
		}
	}
	List<String> letterCombinations(String digits) {
		List<String> res = new ArrayList<>();
		if (digits.length() == 0) {
			return res;
		}
		Map<Character, String> hm = new HashMap<>();
	}
}