class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int kk = m * n;
		ListNode temp = head;
		int arr = new int[m][n];
		int c = 0;
		while (kk-- > 1) {
			if (temp.next != null) {
				temp = temp.next;
			} 
			else {
				ListNode ll = new ListNode(-1);
				temp.next = ll;
				temp = ll;
			}
			System.out.println(temp.val);
		}
		temp.next = null;
		temp = head;
		int z = 0;
		int k = n;
		int p = m;
		int pp = k - 2;
		while (temp != null) {
			for (int i = z; i < k && temp != null; i++) {
				arr[z][i] = temp.val;
				temp = temp.next;
			}
			for (int i = z + 1; i < p && temp != null; i++) {
				arr[i][k - 1] = temp.val;
				temp = temp.next;
			}
			for (int i = pp; i > z && temp != null; i--) {
				arr[p - 1][i] = temp.val;
				temp = temp.next;
			}
			for (int i = p - 1; i > z && temp != null; i--) {
				arr[i][z] = temp.val;
				temp = temp.next;
			}
			z++;
			k--;
			p--;
			pp--;
		}
		return arr;
	}
}