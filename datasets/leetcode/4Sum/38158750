class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		List<List<Integer>> retval = new ArrayList<>();
		Arrays.sort(nums);
		for (int i = 0; i < nums.length; i++) {
			if (i > 0 && nums[i - 1] == nums[i]) {
				continue;
			}
			for (int j = i + 1; j < nums.length; j++) {
				if (j > i + 1 && nums[j] == nums[j - 1]) {
					continue;
				}
				int left = j + 1;
				int right = nums.length - 1;
				long rest = (long) target - nums[i];
				while (left < right) {
					if (nums[left] + nums[right] > rest) {
						right--;
					} 
					else if (nums[left] + nums[right] < rest) {
						left++;
					} 
					else {
						List<Integer> list = new ArrayList<>();
						list.add(nums[i]);
						list.add(nums[j]);
						list.add(nums[left]);
						list.add(nums[right]);
						retval.add(list);
						right--;
						left++;
						while (left < right && nums[left] == nums[left - 1]) {
							left++;
						}
						while (left < right && nums[right] == nums[right + 1]) {
							right--;
						}
					}
				}
			}
		}
		return retval;
	}
}