class Solution {
	int countPrimeSetBits(int left, int right) {
		ArrayList<Integer> z = new ArrayList<>();
		ArrayList<Integer> x = new ArrayList<>();
		ArrayList<Integer> y = new ArrayList<>();
		int count = 0;
		int count1 = 0;
		for (int i = left; i <= right; i++) {
			int l = left;
			while (l != 0) {
				x.add(l % 2);
				l = l / 2;
			}
			for (int j = x.size() - 1; j >= 0; j--) {
				z.add(x.get(j));
			}
			for (int v: z) {	
				if (v == 1) {
					count++;
				}
			}
			for (int j = 1; j <= count; j++) {
				if (count % j == 0) {
					count1++;
				}
			}
			if (count1 == 2) {
				y.add(left);
			}
			count = 0;
			count1 = 0;
			x.clear();
			z.clear();
			left++;
		}
		return y.size();
	}
}