class Solution {
	ListNode mergeKLists(ListNode[] lists) {
		if (lists.length == 0) {
			return null;
		}
		PriorityQueue<Integer> pq = new PriorityQueue<>();
		for (ListNode ls: lists) {	
			while (ls != null) {
				pq.add(ls.val);
				ls = ls.next;
			}
		}
		ListNode head;
		if (!pq.isEmpty()) {
			head = new ListNode(pq.poll());
		} 
		else {
			return null;
		}
		var temp = head;
		while (!pq.isEmpty()) {
			temp.next = new ListNode(pq.poll());
			temp = temp.next;
		}
		temp.next = null;
		return head;
	}
}