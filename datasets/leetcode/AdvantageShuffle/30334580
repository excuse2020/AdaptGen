class Solution {
	int[] advantageCount(int[] nums1, int[] nums2) {
		int n = nums1.length;
		PriorityQueue<int[]> maxHeap = new PriorityQueue<int[]>((o1, o2) -> {o2[1] - o1[1]});
		for (int i = 0; i < n; i++) {
			maxHeap.add(new int{i, nums2[i]});
		}
		Arrays.sort(nums1);
		int left = 0, right = n - 1;
		int[] res = new int[n];
		while (!maxHeap.isEmpty()) {
			int[] pair = maxHeap.poll();
			int index = pair[0], maxVal = pair[1];
			if (maxVal < nums1[right]) {
				res[index] = nums1[right];
				right--;
			} 
			else {
				res[index] = nums1[left];
				left++;
			}
		}
		return res;
	}
}