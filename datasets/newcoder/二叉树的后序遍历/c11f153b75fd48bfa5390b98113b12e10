class Solution {
	int[] postorderTraversal(TreeNode root) {
		if (root == null) {
			int[] treeList = new int[0];
			return treeList;
		}
		List<Integer> temp = new ArrayList();
		recursivelyPostorder(root,temp);
		int[] treeList = new int[temp.size()];
		for (int i = 0; i < temp.size(); i++) {
			treeList[i] = temp.get(i);
		}
		return treeList;
	}
	void recursivelyPostorder(TreeNode vroot, List<Integer> temp) {
		if (vroot.left != null) {
			recursivelyPostorder(vroot.left,temp);
		}
		if (vroot.right != null) {
			recursivelyPostorder(vroot.right,temp);
		}
		temp.add(vroot.val);
	}
}