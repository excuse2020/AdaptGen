class Solution {
	int firstGreater(int[] nums, int target) {
		int l = 0;
		int r = nums.length;
		while (l < r) {
			int m = (l + r) / 2;
			if (nums[m] > target) {
				r = m;
			} 
			else {
				l = m + 1;
			}
		}
		return l;
	}
	int minOperations(int[] nums) {
		int n = nums.length;
		int ans = n;
		Arrays.sort(nums);
		nums = Arrays.stream(nums).distinct().toArray();
		for (int i = 0; i < nums.length; ++i) {
			int start = nums[i];
			int end = start + n - 1;
			int index = firstGreater(nums,end);
			int uniqueLength = index - i;
			ans = Math.min(ans,n - uniqueLength);
		}
		return ans;
	}
}