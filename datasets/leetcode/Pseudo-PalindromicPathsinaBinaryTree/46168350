class Solution {
	int count = 0;
	List<Integer> path = new ArrayList<>();
	void dfs(TreeNode root, int parity) {
		if (root == null) {
			return;
		}
		parity ^= (1 << root.val);
		if (root.left == null && root.right == null) {
			if ((parity & (parity - 1)) == 0) {
				count++;
			}
			return;
		}
		dfs(root.left,parity);
		dfs(root.right,parity);
	}
	int pseudoPalindromicPaths(TreeNode root) {
		dfs(root,0);
		return count;
	}
}