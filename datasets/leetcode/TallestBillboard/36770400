class Solution {
	void comb(int in, int end, int r1, int r2, int[] rods, int[] memo) {
		if (in > end) {
			int diff = Math.abs(r1 - r2);
			memo[diff] = Math.max(memo[diff],Math.max(r1,r2));
			return;
		}
		int v = rods[in];
		comb(in + 1,end,r1,r2,rods,memo);
		comb(in + 1,end,r1 + v,r2,rods,memo);
		comb(in + 1,end,r1,r2 + v,rods,memo);
	}
	int tallestBillboard(int[] rods) {
		int[] left = new int[5001], right = new int[5001];
		Arrays.fill(left,-1);
		Arrays.fill(right,-1);
		comb(0,rods.length >> 1,0,0,rods,left);
		comb((rods.length >> 1) + 1,rods.length - 1,0,0,rods,right);
		int max = 0;
		for (int i = 0; i < left.length; i++) {
			if (left[i] == -1 || right[i] == -1) {
				continue;
			}
			max = Math.max(max,left[i] + right[i] - i);
		}
		return max;
	}
}