class Solution {
	ListNode merge(ListNode node1, ListNode node2) {
		ListNode dummy = new ListNode(-1);
		ListNode res = dummy;
		while (node1 != null && node2 != null) {
			if (node1.val > node2.val) {
				dummy.next = new ListNode(node2.val);
				node2 = node2.next;
			} 
			else {
				dummy.next = new ListNode(node1.val);
				node1 = node1.next;
			}
			dummy = dummy.next;
		}
		if (null != node1) {
			dummy.next = node1;
		}
		if (null != node2) {
			dummy.next = node2;
		}
		return res.next;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (null == lists || lists.size() == 0) {
			return null;
		}
		ListNode res = lists.get(0);
		for (int i = 1; i < lists.size(); i++) {
			res = merge(res,lists.get(i));
		}
		return res;
	}
}