class Solution {
	long maximumOr(int[] nums, int k) {
		long or = 0;
		long xor = 0;
		int n = nums.length;
		long[] p = new long[n];
		long[] s = new long[n];
		for (int i = 0; i < n; i++) {
			p[i] = (long) nums[i] | or;
			or = p[i];
		}
		or = 0;
		for (int i = n - 1; i >= 0; i--) {
			s[i] = (long) nums[i] | or;
			or = s[i];
		}
		long ans = 0;
		for (int i = 0; i < n; i++) {
			long a = 0;
			long b = 0;
			long cur = (long) nums[i];
			if (i != 0) {
				a = p[i - 1];
			}
			if (i != n - 1) {
				b = s[i + 1];
			}
			long temp = a | b;
			temp |= cur * ((long) Math.pow(2,k));
			ans = Math.max(temp,ans);
		}
		return ans;
	}
}