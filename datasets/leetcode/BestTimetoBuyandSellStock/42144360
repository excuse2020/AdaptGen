class Solution {
	int dp;
	int helper(int arr, int i, int k, int flag) {
		if (i == arr.length) {
			return 0;
		}
		if (dp[flag][k][i] != -1) {
			return dp[flag][k][i];
		}
		int ans = Integer.MIN_VALUE;
		ans = helper(arr,i + 1,k,flag);
		if (flag == 1) {
			ans = Math.max(ans,helper(arr,i + 1,k - 1,0) + arr[i]);
		} 
		else {
			if (k > 0) {
				ans = Math.max(ans,helper(arr,i + 1,k,1) - arr[i]);
			}
		}
		return dp[flag][k][i] = ans;
	}
	int maxProfit(int[] arr) {
		dp = new int[2][2][100005];
		for (var a: dp) {	
			for (var b: a) {	
				Arrays.fill(b,-1);
			}
		}
		return helper(arr,0,1,0);
	}
}