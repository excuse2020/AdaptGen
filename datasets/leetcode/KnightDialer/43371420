class Solution {
	int knightDialer(int n) {
		long MOD = 1000000007;
		long dp = new long[10];
		Arrays.fill(dp,1);
		for (int i = 2; i <= n; i++) {
			long temp = new long[10];
			temp[0] = (dp[4] + dp[6]) % MOD;
			temp[1] = (dp[6] + dp[8]) % MOD;
			temp[2] = (dp[7] + dp[9]) % MOD;
			temp[3] = (dp[4] + dp[8]) % MOD;
			temp[4] = (dp[3] + dp[9]) % MOD;
			temp[5] = 0;
			temp[6] = (dp[1] + dp[7]) % MOD;
			temp[7] = (dp[2] + dp[6]) % MOD;
			temp[8] = (dp[1] + dp[3]) % MOD;
			temp[9] = (dp[2] + dp[4]) % MOD;
			dp = temp.clone();
		}
		long total = 0;
		for (int i = 0; i < dp.length; i++) {
			total = (total + dp[i]) % MOD;
		}
		return (int) (total);
	}
}