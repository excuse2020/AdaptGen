class Solution {
	ListNode ReverseList(ListNode pHead) {
		ListNode res = null;
		ListNode cur = pHead;
		while (cur != null) {
			ListNode temp = cur.next;
			cur.next = res;
			res = cur;
			cur = temp;
		}
		return res;
	}
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode l1 = ReverseList(head1);
		ListNode l2 = ReverseList(head2);
		ListNode h1 = l1, h2 = l2, part = null, res = null;
		int sum, carry = 0;
		while (l1 != null && l2 != null) {
			sum = l1.val + l2.val;
			carry = sum / 10;
			l1.val = l2.val = sum % 10;
			l1 = l1.next;
			l2 = l2.next;
		}
		if (l1 == null && l2 == null) {
			res = h2;
			part = l2;
			if (carry > 0) {
				part = new ListNode(carry);
			}
		} 
		else {
			if (l1 == null) {
				res = h2;
				part = l2;
			} 
			else {
				res = h1;
				part = l1;
			}
			while (carry > 0 && part != null) {
				int ssum = part.val + carry;
				part.val = ssum % 10;
				carry = ssum / 10;
				part = part.next;
			}
			if (carry > 0) {
				part = new ListNode(carry);
			}
		}
		return ReverseList(res);
	}
}