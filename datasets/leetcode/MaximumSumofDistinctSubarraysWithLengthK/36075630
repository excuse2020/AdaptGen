class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Map<Integer, Integer> map = new HashMap<>();
		int left = 0;
		long max = 0;
		long sum = 0;
		for (int i = 0; i < nums.length; i++) {
			sum += nums[i];
			if (map.containsKey(nums[i])) {
				int idx = map.get(nums[i]);
				if (idx >= left) {
					for (int j = left; j <= idx; j++) {
						sum = sum - nums[j];
					}
					left = idx + 1;
				}
			}
			map.put(nums[i],i);
			if (i - left == k - 1) {
				max = Math.max(max,sum);
				sum -= nums[left];
				left++;
			}
		}
		return max;
	}
}