class Solution {
	ArrayList<String> Permutation(String str) {
		ArrayList<String> lists = new ArrayList<>();
		if (str.length() == 0) {
			return lists;
		}
		PermutationProcess(str.toCharArray(),lists,0);
		Collections.sort(lists);
		return lists;
	}
	void PermutationProcess(char[] ch, List<String> lists, int i) {
		if (i == ch.length - 1) {
			if (!lists.contains(new String(ch))) {
				lists.add(new String(ch));
			}
		} 
		else {
			for (int j = i; j < ch.length; j++) {
				swap(ch,i,j);
				PermutationProcess(ch,lists,i + 1);
				swap(ch,j,i);
			}
		}
	}
	void swap(char[] ch, int i, int j) {
		if (i != j) {
			char tmp = ch[i];
			ch[i] = ch[j];
			ch[j] = tmp;
		}
	}
}