class Solution {
	List<Integer> largestDivisibleSubset(int[] a) {
		Arrays.sort(a);
		int n = a.length;
		int[] dp = new int[n];
		Arrays.fill(dp,1);
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < i; j++) {
				if (a[i] % a[j] == 0) {
					dp[i] = Math.max(dp[i],dp[j] + 1);
				}
			}
		}
		int max = 1, ind = 0;
		for (int i = 0; i < n; i++) {
			if (dp[i] > max) {
				max = dp[i];
				ind = i;
			}
		}
		List<Integer> l = new ArrayList<>();
		l.add(a[ind]);
		for (int i = ind - 1; i >= 0; i--) {
			if (max - dp[i] == 1 && a[ind] % a[i] == 0) {
				l.add(a[i]);
				max--;
				ind = i;
			}
		}
		return l;
	}
}