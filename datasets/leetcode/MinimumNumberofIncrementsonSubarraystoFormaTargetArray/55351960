class Solution {
	int minNumberOperations(int[] target) {
		Stack<Integer> st = new Stack<>();
		int ans = 1, n = target.length;
		for (int i = 0; i <= n; i++) {
			int cur = i < n ? target[i] : 1;
			while (!st.isEmpty() && cur <= st.peek()) {
				int top = st.pop();
				if (top == cur) {
					continue;
				}
				int l = st.isEmpty() ? 1 : st.peek();
				ans += top - Math.max(l,cur);
			}
			if (i < n) {
				st.push(cur);
			}
		}
		return ans;
	}
}