class Solution {
	void helper(TreeNode root, int targetSum, List<Integer> l, List<List<Integer>> ans, int sum) {
		if (root == null) {
			return;
		}
		l.add(root.val);
		sum += root.val;
		if (root.left == null && root.right == null) {
			if (sum == targetSum) {
				ans.add(new ArrayList<>(l));
			}
			l.remove(l.size() - 1);
			return;
		}
		helper(root.left,targetSum,l,ans,sum);
		helper(root.right,targetSum,l,ans,sum);
		l.remove(l.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> l = new ArrayList<>();
		helper(root,targetSum,l,ans,0);
		return ans;
	}
}