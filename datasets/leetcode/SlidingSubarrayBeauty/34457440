class Solution {
	int NUM_RANGE = 101;
	int OFFSET = 50;
	int findMin(int[] arr, int pos) {
		int place = 0;
		int i = 0;
		for (i = 0; i < 50 && place < pos; i++) {
			place += arr[i];
		}
		if (place < pos) {
			return 0;
		}
		return (i - 1) - OFFSET;
	}
	int[] getSubarrayBeauty(int[] nums, int k, int x) {
		int n = nums.length;
		int[] map = new int[NUM_RANGE];
		int i = 0;
		while (i < k) {
			map[nums[i] + OFFSET]++;
			i++;
		}
		int min = findMin(map,x);
		List<Integer> res = new ArrayList<>();
		res.add(min);
		while (i < n) {
			map[nums[i] + OFFSET]++;
			map[nums[i - k] + OFFSET]--;
			min = findMin(map,x);
			res.add(min);
			i++;
		}
		int resSize = res.size();
		int[] resArray = new int[resSize];
		i = 0;
		for (int num: res) {	
			resArray[i] = res.get(i);
			i++;
		}
		return resArray;
	}
}