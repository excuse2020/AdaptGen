class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		int[] childSize = new int[2];
		size(root,x,childSize);
		int lc = childSize[0], rc = childSize[1], rem = n - (lc + rc);
		int max = Math.max(rem,Math.max(lc,rc));
		return max > n / 2;
	}
	int size(TreeNode root, int x, int[] childSize) {
		if (root == null) {
			return 0;
		}
		int lc = size(root.left,x,childSize);
		int rc = size(root.right,x,childSize);
		if (root.val == x) {
			childSize[0] = lc;
			childSize[1] = rc;
		}
		return lc + rc;
	}
}