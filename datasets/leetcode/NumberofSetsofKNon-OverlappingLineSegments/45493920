class Solution {
	Integer[][][] dp;
	int numberOfSets(int n, int k) {
		dp = new Integer[n + 1][k + 1][2];
		return solveMemo(n,k,1,0);
	}
	int solveMemo(int n, int k, int start, int idx) {
		if (idx == n) {
			return 0;
		}
		if (k == 0) {
			return 1;
		}
		if (dp[idx][k][start] != null) {
			return dp[idx][k][start];
		}
		int ans = solveMemo(n,k,start,idx + 1);
		if (start == 1) {
			ans += solveMemo(n,k,0,idx + 1);
		} 
		else {
			ans += solveMemo(n,k - 1,1,idx);
		}
		return dp[idx][k][start] = ans % 1_000_000_007;
	}
}