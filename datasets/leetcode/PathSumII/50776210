class Solution {
	List<List<Integer>> res = new LinkedList<>();
	void go(TreeNode node, int targetSum, List<Integer> l) {
		if (node == null) {
			return;
		}
		List<Integer> list = new LinkedList<>(l);
		list.add(node.val);
		if (node.left == null && node.right == null && targetSum == node.val) {
			res.add(list);
		}
		if (node.left != null) {
			go(node.left,targetSum - node.val,list);
		}
		if (node.right != null) {
			go(node.right,targetSum - node.val,list);
		}
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		if (root != null) {
			go(root,targetSum,new LinkedList<>());
		}
		return res;
	}
}