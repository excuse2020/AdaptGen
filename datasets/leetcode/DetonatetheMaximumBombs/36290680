class Solution {
	int count;
	void helper(int idx, int[][] bombs, boolean[] visited) {
		visited[idx] = true;
		count++;
		for (int i = 0; i < bombs.length; i++) {
			if (visited[i] == false && overlapcheck(bombs[idx],bombs[i]) == true) {
				helper(i,bombs,visited);
			}
		}
	}
	int maximumDetonation(int[][] bombs) {
		int max = 0;
		for (int i = 0; i < bombs.length; i++) {
			boolean visited = new boolean[bombs.length];
			helper(i,bombs,visited);
			max = Math.max(count,max);
			count = 0;
		}
		return max;
	}
	boolean overlapcheck(int[] aa, int[] bb) {
		int x = bb[0];
		int y = bb[1];
		int a = aa[0];
		int b = aa[1];
		int r = aa[2];
		if (Math.pow(x - a,2) + Math.pow(y - b,2) <= Math.pow(r,2)) {
			return true;
		}
		return false;
	}
}