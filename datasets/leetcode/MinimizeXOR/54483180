class Solution {
	int getSetBits(int num) {
		int setBits = 0;
		for (int i = 31; i >= 0; i--) {
			if ((num & (1 << i)) != 0) {
				setBits++;
			}
		}
		return setBits;
	}
	int minimizeXor(int num1, int num2) {
		int num1bits = getSetBits(num1);
		int num2bits = getSetBits(num2);
		int res = num1;
		int bitToBeFlipped = (num1bits > num2bits) ? 1 : 0;
		int flipCount = Math.abs(num1bits - num2bits);
		for (int i = 0; i <= 31; i++) {
			if (flipCount == 0) {
				return res;
			}
			int currBit = (res & (1 << i)) != 0 ? 1 : 0;
			if (currBit == bitToBeFlipped) {
				res = res ^ (1 << i);
				flipCount--;
			}
		}
		return res;
	}
}