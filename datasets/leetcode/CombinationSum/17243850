class Solution {
	List<List<Integer>> ml;
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		ml = new ArrayList<>();
		findCombinations(candidates,0,target,new ArrayList<>());
		return ml;
	}
	void findCombinations(int[] arr, int idx, int target, List<Integer> cl) {
		if (target == 0 || idx == arr.length) {
			if (target == 0) {
				ml.add(new ArrayList<>(cl));
			}
			return;
		}
		if (arr[idx] <= target) {
			cl.add(arr[idx]);
			findCombinations(arr,idx,target - arr[idx],cl);
			cl.remove(cl.size() - 1);
		}
		findCombinations(arr,idx + 1,target,cl);
	}
}