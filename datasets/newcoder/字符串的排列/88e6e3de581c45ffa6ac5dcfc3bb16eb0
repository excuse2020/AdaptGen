class Solution {
	ArrayList<String> Permutation(String str) {
		ArrayList<String> res = new ArrayList<>();
		char[] chs = str.toCharArray();
		Arrays.sort(chs);
		res.add(str);
		while (true) {
			String a = nextString(chs);
			if (a.equals("finish")) {
				break;
			}
			res.add(a);
		}
		return res;
	}
	String nextString(char[] chs) {
		int n = chs.length;
		int i = n - 1, j = n - 1;
		while (i > 0 && chs[i - 1] >= chs[i]) {
			i--;
		}
		if (i == 0) {
			return "finish";
		}
		while (j > 0 && chs[j] <= chs[i - 1]) {
			j--;
		}
		swap(chs,i - 1,j);
		for (int a = i, b = n - 1; a < b; a++, b--) {
			swap(chs,a,b);
		}
		return new String(chs);
	}
	void swap(char[] chs, int a, int b) {
		char temp = chs[a];
		chs[a] = chs[b];
		chs[b] = temp;
	}
}