class Solution {
	int maxTime = Integer.MIN_VALUE;
	void dfs(ArrayList<ArrayList<Integer>> adjList, int[] informTime, int curr, int time) {
		maxTime = Math.max(maxTime,time);
		for (int adj: adjList.get(curr)) {	
			dfs(adjList,informTime,adj,time + informTime[curr]);
		}
	}
	int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
		if (n == 1) {
			return informTime[0];
		}
		ArrayList<ArrayList<Integer>> adjList = new ArrayList<ArrayList<Integer>>(n);
		for (int i = 0; i < n; i++) {
			adjList.add(new ArrayList<Integer>());
		}
		for (int i = 0; i < n; i++) {
			if (manager[i] != -1) {
				adjList.get(manager[i]).add(i);
			}
		}
		dfs(adjList,informTime,headID,0);
		return maxTime;
	}
}