class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] row = new int[grid.length];
		int[] col = new int[grid.length];
		for (int i = 0; i < grid.length; i++) {
			int max = 0;
			for (int j = 0; j < grid.length; j++) {
				if (max < grid[i][j]) {
					max = grid[i][j];
				}
			}
			row[i] = max;
			max = 0;
			for (int j = 0; j < grid.length; j++) {
				if (max < grid[j][i]) {
					max = grid[j][i];
				}
			}
			col[i] = max;
		}
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if (row[i] < col[j]) {
					sum = sum + (row[i] - grid[i][j]);
				} 
				else {
					sum = sum + (col[j] - grid[i][j]);
				}
			}
		}
		return sum;
	}
}