class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		Map<Integer, Integer> lastIndexMap = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			lastIndexMap.put(nums[i],i);
		}
		Set<Integer> suffixSetNums = new HashSet<>();
		for (int num: nums) {	
			suffixSetNums.add(num);
		}
		Set<Integer> prefixSetNums = new HashSet<>();
		int[] diff = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			prefixSetNums.add(nums[i]);
			if (i == lastIndexMap.get(nums[i])) {
				suffixSetNums.remove(nums[i]);
			}
			diff[i] = prefixSetNums.size() - suffixSetNums.size();
		}
		return diff;
	}
}