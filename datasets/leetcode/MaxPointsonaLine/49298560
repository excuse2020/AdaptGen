class Solution {
	int maxPoints(int[][] points) {
		int max = 1;
		for (int i = 0; i < points.length - 1; i++) {
			HashMap<Double, Integer> map = new HashMap<>();
			for (int j = i + 1; j < points.length; j++) {
				double sl = slope(points[i][0],points[i][1],points[j][0],points[j][1]);
				if (!map.containsKey(sl)) {
					map.put(sl,2);
				} 
				else {
					map.put(sl,map.get(sl) + 1);
				}
				max = Math.max(map.get(sl),max);
			}
		}
		return max;
	}
	double slope(int x1, int y1, int x2, int y2) {
		double slope = 0;
		if (y1 == y2) {
			return slope;
		}
		if (x1 == x2) {
			return Math.pow(10,9);
		}
		slope = (double) (y2 - y1) / (double) (x2 - x1);
		return slope;
	}
}