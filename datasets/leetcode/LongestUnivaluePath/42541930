class Solution {
	int maxLength = 0;
	int dfs(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int leftPath = dfs(root.left);
		int rightPath = dfs(root.right);
		int left = 0;
		int right = 0;
		if (root.left != null && root.left.val == root.val) {
			left = leftPath + 1;
		}
		if (root.right != null && root.right.val == root.val) {
			right = rightPath + 1;
		}
		maxLength = Math.max(maxLength,left + right);
		return Math.max(left,right);
	}
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		dfs(root);
		return maxLength;
	}
}