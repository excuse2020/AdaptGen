class Solution {
	int[][] flipChess(int[][] A, int[][] f) {
		int m = A.length;
		int n = A[0].length;
		for (int i = 0; i < f.length; i++) {
			int x = f[i][0] - 1, y = f[i][1] - 1;
			if (x > 0) {
				A[x - 1][y] = 1 - A[x - 1][y];
			}
			if (y > 0) {
				A[x][y - 1] = 1 - A[x][y - 1];
			}
			if (x + 1 < m) {
				A[x + 1][y] = 1 - A[x + 1][y];
			}
			if (y + 1 < n) {
				A[x][y + 1] = 1 - A[x][y + 1];
			}
		}
		return A;
	}
}