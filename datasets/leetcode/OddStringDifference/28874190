class Solution {
	String oddString(String[] words) {
		int sl = words[0].length() - 1;
		int[][] d = new int[words.length][sl];
		for (int i = 0; i < words.length; ++i) {
			String s = words[i];
			int[] c = new int[sl];
			for (int j = 1; j < s.length(); ++j) {
				c[j - 1] = (s.charAt(j) - 97) - (s.charAt(j - 1) - 97);
			}
			d[i] = c;
		}
		if (!Arrays.equals(d[0],d[1]) && Arrays.equals(d[1],d[2])) {
			return words[0];
		}
		for (int i = 1; i < d.length - 1; ++i) {
			if (!Arrays.equals(d[i],d[i - 1]) && Arrays.equals(d[i - 1],d[i + 1])) {
				return words[i];
			}
		}
		if (!Arrays.equals(d[d.length - 1],d[d.length - 2]) && Arrays.equals(d[d.length - 2],d[d.length - 3])) {
			return words[words.length - 1];
		}
		return "";
	}
}