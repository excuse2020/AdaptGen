class Solution {
	int parent;
	int find(int x) {
		if (x == parent[x]) {
			return x;
		}
		return find(parent[x]);
	}
	void merge(int x, int y) {
		int lx = find(x);
		int ly = find(y);
		if (lx == ly) {
			return;
		}
		parent[ly] = lx;
	}
	boolean validPath(int n, int[][] edges, int source, int destination) {
		parent = new int[n];
		for (int i = 0; i < n; i++) {
			parent[i] = i;
		}
		for (int[] e: edges) {	
			merge(e[0],e[1]);
		}
		return find(source) == find(destination);
	}
}