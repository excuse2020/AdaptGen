class Solution {
	List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
		Set<Integer> dis1 = new HashSet<Integer>();
		Set<Integer> dis2 = new HashSet<Integer>();
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		for (int i = 0; i < nums1.length; i++) {
			if (!dis1.contains(nums1[i])) {
				dis1.add(nums1[i]);
			}
		}
		for (int i = 0; i < nums2.length; i++) {
			if (!dis2.contains(nums2[i])) {
				dis2.add(nums2[i]);
			}
		}
		Set<Integer> intersection = new HashSet<Integer>(dis1);
		intersection.retainAll(dis2);
		dis1.removeAll(dis2);
		dis2.removeAll(dis1);
		dis2.removeAll(intersection);
		List<Integer> n1 = new ArrayList<Integer>(dis1);
		List<Integer> n2 = new ArrayList<Integer>(dis2);
		ans.add(n1);
		ans.add(n2);
		return ans;
	}
}