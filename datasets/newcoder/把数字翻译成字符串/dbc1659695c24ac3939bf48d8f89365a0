class Solution {
	int dfs(String nums, int start) {
		if (start == nums.length()) {
			return 1;
		}
		if (nums.charAt(start) == '0') {
			return 0;
		}
		int res1 = dfs(nums,start + 1);
		int res2 = 0;
		if (start + 1 < 26 && (nums.charAt(start) == '1' || (nums.charAt(start) == '2' && nums.charAt(start + 1) <= '6'))) {
			res2 = dfs(nums,start + 2);
		}
		return res1 + res2;
	}
	int solve(String nums) {
		if (nums.length() == 0 || nums.charAt(0) == '0') {
			return 0;
		}
		int[] dp = new int[nums.length()];
		dp[0] = 1;
		for (int i = 1; i < nums.length(); i++) {
			if (nums.charAt(i) != '0') {
				dp[i] = dp[i - 1];
			}
			int temp = (nums.charAt(i - 1) - '0') * 10 + (nums.charAt(i) - '0');
			if (temp >= 10 && temp <= 26) {
				if (i == 1) {
					dp[i]++;
				} 
				else {
					dp[i] += dp[i - 2];
				}
			}
		}
		return dp[nums.length() - 1];
	}
}