class Solution {
	void calculate(Stack<Integer> nums, String op) {
		int b = nums.pop();
		int a = nums.pop();
		if (op.equals("+")) {
			nums.push(a + b);
		} 
		else if (op.equals("-")) {
			nums.push(a - b);
		} 
		else if (op.equals("*")) {
			nums.push(a * b);
		} 
		else {
			nums.push(a / b);
		}
		return;
	}
	int evalRPN(String[] tokens) {
		Stack<Integer> nums = new Stack<>();
		for (int i = 0; i < tokens.length; i++) {
			if (isOperation(tokens[i])) {
				calculate(nums,tokens[i]);
			} 
			else {
				nums.push(Integer.valueOf(tokens[i]));
			}
		}
		return nums.pop();
	}
	boolean isOperation(String str) {
		return (str.equals("+") || str.equals("-"));
	}
}