class Solution {
	int helper(int[][] grid, int row, int col) {
		int m = grid.length, n = grid[0].length;
		if (row + 2 >= m || col + 2 >= n) {
			return 0;
		}
		int sumval = 0;
		for (int i = row; i <= row + 2; i++) {
			for (int j = col; j <= col + 2; j++) {
				if (i == row + 1 && j == col || i == row + 1 && j == col + 2) {
					continue;
				}
				sumval += grid[i][j];
			}
		}
		return sumval;
	}
	int maxSum(int[][] grid) {
		int ans = Integer.MIN_VALUE;
		int m = grid.length, n = grid[0].length;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				ans = Math.max(ans,helper(grid,i,j));
			}
		}
		return ans;
	}
}