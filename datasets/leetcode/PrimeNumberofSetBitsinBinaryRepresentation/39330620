class Solution {
	int bitCount(int n) {
		int c = 0;
		while (n > 0) {
			int rem = n % 2;
			if (rem == 1) {
				c++;
			}
			n = n / 2;
		}
		return c;
	}
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			int temp = bitCount(i);
			if (primeBitCount(temp)) {
				count++;
			}
		}
		return count;
	}
	boolean primeBitCount(int val) {
		int cnt = 0;
		for (int j = 1; j <= val; j++) {
			if (val % j == 0) {
				cnt++;
			}
		}
		if (cnt == 2) {
			return true;
		}
		return false;
	}
}