class Solution {
	int countPairs(int[] d) {
		if (d.length == 1) {
			return 0;
		}
		Arrays.sort(d);
		int max = d[d.length - 2] + d[d.length - 1];
		long count = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int data: d) {	
			map.put(data,map.getOrDefault(data,0) + 1);
		}
		for (int i = 1; i <= max; i *= 2) {
			long temp = 0;
			for (int data: d) {	
				if (map.containsKey(i - data) && i - data == data && map.get(i - data) > 1) {
					temp = temp + map.get(i - data) - 1;
				} 
				else if (map.containsKey(i - data) && i - data != data) {
					temp = temp + map.get(i - data);
				}
			}
			count = (count + temp / 2) % 1000000007;
		}
		return (int) count;
	}
}