class Solution {
	int unfairness = -1;
	int distributeCookies(int[] cookies, int k) {
		int[] distributions = new int[k];
		int start = 0;
		findUnfairness(cookies,distributions,k,start);
		return unfairness;
	}
	void findUnfairness(int[] cookies, int[] distributions, int k, int start) {
		if (start == cookies.length) {
			int max = distributions[0];
			for (int i = 0; i < k; i++) {
				if (distributions[i] > max) {
					max = distributions[i];
				}
			}
			if (unfairness == -1) {
				unfairness = max;
			} 
			else {
				if (max < unfairness) {
					unfairness = max;
				}
			}
		} 
		else {
			for (int i = 0; i < k; i++) {
				distributions[i] += cookies[start];
				findUnfairness(cookies,distributions,k,start + 1);
				distributions[i] -= cookies[start];
			}
		}
	}
}