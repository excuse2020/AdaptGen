class Solution {
	int countDays(int days, int[][] meetings) {
		Arrays.sort(meetings,Comparator.comparingInt((a) -> {a[0]}));
		List<int[]> merged = new ArrayList<>();
		int prevStart = meetings[0][0];
		int prevEnd = meetings[0][1];
		merged.add(new int{prevStart, prevEnd});
		for (int i = 1; i < meetings.length; i++) {
			int currStart = meetings[i][0];
			int currEnd = meetings[i][1];
			if (currStart <= prevEnd) {
				merged.remove(merged.size() - 1);
				prevStart = Math.min(prevStart,currStart);
				prevEnd = Math.max(prevEnd,currEnd);
				merged.add(new int{prevStart, prevEnd});
			} 
			else {
				merged.add(new int{currStart, currEnd});
				prevStart = currStart;
				prevEnd = currEnd;
			}
		}
		int coveredDays = 0;
		for (int[] interval: merged) {	
			coveredDays += (interval[1] - interval[0] + 1);
		}
		return days - coveredDays;
	}
}