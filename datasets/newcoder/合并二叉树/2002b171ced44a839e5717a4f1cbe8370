class Solution {
	TreeNode mergeTrees(TreeNode t1, TreeNode t2) {
		if (t1 == null || t2 == null) {
			return t1 == null ? t2 : t1;
		}
		LinkedList<TreeNode> mylinkedList = new LinkedList<>();
		mylinkedList.add(t1);
		mylinkedList.add(t2);
		while (!mylinkedList.isEmpty()) {
			TreeNode n1 = mylinkedList.poll();
			TreeNode n2 = mylinkedList.poll();
			n1.val = n1.val + n2.val;
			if (n1.left != null && n2.left != null) {
				mylinkedList.add(n1.left);
				mylinkedList.add(n2.left);
			} 
			else if (n1.left == null) {
				n1.left = n2.left;
			}
			if (n1.right != null && n2.right != null) {
				mylinkedList.add(n1.right);
				mylinkedList.add(n2.right);
			} 
			else if (n1.right == null) {
				n1.right = n2.right;
			}
		}
		return t1;
	}
}