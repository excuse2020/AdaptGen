class Solution {
	void merge(int[] nums, int start, int mid, int end) {
		int[] temp = new int[end - start + 1];
		int i = start, j = mid + 1, idx = 0;
		while (i <= mid && j <= end) {
			if (nums[i] <= nums[j]) {
				temp[idx++] = nums[i++];
			} 
			else {
				temp[idx++] = nums[j++];
			}
		}
		while (i <= mid) {
			temp[idx++] = nums[i++];
		}
		while (j <= end) {
			temp[idx++] = nums[j++];
		}
		for (i = start; i <= end; i++) {
			nums[i] = temp[i - start];
		}
	}
	void sort(int[] nums, int start, int end) {
		if (start >= end) {
			return;
		}
		int mid = start + (end - start) / 2;
		sort(nums,start,mid);
		sort(nums,mid + 1,end);
		merge(nums,start,mid,end);
	}
	int[] sortArray(int[] nums) {
		int start = 0, end = nums.length - 1;
		sort(nums,start,end);
		return nums;
	}
}