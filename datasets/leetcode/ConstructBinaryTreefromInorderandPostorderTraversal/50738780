class Solution {
	TreeNode build(int[] inorder, int inStart, int inEnd, int[] postorder, int poStart, int poEnd) {
		if (inStart > inEnd || poStart > poEnd) {
			return null;
		}
		TreeNode root = new TreeNode(postorder[poEnd]);
		int rootIdx = 0;
		for (int i = 0; i < inorder.length; i++) {
			if (inorder[i] == root.val) {
				rootIdx = i;
				break;
			}
		}
		root.left = build(inorder,inStart,rootIdx - 1,postorder,poStart,poStart + rootIdx - inStart - 1);
		root.right = build(inorder,rootIdx + 1,inEnd,postorder,poStart + rootIdx - inStart,poEnd - 1);
		return root;
	}
	TreeNode buildTree(int[] inorder, int[] postorder) {
		return build(inorder,0,inorder.length - 1,postorder,0,postorder.length - 1);
	}
}