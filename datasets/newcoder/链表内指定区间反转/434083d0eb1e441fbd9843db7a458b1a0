class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head != null && head.next != null && m != n) {
			ListNode cur = head;
			int tm = m, tn = n - m;
			ListNode left = null;
			while (tm-- > 1) {
				left = cur;
				cur = cur.next;
			}
			ListNode s = cur;
			while (tn-- > 0) {
				cur = cur.next;
			}
			ListNode e = cur;
			ListNode right = cur.next;
			e.next = null;
			ListNode pre = null;
			cur = s;
			while (cur != null) {
				ListNode tmp = cur.next;
				cur.next = pre;
				pre = cur;
				cur = tmp;
			}
			if (left != null) {
				left.next = e;
			}
			s.next = right;
			return left == null ? e : head;
		}
		return head;
	}
}