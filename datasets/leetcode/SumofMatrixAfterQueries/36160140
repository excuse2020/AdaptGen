class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		boolean[] visitedRows = new boolean[n];
		boolean[] visitedCols = new boolean[n];
		long sum = 0;
		int rowsVisited = 0;
		int colsVisited = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int type = queries[i][0];
			int j = queries[i][1];
			int val = queries[i][2];
			if (type == 0 && !visitedRows[j]) {
				rowsVisited++;
				sum += (val * (n - colsVisited));
				visitedRows[j] = true;
			} 
			else if (type == 1 && !visitedCols[j]) {
				colsVisited++;
				sum += (val * (n - rowsVisited));
				visitedCols[j] = true;
			}
		}
		return sum;
	}
}