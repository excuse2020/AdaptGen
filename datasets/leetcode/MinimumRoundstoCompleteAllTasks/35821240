class Solution {
	int minimumRounds(int[] tasks) {
		int n = tasks.length;
		HashMap<Integer, Integer> hm = new HashMap();
		for (int i: tasks) {	
			hm.merge(i,1,(v1, v2) -> {v2 = v1 + 1});
		}
		int[] dp = new int[100001];
		dp[1] = -1;
		dp[2] = 1;
		dp[3] = 1;
		dp[4] = 2;
		for (int i = 5; i <= 100000; i++) {
			dp[i] = Math.min(dp[i - 2],dp[i - 3]) + 1;
		}
		int ans = 0;
		for (Map.Entry<Integer, Integer> entry: hm.entrySet()) {	
			int count = entry.getValue();
			if (count == 1) {
				return -1;
			}
			ans += dp[count];
		}
		return ans;
	}
}