class Solution {
	long num(int n, int k, int t, long st) {
		if (t < 0 || n < 0) {
			return 0;
		}
		if (n == 0 && t == 0) {
			return 1;
		}
		if (st[n][t] != -1) {
			return st[n][t];
		}
		long sum = 0;
		for (int i = 1; i <= k; i++) {
			sum = (long) ((sum + num(n - 1,k,t - i,st)) % 1000000007);
		}
		st[n][t] = sum;
		return sum;
	}
	int numRollsToTarget(int n, int k, int t) {
		long st = new long[n + 1][t + 1];
		for (int i = 0; i <= n; i++) {
			Arrays.fill(st[i],-1);
		}
		return (int) (num(n,k,t,st) % 1000000007);
	}
}