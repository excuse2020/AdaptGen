class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		long row = (long) n;
		long colm = (long) n;
		HashSet<Integer> rSet = new HashSet<>();
		HashSet<Integer> cSet = new HashSet<>();
		long ans = 0l;
		for (int i = queries.length - 1; i >= 0; i--) {
			if (queries[i][0] == 1) {
				if (!cSet.contains(queries[i][1])) {
					ans += row * ((long) queries[i][2]);
					colm--;
					cSet.add(queries[i][1]);
				}
			} 
			else {
				if (!rSet.contains(queries[i][1])) {
					ans += colm * ((long) queries[i][2]);
					row--;
					rSet.add(queries[i][1]);
				}
			}
		}
		return ans;
	}
}