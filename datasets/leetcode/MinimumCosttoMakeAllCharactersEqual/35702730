class Solution {
	char flipChar(char c) {
	}
	long minimumCost(String s) {
		int mid = s.length() / 2;
		long cost = 0;
		int l = mid - 1;
		boolean fliped = false;
		while (l >= 0) {
			char cur = fliped ? flipChar(s.charAt(l)) : s.charAt(l);
			if (cur != s.charAt(mid)) {
				fliped = fliped ^ true;
				cost += l + 1;
			}
			l--;
		}
		int r = mid + 1;
		fliped = false;
		while (r < s.length()) {
			char cur = fliped ? flipChar(s.charAt(r)) : s.charAt(r);
			if (cur != s.charAt(mid)) {
				fliped = fliped ^ true;
				cost += (s.length() - r);
			}
			r++;
		}
		return cost;
	}
}