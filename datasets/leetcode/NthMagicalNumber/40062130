class Solution {
	int gcd(int a, int b) {
		if (b == 0) {
			return a;
		}
		return gcd(b,a % b);
	}
	int lcm(int a, int b) {
		return (a * b) / gcd(a,b);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long left = Math.min(a,b);
		long right = n * left;
		long lcm = lcm(a,b);
		long answer = -1;
		while (left <= right) {
			long mid = left + (right - left) / 2;
			long count = (mid / a) + (mid / b) - (mid / lcm);
			if (count >= n) {
				answer = mid;
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return (int) (answer % 1000000007);
	}
}