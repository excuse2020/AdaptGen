class Solution {
	int func(int index, int bool, int nums1, int nums2, Map<String, Integer> map) {
		if (index >= nums1.length) {
			return 0;
		}
		String key = Arrays.toString(bool) + "||";
		if (map.get(key) != null) {
			return map.get(key);
		}
		int mini = Integer.MAX_VALUE;
		for (int i = 0; i < nums2.length; i++) {
			if (bool[i] == 0) {
				bool[i] = 1;
				int ans = (nums1[index] ^ nums2[i]) + func(index + 1,bool,nums1,nums2,map);
				bool[i] = 0;
				mini = Math.min(ans,mini);
			}
		}
		map.put(key,mini);
		return mini;
	}
	int minimumXORSum(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int bool = new int[n];
		Map<String, Integer> map = new HashMap<>();
		return func(0,bool,nums1,nums2,map);
	}
}