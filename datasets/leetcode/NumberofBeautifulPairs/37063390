class Solution {
	int countBeautifulPairs(int[] nums) {
		int numberOfBeautifulPairs = 0;
		for (int i = 0; i < nums.length; i++) {
			int firstDigit = this.getFirstDigit(nums[i]);
			for (int j = i + 1; j < nums.length; j++) {
				int lastDigit = nums[j] % 10;
				if (this.isCoprime(firstDigit,lastDigit)) {
					numberOfBeautifulPairs++;
				}
			}
		}
		return numberOfBeautifulPairs;
	}
	int getFirstDigit(int num) {
		while (num >= 10) {
			num /= 10;
		}
		return num;
	}
	boolean isCoprime(int num1, int num2) {
		if (num2 < num1) {
			int temp = num1;
			num1 = num2;
			num2 = temp;
		}
		for (int i = 2; i <= num1; i++) {
			if (num1 % i == 0 && num2 % i == 0) {
				return false;
			}
		}
		return true;
	}
}