class Solution {
	int getLucky(String s, int k) {
		s = s.toLowerCase();
		if (s.length() == 1 && k == getPosition(s.charAt(0))) {
			return getPosition(s.charAt(0));
		}
		String ans = "";
		for (int i = 0; i < s.length(); i++) {
			ans += getPosition(s.charAt(i));
		}
		int n = 0;
		int ansLength = 0;
		int afterKProcess = 0;
		for (int i = 0; i < k; i++) {
			if (i == 0) {
				while (ansLength < ans.length()) {
					int lastDigit = Character.getNumericValue(ans.charAt(ansLength));
					afterKProcess += lastDigit;
					ansLength++;
				}
				n = afterKProcess;
				afterKProcess = 0;
			} 
			else {
				while (0 < n) {
					int lastDigit = n % 10;
					afterKProcess += lastDigit;
					n = n / 10;
				}
				n = afterKProcess;
				afterKProcess = 0;
			}
		}
		return n;
	}
	int getPosition(char n) {
		char last = n;
		int counter = 0;
		char a;
	}
}