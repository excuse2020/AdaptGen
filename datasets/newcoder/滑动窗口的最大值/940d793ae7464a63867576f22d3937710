class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		ArrayList<Integer> res = new ArrayList<>();
		if (size <= 0 || size > num.length) {
			return res;
		}
		Deque<Integer> deque = new ArrayDeque<>();
		for (int i = 0; i < size; i++) {
			while (!deque.isEmpty() && num[deque.peekLast()] < num[i]) {
				deque.pollLast();
			}
			deque.offerLast(i);
		}
		res.add(num[deque.peekFirst()]);
		for (int i = size; i < num.length; i++) {
			if (deque.peekFirst() < i - size + 1) {
				deque.pollFirst();
			}
			while (!deque.isEmpty() && num[deque.peekLast()] < num[i]) {
				deque.pollLast();
			}
			deque.offerLast(i);
			res.add(num[deque.peekFirst()]);
		}
		return res;
	}
}