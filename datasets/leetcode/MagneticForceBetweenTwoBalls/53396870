class Solution {
	int maxDistance(int[] position, int m) {
		int low = 1;
		int ans = -1;
		Arrays.sort(position);
		int high = Math.abs(position[0] - position[position.length - 1]);
		while (low <= high) {
			int mid = (low + high) / 2;
			if (solve(position,m - 1,mid)) {
				low = mid + 1;
				ans = mid;
			} 
			else {
				high = mid - 1;
			}
		}
		return ans;
	}
	boolean solve(int[] nums, int m, int mid) {
		boolean check = true;
		int val = nums[0];
		int count = 0;
		for (int i = 1; i < nums.length; i++) {
			if (count == m) {
				return true;
			}
			if (nums[i] - val >= mid) {
				count++;
				val = nums[i];
			}
		}
		return count >= m;
	}
}