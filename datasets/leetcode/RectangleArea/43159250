class Solution {
	int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int dx = 0;
		if (ax1 <= ax2 && ax2 <= bx1 && bx1 <= bx2) {
			dx = 0;
		} 
		else if (bx1 <= bx2 && bx2 <= ax1 && ax1 <= ax2) {
			dx = 0;
		} 
		else if (ax1 <= bx1 && bx1 <= ax2 && ax2 <= bx2) {
			dx = ax2 - bx1;
		} 
		else if (bx1 <= ax1 && ax1 <= bx2 && bx2 <= ax2) {
			dx = bx2 - ax1;
		} 
		else if (ax1 <= bx1 && bx1 <= ax2 && bx2 <= ax2) {
			dx = bx2 - bx1;
		} 
		else if (bx1 <= ax1 && ax1 <= bx2 && ax2 <= bx2) {
			dx = ax2 - ax1;
		}
		int dy = 0;
		if (ay1 <= ay2 && ay2 <= by1 && by1 <= by2) {
			dy = 0;
		} 
		else if (bx1 <= by2 && by2 <= ay1 && ay1 <= ay2) {
			dy = 0;
		} 
		else if (ay1 <= by1 && by1 <= ay2 && ay2 <= by2) {
			dy = ay2 - by1;
		} 
		else if (by1 <= ay1 && ay1 <= by2 && by2 <= ay2) {
			dy = by2 - ay1;
		} 
		else if (ay1 <= by1 && by1 <= ay2 && by2 <= ay2) {
			dy = by2 - by1;
		} 
		else if (by1 <= ay1 && ay1 <= by2 && ay2 <= by2) {
			dy = ay2 - ay1;
		}
		return (ax2 - ax1) * (ay2 - ay1) + (bx2 - bx1) * (by2 - by1) - dx * dy;
	}
}