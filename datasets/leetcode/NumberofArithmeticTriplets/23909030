class Solution {
	int arithmeticTriplets(int[] nums, int diff) {
		int size = nums.length, count = 0;
		for (int i = 0; i < size - 2; i++) {
			for (int j = i + 1; j < size; j++) {
				int currDiff = diff + nums[j];
				boolean firstCond = (nums[j] - nums[i]) == diff;
				boolean secondCond = binarySearchUtil(nums,j + 1,size - 1,currDiff);
				if (firstCond && secondCond) {
					count++;
				}
			}
		}
		return count;
	}
	boolean binarySearchUtil(int[] nums, int l, int r, int k) {
		while (l <= r) {
			int mid = l + (r - l) / 2;
			if (nums[mid] == k) {
				return true;
			} 
			else if (k > nums[mid]) {
				l = mid + 1;
			} 
			else {
				r = mid - 1;
			}
		}
		return false;
	}
}