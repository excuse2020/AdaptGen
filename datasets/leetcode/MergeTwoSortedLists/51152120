class Solution {
	ListNode mergeTwoLists(ListNode list1, ListNode list2) {
		if (list1 == null && list2 == null) {
			return null;
		} 
		else if (list1 == null) {
			return list2;
		} 
		else if (list2 == null) {
			return list1;
		}
		ListNode head = null;
		ListNode curr1 = list1;
		ListNode curr2 = list2;
		ListNode current = null;
		while (curr1 != null && curr2 != null) {
			ListNode newnode = new ListNode();
			if (curr1.val <= curr2.val) {
				newnode.val = curr1.val;
				curr1 = curr1.next;
			} 
			else {
				newnode.val = curr2.val;
				curr2 = curr2.next;
			}
			if (head == null) {
				head = newnode;
			} 
			else {
				current.next = newnode;
			}
			current = newnode;
		}
		while (curr1 != null) {
			ListNode newnode = new ListNode(curr1.val);
			current.next = newnode;
			current = newnode;
			curr1 = curr1.next;
		}
		while (curr2 != null) {
			ListNode newnode = new ListNode(curr2.val);
			current.next = newnode;
			current = newnode;
			curr2 = curr2.next;
		}
		return head;
	}
}