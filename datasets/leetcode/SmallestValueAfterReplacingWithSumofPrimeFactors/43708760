class Solution {
	boolean is_prime(int n) {
		if (n < 2) {
			return false;
		}
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int prime_factorization(int n) {
		int i = 2;
		int sum_of_primes = 0;
		while (i * i <= n) {
			if (n % i == 0) {
				sum_of_primes += i;
				n /= i;
			} 
			else {
				i++;
			}
		}
		if (n != 1) {
			sum_of_primes += n;
		}
		return sum_of_primes;
	}
	int smallestValue(int n) {
		if (is_prime(n)) {
			return n;
		}
		if (n == prime_factorization(n)) {
			return prime_factorization(n);
		}
		return smallestValue(prime_factorization(n));
	}
}