class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		if (pRoot == null) {
			return result;
		}
		Queue<TreeNode> queue = new LinkedList<>();
		ArrayList<Integer> item = new ArrayList<Integer>();
		result.add(item);
		queue.add(pRoot);
		int level = 1;
		HashMap<TreeNode, Integer> map = new HashMap<>();
		map.put(pRoot,1);
		while (!queue.isEmpty()) {
			TreeNode node = queue.poll();
			int curLevel = map.get(node);
			if (curLevel != level) {
				item = new ArrayList<>();
				result.add(item);
				level = curLevel;
			}
			item.add(node.val);
			if (node.left != null) {
				map.put(node.left,curLevel + 1);
				queue.add(node.left);
			}
			if (node.right != null) {
				map.put(node.right,curLevel + 1);
				queue.add(node.right);
			}
		}
		return result;
	}
}