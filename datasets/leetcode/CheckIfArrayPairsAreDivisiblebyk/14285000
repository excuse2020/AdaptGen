class Solution {
	boolean canArrange(int[] arr, int k) {
		HashMap<Integer, Integer> remFreqMap = new HashMap<>();
		int n = arr.length;
		for (int i = 0; i < n; i++) {
			int rem = arr[i] % k;
			if (rem < 0) {
				rem += k;
			}
			int oldFreq = remFreqMap.getOrDefault(rem,0);
			remFreqMap.put(rem,oldFreq + 1);
		}
		for (int val: arr) {	
			int rem = val % k;
			if (rem == 0) {
				if (remFreqMap.get(rem) % 2 != 0) {
					return false;
				}
			} 
			else if (2 * rem == k) {
				if (remFreqMap.get(rem) % 2 != 0) {
					return false;
				}
			} 
			else {
				int freqOfX = remFreqMap.getOrDefault(rem,0);
				int freqOfKX = remFreqMap.getOrDefault(k - rem,0);
				if (freqOfX != freqOfKX) {
					return false;
				}
			}
		}
		return true;
	}
}