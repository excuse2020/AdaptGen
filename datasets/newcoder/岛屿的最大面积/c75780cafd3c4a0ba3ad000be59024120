class Solution {
	int dfs(int[][] grid, int i, int j) {
		int m = grid.length;
		int n = grid[0].length;
		if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == 0) {
			return 0;
		}
		grid[i][j] = 0;
		return dfs(grid,i - 1,j) + dfs(grid,i + 1,j);
	}
	int maxAreaIsland(int[][] grid) {
		int res = 0;
		int m = grid.length;
		int n = grid[0].length;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] == 1) {
					res = Math.max(res,dfs(grid,i,j));
				}
			}
		}
		return res;
	}
}