class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		HashMap<Integer, Integer> map = new HashMap<>();
		int count = 0;
		for (int i = 0; i < nums1.length; i++) {
			map.put(nums1[i][0],nums1[i][1]);
		}
		for (int i = 0; i < nums2.length; i++) {
			if (map.containsKey(nums2[i][0])) {
				count++;
			}
		}
		int n = nums1.length + nums2.length - count;
		int[][] arr = new int[n][2];
		int i = 0, j = 0, k = 0;
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i][0] == nums2[j][0]) {
				arr[k][0] = nums1[i][0];
				arr[k][1] = nums1[i][1] + nums2[j][1];
				i++;
				j++;
			} 
			else if (nums1[i][0] < nums2[j][0]) {
				arr[k][0] = nums1[i][0];
				arr[k][1] = nums1[i][1];
				i++;
			} 
			else {
				arr[k][0] = nums2[j][0];
				arr[k][1] = nums2[j][1];
				j++;
			}
			k++;
		}
		while (i < nums1.length) {
			arr[k][0] = nums1[i][0];
			arr[k][1] = nums1[i][1];
			i++;
			k++;
		}
		while (j < nums2.length) {
			arr[k][0] = nums2[j][0];
			arr[k][1] = nums2[j][1];
			j++;
			k++;
		}
		return arr;
	}
}