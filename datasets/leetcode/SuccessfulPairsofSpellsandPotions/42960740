class Solution {
	int binarysearch(int multiplier, int[] potions, long success) {
		int start = 0;
		int end = potions.length - 1;
		int index = potions.length;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			long product = (long) multiplier * potions[mid];
			if (product >= success) {
				end = mid - 1;
				index = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return (potions.length - index);
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int[] ans = new int[spells.length];
		for (int i = 0; i < spells.length; i++) {
			int value = binarysearch(spells[i],potions,success);
			ans[i] = value;
		}
		return ans;
	}
}