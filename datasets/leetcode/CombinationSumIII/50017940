class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> res = new ArrayList<>();
		helper(1,k,n,res,new ArrayList<>());
		return res;
	}
	void helper(int start, int k, int n, List<List<Integer>> res, List<Integer> cursum) {
		if (cursum.size() == k && n == 0) {
			res.add(new ArrayList<>(cursum));
			return;
		}
		for (int i = start; i <= 9; i++) {
			if (n - i < 0) {
				break;
			}
			cursum.add(i);
			helper(i + 1,k,n - i,res,cursum);
			cursum.remove(cursum.size() - 1);
		}
	}
}