class Solution {
	int maxDotProduct(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int m = nums2.length;
		int[][] dp = new int[n][m];
		for (int i = 0; i < n; i++) {
			Arrays.fill(dp[i],-1000);
		}
		int ans = solve(nums1,nums2,0,0,dp);
		return ans;
	}
	int solve(int[] arr1, int arr2, int i, int j, int[][] dp) {
		int n = arr1.length;
		int m = arr2.length;
		if (i == n || j == m) {
			return -1000;
		}
		if (dp[i][j] != -1000) {
			return dp[i][j];
		}
		int max1 = arr1[i] * arr2[j];
		int max2 = Math.max(solve(arr1,arr2,i + 1,j + 1,dp),0);
		max1 = max1 + max2;
		int max3 = solve(arr1,arr2,i + 1,j,dp);
		int max4 = solve(arr1,arr2,i,j + 1,dp);
		max3 = Math.max(max3,max4);
		dp[i][j] = Math.max(max1,max3);
		return dp[i][j];
	}
}