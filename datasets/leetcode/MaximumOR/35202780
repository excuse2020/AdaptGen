class Solution {
	long maximumOr(int[] nums, int k) {
		int n = nums.length;
		long[] prefix = new long[n];
		long[] suffix = new long[n];
		prefix[0] = 0;
		suffix[n - 1] = 0;
		for (int i = 1; i < n; i++) {
			prefix[i] = prefix[i - 1] | nums[i - 1];
		}
		for (int i = n - 2; i >= 0; i--) {
			suffix[i] = suffix[i + 1] | nums[i + 1];
		}
		long max = 0;
		for (int i = 0; i < n; i++) {
			long val = prefix[i] | suffix[i];
			long v = nums[i] * (long) Math.pow(2,k);
			max = Math.max(max,val | v);
		}
		return max;
	}
}