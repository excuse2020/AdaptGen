class Solution {
	int minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		int size1 = horizontalCut.length - 1;
		int size2 = verticalCut.length - 1;
		int hp = 1;
		int vp = 1;
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int ans = 0;
		while (size1 >= 0 && size2 >= 0) {
			if (horizontalCut[size1] > verticalCut[size2]) {
				ans += (horizontalCut[size1] * vp);
				size1--;
				hp++;
			} 
			else {
				ans += (verticalCut[size2] * hp);
				size2--;
				vp++;
			}
		}
		for (int i = size1; i >= 0; i--) {
			ans += horizontalCut[i] * vp;
		}
		for (int i = size2; i >= 0; i--) {
			ans += verticalCut[i] * hp;
		}
		return ans;
	}
}