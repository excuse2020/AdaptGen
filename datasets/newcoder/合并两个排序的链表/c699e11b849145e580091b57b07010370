class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null) {
			return pHead2;
		} 
		else if (pHead2 == null) {
			return pHead1;
		}
		ListNode du = new ListNode(-1);
		if (pHead1.val < pHead2.val) {
			du.next = pHead1;
			pHead1 = pHead1.next;
		} 
		else {
			du.next = pHead2;
			pHead2 = pHead2.next;
		}
		ListNode start = du.next;
		while (pHead1 != null || pHead2 != null) {
			ListNode tem = start.next;
			if (pHead1 != null && pHead2 != null) {
				if (pHead1.val < pHead2.val) {
					start.next = pHead1;
					pHead1 = pHead1.next;
					start = start.next;
				} 
				else {
					start.next = pHead2;
					pHead2 = pHead2.next;
					start = start.next;
				}
			} 
			else if (pHead1 == null) {
				start.next = pHead2;
				pHead2 = pHead2.next;
				start = start.next;
			} 
			else {
				start.next = pHead1;
				pHead1 = pHead1.next;
				start = start.next;
			}
		}
		return du.next;
	}
}