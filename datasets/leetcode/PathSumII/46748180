class Solution {
	List<List<Integer>> L = new ArrayList<>();
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		pathsumUTIL(root,targetSum,new ArrayList<>());
		return L;
	}
	void pathsumUTIL(TreeNode root, int targetSum, List<Integer> x) {
		if (root == null) {
			return;
		}
		x.add(root.val);
		if (root.left == null && root.right == null && root.val == targetSum) {
			L.add(new ArrayList<>(x));
		}
		pathsumUTIL(root.left,targetSum - root.val,x);
		pathsumUTIL(root.right,targetSum - root.val,x);
		x.remove(x.size() - 1);
	}
}