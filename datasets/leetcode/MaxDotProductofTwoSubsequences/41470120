class Solution {
	int[][] dp = new int[501][501];
	int m, n;
	int maxDotProduct(int[] nums1, int[] nums2) {
		m = nums1.length;
		n = nums2.length;
		for (int i = 0; i < 501; i++) {
			for (int j = 0; j < 501; j++) {
				dp[i][j] = -1000000000;
			}
		}
		return solve(nums1,nums2,0,0);
	}
	int solve(int[] nums1, int[] nums2, int i, int j) {
		if (i == m || j == n) {
			return -1000000000;
		}
		if (dp[i][j] != -1000000000) {
			return dp[i][j];
		}
		int val = nums1[i] * nums2[j];
		int take_ij = (nums1[i] * nums2[j]) + solve(nums1,nums2,i + 1,j + 1);
		int take_i = solve(nums1,nums2,i,j + 1);
		int take_j = solve(nums1,nums2,i + 1,j);
		return dp[i][j] = Math.max(Math.max(val,take_ij),Math.max(take_i,take_j));
	}
}