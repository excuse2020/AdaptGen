class Solution3 {
	int getLongestPalindrome(String A, int n) {
		if (n < 2) {
			return 1;
		}
		int maxLen = 1;
		char[] cs = A.toCharArray();
		boolean[][] dp = new boolean[n][n];
		for (int i = 0; i < n; i++) {
			dp[i][i] = true;
		}
		for (int j = 1; j <= n - 1; j++) {
			for (int i = 0; i < j; i++) {
				if (cs[i] != cs[j]) {
					dp[i][j] = false;
				} 
				else {
					dp[i][j] = j - i + 1 <= 3 || dp[i + 1][j - 1];
				}
				if (dp[i][j] && j - i + 1 > maxLen) {
					maxLen = j - i + 1;
				}
			}
		}
		return maxLen;
	}
}