class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return null;
		}
		ArrayList<Integer> preList = new ArrayList<>();
		pre(pRootOfTree,preList);
		TreeNode root = new TreeNode(preList.get(0));
		TreeNode preNode = root;
		for (int i = 1; i < preList.size(); i++) {
			TreeNode currentNode = new TreeNode(preList.get(i));
			preNode.right = currentNode;
			currentNode.left = preNode;
			preNode = currentNode;
		}
		return root;
	}
	void pre(TreeNode root, ArrayList<Integer> preList) {
		if (root == null) {
			return;
		}
		pre(root.left,preList);
		preList.add(root.val);
		pre(root.right,preList);
	}
}