class Solution {
	int minOperations(int n) {
		int operations = 0;
		TreeSet<Integer> powersOfTwo = new TreeSet<>();
		for (int i = 0; i < 20; i++) {
			powersOfTwo.add((int) Math.pow(2,i));
		}
		while (n != 0) {
			operations++;
			int floor = powersOfTwo.floor(n);
			int ceiling = powersOfTwo.ceiling(n);
			if (n - floor > ceiling - n) {
				n = ceiling - n;
			} 
			else {
				n -= floor;
			}
		}
		return operations;
	}
}