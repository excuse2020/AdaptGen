class Solution {
	int strStr(String haystack, String needle) {
		if (needle.length() <= 0) {
			return 0;
		}
		int lps = new int[needle.length()];
		int i = 1, prevLps = 0;
		while (i < needle.length()) {
			if (needle.charAt(i) == needle.charAt(prevLps)) {
				prevLps += 1;
				lps[i] = prevLps;
				i++;
			} 
			else if (prevLps == 0) {
				lps[i] = 0;
				i++;
			} 
			else {
				prevLps = lps[prevLps - 1];
			}
		}
		for (int x = 0; x < lps.length; x++) {
			lps[x] -= 1;
		}
		int k = -1, ind = -1;
		for (int j = 0; j < haystack.length(); j++) {
			if (needle.charAt(k + 1) == haystack.charAt(j)) {
				k++;
			} 
			else if (k != -1 && needle.charAt(k + 1) != haystack.charAt(j)) {
				k = lps[k];
				j--;
			}
			if (k == needle.length() - 1) {
				ind = j - needle.length() + 1;
				break;
			}
		}
		return ind;
	}
}