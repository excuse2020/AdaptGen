class Solution {
	int countPrimeSetBits(int left, int right) {
		int[] ans = new int[(right - left) + 1];
		int j = 0;
		for (int i = left; i <= right; i++) {
			ans[j] = rec(i);
			j++;
		}
		int count = 0;
		for (int i = 0; i < ans.length; i++) {
			if (isPrime(ans[i])) {
				count++;
			}
		}
		return count;
	}
	boolean isPrime(int n) {
		if (n <= 1) {
			return false;
		} 
		else {
			for (int i = 2; i < n; i++) {
				if (n % i == 0) {
					return false;
				}
			}
			return true;
		}
	}
	int rec(int i) {
		if (i == 0) {
			return 0;
		}
		if (i == 1) {
			return 1;
		}
		if (i % 2 == 0) {
			return rec(i / 2);
		} 
		else {
			return (1 + rec(i / 2));
		}
	}
}