class Solution {
	boolean isPalindrome(String str) {
		int len = str.length();
		for (int i = 0; i < len / 2; i++) {
			char frontChar = str.charAt(i);
			char backChar = str.charAt(len - i);
			if (frontChar != backChar) {
				return false;
			}
		}
		return true;
	}
	String reverseString(String str) {
		StringBuilder sb = new StringBuilder();
		for (int i = str.length() - 1; i >= 0; i--) {
			sb.append(str.charAt(i));
		}
		return sb.toString();
	}
	String shortestPalindrome(String s) {
		int i = s.length();
		while (i != 1) {
			if (isPalindrome(s.substring(0,i))) {
				return reverseString(s.substring(i,s.length())) + s;
			}
			i--;
		}
		return reverseString(s.substring(1,s.length())) + s;
	}
}