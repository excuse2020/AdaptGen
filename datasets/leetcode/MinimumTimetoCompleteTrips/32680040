class Solution {
	long minimumTime(int[] time, int totalTrips) {
		long left = 1;
		long min = time[0];
		for (int t: time) {	
			min = Math.min(min,t);
		}
		long right = min * totalTrips;
		long mid, total;
		while (left <= right) {
			mid = left + (right - left) / 2;
			total = tripcount(time,mid);
			if (total < totalTrips) {
				left = mid + 1;
			} 
			else {
				right = mid - 1;
			}
		}
		return left;
	}
	long tripcount(int[] time, long point) {
		long total = 0;
		for (int i = 0; i < time.length; i++) {
			total += (long) ((point) / (long) time[i]);
		}
		return total;
	}
}