class Solution {
	int similarPairs(String[] words) {
		String uniqueCharacterStrings = new String[words.length];
		for (int i = 0; i < words.length; i++) {
			String str = words[i];
			HashSet<Character> hs = new HashSet<>();
			for (int j = 0; j < str.length(); j++) {
				hs.add(str.charAt(j));
			}
			Iterator<Character> iterator = hs.iterator();
			String temp = "";
			while (iterator.hasNext()) {
				char ch = iterator.next();
				temp = temp + ch;
			}
			uniqueCharacterStrings[i] = temp;
		}
		int pairs = 0;
		for (int i = 0; i < uniqueCharacterStrings.length; i++) {
			for (int j = i + 1; j < uniqueCharacterStrings.length; j++) {
				if (uniqueCharacterStrings[i].equals(uniqueCharacterStrings[j])) {
					pairs++;
				}
			}
		}
		return pairs;
	}
}