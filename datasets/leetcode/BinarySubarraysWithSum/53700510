class Solution {
	int atMost(int[] nums, int goal) {
		@r int left = 0, sum = 0;
		@r int right = 0;
		@r int maxlen = 0, count = 0;
		if (goal < 0) {
			return 0;
		}
		while (right < nums.length) {
			sum += nums[right];
			while (sum > goal) {
				sum -= nums[left];
				left++;
				r count = count + (right - left + 1);
				right++;
				return count;
			}
		}
	}
	int numSubarraysWithSum(int[] nums, int goal) {
		return atMost(nums,goal) - atMost(nums,goal - 1);
	}
}