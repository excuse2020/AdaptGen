class Solution {
	int count(int n) {
		boolean[] bool = new boolean[n + 1];
		Arrays.fill(bool,true);
		bool[0] = false;
		bool[1] = false;
		for (int i = 2; i < n; i++) {
			if (bool[i]) {
				for (int j = 2; j * i <= n; j++) {
					bool[j * i] = false;
				}
			}
		}
		int f = 0;
		for (int i = 0; i <= n; i++) {
			if (bool[i]) {
				f++;
			}
		}
		return f;
	}
	int numPrimeArrangements(int n) {
		long M = 1000000007;
		int c = count(n);
		long res = 1;
		for (int i = c; i > 0; i--) {
			res = (res * i) % M;
		}
		for (int i = n - c; i > 0; i--) {
			res = (res * i) % M;
		}
		return (int) res;
	}
}