class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int[] r = new int[nums.length];
		Set<Integer> A = new HashSet<>();
		for (int i = 0; i < nums.length; i++) {
			A.add(nums[i]);
			Set<Integer> B = new HashSet<>();
			for (int k = i + 1; k < nums.length; k++) {
				B.add(nums[k]);
			}
			r[i] = A.size() - B.size();
		}
		return r;
	}
	int[] distinctDifferenceArray(int[] nums) {
		Set<Integer> left = new HashSet<>();
		Set<Integer> right = new HashSet<>();
		int len = nums.length;
		int[] rightEle = new int[len];
		int[] ans = new int[len];
		for (int i = len - 2; i >= 0; i--) {
			right.add(nums[i + 1]);
			rightEle[i] = right.size();
		}
		for (int i = 0; i < len; i++) {
			left.add(nums[i]);
			ans[i] = left.size() - rightEle[i];
		}
		return ans;
	}
}