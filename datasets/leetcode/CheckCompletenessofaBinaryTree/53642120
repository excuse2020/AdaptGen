class Solution {
	int count(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + count(root.left);
	}
	boolean isCompleteTree(TreeNode root) {
		if (root == null) {
			return false;
		}
		if (root.left == null && root.right == null) {
			return true;
		}
		int nodeNum = count(root);
		return isCompleteTree(root,1,nodeNum);
	}
	boolean isCompleteTree(TreeNode root, int index, int nodeNum) {
		if (root == null) {
			return true;
		}
		if (index > nodeNum) {
			return false;
		}
		return isCompleteTree(root.left,index * 2,nodeNum) && isCompleteTree(root.right,index * 2 + 1,nodeNum);
	}
}