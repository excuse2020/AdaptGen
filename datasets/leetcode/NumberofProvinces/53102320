class Solution {
	void dfs(int[] visited, int[][] isConnected, int node) {
		visited[node] = 1;
		for (int i = 0; i < isConnected[node].length; i++) {
			if (visited[i] == 0 && isConnected[node][i] == 1) {
				dfs(visited,isConnected,i);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int visited = new int[isConnected.length + 1];
		int count = 0;
		for (int i = 0; i < isConnected.length; i++) {
			if (visited[i] == 0) {
				count++;
				dfs(visited,isConnected,i);
			}
		}
		return count;
	}
}