class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head, fast = head.next;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode nextHead = slow.next;
		slow.next = null;
		nextHead = reverse(nextHead);
		int ans = Integer.MIN_VALUE;
		while (head != null && nextHead != null) {
			ans = Math.max(ans,(head.val + nextHead.val));
			head = head.next;
			nextHead = nextHead.next;
		}
		return ans;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null, curr = head, next;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		head = prev;
		return head;
	}
}