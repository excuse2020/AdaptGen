class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		return helper(n);
	}
	List<TreeNode> helper(int n) {
		if (n == 1) {
			ArrayList<TreeNode> base = new ArrayList<>();
			base.add(new TreeNode(0));
			return base;
		}
		List<TreeNode> ans = new ArrayList<>();
		for (int i = 1; i < n; i += 2) {
			List<TreeNode> lef = helper(i);
			List<TreeNode> rig = helper(n - i);
			for (TreeNode l: lef) {	
				for (TreeNode r: rig) {	
					TreeNode root = new TreeNode(0);
					root.left = l;
					root.right = r;
					ans.add(root);
				}
			}
		}
		return ans;
	}
}