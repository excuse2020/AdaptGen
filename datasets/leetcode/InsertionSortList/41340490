class Solution {
	ListNode insertionSortList(ListNode head) {
		ListNode node = head;
		int count = 0;
		while (node != null) {
			count++;
			node = node.next;
		}
		int[] arr = new int[count];
		node = head;
		int i = 0;
		while (node != null) {
			arr[i++] = node.val;
			node = node.next;
		}
		sort(arr);
		node = head;
		i = 0;
		while (node != null) {
			node.val = arr[i++];
			node = node.next;
		}
		return head;
	}
	int[] sort(int[] arr) {
		for (int i = 1; i < arr.length; i++) {
			int current = arr[i];
			int j = i - 1;
			while (j >= 0 && current < arr[j]) {
				arr[j + 1] = arr[j];
				j--;
			}
			arr[j + 1] = current;
		}
		return arr;
	}
}