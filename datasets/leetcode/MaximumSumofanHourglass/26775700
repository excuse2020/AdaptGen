class Solution {
	int maxSum(int[][] grid) {
		int sum = 0;
		int result = 0;
		int len = grid.length;
		int countCol = 0;
		while (countCol < len - 1) {
			int lenRow = grid[countCol].length;
			for (int i = 1; i < lenRow - 1; i++) {
				boolean isMiddle = false, isLast = false;
				sum += grid[countCol][i] + grid[countCol][i - 1];
				if (countCol + 1 < len) {
					isMiddle = true;
					sum += grid[countCol + 1][i];
				}
				if (countCol + 2 < len) {
					isLast = true;
					sum += grid[countCol + 2][i] + grid[countCol + 2][i - 1];
				}
				if (isMiddle && isLast) {
					result = Math.max(result,sum);
				}
				isMiddle = false;
				isLast = false;
				sum = 0;
			}
			countCol++;
		}
		return result;
	}
}