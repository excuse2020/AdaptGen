class Solution {
	int getMaximumGenerated(int n) {
		if (n == 0) {
			return 0;
		}
		if (n == 1) {
			return 1;
		}
		int i = 0;
		int max = 0;
		int[] nums = new int[n + 1];
		int l = (n - 1) / 2;
		int l1 = n / 2;
		while (i <= l || i <= l1) {
			if (i == 0) {
				nums[i] = 0;
				max = Math.max(max,nums[i]);
			}
			if (i == 1) {
				nums[i] = 1;
				max = Math.max(max,nums[i]);
			}
			if (2 * i >= 2 && 2 * i <= n) {
				nums[2 * i] = nums[i];
				max = Math.max(max,nums[i]);
			}
			if ((2 * i) + 1 >= 2 && (2 * i) + 1 <= n) {
				nums[(2 * i) + 1] = nums[i] + nums[i + 1];
				max = Math.max(max,nums[i] + nums[i + 1]);
			}
			i++;
		}
		return max;
	}
}