class Solution {
	TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		TreeNode[] pPath = path(root,p);
		TreeNode[] qPath = path(root,q);
		TreeNode last = null;
		for (int i = 0; i < pPath.length; i++) {
			if (pPath[i] != qPath[i]) {
				return last;
			} 
			else {
				last = pPath[i];
			}
		}
		return null;
	}
	TreeNode[] path(TreeNode root, TreeNode end) {
		TreeNode[] result = new TreeNode[100000];
		int counter = 0;
		TreeNode current = root;
		boolean found = false;
		while (current.val != end.val) {
			if (current.val < end.val) {
				result[counter] = current;
				current = current.right;
				counter++;
			} 
			else {
				result[counter] = current;
				current = current.left;
				counter++;
			}
		}
		result[counter] = current;
		return result;
	}
}