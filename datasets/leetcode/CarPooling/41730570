class Solution {
	boolean carPooling(int[][] trips, int capacity) {
		Arrays.sort(trips,(a, b) -> {a[1] - b[1]});
		PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) -> {a[2] - b[2]});
		int currentCap = 0;
		for (int i = 0; i < trips.length; i++) {
			while (!pq.isEmpty() && pq.peek()[2] <= trips[i][1]) {
				currentCap = currentCap - pq.poll()[0];
			}
			currentCap = currentCap + trips[i][0];
			pq.add(trips[i]);
			if (currentCap > capacity) {
				return false;
			}
		}
		return true;
	}
}