class Solution {
	int longestWord(String[] array) {
		int len = 0;
		for (String str: array) {	
			if (str.length() > len) {
				len = str.length();
			}
		}
		return len;
	}
	List<String> printVertically(String s) {
		String[] array = s.split(" ");
		Map<Integer, StringBuilder> map = new HashMap();
		int limit = longestWord(array);
		for (int i = 0; i < limit; i++) {
			map.put(i,new StringBuilder());
		}
		for (int i: map.keySet()) {	
			for (int w = 0; w < array.length; w++) {
				if (i < array[w].length()) {
					map.get(i).append(array[w].charAt(i));
				} 
				else {
					map.get(i).append(" ");
				}
			}
		}
		List<String> list = new ArrayList();
		for (int i: map.keySet()) {	
			list.add(removeTrailingSpaces(map.get(i).toString()));
		}
		return list;
	}
	String removeTrailingSpaces(String param) {
		if (param == null) {
			return null;
		}
		int len = param.length();
		for (; len > 0; len--) {
			if (!Character.isWhitespace(param.charAt(len - 1))) {
				break;
			}
		}
		return param.substring(0,len);
	}
}