class Solution {
	void add(List<Integer> l, TreeNode root) {
		if (root == null) {
			return;
		}
		add(l,root.left);
		l.add(root.val);
		add(l,root.right);
	}
	TreeNode balanceBST(TreeNode root) {
		if (root == null) {
			return root;
		}
		List<Integer> l = new ArrayList<>();
		add(l,root);
		return recons(l,0,l.size() - 1);
	}
	TreeNode recons(List<Integer> l, int le, int r) {
		if (le > r) {
			return null;
		}
		int mid = le + (r - le) / 2;
		TreeNode root = new TreeNode(l.get(mid));
		root.left = recons(l,le,mid - 1);
		root.right = recons(l,mid + 1,r);
		return root;
	}
}