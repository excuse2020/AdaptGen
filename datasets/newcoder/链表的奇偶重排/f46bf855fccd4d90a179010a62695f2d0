class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return head;
		}
		List<ListNode> jsList = new ArrayList<>();
		List<ListNode> osList = new ArrayList<>();
		ListNode jsNode = head;
		ListNode osNode = head.next;
		while (jsNode != null) {
			jsList.add(jsNode);
			jsNode = jsNode.next;
			if (jsNode != null) {
				jsNode = jsNode.next;
			}
		}
		while (osNode != null) {
			osList.add(osNode);
			osNode = osNode.next;
			if (osNode != null) {
				osNode = osNode.next;
			}
		}
		ListNode newHeadNode = new ListNode(-1);
		ListNode tempHead = newHeadNode;
		for (int i = 0; i < jsList.size(); i++) {
			newHeadNode.next = jsList.get(i);
			newHeadNode = newHeadNode.next;
		}
		for (int i = 0; i < osList.size(); i++) {
			newHeadNode.next = osList.get(i);
			newHeadNode = newHeadNode.next;
		}
		newHeadNode.next = null;
		return tempHead.next;
	}
}