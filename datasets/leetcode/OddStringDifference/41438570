class Solution {
	boolean isEqual(int[] array1, int[] array2) {
		return Arrays.equals(array1,array2);
	}
	String oddString(String[] words) {
		int n = words[0].length() - 1;
		int[] equalArray = new int[n];
		int[] array1 = new int[n];
		int[] array2 = new int[n];
		int[] array3 = new int[n];
		int[] nextArray = new int[n];
		String word1 = words[0];
		String word2 = words[1];
		String word3 = words[2];
		populateArray(words[0],array1);
		populateArray(words[1],array2);
		populateArray(words[2],array3);
		if (isEqual(array1,array2)) {
			equalArray = array1;
			if (!isEqual(array2,array3)) {
				return words[2];
			}
		} 
		else if (isEqual(array2,array3)) {
			return words[0];
		} 
		else if (isEqual(array1,array3)) {
			return words[1];
		}
		for (int i = 3; i < words.length; i++) {
			populateArray(words[i],nextArray);
			if (!isEqual(equalArray,nextArray)) {
				return words[i];
			}
		}
		return null;
	}
	void populateArray(String word, int[] array) {
		char[] crArray = word.toCharArray();
		int i = 1;
		int num1;
	}
}