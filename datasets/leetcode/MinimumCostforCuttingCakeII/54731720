class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		int verticalPiece = 1;
		int horizontalPiece = 1;
		long total = 0;
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int i = m - 2;
		int j = n - 2;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[i] > verticalCut[j]) {
				total += horizontalCut[i] * verticalPiece;
				horizontalPiece++;
				i--;
			} 
			else {
				total += verticalCut[j] * horizontalPiece;
				verticalPiece++;
				j--;
			}
		}
		while (j >= 0) {
			total += verticalCut[j] * horizontalPiece;
			verticalPiece++;
			j--;
		}
		while (i >= 0) {
			total += horizontalCut[i] * verticalPiece;
			horizontalPiece++;
			i--;
		}
		return total;
	}
}