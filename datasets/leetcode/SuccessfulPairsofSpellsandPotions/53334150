class Solution {
	int countSuccess(int spell, long success, int[] potions) {
		int left = 0;
		int right = potions.length;
		while (left < right) {
			int mid = left + (right - left) / 2;
			if ((long) potions[mid] * spell >= success) {
				right = mid;
			} 
			else {
				left = mid + 1;
			}
		}
		return potions.length - left;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int[] res = new int[spells.length];
		Arrays.sort(potions);
		for (int i = 0; i < spells.length; i++) {
			int spell = spells[i];
			int count = countSuccess(spell,success,potions);
			res[i] = count;
		}
		return res;
	}
}