class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int len = queries.length, rowsrem = n, colsrem = n;
		long ans = 0;
		boolean rows = new boolean[n];
		boolean cols = new boolean[n];
		for (int i = len - 1; i >= 0; i--) {
			int signal = queries[i][0];
			int index = queries[i][1];
			int val = queries[i][2];
			if (signal == 0) {
				if (!rows[index]) {
					ans += val * colsrem;
					rows[index] = true;
					rowsrem--;
				}
			} 
			else {
				if (!cols[index]) {
					ans += val * rowsrem;
					cols[index] = true;
					colsrem--;
				}
			}
			if (colsrem == 0 && rowsrem == 0) {
				break;
			}
		}
		return ans;
	}
}