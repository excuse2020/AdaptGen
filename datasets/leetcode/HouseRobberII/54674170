class Solution {
	int func(int[] nums) {
		int n = nums.length;
		int prev = nums[0];
		int prev2 = 0, curr = 0;
		for (int i = 1; i < n; i++) {
			int take = nums[i];
			if (i > 1) {
				take += prev2;
			}
			int nottake = 0 + prev;
			curr = Math.max(take,nottake);
			prev2 = prev;
			prev = curr;
		}
		return prev;
	}
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		int[] arr1 = new int[n - 1];
		int[] arr2 = new int[n - 1];
		int j = 0;
		int k = 0;
		for (int i = 0; i < n; i++) {
			if (i != 0) {
				arr1[j++] = nums[i];
			}
			if (i != n - 1) {
				arr2[k++] = nums[i];
			}
		}
		int x = func(arr1);
		int y = func(arr2);
		return Math.max(x,y);
	}
}