class Solution {
	List<List<Integer>> permuteUnique(int[] nums) {
		List<List<Integer>> res = new ArrayList<>();
		List<Integer> list = new ArrayList<>();
		boolean[] used = new boolean[nums.length];
		Arrays.sort(nums);
		test(res,list,nums,used);
		return res;
	}
	void test(List<List<Integer>> res, List<Integer> list, int[] nums, boolean[] used) {
		if (list.size() == nums.length) {
			res.add(new ArrayList<>(list));
			return;
		}
		for (int i = 0; i < nums.length; i++) {
			if (used[i] || (i > 0 && nums[i] == nums[i - 1] && !used[i - 1])) {
				continue;
			}
			used[i] = true;
			list.add(nums[i]);
			test(res,list,nums,used);
			list.remove(list.size() - 1);
			used[i] = false;
		}
	}
}