class Solution {
	boolean stoneGame(int[] piles) {
		if (piles.length <= 2) {
			return true;
		}
		int totalSum = 0;
		List<Integer> ls = new ArrayList<>();
		for (int i = 0; i < piles.length; i++) {
			totalSum += piles[i];
			ls.add(piles[i]);
		}
		int mid = totalSum / 2;
		int aSum = 0;
		int bSum = 0;
		while (!ls.isEmpty()) {
			Collections.sort(ls);
			aSum += ls.get(ls.size() - 1);
			ls.remove(ls.get(ls.size() - 1));
			bSum += ls.get(ls.size() - 1);
			ls.remove(ls.get(ls.size() - 1));
			if (aSum > mid) {
				return true;
			} 
			else if (bSum > mid) {
				return false;
			}
		}
		return true;
	}
}