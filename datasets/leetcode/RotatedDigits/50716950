class Solution {
	boolean isGoodNumber(int x) {
		boolean atLeastOneRotation = false;
		while (x > 0) {
			int remainder = x % 10;
			if (remainder == 2 || remainder == 5 || remainder == 6 || remainder == 9) {
				atLeastOneRotation = true;
			}
			if (remainder == 3 || remainder == 4 || remainder == 7) {
				return false;
			}
			x = x / 10;
		}
		return atLeastOneRotation;
	}
	int rotatedDigits(int n) {
		if (n == 1) {
			return 0;
		}
		int numberOfGoodNumbers = 0;
		for (int i = 2; i <= n; i++) {
			if (isGoodNumber(i)) {
				numberOfGoodNumbers++;
			}
		}
		return numberOfGoodNumbers;
	}
}