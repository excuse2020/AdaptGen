class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int N = arr.length;
		int K = k + 1;
		int[] dp_arr = new int[k + 1];
		Arrays.fill(dp_arr,0);
		for (int start = N - 1; start >= 0; start--) {
			int currMax = 0;
			int end = Math.min(N,start + k);
			for (int i = start; i < end; i++) {
				currMax = Math.max(currMax,arr[i]);
				dp_arr[start % K] = Math.max(dp_arr[start % K],dp_arr[(i + 1) % K] + currMax * (i - start + 1));
			}
		}
		return dp_arr[0];
	}
}