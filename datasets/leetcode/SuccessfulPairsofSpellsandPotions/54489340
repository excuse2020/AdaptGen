class Solution {
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int n = spells.length;
		int m = potions.length;
		Arrays.sort(potions);
		int[] pairs = new int[n];
		for (int i = 0; i < n; i++) {
			int count = 0;
			int spell = spells[i];
			int start = 0;
			int end = m - 1;
			while (start <= end) {
				int mid = start + (end - start) / 2;
				long product = (long) spell * potions[mid];
				if (product >= success) {
					end = mid - 1;
				} 
				else if (product <= success) {
					start = mid + 1;
				}
			}
			pairs[i] = m - start;
		}
		return pairs;
	}
}