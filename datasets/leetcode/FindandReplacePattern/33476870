class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		LinkedList result = new LinkedList();
		for (String el: words) {	
			if (result(el,pattern)) {
				result.add(el);
			}
		}
		return result;
	}
	boolean result(String words, String pattern) {
		HashMap<Character, Character> map = new HashMap<>();
		for (int i = 0; i < pattern.length(); i++) {
			char key = pattern.charAt(i);
			char value = words.charAt(i);
			if (!(map.containsKey(key))) {
				if (!(map.containsValue(value))) {
					map.put(key,value);
				} 
				else {
					return false;
				}
			} 
			else if (map.containsKey(key)) {
				if (!(map.get(key) == value)) {
					return false;
				}
			}
		}
		return true;
	}
}