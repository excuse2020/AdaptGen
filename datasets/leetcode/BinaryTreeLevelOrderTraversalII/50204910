class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.offer(root);
		while (!q.isEmpty()) {
			int sizeOfLevel = q.size();
			List<Integer> innerList = new ArrayList<>(sizeOfLevel);
			for (int i = 0; i < sizeOfLevel; i++) {
				TreeNode curr = q.poll();
				innerList.add(curr.val);
				if (curr.left != null) {
					q.offer(curr.left);
				}
				if (curr.right != null) {
					q.offer(curr.right);
				}
			}
			result.add(innerList);
		}
		Collections.reverse(result);
		return result;
	}
}