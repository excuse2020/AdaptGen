class Solution {
	int ans = 0;
	int[] freq = new int[10];
	void dfs(TreeNode node) {
		if (node == null) {
			return;
		}
		freq[node.val]++;
		if (node.left == null && node.right == null) {
			if (isPalindrome()) {
				ans++;
			}
		}
		dfs(node.left);
		dfs(node.right);
		freq[node.val]--;
	}
	boolean isPalindrome() {
		int oddCount = 0;
		for (int i = 1; i <= 9; i++) {
			if (freq[i] % 2 != 0) {
				oddCount++;
			}
		}
		return oddCount <= 1;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		dfs(root);
		return ans;
	}
}