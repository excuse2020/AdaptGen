class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long max = 0;
		long currentsum = 0;
		int right = 0;
		Set<Integer> set = new HashSet<>();
		for (int left = 0; left < nums.length; left++) {
			while (right < nums.length && set.size() < k && !set.contains(nums[right])) {
				set.add(nums[right]);
				currentsum += nums[right];
				right++;
			}
			if (set.size() == k) {
				max = Math.max(max,currentsum);
			}
			set.remove(nums[left]);
			currentsum -= nums[left];
		}
		return max;
	}
}