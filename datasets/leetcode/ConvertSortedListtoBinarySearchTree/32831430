class Solution {
	TreeNode convertToBST(ArrayList<Integer> arr, int start, int end) {
		if (start > end) {
			return null;
		}
		int middle = (start + end) / 2;
		TreeNode node = new TreeNode(arr.get(middle));
		node.left = convertToBST(arr,start,middle - 1);
		node.right = convertToBST(arr,middle + 1,end);
		return node;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		if (head.next == null) {
			return new TreeNode(head.val);
		}
		ArrayList<Integer> arr = new ArrayList<>();
		while (head != null) {
			arr.add(head.val);
			head = head.next;
		}
		return convertToBST(arr,0,arr.size() - 1);
	}
}