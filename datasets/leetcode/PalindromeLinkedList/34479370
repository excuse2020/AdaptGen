class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null) {
			return true;
		}
		ListNode middle = middleNode(head);
		ListNode reverse = reverseList(middle);
		while (reverse != null) {
			if (reverse.val != head.val) {
				return false;
			}
			reverse = reverse.next;
			head = head.next;
		}
		return true;
	}
	ListNode middleNode(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast.next != null && fast.next.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		if (fast.next != null) {
			slow = slow.next;
		}
		return slow;
	}
	ListNode reverseList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode prev = null;
		ListNode current = head;
		while (current != null) {
			ListNode next = current.next;
			current.next = prev;
			prev = current;
			current = next;
		}
		return prev;
	}
}