class Solution {
	boolean isPalindrome(String s) {
		int mid = s.length() / 2;
		if (s.length() % 2 == 0) {
			for (int i = mid - 1, j = mid; i >= 0; i--, j++) {
				if (s.charAt(i) != s.charAt(j)) {
					return false;
				}
			}
		} 
		else {
			for (int i = mid - 1, j = mid + 1; i >= 0; i--, j++) {
				if (s.charAt(i) != s.charAt(j)) {
					return false;
				}
			}
		}
		return true;
	}
	String shortestPalindrome(String s) {
		if (isPalindrome(s)) {
			return s;
		}
		int start, end;
		start = 0;
		end = s.length() - 1;
		while (start < end) {
			if (isPalindrome(s.substring(start,end))) {
				break;
			} 
			else {
				end--;
			}
		}
		StringBuilder sb = new StringBuilder(s.substring(end));
		sb.reverse();
		sb.append(s);
		return sb.toString();
	}
}