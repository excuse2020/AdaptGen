class Solution {
	int helper(int row, int col, List<List<Integer>> triangle, int memo) {
		if (row == triangle.size() - 1) {
			return triangle.get(row).get(col);
		}
		if (memo[row][col] != -1) {
			return memo[row][col];
		}
		int left = triangle.get(row).get(col) + helper(row + 1,col,triangle,memo);
		int right = triangle.get(row).get(col) + helper(row + 1,col + 1,triangle,memo);
		return memo[row][col] = Math.min(left,right);
	}
	int minimumTotal(List<List<Integer>> triangle) {
		int len = triangle.size();
		int[][] memo = new int[len][len];
		for (int[] row: memo) {	
			Arrays.fill(row,-1);
		}
		return helper(0,0,triangle,memo);
	}
}