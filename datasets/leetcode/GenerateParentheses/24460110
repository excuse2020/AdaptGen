class Solution {
	List<String> resultList = new LinkedList<String>();
	int target = 0;
	void binary(StringBuilder str, int balance, int countOpening) {
		if (balance >= 0 && countOpening < target + 1) {
			if (balance == 0 && countOpening == target) {
				resultList.add(str.toString());
			} 
			else {
				StringBuilder first = new StringBuilder(str);
				StringBuilder second = new StringBuilder(str);
				first.append("(");
				second.append(")");
				binary(first,balance + 1,countOpening + 1);
				binary(second,balance - 1,countOpening);
			}
		}
	}
	List<String> generateParenthesis(int n) {
		StringBuilder str = new StringBuilder();
		target = n;
		binary(str,0,0);
		return resultList;
	}
}