class Solution {
	int[][] dp;
	int maxVal = 0;
	int maximalSquare(char[][] matrix) {
		int n = matrix.length;
		int m = matrix[0].length;
		dp = new int[n][m];
		for (int i = 0; i < n; i++) {
			Arrays.fill(dp[i],-1);
		}
		solve(matrix,0,0,n,m);
		return maxVal * maxVal;
	}
	int solve(char[][] matrix, int i, int j, int n, int m) {
		if (i < 0 || j < 0 || i >= n || j >= m) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int length = 0;
		int right = solve(matrix,i + 1,j,n,m);
		int down = solve(matrix,i,j + 1,n,m);
		int diag = solve(matrix,i + 1,j + 1,n,m);
	}
}