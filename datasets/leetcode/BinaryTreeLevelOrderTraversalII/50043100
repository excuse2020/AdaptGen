class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> side = new LinkedList<>();
		side.offer(root);
		while (!side.isEmpty()) {
			int queueSize = side.size();
			List<Integer> ans = new ArrayList<>(queueSize);
			for (int i = 0; i < queueSize; i++) {
				TreeNode currentval = side.poll();
				ans.add(currentval.val);
				if (currentval.left != null) {
					side.offer(currentval.left);
				}
				if (currentval.right != null) {
					side.offer(currentval.right);
				}
			}
			result.add(0,ans);
		}
		return result;
	}
}