class Solution {
	int longestSubsequence(int[] arr, int difference) {
		int[] dp = new int[arr.length];
		Arrays.fill(dp,1);
		HashMap<Integer, Integer> res = new HashMap<>();
		for (int i = 0; i < arr.length; i++) {
			int current = arr[i];
			if (res.containsKey(current - difference)) {
				int y = res.get(current - difference);
				dp[i] = dp[i] + dp[y];
			}
			res.put(arr[i],i);
		}
		return Arrays.stream(dp).max().getAsInt();
	}
}