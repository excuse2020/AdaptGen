class Solution {
	int[] countChars(String s) {
		int[] chars = new int[26];
	}
	int[] getCounts(String[] B) {
		int[] charsCountB = new int[26];
		for (String b: B) {	
			int[] tempS = countChars(b);
			for (int i = 0; i < 26; i++) {
				charsCountB[i] = Math.max(charsCountB[i],tempS[i]);
			}
		}
		return charsCountB;
	}
	boolean isSuperset(String strA, int[] charsCountB) {
		int[] countsCharA = countChars(strA);
		for (int i = 0; i < 26; i++) {
			if (countsCharA[i] < charsCountB[i]) {
				return false;
			}
		}
		return true;
	}
	List<String> wordSubsets(String[] A, String[] B) {
		int[] charsCountB = getCounts(B);
		List<String> result = new ArrayList();
		for (String strA: A) {	
			if (isSuperset(strA,charsCountB)) {
				result.add(strA);
			}
		}
		return result;
	}
}