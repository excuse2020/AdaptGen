class Solution {
	void dfs(int i, int[][] isConnected, boolean[] visited) {
		visited[i] = true;
		for (int j = 0; j < isConnected.length; j++) {
			if (isConnected[i][j] == 1 && !visited[j]) {
				dfs(j,isConnected,visited);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int V = isConnected.length;
		boolean[] visited = new boolean[V];
		Arrays.fill(visited,false);
		int count = 0;
		for (int i = 0; i < V; i++) {
			if (!visited[i]) {
				dfs(i,isConnected,visited);
				count++;
			}
		}
		return count;
	}
}