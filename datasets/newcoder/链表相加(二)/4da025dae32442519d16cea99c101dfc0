class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode rL1 = reverseList(head1);
		ListNode rL2 = reverseList(head2);
		int temp = 0;
		ListNode pre = null;
		ListNode head = null;
		ListNode now = null;
		while (rL1 != null || rL2 != null) {
			int a = rL1 == null ? 0 : rL1.val;
			int b = rL2 == null ? 0 : rL2.val;
			int sum = a + b;
			temp = sum / 10;
			now = new ListNode(sum % 10);
			if (rL1 != null) {
				rL1 = rL1.next;
			}
			if (rL2 != null) {
				rL2 = rL2.next;
			}
			if (head == null) {
				pre = now;
				head = now;
				continue;
			}
			pre.next = now;
			pre = now;
		}
		if (temp != 0) {
			now = new ListNode(temp);
			pre.next = now;
		}
		return reverseList(head);
	}
	ListNode reverseList(ListNode head) {
		ListNode dummy = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = dummy;
			dummy = head;
			head = next;
		}
		return dummy;
	}
}