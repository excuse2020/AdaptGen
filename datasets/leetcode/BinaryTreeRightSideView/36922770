class Solution {
	List<Integer> arr = new ArrayList<>();
	int currHeight = 0;
	int height = 0;
	List<List<Integer>> whole = new ArrayList<>();
	List<Integer> rightSideView(TreeNode root) {
		treeHeight(root);
		for (int i = 0; i < height; i++) {
			List<Integer> newArr = new ArrayList<>();
			whole.add(newArr);
		}
		tree(root);
		List<Integer> ret = new ArrayList<>();
		for (List<Integer> i: whole) {	
			ret.add(i.get(0));
		}
		return ret;
	}
	void tree(TreeNode x) {
		if (x == null) {
			return;
		}
		whole.get(currHeight).add(x.val);
		currHeight++;
		tree(x.right);
		tree(x.left);
		currHeight--;
	}
	void treeHeight(TreeNode x) {
		if (x == null) {
			return;
		}
		currHeight++;
		height = Math.max(height,currHeight);
		treeHeight(x.left);
		treeHeight(x.right);
		currHeight--;
	}
}