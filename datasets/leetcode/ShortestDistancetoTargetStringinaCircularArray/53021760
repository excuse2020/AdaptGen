class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		if (words[startIndex].equals(target)) {
			return 0;
		}
		int n = words.length;
		int rightIndex = (startIndex + 1) % n;
		int leftIndex = (startIndex - 1 + n) % n;
		int right_distance = 1, left_distance = 1;
		int found = 0;
		while (rightIndex != startIndex) {
			if (words[rightIndex].equals(target)) {
				found = 1;
				break;
			} 
			else {
				rightIndex = (rightIndex + 1) % n;
				right_distance++;
			}
		}
		while (leftIndex != startIndex) {
			if (words[leftIndex].equals(target)) {
				found = 1;
				break;
			} 
			else {
				leftIndex = (leftIndex - 1 + n) % n;
				left_distance++;
			}
		}
		if (found == 1) {
			return Math.min(left_distance,right_distance);
		} 
		else {
			return -1;
		}
	}
}