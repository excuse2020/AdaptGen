class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		List<ArrayList<String>> paragraph = new ArrayList<ArrayList<String>>();
		List<String> paragraphJustified = new ArrayList<String>();
		List<Integer> lineWordsSize = new ArrayList<Integer>();
		paragraph.add(new ArrayList<String>());
		lineWordsSize.add(0);
		int row = 0;
		int rowSize = 0;
		for (int i = 0; i < words.length; i++) {
			if (rowSize + words[i].length() <= maxWidth) {
				rowSize += words[i].length() + 1;
			} 
			else {
				row++;
				rowSize = words[i].length() + 1;
				paragraph.add(new ArrayList<String>());
				lineWordsSize.add(0);
			}
			lineWordsSize.set(row,lineWordsSize.get(row) + words[i].length());
			paragraph.get(row).add(words[i]);
		}
		int i = 0;
		StringBuffer line = new StringBuffer();
		int maxAvgSpace = (int) Math.ceil(((maxWidth - lineWordsSize.get(i)) * 1.0) / (paragraph.get(i).size() - 1));
		int j = 0;
		line.append(paragraph.get(i).get(j));
		lineWordsSize.set(i,lineWordsSize.get(i) - paragraph.get(i).get(j).length());
		int k = 0;
	}
}