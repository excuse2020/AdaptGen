class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int maxSubarraySum = maxSumSubarray(nums);
		int totalSum = 0;
		for (int i = 0; i < nums.length; i++) {
			totalSum += nums[i];
			nums[i] = -nums[i];
		}
		int circularSubarraySum = totalSum + maxSumSubarray(nums);
		if (circularSubarraySum == 0) {
			return maxSubarraySum;
		}
		return Math.max(maxSubarraySum,circularSubarraySum);
	}
	int maxSumSubarray(int[] nums) {
		int maxSum = nums[0];
		int currentSum = nums[0];
		for (int i = 1; i < nums.length; i++) {
			currentSum = Math.max(nums[i],currentSum + nums[i]);
			maxSum = Math.max(maxSum,currentSum);
		}
		return maxSum;
	}
}