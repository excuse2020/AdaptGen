class Solution {
	int minimumCost(int m, int n, int[] hor, int[] ver) {
		int ans = 0;
		int h = 1;
		int v = 1;
		Arrays.sort(hor);
		Arrays.sort(ver);
		int i = m - 2;
		int j = n - 2;
		while (i >= 0 && j >= 0) {
			if (hor[i] > ver[j]) {
				ans += (hor[i] * h);
				v++;
				i--;
			} 
			else if (hor[i] < ver[j]) {
				ans += (ver[j] * v);
				h++;
				j--;
			} 
			else {
				if (h > v) {
					ans += (hor[i] * h);
					v++;
					i--;
				} 
				else {
					ans += (ver[j] * v);
					h++;
					j--;
				}
			}
		}
		while (i >= 0) {
			ans += (hor[i] * h);
			i--;
		}
		while (j >= 0) {
			ans += (ver[j] * v);
			j--;
		}
		return ans;
	}
}