class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int[] prefix = new int[nums.length];
		int[] suffix = new int[nums.length];
		int sum = 0;
		int maxSum = Integer.MIN_VALUE;
		prefix[0] = 0;
		suffix[nums.length - 1] = nums[nums.length - 1];
		for (int i = 1; i < nums.length; i++) {
			sum += nums[i - 1];
			prefix[i] = Math.max(prefix[i - 1],sum);
		}
		for (int i = nums.length - 2; i >= 0; i--) {
			suffix[i] = nums[i] + suffix[i + 1];
		}
		sum = nums[0];
		maxSum = Math.max(sum,maxSum);
		for (int i = 1; i < nums.length; i++) {
			sum = Math.max(sum + nums[i],nums[i]);
			maxSum = Math.max(sum,maxSum);
			maxSum = Math.max(maxSum,prefix[i] + suffix[i]);
		}
		return maxSum;
	}
}