class Solution {
	boolean flag = true;
	boolean IsSuitable(TreeNode node, int num) {
		TreeNode temp = node;
		boolean flag1 = false;
		boolean flag2 = false;
		node = node.left;
		if (node == null) {
			flag1 = true;
		} 
		else {
			if (node.right == null) {
				flag1 = true;
			} 
			else {
				while (node.right.right != null) {
					node = node.right;
				}
				flag1 = node.right.val < num;
			}
		}
		node = temp.right;
		if (node == null) {
			flag2 = true;
		} 
		else {
			if (node.left == null) {
				flag2 = true;
			} 
			else {
				while (node.left.left != null) {
					node = node.left;
				}
				flag2 = node.left.val > num;
			}
		}
		return flag1 && flag2;
	}
	boolean isValidBST(TreeNode root) {
		if (root == null || (root.left == null && root.right == null)) {
			return true;
		}
		if (!IsSuitable(root,root.val)) {
			return false;
		}
		if ((root.left == null || root.left.val < root.val) && (root.right == null || root.right.val > root.val)) {
			return isValidBST(root.left) && isValidBST(root.right);
		}
		return false;
	}
}