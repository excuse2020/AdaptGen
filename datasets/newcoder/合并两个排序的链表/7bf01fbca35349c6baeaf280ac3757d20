class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null) {
			return pHead2;
		}
		if (pHead2 == null) {
			return pHead1;
		}
		if (pHead1.val <= pHead2.val) {
			pHead1.next = Merge(pHead1.next,pHead2);
			return pHead1;
		} 
		else {
			pHead2.next = Merge(pHead2.next,pHead1);
			return pHead2;
		}
	}
	ListNode find(ListNode a, int v) {
		ListNode te = a;
		while (a.next != null) {
			if (a.next.val <= v) {
				a = a.next;
			} 
			else {
				return a;
			}
		}
		return a;
	}
	void printNode(ListNode node) {
		StringBuilder sb = new StringBuilder();
		sb.append("node: ");
		while (node != null) {
			sb.append(node.val);
			sb.append("->");
			node = node.next;
		}
		System.out.println(sb.toString());
	}
}