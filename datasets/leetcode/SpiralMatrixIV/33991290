class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] rst = new int[m][n];
		for (int[] row: rst) {	
			Arrays.fill(row,-1);
		}
		int up = 0, down = m - 1, left = 0, right = n - 1;
		while (up <= down && left <= right) {
			for (int i = left; i <= right && up <= down; i++) {
				if (head == null) {
					break;
				}
				rst[up][i] = head.val;
				head = head.next;
			}
			up++;
			for (int i = up; i <= down && left <= right; i++) {
				if (head == null) {
					break;
				}
				rst[i][right] = head.val;
				head = head.next;
			}
			right--;
			for (int i = right; i >= left && up <= down; i--) {
				if (head == null) {
					break;
				}
				rst[down][i] = head.val;
				head = head.next;
			}
			down--;
			for (int i = down; i >= up && left <= right; i--) {
				if (head == null) {
					break;
				}
				rst[i][left] = head.val;
				head = head.next;
			}
			left++;
		}
		return rst;
	}
}