class Solution {
	int maxLevelSum(TreeNode root) {
		if (root.left == null && root.right == null) {
			return root.val;
		}
		Queue<TreeNode> queue = new ArrayDeque<>();
		queue.offer(root);
		int level = 1;
		int result = 0;
		int sum = Integer.MIN_VALUE;
		while (!queue.isEmpty()) {
			int size = queue.size();
			int current_sum = 0;
			for (int i = 0; i < size; i++) {
				TreeNode current = queue.poll();
				current_sum += current.val;
				if (current.left != null) {
					queue.offer(current.left);
				}
				if (current.right != null) {
					queue.offer(current.right);
				}
			}
			if (current_sum > sum) {
				sum = current_sum;
				result = level;
			}
			level++;
		}
		return result;
	}
}