class Solution {
	int findMin(int[] nums) {
		if (nums[0] < nums[nums.length - 1] || nums.length == 1) {
			return nums[0];
		}
		int piv = pivot(nums);
		return nums[piv + 1];
	}
	int pivot(int[] arr) {
		int piv = 0;
		int start = 0;
		int end = arr.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (mid < end && arr[mid] > arr[mid + 1]) {
				piv = mid;
				break;
			} 
			else if (mid > start && arr[mid] < arr[mid - 1]) {
				piv = mid - 1;
				break;
			} 
			else if (start < end && arr[start] == arr[start + 1]) {
				start++;
			} 
			else if (start < end && arr[end] == arr[end - 1]) {
				end--;
			} 
			else if (arr[start] > arr[mid]) {
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		return piv;
	}
}