class Solution {
	int minOperations(int n) {
		int dp = new int[100005];
		for (int i = 1; i < 100005; i++) {
			if ((i & (i - 1)) == 0) {
				dp[i] = 1;
			}
		}
		for (int i = 1; i <= n; i++) {
			if ((i & (i - 1)) == 0) {
				continue;
			}
			int near = (int) (Math.log(i) / Math.log(2));
			near = (1 << near);
			dp[i] = 1 + Math.min(dp[i - near],dp[2 * near - i]);
		}
		return dp[n];
	}
}