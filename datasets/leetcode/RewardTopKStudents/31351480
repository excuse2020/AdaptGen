class Solution {
	List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] report, int[] student_id, int k) {
		List<Integer> res = new ArrayList<>();
		Map<String, Integer> score = new HashMap<>();
		for (String s: positive_feedback) {	
			score.put(s,3);
		}
		for (String s: negative_feedback) {	
			score.put(s,-1);
		}
		Map<Integer, Integer> pair = new HashMap<>();
		for (int i = 0; i < report.length; i++) {
			int sum = 0;
			String[] splitReport = report[i].split(" ");
			for (String s: splitReport) {	
				if (score.containsKey(s)) {
					sum += score.get(s);
				}
			}
			pair.put(student_id[i],sum);
		}
		PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> {pair.get(b) == pair.get(a) ? a - b : pair.get(b) - pair.get(a)});
		pq.addAll(pair.keySet());
		while (!pq.isEmpty() && k != 0) {
			res.add(pq.poll());
			k--;
		}
		return res;
	}
}