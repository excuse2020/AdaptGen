class Solution {
	int matrixSum(int[][] nums) {
		var gridLookup = new HashMap<Integer, PriorityQueue<Integer>>();
		for (int i = 0; i < nums.length; i++) {
			var queue = new PriorityQueue<Integer>(Comparator.reverseOrder());
			queue.addAll(Arrays.stream(nums[i]).boxed().toList());
			gridLookup.put(i,queue);
		}
		var result = 0;
		var numTimes = gridLookup.get(0).size();
		while (numTimes > 0) {
			int maxOfRows = gridLookup.values().stream().map().mapToInt().max().getAsInt();
			result += maxOfRows;
			numTimes--;
		}
		return result;
	}
}