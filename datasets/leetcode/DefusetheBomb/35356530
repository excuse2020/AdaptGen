class Solution {
	int[] decrypt(int[] code, int k) {
		if (k == 0) {
			return new int[code.length];
		}
		int[] res = new int[code.length];
		if (k > 0) {
			for (int i = 0; i < code.length; i++) {
				int temp = 0, curr_pos = i + 1, holder = k;
				while (holder > 0) {
					if (curr_pos >= code.length) {
						curr_pos = 0;
					}
					temp += code[curr_pos];
					++curr_pos;
					--holder;
				}
				res[i] = temp;
			}
		}
		if (k < 0) {
			for (int i = 0; i < code.length; i++) {
				int temp = 0, curr_pos = i - 1, holder = -1 * k;
				while (holder > 0) {
					if (curr_pos < 0) {
						curr_pos = code.length - 1;
					}
					temp += code[curr_pos];
					--curr_pos;
					--holder;
				}
				res[i] = temp;
			}
		}
		return res;
	}
}