class Solution {
	int pairs;
	int countPairs(TreeNode root, int distance) {
		pairs = 0;
		dfs(root,distance);
		return pairs;
	}
	List<Integer> dfs(TreeNode root, int distance) {
		if (root == null) {
			return new ArrayList<>();
		}
		if (root.left == null && root.right == null) {
			List<Integer> list = new ArrayList<>();
			list.add(1);
			return list;
		}
		List<Integer> leftDist = dfs(root.left,distance);
		List<Integer> rightDist = dfs(root.right,distance);
		for (int d1: leftDist) {	
			for (int d2: rightDist) {	
				if (d1 + d2 <= distance) {
					pairs++;
				}
			}
		}
		List<Integer> allDist = new ArrayList<>(leftDist);
		allDist.addAll(rightDist);
		List<Integer> result = new ArrayList<>();
		for (int d: allDist) {	
			result.add(d + 1);
		}
		return result;
	}
}