class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Set<Integer> set = new HashSet<>();
		long sum = 0;
		long max = 0;
		int left = 0;
		for (int right = 0; right < nums.length; right++) {
			sum += nums[right];
			while (right - left + 1 > k || set.contains(nums[right])) {
				set.remove(nums[left]);
				sum -= nums[left];
				left++;
			}
			set.add(nums[right]);
			if (right - left + 1 == k) {
				max = Math.max(max,sum);
			}
		}
		return max;
	}
}