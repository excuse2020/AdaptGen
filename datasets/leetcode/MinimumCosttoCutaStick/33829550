class Solution {
	int minCost(int n, int[] cuts) {
		int[][] dp = new int[cuts.length + 2][cuts.length + 2];
		ArrayList<Integer> cutslist = new ArrayList<>();
		int c = cuts.length;
		cutslist.add(0);
		Arrays.sort(cuts);
		for (int i = 0; i < cuts.length; i++) {
			cutslist.add(cuts[i]);
		}
		cutslist.add(n);
		for (int i = c; i >= 1; i--) {
			for (int j = 1; j <= c; j++) {
				if (i > j) {
					continue;
				}
				int min = Integer.MAX_VALUE;
				for (int k = i; k <= j; k++) {
					int step = cutslist.get(j + 1) - cutslist.get(i - 1) + dp[i][k - 1] + dp[k + 1][j];
					min = Math.min(step,min);
				}
				dp[i][j] = min;
			}
		}
		return dp[1][c];
	}
}