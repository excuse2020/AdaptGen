class Solution {
	ArrayList<String> Permutation(String str) {
		char[] a = str.toCharArray();
		ArrayList<String> ans = new ArrayList<String>();
		sovle(ans,a,0,str.length());
		ans = new ArrayList<String>(new HashSet<String>(ans));
		Collections.sort(ans);
		return ans;
	}
	String change(char[] a) {
		StringBuffer res = new StringBuffer();
		for (char linkString: a) {	
			res.append(linkString);
		}
		return res.toString();
	}
	void sovle(ArrayList<String> ans, char[] a, int index, int length) {
		if (index == length - 1) {
			String resString = change(a);
			ans.add(resString);
		} 
		else {
			for (int i = index; i < length; i++) {
				char temp = a[i];
				a[i] = a[index];
				a[index] = temp;
				sovle(ans,a,index + 1,length);
				temp = a[i];
				a[i] = a[index];
				a[index] = temp;
			}
		}
	}
}