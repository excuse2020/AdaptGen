class Solution {
	int maxPointsInsideSquare(int[][] points, String s) {
		int n = points.length;
		for (int i = 0; i < n; i++) {
			points[i][0] = Math.abs(points[i][0]);
			points[i][1] = Math.abs(points[i][1]);
		}
		int left = 0;
		int right = (int) 1e9;
		int ans = 0;
		while (left <= right) {
			int mid = (left + right) / 2;
			Map<Character, Integer> map = new HashMap<>();
			int flag = 1;
			for (int i = 0; i < n; i++) {
				if (points[i][0] <= mid && points[i][1] <= mid) {
					char ch = s.charAt(i);
					map.put(ch,map.getOrDefault(ch,0) + 1);
				}
			}
			for (char ch: map.keySet()) {	
				int val = map.get(ch);
				if (val > 1) {
					flag = 0;
					break;
				}
			}
			if (flag == 1) {
				ans = mid;
				left = mid + 1;
			} 
			else {
				right = mid - 1;
			}
		}
		int cnt = 0;
		for (int i = 0; i < n; i++) {
			if (points[i][0] <= ans && points[i][1] <= ans) {
				cnt++;
			}
		}
		return cnt;
	}
}