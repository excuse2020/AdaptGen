class Solution {
	boolean check(int[] A, int leftSum, int leftNum, int startIndex) {
		if (leftNum == 0) {
			return leftSum == 0;
		}
		if ((A[startIndex]) > leftSum / leftNum) {
			return false;
		}
		for (int i = startIndex; i < A.length - leftNum + 1; i++) {
			if (i > startIndex && A[i] == A[i - 1]) {
				continue;
			}
			if (check(A,leftSum - A[i],leftNum - 1,i + 1)) {
				return true;
			}
		}
		return false;
	}
	boolean splitArraySameAverage(int[] nums) {
		if (nums.length == 1) {
			return false;
		}
		int sum = 0;
		for (int num: nums) {	
			sum += num;
		}
		Arrays.sort(nums);
		for (int lenOfB = 1; lenOfB <= nums.length / 2; lenOfB++) {
			if ((sum * lenOfB) % nums.length == 0) {
				if (check(nums,(sum * lenOfB) / nums.length,lenOfB,0)) {
					return true;
				}
			}
		}
		return false;
	}
}