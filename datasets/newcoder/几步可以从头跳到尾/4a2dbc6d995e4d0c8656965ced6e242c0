class Solution {
	int Jump(int n, int[] A) {
		if (A == null || A.length == 0 || A.length == 1) {
			return 0;
		}
		if (1 + A[0] >= n) {
			return 1;
		}
		int res = 0;
		int[] dp = new int[n + 1];
		dp[n] = Integer.MAX_VALUE;
		dp[n - 1] = 1;
		int i = n - 2;
		while (i > 0) {
			if (i + A[i - 1] >= n) {
				dp[i--] = 1;
				continue;
			}
			dp[i] = Integer.MAX_VALUE;
			for (int j = 1; j <= A[i - 1]; ++j) {
				dp[i] = dp[i] > dp[i + j] ? dp[i + j] : dp[i];
			}
			++dp[i];
			--i;
		}
		return dp[1];
	}
}