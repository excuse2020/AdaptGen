class Solution {
	long MOD = 1000000007L;
	int lowerBound(int lo, int hi, int[] arr, int key) {
		while (lo <= hi) {
			int mid = lo + (hi - lo) / 2;
			if (arr[mid] < key) {
				lo = mid + 1;
			} 
			else {
				hi = mid - 1;
			}
		}
		return lo;
	}
	int numberOfWays(String corridor) {
		int n = corridor.length();
		int[] pref = new int[n];
		int ps = 0;
		int f = -1, l = -1;
		int i = 0;
	}
	int upperBound(int lo, int hi, int[] arr, int key) {
		while (lo <= hi) {
			int mid = lo + (hi - lo) / 2;
			if (arr[mid] <= key) {
				lo = mid + 1;
			} 
			else {
				hi = mid - 1;
			}
		}
		return lo;
	}
}