class Solution {
	int arr = new int[10];
	int count = 0;
	boolean checkPalindrome(int[] arr) {
		int counter = 0;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 != 0) {
				counter++;
			}
		}
		if (counter <= 1) {
			return true;
		}
		return false;
	}
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		arr[root.val]++;
		if (root.left == null && root.right == null) {
			if (checkPalindrome(arr)) {
				count++;
			}
			arr[root.val]--;
			return;
		}
		dfs(root.left);
		dfs(root.right);
		arr[root.val]--;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		dfs(root);
		return count;
	}
}