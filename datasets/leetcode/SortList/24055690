class Solution {
	ListNode merge(ListNode head1, ListNode head2) {
		ListNode newHead = new ListNode(0);
		ListNode tail = newHead;
		while (head1 != null || head2 != null) {
			if (head2 == null || (head1 != null && head1.val <= head2.val)) {
				tail.next = head1;
				head1 = head1.next;
			} 
			else {
				tail.next = head2;
				head2 = head2.next;
			}
			tail = tail.next;
		}
		return newHead.next;
	}
	ListNode sortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode pre = null, slow = head, fast = head;
		while (fast != null && fast.next != null) {
			pre = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		pre.next = null;
		return merge(sortList(head),sortList(slow));
	}
}