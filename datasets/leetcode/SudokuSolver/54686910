class Solution {
	int GRID_SIZE = 9;
	boolean isNumberInBox(char[][] board, int n, int row, int col) {
		int localBoxRow = row - row % 3;
		int localBoxCol = col - col % 3;
		int i = localBoxRow;
		int j = localBoxCol;
	}
	boolean isNumberInCol(char[][] board, int n, int col) {
		int i = 0;
	}
	boolean isNumberInRow(char[][] board, int n, int row) {
		int i = 0;
	}
	boolean isValidPlacement(char[][] board, int n, int row, int col) {
		return !isNumberInRow(board,n,row) && !isNumberInCol(board,n,col);
	}
	boolean solveBoard(char[][] board) {
		int row = 0;
		int col = 0;
	}
	void solveSudoku(char[][] board) {
		boolean isSolved = solveBoard(board);
	}
}