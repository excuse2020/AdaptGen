class Solution {
	StringBuilder s = new StringBuilder(""), d = new StringBuilder("");
	String getDirections(TreeNode root, int startValue, int destValue) {
		traverse(root,startValue,s);
		traverse(root,destValue,d);
		int i = 0;
		while (i < s.length() && i < d.length() && s.charAt(i) == d.charAt(i)) {
			i++;
		}
		StringBuilder finalPath = new StringBuilder();
		int j = i;
	}
	boolean traverse(TreeNode root, int value, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == value) {
			return true;
		}
		path.append("L");
		if (traverse(root.left,value,path)) {
			return true;
		}
		path.setLength(path.length() - 1);
		path.append("R");
		if (traverse(root.right,value,path)) {
			return true;
		}
		path.setLength(path.length() - 1);
		return false;
	}
}