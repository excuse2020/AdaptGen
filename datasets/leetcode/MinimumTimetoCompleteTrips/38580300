class Solution {
	boolean isPossible(int[] time, int totalTrips, long mid) {
		long sum = 0;
		for (int i = 0; i < time.length; i++) {
			sum += mid / time[i];
		}
		return sum >= totalTrips;
	}
	long minimumTime(int[] time, int totalTrips) {
		long low = 1;
		long high = (long) time[0] * totalTrips;
		long ans = -1;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (isPossible(time,totalTrips,mid)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}