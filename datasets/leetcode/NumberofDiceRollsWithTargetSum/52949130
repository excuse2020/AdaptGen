class Solution {
	Integer dp;
	int k;
	int mod = 1000000007;
	int helper(int n, int target) {
		if (n == 0) {
			if (target == 0) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		if (dp[n][target] != null) {
			return dp[n][target];
		}
		int ans = 0;
		for (int i = 1; i <= k; i++) {
			if (target - i >= 0) {
				ans = (ans + helper(n - 1,target - i)) % mod;
			}
		}
		return dp[n][target] = ans;
	}
	int numRollsToTarget(int n, int k, int target) {
		this.k = k;
		dp = new Integer[n + 1][target + 1];
		return helper(n,target);
	}
}