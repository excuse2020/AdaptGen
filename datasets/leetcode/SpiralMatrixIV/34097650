class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int up = 0, down = m - 1, left = 0, right = n - 1, d = 0;
		int[][] res = new int[m][n];
		while (up <= down && left <= right) {
			if (d == 0) {
				for (int i = left; i <= right; i++) {
					if (head == null) {
						res[up][i] = -1;
					} 
					else {
						res[up][i] = head.val;
						head = head.next;
					}
				}
				up++;
			} 
			else if (d == 1) {
				for (int i = up; i <= down; i++) {
					if (head == null) {
						res[i][right] = -1;
					} 
					else {
						res[i][right] = head.val;
						head = head.next;
					}
				}
				right--;
			} 
			else if (d == 2) {
				for (int i = right; i >= left; i--) {
					if (head == null) {
						res[down][i] = -1;
					} 
					else {
						res[down][i] = head.val;
						head = head.next;
					}
				}
				down--;
			} 
			else if (d == 3) {
				for (int i = down; i >= up; i--) {
					if (head == null) {
						res[i][left] = -1;
					} 
					else {
						res[i][left] = head.val;
						head = head.next;
					}
				}
				left++;
			}
			d = (d + 1) % 4;
		}
		return res;
	}
}