class Solution {
	int deleteGreatestValue(int[][] grid) {
		ArrayList<PriorityQueue> al = new ArrayList<>();
		for (int i = 0; i < grid.length; i++) {
			PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
			for (int j = 0; j < grid[i].length; j++) {
				pq.add(grid[i][j]);
			}
			al.add(pq);
		}
		int n = grid.length;
		int m = grid[0].length;
		int ans = 0;
		for (int i = 0; i < m; i++) {
			int num = -1;
			for (int j = 0; j < n; j++) {
				PriorityQueue<Integer> p = new PriorityQueue<>(Collections.reverseOrder());
				p = al.get(j);
				int val = p.remove();
				num = Math.max(val,num);
			}
			ans += num;
		}
		return ans;
	}
}