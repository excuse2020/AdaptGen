class Solution {
	int[] getFreqArray(String word) {
		int[] wordFreq = new int[26];
		char[] wordArr = word.toCharArray();
	}
	int[] getMaxArray(String[] words2) {
		int[] words2MaxFreq = new int[26];
		char[] wordArr = word.toCharArray();
		int[] wordFreq = new int[26];
		int charInt;
	}
	boolean isSubset(String word1, int[] word2Freq) {
		int[] word1Freq = getFreqArray(word1);
		for (int idx = 0; idx < 26; idx++) {
			if (word1Freq[idx] < word2Freq[idx]) {
				return false;
			}
		}
		return true;
	}
	List<String> wordSubsets(String[] words1, String[] words2) {
		int[] words2MaxFreq = getMaxArray(words2);
		List<String> universal = new LinkedList<>();
		for (String word: words1) {	
			if (isSubset(word,words2MaxFreq)) {
				universal.add(word);
			}
		}
		return universal;
	}
}