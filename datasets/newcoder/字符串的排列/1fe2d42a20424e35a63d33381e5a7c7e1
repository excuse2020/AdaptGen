class Solution {
	ArrayList<String> Permutation(String str) {
		HashSet<String> ans = new HashSet<>();
		ArrayList<Character> list = new ArrayList<>();
		for (int i = 0; i < str.length(); i++) {
			list.add(str.charAt(i));
		}
		backtrack(list,0,str.length(),ans);
		return new ArrayList<>(ans);
	}
	void backtrack(List<Character> list, int start, int end, HashSet<String> ans) {
		if (start == end) {
			String str = "";
			for (int i = 0; i < list.size(); i++) {
				str += list.get(i);
			}
			ans.add(str);
		}
		for (int i = start; i < end; i++) {
			Collections.swap(list,i,start);
			backtrack(list,start + 1,end,ans);
			Collections.swap(list,i,start);
		}
	}
}