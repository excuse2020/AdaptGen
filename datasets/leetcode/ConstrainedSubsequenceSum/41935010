class Solution {
	int constrainedSubsetSum(int[] nums, int k) {
		PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> {b[0] - a[0]});
		pq.add(new int{0, -1});
		int res = Integer.MIN_VALUE;
		for (int i = 0; i < nums.length; ++i) {
			while (i >= k && pq.peek()[1] < i - k) {
				pq.poll();
			}
			int v = pq.peek(), node = v[0] + nums[i];
			pq.add(new int{Math.max(0,node), i});
			res = Math.max(res,node);
		}
		return res;
	}
}