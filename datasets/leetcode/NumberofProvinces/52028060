class Solution {
	void dfs(int i, int[][] adj, boolean[] vis, int col) {
		for (int j = 0; j < col; j++) {
			if (adj[i][j] == 1) {
				if (!vis[j]) {
					vis[j] = true;
					dfs(j,adj,vis,col);
				}
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int row = isConnected.length;
		int col = isConnected[0].length;
		boolean[] visited = new boolean[row];
		int count = 0;
		for (int i = 0; i < row; i++) {
			if (!visited[i]) {
				visited[i] = true;
				dfs(i,isConnected,visited,col);
				count++;
			}
		}
		return count;
	}
}