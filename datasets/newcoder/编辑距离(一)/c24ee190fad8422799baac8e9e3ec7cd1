class Solution {
	int editDistance(String str1, String str2) {
		if (str1 == null || str2 == null || str1.length() == 0 || str2.length() == 0) {
			return 0;
		}
		int len1 = str1.length();
		int len2 = str2.length();
		char[] ss = str2.toCharArray();
		int[][] dp = new int[len1 + 1][len2 + 1];
		for (int i = 1; i <= len1; i++) {
			dp[i][0] = i;
			char c = str1.charAt(i - 1);
			for (int j = 1; j <= len2; j++) {
				dp[0][j] = j;
				if (c == ss[j - 1]) {
					dp[i][j] = Math.min(Math.min(dp[i - 1][j],dp[i][j - 1]),dp[i - 1][j - 1] - 1) + 1;
				} 
				else {
					dp[i][j] = Math.min(Math.min(dp[i - 1][j],dp[i][j - 1]),dp[i - 1][j - 1]) + 1;
				}
			}
		}
		return dp[len1][len2];
	}
}