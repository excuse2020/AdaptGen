class Solution {
	void fncn1(TreeNode root1, List<Integer> l1) {
		if (root1 == null) {
			return;
		}
		if ((root1.left == null) && (root1.right == null)) {
			l1.add(root1.val);
			return;
		}
		fncn1(root1.left,l1);
		fncn1(root1.right,l1);
	}
	void fncn2(TreeNode root2, List<Integer> l2) {
		if (root2 == null) {
			return;
		}
		if ((root2.left == null) && (root2.right == null)) {
			l2.add(root2.val);
			return;
		}
		fncn2(root2.left,l2);
		fncn2(root2.right,l2);
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		List<Integer> l1 = new ArrayList<>();
		List<Integer> l2 = new ArrayList<>();
		fncn1(root1,l1);
		fncn2(root2,l2);
		if (l1.equals(l2) == true) {
			return true;
		} 
		else {
			return false;
		}
	}
}