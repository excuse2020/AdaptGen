class Solution {
	int count(int spell, int[] potions, long success) {
		int l = 0, r = potions.length - 1;
		while (l <= r) {
			int mid = l + (r - l) / 2;
			if (((long) potions[mid]) * spell >= success) {
				r = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		return potions.length - l;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int n = spells.length;
		int m = potions.length;
		int[] res = new int[n];
		Arrays.sort(potions);
		for (int i = 0; i < n; i++) {
			res[i] = count(spells[i],potions,success);
		}
		return res;
	}
}