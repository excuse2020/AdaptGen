class Solution {
	int closestMeetingNode(int[] edges, int node1, int node2) {
		int distArrNode1 = findDistance(edges,node1);
		int distArrNode2 = findDistance(edges,node2);
		int minDist = Integer.MAX_VALUE;
		int ans = -1;
		for (int i = 0; i < edges.length; i++) {
			if (distArrNode1[i] == -1 || distArrNode2[i] == -1) {
				continue;
			}
			int dist = Math.max(distArrNode1[i],distArrNode2[i]);
			if (dist < minDist) {
				minDist = dist;
				ans = i;
			}
		}
		return ans;
	}
	int[] findDistance(int edges, int node) {
		int distArr = new int[edges.length];
		Arrays.fill(distArr,-1);
		int dist = 0;
		while (node != -1 && distArr[node] == -1) {
			distArr[node] = dist++;
			node = edges[node];
		}
		return distArr;
	}
}