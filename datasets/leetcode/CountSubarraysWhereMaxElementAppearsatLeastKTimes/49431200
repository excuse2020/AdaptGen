class Solution {
	long countSubarrays(int[] nums, int k) {
		long ans = 0;
		int max = Collections.max(Arrays.stream(nums).boxed().collect(Collectors.toList()));
		long[] arr = new long[nums.length];
		arr[0] = (nums[0] == max) ? 1 : 0;
		for (int i = 1; i < nums.length; i++) {
			arr[i] = arr[i - 1] + ((nums[i] == max) ? 1 : 0);
		}
		for (int i = 0; i < nums.length; i++) {
			int st = i;
			int en = nums.length - 1;
			int stp = -1;
			while (st <= en) {
				int mid = st + (en - st) / 2;
				if (arr[mid] - (i > 0 ? arr[i - 1] : 0) >= k) {
					stp = mid;
					en = mid - 1;
				} 
				else {
					st = mid + 1;
				}
			}
			if (stp == -1) {
				continue;
			}
			ans += (nums.length - stp);
		}
		return ans;
	}
}