class Solution {
	int dfs(TreeNode node, int cur, boolean leftEdge) {
		int ret = cur;
		if (node.left != null) {
			if (!leftEdge) {
				ret = dfs(node.left,cur + 1,true);
			} 
			else {
				ret = Math.max(ret,dfs(node.left,1,true));
			}
		}
		if (node.right != null) {
			if (leftEdge) {
				ret = Math.max(ret,dfs(node.right,cur + 1,false));
			} 
			else {
				ret = Math.max(ret,dfs(node.right,1,false));
			}
		}
		return ret;
	}
	int longestZigZag(TreeNode root) {
		int ret = 0;
		if (root.left != null) {
			ret = dfs(root.left,1,true);
		}
		if (root.right != null) {
			ret = Math.max(ret,dfs(root.right,1,false));
		}
		return ret;
	}
}