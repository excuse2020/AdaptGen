class Solution {
	int left, right, n1;
	StringBuilder path;
	ArrayList<String> ret;
	void dfs() {
		if (right == n1) {
			ret.add(path.toString());
			return;
		}
		if (left < n1) {
			path.append('(');
			left++;
			dfs();
			path.deleteCharAt(path.length() - 1);
			left--;
		}
		if (right < left) {
			path.append(')');
			right++;
			dfs();
			path.deleteCharAt(path.length() - 1);
			right--;
		}
	}
	ArrayList<String> generateParenthesis(int n) {
		ret = new ArrayList<>();
		path = new StringBuilder();
		n1 = n;
		left = right = 0;
		dfs();
		return ret;
	}
}