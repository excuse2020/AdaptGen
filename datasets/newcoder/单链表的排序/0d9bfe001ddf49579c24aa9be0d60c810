class Solution {
	ListNode mergeSortList(ListNode list1, ListNode list2) {
		ListNode dummy = new ListNode(0);
		ListNode cur = dummy;
		while (list1 != null && list2 != null) {
			if (list1.val <= list2.val) {
				cur.next = list1;
				list1 = list1.next;
			} 
			else {
				cur.next = list2;
				list2 = list2.next;
			}
			cur = cur.next;
		}
		if (list1 == null) {
			cur.next = list2;
		}
		if (list2 == null) {
			cur.next = list1;
		}
		return dummy.next;
	}
	ListNode sortInList(ListNode head) {
		if (head == null) {
			return null;
		}
		if (head.next == null) {
			return head;
		}
		ListNode pre = head;
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			pre = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		pre.next = null;
		ListNode head1 = sortInList(head);
		ListNode head2 = sortInList(slow);
		return mergeSortList(head1,head2);
	}
}