class Solution {
	int fillCups(int[] amount) {
		int sum = 0;
		PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());
		for (int i = 0; i < 3; i++) {
			if (amount[i] > 0) {
				pq.add(amount[i]);
			}
		}
		while (pq.size() > 1) {
			int x = pq.peek();
			System.out.println(pq.peek());
			pq.remove();
			x--;
			int y = pq.peek();
			System.out.println(pq.peek());
			pq.remove();
			y--;
			sum++;
			if (x >= 1) {
				pq.add(x);
			}
			if (y >= 1) {
				pq.add(y);
			}
		}
		System.out.println(pq.peek());
		if (pq.size() > 0) {
			sum += pq.peek();
		}
		return sum;
	}
}