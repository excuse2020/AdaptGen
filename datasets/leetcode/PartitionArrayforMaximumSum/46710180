class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int n = arr.length;
		int[] dp = new int[n + 1];
		for (int i = 0; i < n; i++) {
			int currsum = 0, curr = 0;
			for (int j = i; j >= Math.max(0,i - k + 1); j--) {
				curr = Math.max(curr,arr[j]);
				int curm = curr * (i - j + 1);
				currsum = Math.max(currsum,curm + dp[j]);
			}
			dp[i + 1] = currsum;
		}
		return dp[n];
	}
}