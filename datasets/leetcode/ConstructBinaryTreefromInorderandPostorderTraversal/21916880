class Solution {
	int postIndex;
	TreeNode buildTree(int[] inorder, int[] postorder) {
		postIndex = postorder.length - 1;
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < inorder.length; i++) {
			map.put(inorder[i],i);
		}
		TreeNode root = constructBinaryTree(inorder,postorder,0,inorder.length - 1,map);
		return root;
	}
	TreeNode constructBinaryTree(int[] inorder, int[] postorder, int is, int ie, HashMap<Integer, Integer> map) {
		if (is > ie) {
			return null;
		}
		TreeNode root = new TreeNode(postorder[postIndex]);
		int inIndex = map.get(root.val);
		postIndex -= 1;
		root.right = constructBinaryTree(inorder,postorder,inIndex + 1,ie,map);
		root.left = constructBinaryTree(inorder,postorder,is,inIndex - 1,map);
		return root;
	}
}