class Solution {
	boolean isDifferentToRightCell(int[] row, int currentCellIndex) {
		if (currentCellIndex + 1 >= row.length) {
			return true;
		}
		return row[currentCellIndex] != row[currentCellIndex + 1];
	}
	boolean isEqualsCellBelow(int[][] grid, int currentRowIndex) {
		if (currentRowIndex - 1 < 0) {
			return true;
		}
		var currentRow = grid[currentRowIndex];
		var belowRow = grid[currentRowIndex - 1];
		return Arrays.equals(currentRow,belowRow);
	}
	boolean satisfiesConditions(int[][] grid) {
		for (int i = 0; i < grid.length; i++) {
			if (!isEqualsCellBelow(grid,i)) {
				return false;
			}
			for (int j = 0; j < grid[0].length; j++) {
				if (!isDifferentToRightCell(grid[i],j)) {
					return false;
				}
			}
		}
		return true;
	}
}