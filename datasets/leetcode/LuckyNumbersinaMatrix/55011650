class Solution {
	List<Integer> luckyNumbers(int[][] matrix) {
		if (matrix == null || matrix.length == 0) {
			return new LinkedList<>();
		}
		Map<Integer, Integer> rowMin = new HashMap<>();
		Map<Integer, Integer> colMax = new HashMap<>();
		for (int i = 0; i < matrix.length; i++) {
			int[] row = matrix[i];
			rowMin.putIfAbsent(i,matrix[i][0]);
			int min = Integer.MAX_VALUE;
			for (int j = 0; j < row.length; j++) {
				colMax.putIfAbsent(j,matrix[i][j]);
				if (rowMin.get(i) > matrix[i][j]) {
					rowMin.put(i,matrix[i][j]);
				}
				if (colMax.get(j) < matrix[i][j]) {
					colMax.put(j,matrix[i][j]);
				}
			}
		}
		Set<Integer> minSet = new HashSet<>(rowMin.values());
		Set<Integer> maxSet = new HashSet<>(colMax.values());
		minSet.retainAll(maxSet);
		return new ArrayList<>(minSet);
	}
}