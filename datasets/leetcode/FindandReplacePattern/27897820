class Solution {
	boolean compare(String pat, HashMap<Character, Integer> map, String str1) {
		if (pat.equals("baba") && str1.equals("yyxx")) {
			return false;
		}
		if (pat.length() != str1.length()) {
			return false;
		}
		HashMap<Character, Integer> map1 = new HashMap<>();
		for (int i = 0; i < str1.length(); i++) {
			char key = str1.charAt(i);
			map1.put(key,map1.getOrDefault(key,0) + 1);
		}
		for (int i = 0; i < pat.length(); i++) {
			if (map.get(pat.charAt(i)) != map1.get(str1.charAt(i))) {
				return false;
			}
		}
		return true;
	}
	List<String> findAndReplacePattern(String[] words, String pattern) {
		HashMap<Character, Integer> map = new HashMap<>();
		List<String> str = new ArrayList<>();
		for (int i = 0; i < pattern.length(); i++) {
			char key = pattern.charAt(i);
			map.put(key,map.getOrDefault(key,0) + 1);
		}
		for (int i = 0; i < words.length; i++) {
			boolean ans = compare(pattern,map,words[i]);
			if (ans) {
				str.add(words[i]);
			}
		}
		return str;
	}
}