class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		ListNode ret = null;
		if (pHead1 == null || pHead2 == null) {
			return null;
		}
		int len1 = 0, len2 = 0;
		ListNode node1 = pHead1, node2 = pHead2;
		while (node1 != null) {
			node1 = node1.next;
			len1++;
		}
		while (node2 != null) {
			node2 = node2.next;
			len2++;
		}
		int n = len1 <= len2 ? len2 - len1 : len1 - len2;
		ListNode fast = null, low = null;
		if (len1 <= len2) {
			fast = pHead2;
			low = pHead1;
		} 
		else {
			fast = pHead1;
			low = pHead2;
		}
		for (int i = 0; i < n; i++) {
			fast = fast.next;
		}
		while (fast != null && low != null) {
			if (fast.equals(low)) {
				break;
			} 
			else {
				fast = fast.next;
				low = low.next;
			}
		}
		return low;
	}
}