class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int n = nums.length;
		int maxNormal = normalmaxSum(nums);
		if (maxNormal < 0) {
			return maxNormal;
		}
		int arr_sum = 0;
		for (int i = 0; i < n; i++) {
			arr_sum += nums[i];
			nums[i] = -nums[i];
		}
		int max_circular = arr_sum + normalmaxSum(nums);
		return Math.max(maxNormal,max_circular);
	}
	int normalmaxSum(int[] nums) {
		int res = nums[0];
		int maxEnd = nums[0];
		int n = nums.length;
		for (int i = 1; i < n; i++) {
			maxEnd = Math.max(maxEnd + nums[i],nums[i]);
			res = Math.max(res,maxEnd);
		}
		return res;
	}
}