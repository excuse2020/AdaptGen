class Solution {
	HashSet<String> hset;
	List<String> result;
	void callBacktrackingfun(StringBuilder sbr, int index, String[] nums) {
		if (index == nums[0].length()) {
			if (!hset.contains(sbr.toString())) {
				result.add(sbr.toString());
			}
			return;
		}
		if (result.size() > 0) {
			return;
		}
		sbr.append("0");
		callBacktrackingfun(sbr,index + 1,nums);
		sbr.delete(sbr.length() - 1,sbr.length());
		sbr.append("1");
		callBacktrackingfun(sbr,index + 1,nums);
		sbr.delete(sbr.length() - 1,sbr.length());
	}
	String findDifferentBinaryString(String[] nums) {
		hset = new HashSet<String>(Arrays.asList(nums));
		result = new ArrayList<String>();
		callBacktrackingfun(new StringBuilder(),0,nums);
		return result.get(0);
	}
}