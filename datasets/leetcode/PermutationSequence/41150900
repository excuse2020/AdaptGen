class Solution {
	String ans = "";
	int index = 0;
	String getPermutation(int n, int k) {
		StringBuilder sb = new StringBuilder();
		index = k;
		for (int i = 1; i <= n; i++) {
			sb.append(i + "");
		}
		boolean vis = new boolean[n];
		solver(sb,new StringBuilder(),vis);
		return ans;
	}
	void solver(StringBuilder str, StringBuilder temp, boolean[] vis) {
		if (temp.length() == str.length()) {
			index--;
			if (index == 0) {
				ans = temp.toString();
			}
			return;
		}
		for (int i = 0; i < str.length(); i++) {
			if (!vis[i]) {
				vis[i] = true;
				temp.append(str.charAt(i));
				solver(str,temp,vis);
				temp.deleteCharAt(temp.length() - 1);
				vis[i] = false;
			}
		}
	}
}