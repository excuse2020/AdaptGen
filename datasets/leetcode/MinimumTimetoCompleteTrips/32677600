class Solution {
	long minimumTime(int[] time, int totalTrips) {
		int min = Integer.MAX_VALUE;
		for (int t: time) {	
			min = Math.min(min,t);
		}
		long low = 1, high = 1L * min;
		while (low < high) {
			long mid = low + (high - low) / 2;
			long trips = noOfTripsCompletedInGivenTime(time,mid);
			if (trips < totalTrips) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return low;
	}
	long noOfTripsCompletedInGivenTime(int[] time, long allottedTime) {
		long trips = 0;
		for (int t: time) {	
			trips += (allottedTime / t);
		}
		return trips;
	}
}