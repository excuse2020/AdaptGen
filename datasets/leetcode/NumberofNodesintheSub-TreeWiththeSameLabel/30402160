class Solution {
	List<List<Integer>> adj = new ArrayList<>();
	Map<Character, Integer> labelToCount = new HashMap<>();
	void count(int cur, int parent, String labels, int[] result) {
		char label = labels.charAt(cur);
		int curCount = labelToCount.getOrDefault(label,0);
		labelToCount.put(label,curCount + 1);
		for (int child: adj.get(cur)) {	
			if (child == parent) {
				continue;
			}
			count(child,cur,labels,result);
		}
		result[cur] = labelToCount.get(label) - curCount;
	}
	int[] countSubTrees(int n, int[][] edges, String labels) {
		int[] result = new int[n];
		for (int i = 0; i < n; i++) {
			adj.add(new ArrayList());
		}
		for (int i = 0; i < edges.length; i++) {
			adj.get(edges[i][0]).add(edges[i][1]);
			adj.get(edges[i][1]).add(edges[i][0]);
		}
		labelToCount.put(labels.charAt(0),1);
		count(0,-1,labels,result);
		return result;
	}
}