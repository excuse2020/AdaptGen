class Solution {
	int max = Integer.MIN_VALUE;
	int getMaximumGold(int[][] grid) {
		boolean visited = new boolean[grid.length][grid[0].length];
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				traverseGrid(grid,visited,i,j,0);
			}
		}
		return max;
	}
	void traverseGrid(int grid, boolean visited, int row, int col, int sum) {
		if (sum > max) {
			max = sum;
		}
		if (row == grid.length || col == grid[0].length || row == -1 || col == -1) {
			return;
		}
		if (grid[row][col] == 0) {
			return;
		}
		if (visited[row][col]) {
			return;
		}
		visited[row][col] = true;
		traverseGrid(grid,visited,row + 1,col,sum + grid[row][col]);
		traverseGrid(grid,visited,row,col + 1,sum + grid[row][col]);
		traverseGrid(grid,visited,row - 1,col,sum + grid[row][col]);
		traverseGrid(grid,visited,row,col - 1,sum + grid[row][col]);
		visited[row][col] = false;
	}
}