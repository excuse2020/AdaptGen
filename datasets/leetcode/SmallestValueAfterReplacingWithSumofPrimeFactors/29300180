class Solution {
	int helper(int n, Map<Integer, Integer> memo) {
		if (memo.containsKey(n)) {
			return memo.get(n);
		}
		int sum = n;
		for (int j = 2; j <= Math.sqrt(n); j++) {
			if (n % j == 0) {
				sum = helper(j,memo) + helper(n / j,memo);
				break;
			}
		}
		memo.put(n,sum);
		return sum;
	}
	int smallestValue(int n) {
		Map<Integer, Integer> memo = new HashMap<>();
		while (n != helper(n,memo)) {
			n = helper(n,memo);
		}
		return n;
	}
}