class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int right = (nums1.length + nums2.length) / 2;
		int left = right - ((nums1.length + nums2.length) % 2 == 0 ? 1 : 0);
		if (nums1.length == 0) {
			return (nums2[left] + nums2[right]) * 1.0 / 2;
		} 
		else if (nums2.length == 0) {
			return (nums1[left] + nums1[right]) * 1.0 / 2;
		} 
		else {
			int last = 0, current = 0;
			for (int i1 = 0, i2 = 0; i1 + i2 <= right; ) {
				last = current;
				if (i2 >= nums2.length || (i1 < nums1.length && nums1[i1] <= nums2[i2])) {
					current = nums1[i1++];
				} 
				else {
					current = nums2[i2++];
				}
			}
			return (current + (left == right ? current : last)) * 1.0 / 2;
		}
	}
}