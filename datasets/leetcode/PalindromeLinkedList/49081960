class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode slow = head, fast = head;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		slow.next = reverseLL(slow.next);
		slow = slow.next;
		while (slow != null) {
			if (head.val != slow.val) {
				return false;
			}
			head = head.next;
			slow = slow.next;
		}
		return true;
	}
	ListNode reverseLL(ListNode head) {
		ListNode newHead = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = newHead;
			newHead = head;
			head = next;
		}
		return newHead;
	}
}