class Solution {
	ArrayList<ArrayList<Integer>> resultList = new ArrayList<ArrayList<Integer>>();
	void getPathSum(TreeNode root, int sum, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		sum = sum - root.val;
		if (root.right == null && root.left == null && sum == 0) {
			list.add(root.val);
			resultList.add(new ArrayList<Integer>(list));
			list.remove(list.size() - 1);
			return;
		}
		list.add(root.val);
		getPathSum(root.left,sum,list);
		getPathSum(root.right,sum,list);
		list.remove(list.size() - 1);
	}
	ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
		resultList = new ArrayList<ArrayList<Integer>>();
		if (root == null) {
			return resultList;
		} 
		else {
			getPathSum(root,sum,new ArrayList<Integer>());
		}
		return resultList;
	}
}