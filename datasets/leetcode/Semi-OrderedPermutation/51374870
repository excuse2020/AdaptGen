class Solution {
	int semiOrderedPermutation(int[] nums) {
		int index1 = IntStream.range(0,nums.length).filter((i) -> {nums[i] == 1}).findFirst().getAsInt();
		int indexN = IntStream.range(0,nums.length).filter((i) -> {nums[i] == nums.length}).findFirst().getAsInt();
		return index1 + nums.length - 1 - indexN - (index1 <= indexN ? 0 : 1);
	}
}