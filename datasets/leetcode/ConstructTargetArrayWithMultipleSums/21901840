class Solution {
	boolean isPossible(int[] target) {
		if (target.length == 1) {
			return target[0] == 1;
		}
		long sum = 0;
		PriorityQueue<Integer> q = new PriorityQueue<>(target.length, (o1, o2) -> {o2 - o1});
		for (int n: target) {	
			sum += n;
			q.add(n);
		}
		while (true) {
			int n = q.poll();
			if (n == 1) {
				return true;
			}
			sum -= n;
			if (sum >= n) {
				return false;
			}
			if (sum == 1) {
				return true;
			}
			n %= (int) sum;
			if (n == 0) {
				return false;
			}
			sum += n;
			q.add(n);
		}
	}
}