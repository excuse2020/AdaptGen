class Solution {
	int dfs(TreeNode node, int[] freq) {
		if (node == null) {
			return 0;
		}
		if (node.left == null && node.right == null) {
			int c = 0;
			freq[node.val]++;
			for (int i: freq) {	
				if (i % 2 == 1) {
					c++;
				}
			}
			freq[node.val]--;
			return c > 1 ? 0 : 1;
		} 
		else {
			freq[node.val]++;
			int ans = dfs(node.left,freq) + dfs(node.right,freq);
			freq[node.val]--;
			return ans;
		}
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] freq = new int[10];
		return dfs(root,freq);
	}
}