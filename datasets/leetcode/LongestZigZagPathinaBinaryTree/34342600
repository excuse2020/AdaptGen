class Solution {
	int maxStep = 0;
	void helper(TreeNode node, int step, boolean canGoLeft, boolean canGoRight) {
		maxStep = Math.max(step,maxStep);
		if (canGoLeft) {
			if (node.left != null) {
				helper(node.left,step + 1,false,true);
			}
			if (node.right != null) {
				helper(node.right,1,true,false);
			}
		}
		if (canGoRight) {
			if (node.right != null) {
				helper(node.right,step + 1,true,false);
			}
			if (node.left != null) {
				helper(node.left,1,false,true);
			}
		}
	}
	int longestZigZag(TreeNode root) {
		if (root.left != null) {
			helper(root.left,1,false,true);
		}
		if (root.right != null) {
			helper(root.right,1,true,false);
		}
		return maxStep;
	}
}