class Solution {
	int minStoneSum(int[] piles, int k) {
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a, b) -> {Integer.compare(b,a)});
		int totalStones = 0;
		for (int pile: piles) {	
			maxHeap.offer(pile);
			totalStones += pile;
		}
		while (k != 0) {
			int maxPile = maxHeap.poll();
			totalStones -= maxPile;
			maxPile = maxPile % 2 == 0 ? maxPile / 2 : maxPile / 2 + 1;
			totalStones += maxPile;
			maxHeap.offer(maxPile);
			k--;
		}
		return totalStones;
	}
}