class Solution {
	int longest = 1;
	int longestStrChain(String[] words) {
		HashMap<String, Integer> map = new HashMap<String, Integer>();
		sort(words);
		for (int i = 0; i < words.length; i++) {
			String curr = words[i];
			if (!map.containsKey(curr)) {
				map.put(curr,1);
			}
			for (int j = 0; j < curr.length(); j++) {
				StringBuilder sb = new StringBuilder(curr);
				sb.deleteCharAt(j);
				String newString = sb.toString();
				if (map.containsKey(newString)) {
					map.put(curr,map.get(newString) + 1);
				}
				longest = Math.max(longest,map.get(curr));
			}
		}
		return longest;
	}
	void sort(String[] words) {
		Arrays.sort(words,(a, b) -> {Integer.valueOf(a.length()).compareTo(Integer.valueOf(b.length()))});
	}
}