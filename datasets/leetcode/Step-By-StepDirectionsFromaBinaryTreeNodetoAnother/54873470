class Solution {
	Map<TreeNode, TreeNode> ances = new HashMap<>();
	String ans;
	TreeNode begin = null, end = null;
	void dfs(TreeNode cur, TreeNode par, StringBuilder s) {
		if (cur == end) {
			ans = s.toString();
			return;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		traverse(root,startValue,destValue);
		StringBuilder s = new StringBuilder();
		dfs(begin,begin,s);
		return ans;
	}
	void traverse(TreeNode root, int start, int dest) {
		if (root.val == start) {
			begin = root;
		}
		if (root.val == dest) {
			end = root;
		}
		if (root.left != null) {
			ances.put(root.left,root);
			traverse(root.left,start,dest);
		}
		if (root.right != null) {
			ances.put(root.right,root);
			traverse(root.right,start,dest);
		}
	}
}