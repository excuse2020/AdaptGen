class Solution {
	boolean checkAlmostEquivalent(String word1, String word2) {
		if (word1.length() != word2.length()) {
			return false;
		}
		Map<Character, Integer> map = new HashMap<>();
		for (char ch: word1.toCharArray()) {	
			map.put(ch,map.getOrDefault(ch,0) + 1);
		}
		Map<Character, Integer> map2 = new HashMap<>();
		for (char ch: word2.toCharArray()) {	
			map2.put(ch,map2.getOrDefault(ch,0) + 1);
		}
		for (char ch: map.keySet()) {	
			if (Math.abs(map.getOrDefault(ch,0) - map2.getOrDefault(ch,0)) > 3) {
				return false;
			}
		}
		for (char ch: map2.keySet()) {	
			if (Math.abs(map.getOrDefault(ch,0) - map2.getOrDefault(ch,0)) > 3) {
				return false;
			}
		}
		return true;
	}
}