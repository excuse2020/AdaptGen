class Solution {
	int max = 0;
	void deepSearch(TreeNode node, int count, boolean isLeft) {
		if (node == null) {
			return;
		}
		if (count > max) {
			max = count;
		}
		if (isLeft) {
			if (node.right != null) {
				deepSearch(node.right,count + 1,false);
			}
			if (node.left != null) {
				deepSearch(node.left,0,true);
			}
		} 
		else {
			if (node.left != null) {
				deepSearch(node.left,count + 1,true);
			}
			if (node.right != null) {
				deepSearch(node.right,0,false);
			}
		}
	}
	int longestZigZag(TreeNode root) {
		if (root == null || (root.left == null && root.right == null)) {
			return 0;
		}
		deepSearch(root.left,0,true);
		deepSearch(root.right,0,false);
		return max + 1;
	}
}