class Solution {
	int check(String s, int k, int wordLen) {
		int sum = 0;
		int l = 0;
		while (k > 0) {
			String temp = s.substring(l,l + wordLen);
			sum += temp.hashCode() * temp.hashCode();
			l += wordLen;
			k--;
		}
		return sum;
	}
	List<Integer> findSubstring(String s, String[] words) {
		int sum = 0;
		int windowLen = 0;
		int wordLen = words[0].length();
		for (String w: words) {	
			sum += w.hashCode() * w.hashCode();
			windowLen += w.length();
		}
		List<Integer> list = new ArrayList<>();
		int k = words.length;
		int l = 0;
		if (s.length() < windowLen) {
			return list;
		}
		while (l + windowLen <= s.length()) {
			String temp = s.substring(l,l + windowLen);
			if (sum == check(temp,k,wordLen)) {
				list.add(l);
			}
			l++;
		}
		return list;
	}
}