class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int ht_red_start = 0;
		int ht_blue_start = 0;
		int rstred = red;
		int rstblue = blue;
		int n = 0;
		while (true) {
			if (n % 2 == 0) {
				if (rstred >= n + 1) {
					rstred -= n + 1;
				} 
				else {
					break;
				}
			} 
			else {
				if (rstblue >= n + 1) {
					rstblue -= n + 1;
				} 
				else {
					break;
				}
			}
			n++;
			ht_red_start++;
		}
		int bstred = red;
		int bstblue = blue;
		n = 0;
		while (true) {
			if (n % 2 == 0) {
				if (bstblue >= n + 1) {
					bstblue -= n + 1;
				} 
				else {
					break;
				}
			} 
			else {
				if (bstred >= n + 1) {
					bstred -= n + 1;
				} 
				else {
					break;
				}
			}
			n++;
			ht_blue_start++;
		}
		return Math.max(ht_blue_start,ht_red_start);
	}
}