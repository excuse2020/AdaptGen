class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		Stack<Character> st = new Stack<>();
		st.push(s.charAt(0));
		int ans = 1;
		boolean alreadyOccurence = false;
		for (int i = 1; i < s.length(); i++) {
			char curr = s.charAt(i);
			if (st.peek() == curr) {
				if (alreadyOccurence) {
					char remove = st.remove(0);
					while (st.get(0) != remove) {
						remove = st.remove(0);
					}
				} 
				else {
					alreadyOccurence = true;
				}
			}
			st.push(curr);
			ans = Math.max(ans,st.size());
		}
		return ans;
	}
}