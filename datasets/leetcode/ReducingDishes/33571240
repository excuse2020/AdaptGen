class Solution {
	int getMax(int ind, int time, int[] satisfaction, int[][] dp) {
		if (ind == satisfaction.length) {
			return 0;
		}
		if (dp[ind][time] != -1) {
			return dp[ind][time];
		}
		int take = (satisfaction[ind] * time) + getMax(ind + 1,time + 1,satisfaction,dp);
		int notTake = 0 + getMax(ind + 1,time,satisfaction,dp);
		return dp[ind][time] = Integer.max(take,notTake);
	}
	int maxSatisfaction(int[] satisfaction) {
		int[][] dp = new int[satisfaction.length][satisfaction.length + 1];
		for (int i = 0; i < dp.length; i++) {
			Arrays.fill(dp[i],-1);
		}
		Arrays.sort(satisfaction);
		return getMax(0,1,satisfaction,dp);
	}
}