class Solution {
	int maxProfit(int[] prices) {
		int n = prices.length;
		int s = new int[n];
		s[0] = 0;
		int lsf = prices[0];
		for (int i = 1; i < n; i++) {
			lsf = Math.min(lsf,prices[i]);
			s[i] = Math.max(s[i - 1],prices[i] - lsf);
		}
		int b = new int[n];
		b[n - 1] = 0;
		int msf = prices[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			msf = Math.max(msf,prices[i]);
			b[i] = Math.max(b[i + 1],msf - prices[i]);
		}
		int ans = s[0] + b[0];
		for (int i = 1; i < n; i++) {
			ans = Math.max(ans,s[i] + b[i]);
		}
		return ans;
	}
}