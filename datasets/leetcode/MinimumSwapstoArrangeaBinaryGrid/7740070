class Solution {
	int minSwaps(int[][] grid) {
		int[] zc = zeroCount(grid);
		int res = 0;
		for (int i = 0; i < zc.length; i++) {
			int needed = grid.length - i;
			if (zc[i] >= needed) {
				continue;
			}
			boolean found = false;
			int j = i + 1;
			for (; j < zc.length; j++) {
				if (zc[j] >= needed) {
					found = true;
					break;
				}
			}
			if (found) {
				int countSwaps = 0;
				for (int k = j; k > i; k--) {
					swap(zc,k - 1,k);
					countSwaps++;
				}
				res += countSwaps;
			} 
			else {
				return -1;
			}
		}
		return res;
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
	int[] zeroCount(int[][] grid) {
		int[] zeroCount = new int[grid.length];
		for (int i = 0; i < grid.length; i++) {
			int count = 0;
			for (int j = grid.length - 1; j >= 0; j--) {
				if (grid[i][j] != 0) {
					break;
				}
				count++;
			}
			zeroCount[i] = count;
		}
		return zeroCount;
	}
}