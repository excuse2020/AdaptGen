class Solution {
	int mod = 1000000007;
	int dfs(int indx, int prev, int prev2, int n, int dp) {
		if (indx == n) {
			return 1;
		}
		if (dp[indx][prev][prev2] != -1) {
			return dp[indx][prev][prev2];
		}
		int res = 0;
		for (int i = 1; i <= 6; i++) {
			if (i == prev || i == prev2 || (prev != 0 && gcd(prev,i) != 1)) {
				continue;
			}
			res = (res + dfs(indx + 1,i,prev,n,dp)) % mod;
		}
		return dp[indx][prev][prev2] = res;
	}
	int distinctSequences(int n) {
		int dp = new int[n][7][7];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= 6; j++) {
				for (int k = 0; k <= 6; k++) {
					dp[i][j][k] = -1;
				}
			}
		}
		return dfs(0,0,0,n,dp);
	}
	int gcd(int a, int b) {
		if (b == 0) {
			return a;
		}
		return gcd(b,a % b);
	}
}