class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(nums);
		int sum = 0;
		for (int i = 0; i < nums.length - 3; i++) {
			if (i != 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			for (int j = i + 1; j < nums.length - 2; j++) {
				if (j != i + 1 && nums[j] == nums[j - 1]) {
					continue;
				}
				int m = j + 1;
				int n = nums.length - 1;
				sum = target - (nums[i] + nums[j]);
				while (m < n) {
					if (nums[m] + nums[n] == sum) {
						if ((nums[i] > 0 && target < 0) || (nums[n] < 0 && target > 0)) {
							break;
						}
						ans.add(new ArrayList<Integer>(Arrays.asList(nums[i],nums[j],nums[m],nums[n])));
						while (m < n && nums[m] + nums[n] == sum) {
							m++;
						}
					} 
					else {
						if (nums[m] + nums[n] < sum) {
							m++;
						} 
						else {
							n--;
						}
					}
				}
			}
		}
		return ans;
	}
}