class Solution {
	boolean check(int[] price, int m, int k) {
		int pre = price[0];
		int ct = 1;
		for (int i = 0; i < price.length; i++) {
			if (price[i] - pre >= m) {
				ct++;
				pre = price[i];
			}
		}
		if (ct >= k) {
			return true;
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int s = 0;
		int e = 1000_000_000;
		int max = 0;
		while (s <= e) {
			int m = s + (e - s) / 2;
			boolean flag = check(price,m,k);
			if (flag) {
				s = m + 1;
				max = Math.max(max,m);
			} 
			else {
				e = m - 1;
			}
		}
		return max;
	}
}