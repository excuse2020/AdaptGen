class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		findSubsets(1,0,new ArrayList<Integer>(),k,n,ans);
		return ans;
	}
	void findSubsets(int idx, int sum, List<Integer> temp, int k, int n, List<List<Integer>> ans) {
		if (sum == n && temp.size() == k) {
			ans.add(new ArrayList<>(temp));
			return;
		}
		if (idx > 9 || temp.size() > k) {
			return;
		}
		for (int i = idx; i <= 9; i++) {
			temp.add(i);
			findSubsets(i + 1,sum + i,temp,k,n,ans);
			temp.remove(temp.size() - 1);
		}
	}
}