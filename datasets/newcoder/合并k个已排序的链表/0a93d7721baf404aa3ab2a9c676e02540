class Solution {
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		int size = lists.size();
		if (size == 0) {
			return null;
		}
		if (size == 1) {
			return lists.get(0);
		}
		ArrayList<ListNode> list = new ArrayList();
		for (int i = 0, j = size - 1; i <= j; i++, j--) {
			if (i != j) {
				list.add(mergeTwoLists(lists.get(i),lists.get(j)));
			} 
			else {
				list.add(lists.get(i));
			}
		}
		return mergeKLists(list);
	}
	ListNode mergeTwoLists(ListNode h1, ListNode h2) {
		if (h1 == null) {
			return h2;
		}
		if (h2 == null) {
			return h1;
		}
		ListNode p = new ListNode(0);
		ListNode q = p;
		while (h1 != null && h2 != null) {
			if (h1.val <= h2.val) {
				p.next = h1;
				h1 = h1.next;
			} 
			else {
				p.next = h2;
				h2 = h2.next;
			}
			p = p.next;
		}
		if (h1 != null) {
			p.next = h1;
		} 
		else {
			p.next = h2;
		}
		p = q.next;
		q.next = null;
		return p;
	}
}