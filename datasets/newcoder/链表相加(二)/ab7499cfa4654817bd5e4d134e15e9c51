class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode tmp = null;
		ListNode a = head1;
		ListNode b = head1.next;
		while (b != null) {
			tmp = b.next;
			b.next = a;
			a = b;
			b = tmp;
		}
		head1.next = null;
		head1 = a;
		tmp = null;
		a = head2;
		b = head2.next;
		while (b != null) {
			tmp = b.next;
			b.next = a;
			a = b;
			b = tmp;
		}
		head2.next = null;
		head2 = a;
		boolean ok = false;
		ListNode ret = null;
		ListNode head3 = null;
		int t = 0;
		while (head1 != null || head2 != null || t != 0) {
			if (head1 != null) {
				t += head1.val;
				head1 = head1.next;
			}
			if (head2 != null) {
				t += head2.val;
				head2 = head2.next;
			}
			if (!ok) {
				ret = new ListNode(t % 10);
				head3 = ret;
				ok = true;
			} 
			else {
				ret.next = new ListNode(t % 10);
				ret = ret.next;
			}
			t /= 10;
		}
		if (ret == null) {
			return null;
		}
		tmp = null;
		a = head3;
		b = head3.next;
		while (b != null) {
			tmp = b.next;
			b.next = a;
			a = b;
			b = tmp;
		}
		head3.next = null;
		return a;
	}
}