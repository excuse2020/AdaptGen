class Solution {
	boolean findPath(TreeNode root, int target, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		StringBuilder sourcePath = new StringBuilder();
		StringBuilder destPath = new StringBuilder();
		findPath(root,startValue,sourcePath);
		findPath(root,destValue,destPath);
		StringBuilder result = new StringBuilder();
		int index = 0;
		int sourceLen = sourcePath.length();
		int destLen = destPath.length();
		while (index < sourceLen && index < destLen && sourcePath.charAt(index) == destPath.charAt(index)) {
			index++;
		}
		for (int i = index; i < sourceLen; i++) {
			result.append("U");
		}
		for (int i = index; i < destLen; i++) {
			result.append(destPath.charAt(i));
		}
		return result.toString();
	}
}