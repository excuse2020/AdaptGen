class Solution {
	int lcs(int[] nums1, int[] nums2, int[][] dp, int n, int m) {
		if (m == 0 || n == 0) {
			return 0;
		}
		if (dp[n][m] != -1) {
			return dp[n][m];
		}
		if (nums1[n - 1] == nums2[m - 1]) {
			return dp[n][m] = 1 + lcs(nums1,nums2,dp,n - 1,m - 1);
		}
		return dp[n][m] = Math.max(lcs(nums1,nums2,dp,n - 1,m),lcs(nums1,nums2,dp,n,m - 1));
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int[][] dp = new int[nums1.length + 1][nums2.length + 1];
		for (int i = 1; i < dp.length; i++) {
			for (int j = 1; j < dp[0].length; j++) {
				dp[i][j] = -1;
			}
		}
		return lcs(nums1,nums2,dp,nums1.length,nums2.length);
	}
}