class Solution {
	void heapSort(int[] arr) {
		for (int i = arr.length / 2 - 1; i >= 0; i--) {
			heapify(arr,arr.length,i);
		}
		for (int i = arr.length - 1; i > 0; i--) {
			swap(arr,0,i);
			heapify(arr,i,0);
		}
	}
	void heapify(int[] arr, int n, int i) {
		int largest = i;
		int left = 2 * i + 1;
		int right = 2 * i + 2;
		if (left < n && arr[left] > arr[largest]) {
			largest = left;
		}
		if (right < n && arr[right] > arr[largest]) {
			largest = right;
		}
		if (largest != i) {
			swap(arr,i,largest);
			heapify(arr,n,largest);
		}
	}
	int numRescueBoats(int[] people, int limit) {
		heapSort(people);
		int left = 0, right = people.length - 1;
		int ans = 0;
		for (; left <= right; ans++) {
			if (people[left] + people[right--] <= limit) {
				left++;
			}
		}
		return ans;
	}
	void swap(int[] arr, int a, int b) {
		int temp = arr[a];
		arr[a] = arr[b];
		arr[b] = temp;
	}
}