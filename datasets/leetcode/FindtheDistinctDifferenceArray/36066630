class Solution {
	int[] differenceArray(int[] nums) {
		int[] arr = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			arr[i] = sumPrefix(nums,i + 1) - sumSuffix(nums,i + 1);
		}
		return arr;
	}
	int[] distinctDifferenceArray(int[] nums) {
		return differenceArray(nums);
	}
	int sumPrefix(int[] nums, int count) {
		List<Integer> arrList = new ArrayList<>();
		for (int i = 0; i < count; i++) {
			if (!arrList.contains(nums[i])) {
				arrList.add(nums[i]);
			}
		}
		return arrList.size();
	}
	int sumSuffix(int[] nums, int count) {
		List<Integer> arrList = new ArrayList<>();
		for (int i = count; i < nums.length; i++) {
			if (!arrList.contains(nums[i])) {
				arrList.add(nums[i]);
			}
		}
		return arrList.size();
	}
}