class Solution {
	int helper(int[] n1, int[] n2, int i1, int i2, int[][] dp) {
		if (i1 >= n1.length || i2 >= n2.length) {
			return 0;
		}
		if (dp[i1][i2] != 0) {
			return dp[i1][i2];
		}
		if (n1[i1] == n2[i2]) {
			return dp[i1][i2] = 1 + helper(n1,n2,i1 + 1,i2 + 1,dp);
		} 
		else {
			return dp[i1][i2] = Math.max(helper(n1,n2,i1 + 1,i2,dp),helper(n1,n2,i1,i2 + 1,dp));
		}
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int[][] dp = new int[nums1.length][nums2.length];
		return helper(nums1,nums2,0,0,dp);
	}
}