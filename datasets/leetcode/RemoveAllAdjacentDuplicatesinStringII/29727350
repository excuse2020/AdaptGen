class Solution {
	String removeDuplicates(String s, int k) {
		Stack<Character> char_stack = new Stack<>();
		Stack<Integer> count_stack = new Stack<>();
		for (char ch: s.toCharArray()) {	
			if (!char_stack.isEmpty() && char_stack.peek() == ch) {
				count_stack.push(count_stack.peek() + 1);
				char_stack.push(ch);
			} 
			else {
				count_stack.push(1);
				char_stack.push(ch);
			}
			if (count_stack.peek() == k) {
				int idx = k;
				while (idx > 0) {
					count_stack.pop();
					char_stack.pop();
					idx--;
				}
			}
		}
		StringBuilder ans = new StringBuilder();
		while (char_stack.size() != 0) {
			ans.append(char_stack.pop());
		}
		return ans.reverse().toString();
	}
}