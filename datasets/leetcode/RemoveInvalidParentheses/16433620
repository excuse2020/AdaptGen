class Solution {
	int minremovedcount = Integer.MAX_VALUE;
	HashSet<String> resultSet = new HashSet<String>();
	void recursion(String s, int index, int leftcount, int rightcount, StringBuilder ds, int removedcount) {
		if (leftcount == rightcount) {
			if (removedcount <= minremovedcount) {
				String possibleAns = ds.toString();
				if (removedcount < minremovedcount) {
					resultSet.clear();
					minremovedcount = removedcount;
				}
				resultSet.add(possibleAns);
			}
		}
		int length = ds.length();
		char currchar = s.charAt(index);
	}
	List<String> removeInvalidParentheses(String s) {
		this.reset();
		this.recursion(s,0,0,0,new StringBuilder(),0);
		return new ArrayList(this.resultSet);
	}
	void reset() {
		this.resultSet.clear();
		this.minremovedcount = Integer.MAX_VALUE;
	}
}