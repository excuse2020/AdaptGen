class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int i = 0, m = 0, n = 0;
		int len1 = nums1.length;
		int len2 = nums2.length;
		int arr = new int[len1 + len2];
		while ((m < len1) && (n < len2)) {
			if (nums1[m] < nums2[n]) {
				arr[i] = nums1[m];
				m++;
				i++;
			} 
			else if (nums1[m] > nums2[n]) {
				arr[i] = nums2[n];
				n++;
				i++;
			} 
			else {
				arr[i] = nums1[m];
				i++;
				arr[i] = nums2[n];
				i++;
				m++;
				n++;
			}
		}
		if (m < len1) {
			while (i < arr.length) {
				arr[i] = nums1[m];
				i++;
				m++;
			}
		} 
		else if (n < len2) {
			while (i < arr.length) {
				arr[i] = nums2[n];
				i++;
				n++;
			}
		}
		int size = arr.length;
		if (size % 2 == 0) {
			double avg = (arr[size / 2] + arr[(size / 2) - 1]);
			return (avg / 2);
		} 
		else {
			return arr[size / 2];
		}
	}
}