class Solution {
	boolean canDistribute(int n, int[] quantities, int x) {
		int res = 0;
		for (int quantity: quantities) {	
			res += (quantity - 1) / x + 1;
		}
		return res <= n;
	}
	int minimizedMaximum(int n, int[] quantities) {
		int max = Integer.MIN_VALUE;
		for (int quantity: quantities) {	
			max = Math.max(quantity,max);
		}
		int l = 1, r = max;
		while (l <= r) {
			int mid = l + (r - l) / 2;
			if (canDistribute(n,quantities,mid)) {
				r = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		return l;
	}
}