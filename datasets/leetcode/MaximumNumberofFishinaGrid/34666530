class Solution {
	int findMaxFish(int[][] grid) {
		int max = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] != 0) {
					max = Math.max(max,fun(grid,i,j));
				}
			}
		}
		return max;
	}
	int fun(int[][] grid, int i, int j) {
		if (i == grid.length || j == grid[0].length || i < 0 || j < 0 || grid[i][j] == 0) {
			return 0;
		}
		int val = grid[i][j];
		grid[i][j] = 0;
		int a = fun(grid,i + 1,j);
		int b = fun(grid,i - 1,j);
		int c = fun(grid,i,j + 1);
		int d = fun(grid,i,j - 1);
		return val + a;
	}
}