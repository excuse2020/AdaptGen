class Solution {
	boolean dfs(String curr, String res, int idx, HashMap<Integer, String> map, HashMap<String, Boolean> dp) {
		if (curr.length() == 1) {
			return true;
		}
		if (idx == curr.length() - 1) {
			return dfs(res,"",0,map,dp);
		}
		String state = curr + " ";
		if (dp.containsKey(state)) {
			return dp.get(state);
		}
		int key;
	}
	boolean pyramidTransition(String bottom, List<String> allowed) {
		HashMap<Integer, String> map = new HashMap<Integer, String>();
		int i = 0;
		String str = allowed.get(i);
		int key;
	}
}