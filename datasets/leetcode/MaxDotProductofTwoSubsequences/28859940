class Solution {
	int[][] dp;
	int maxDotProduct(int[] nums1, int[] nums2) {
		dp = new int[nums1.length][nums2.length];
		return recursion(nums1,nums2,0,0);
	}
	int recursion(int[] nums1, int[] nums2, int i, int j) {
		if (i == nums1.length || j == nums2.length) {
			return -10000000;
		}
		if (dp[i][j] != 0) {
			return dp[i][j];
		}
		int maxValue = -10000000;
		maxValue = Math.max(maxValue,Math.max(nums1[i] * nums2[j],nums1[i] * nums2[j] + recursion(nums1,nums2,i + 1,j + 1)));
		maxValue = Math.max(maxValue,recursion(nums1,nums2,i + 1,j));
		maxValue = Math.max(maxValue,recursion(nums1,nums2,i,j + 1));
		dp[i][j] = maxValue;
		return maxValue;
	}
}