class Solution {
	int partitionDisjoint(int[] nums) {
		int n = nums.length;
		int[] lMx = new int[n];
		int[] rMn = new int[n];
		lMx[0] = nums[0];
		for (int i = 1; i < n; i++) {
			if (nums[i] > lMx[i - 1]) {
				lMx[i] = nums[i];
			} 
			else {
				lMx[i] = lMx[i - 1];
			}
		}
		rMn[n - 1] = nums[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			if (nums[i] < rMn[i + 1]) {
				rMn[i] = nums[i];
			} 
			else {
				rMn[i] = rMn[i + 1];
			}
		}
		for (int i = 0; i < n; i++) {
			System.out.println(lMx[i] + " ");
		}
		int ans = 0;
		for (int i = 0; i < n - 1; i++) {
			if (lMx[i] <= rMn[i + 1]) {
				ans = i;
				break;
			}
		}
		return ans + 1;
	}
}