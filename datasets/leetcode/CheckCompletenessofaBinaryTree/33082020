class Solution {
	boolean bfs(TreeNode root) {
		Queue<TreeNode> q = new LinkedList<TreeNode>();
		q.add(root);
		boolean reached_end = false;
		while (q.isEmpty() != true) {
			TreeNode node = q.poll();
			if (reached_end == false) {
				if (node.left == null) {
					reached_end = true;
				} 
				else {
					q.add(node.left);
				}
				if (node.right == null) {
					reached_end = true;
				} 
				else {
					q.add(node.right);
				}
				if (reached_end == true) {
					if (node.right != null) {
						return false;
					}
				}
			} 
			else if (reached_end == true) {
				if (node.left != null || node.right != null) {
					return false;
				}
			}
		}
		return true;
	}
	boolean isCompleteTree(TreeNode root) {
		return bfs(root);
	}
}