class Solution {
	boolean check(int x, int[] price, int k) {
		int last = price[0];
		int count = 1;
		for (int i = 1; i < price.length; i++) {
			if (price[i] - last >= x) {
				last = price[i];
				count++;
				if (count == k) {
					return true;
				}
			}
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int lo = 0;
		int hi = price[price.length - 1] - price[0];
		while (lo < hi) {
			int mid = (lo + hi) / 2;
			if (check(mid,price,k)) {
				lo = mid;
			} 
			else {
				hi = mid - 1;
			}
		}
		return lo;
	}
}