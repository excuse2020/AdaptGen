class Solution {
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int k) {
		ArrayList<Integer> arr = new ArrayList();
		mergeSort(input,0,input.length - 1);
		System.out.print(Arrays.toString(input));
		for (int i = 0; i < k; i++) {
			arr.add(input[i]);
		}
		return arr;
	}
	void merge(int[] input, int left, int mid, int right) {
		int[] temp = new int[input.length];
		int point1 = left;
		int point2 = mid + 1;
		int loc = left;
		while (point1 <= mid && point2 <= right) {
			if (input[point1] < input[point2]) {
				temp[loc] = input[point1];
				point1++;
				loc++;
			} 
			else {
				temp[loc] = input[point2];
				point2++;
				loc++;
			}
		}
		while (point1 <= mid) {
			temp[loc] = input[point1];
			loc++;
			point1++;
		}
		while (point2 <= right) {
			temp[loc] = input[point2];
			loc++;
			point2++;
		}
		for (int i = left; i <= right; i++) {
			input[i] = temp[i];
		}
	}
	void mergeSort(int[] input, int left, int right) {
		if (left < right) {
			int mid = (left + right) / 2;
			mergeSort(input,left,mid);
			mergeSort(input,mid + 1,right);
			merge(input,left,mid,right);
		}
	}
}