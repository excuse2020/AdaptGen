class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		Stack<ListNode> stack = new Stack<>();
		int i = 1;
		ListNode p = head;
		ListNode last = head;
		ListNode front = head;
		while (p != null) {
			if (i < m - 1) {
				front = front.next;
			}
			if (i <= n) {
				last = last.next;
			}
			if (i >= m && i <= n) {
				stack.push(p);
			}
			p = p.next;
			i++;
		}
		ListNode stack_head = stack.pop();
		ListNode temp = stack_head;
		while (!stack.isEmpty()) {
			temp.next = stack.pop();
			temp = temp.next;
		}
		front.next = stack_head;
		temp.next = last;
		if (m == 1) {
			return stack_head;
		}
		return head;
	}
}