class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> arr = new ArrayList<>();
		inorder(arr,root);
		return builderBst(0,arr.size() - 1,arr);
	}
	TreeNode builderBst(int low, int high, List<Integer> arr) {
		if (low > high) {
			return null;
		} 
		else if (low == high) {
			return new TreeNode(arr.get(low));
		}
		int mid = low + (high - low) / 2;
		TreeNode node = new TreeNode(arr.get(mid));
		node.left = builderBst(low,mid - 1,arr);
		node.right = builderBst(mid + 1,high,arr);
		return node;
	}
	void inorder(List<Integer> arr, TreeNode root) {
		if (root == null) {
			return;
		}
		inorder(arr,root.left);
		arr.add(root.val);
		inorder(arr,root.right);
	}
}