class Solution {
	int bagOfTokensScore(int[] tokens, int power) {
		int x = 0;
		int y = tokens.length - 1;
		tokens = quicksort(tokens,0,tokens.length);
		int score = 0;
		int temp = 0;
		while (x <= y) {
			if (tokens[x] <= power) {
				power -= tokens[x++];
				temp++;
				score = Math.max(score,temp);
			} 
			else {
				if (score >= 1) {
					temp--;
					power += tokens[y--];
				} 
				else {
					return score;
				}
			}
		}
		return score;
	}
	int[] quicksort(int[] arr, int x, int y) {
		if (y - x < 2) {
			return arr;
		}
		int pivot = arr[x];
		int i = x;
		int j = y;
		while (i < j) {
			while (i < j && arr[--j] > pivot) {
			}
			if (i < j) {
				arr[i] = arr[j];
			}
			while (i < j && arr[++i] <= pivot) {
			}
			if (i < j) {
				arr[j] = arr[i];
			}
		}
		arr[j] = pivot;
		quicksort(arr,x,j);
		quicksort(arr,j + 1,y);
		return arr;
	}
}