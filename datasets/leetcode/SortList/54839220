class Solution {
	ListNode combine(ListNode l1, ListNode l2) {
		if (l1 == null) {
			return l2;
		}
		if (l2 == null) {
			return l1;
		}
		if (l1.val < l2.val) {
			l1.next = combine(l1.next,l2);
			return l1;
		} 
		else {
			l2.next = combine(l2.next,l1);
			return l2;
		}
	}
	ListNode middle(ListNode h) {
		ListNode a = h;
		ListNode b = h;
		while (a.next != null && a.next.next != null) {
			a = a.next.next;
			b = b.next;
		}
		return b;
	}
	ListNode sortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode h1 = head;
		ListNode m = middle(head);
		ListNode h2 = m.next;
		m.next = null;
		h1 = sortList(h1);
		h2 = sortList(h2);
		return combine(h1,h2);
	}
}