class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode temp = head;
		int size = 0;
		while (temp != null) {
			size++;
			temp = temp.next;
		}
		int rem = size % 2;
		int len = size / 2;
		int[] evenArr = new int[len];
		int[] oddArr = new int[len];
		if (rem == 1) {
			oddArr = new int[len + 1];
		}
		ListNode temp2 = head;
		int index = 1;
		int evenIndex = 0;
		int oddIndex = 0;
		while (temp2 != null) {
			if (index % 2 == 0) {
				evenArr[evenIndex] = temp2.val;
				evenIndex++;
			} 
			else {
				oddArr[oddIndex] = temp2.val;
				oddIndex++;
			}
			index++;
			temp2 = temp2.next;
		}
		ListNode res = head;
		index = 0;
		evenIndex = 0;
		oddIndex = 0;
		while (res != null) {
			if (index < oddArr.length) {
				res.val = oddArr[oddIndex++];
			} 
			else {
				res.val = evenArr[evenIndex++];
			}
			index++;
			res = res.next;
		}
		return head;
	}
}