class Solution {
	int number = 0;
	void Countnodes(TreeNode root) {
		if (root != null) {
			number++;
		} 
		else {
			return;
		}
		Countnodes(root.left);
		Countnodes(root.right);
	}
	void doexpandtree(TreeNode root, ArrayList<TreeNode> treenodelist) {
		if (root != null) {
			treenodelist.add(root);
		} 
		else {
			return;
		}
		if (root.left != null) {
			doexpandtree(root.left,treenodelist);
		}
		if (root.right != null) {
			doexpandtree(root.right,treenodelist);
		}
	}
	void expandTree(TreeNode root) {
		if (root == null) {
			return;
		}
		Countnodes(root);
		ArrayList<TreeNode> treenodelist = new ArrayList<>(number);
		doexpandtree(root,treenodelist);
		TreeNode cur = root;
		cur.left = null;
		for (int i = 1; i < treenodelist.size(); i++) {
			cur.right = treenodelist.get(i);
			cur.right.left = null;
			cur = cur.right;
		}
	}
}