class Solution {
	boolean hasPath(char[][] matrix, String word) {
		char[] words = word.toCharArray();
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (traversal(i,j,matrix,words,0)) {
					return true;
				}
			}
		}
		return false;
	}
	boolean traversal(int i, int j, char[][] matrix, char[] words, int index) {
		if (i >= matrix.length || i < 0 || j >= matrix[0].length || j < 0 || matrix[i][j] != words[index]) {
			return false;
		}
		if (index == words.length - 1) {
			return true;
		}
		char tmp = matrix[i][j];
		matrix[i][j] = '.';
		boolean res = traversal(i + 1,j,matrix,words,index + 1) || traversal(i - 1,j,matrix,words,index + 1);
		matrix[i][j] = tmp;
		return res;
	}
}