class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int minRow = 0;
		int maxRow = m - 1;
		int minCol = 0;
		int maxCol = n - 1;
		int[][] matrix = new int[m][n];
		int totalElements = m * n;
		ListNode temp = head;
		while (totalElements > 0) {
			for (int i = minCol; i <= maxCol && totalElements > 0; i++) {
				int val = -1;
				if (temp != null) {
					val = temp.val;
					temp = temp.next;
				}
				matrix[minRow][i] = val;
				totalElements--;
			}
			minRow++;
			for (int i = minRow; i <= maxRow && totalElements > 0; i++) {
				int val = -1;
				if (temp != null) {
					val = temp.val;
					temp = temp.next;
				}
				matrix[i][maxCol] = val;
				totalElements--;
			}
			maxCol--;
			for (int i = maxCol; i >= minCol && totalElements > 0; i--) {
				int val = -1;
				if (temp != null) {
					val = temp.val;
					temp = temp.next;
				}
				matrix[maxRow][i] = val;
				totalElements--;
			}
			maxRow--;
			for (int i = maxRow; i >= minRow && totalElements > 0; i--) {
				int val = -1;
				if (temp != null) {
					val = temp.val;
					temp = temp.next;
				}
				matrix[i][minCol] = val;
				totalElements--;
			}
			minCol++;
		}
		return matrix;
	}
}