class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		if (isSameTree(root1,root2)) {
			return true;
		}
		return HasSubtree(root1.left,root2) || HasSubtree(root1.right,root2);
	}
	boolean isSameTree(TreeNode A, TreeNode B) {
		if (A == null || A.val != B.val) {
			return false;
		}
		boolean left = true;
		boolean right = true;
		if (B.left != null) {
			left = isSameTree(A.left,B.left);
		}
		if (B.right != null) {
			right = isSameTree(A.right,B.right);
		}
		return left && right;
	}
}