class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode nodeX = findX(root,x);
		int leftCount = countNodes(nodeX.left);
		int rightCount = countNodes(nodeX.right);
		return (leftCount + rightCount < n / 2) || (leftCount > n - leftCount);
	}
	int countNodes(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + countNodes(root.left);
	}
	TreeNode findX(TreeNode root, int x) {
		if (root == null || root.val == x) {
			return root;
		}
		TreeNode left = findX(root.left,x);
		if (left != null) {
			return left;
		}
		return findX(root.right,x);
	}
}