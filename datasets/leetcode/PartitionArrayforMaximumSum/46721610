class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int n = arr.length;
		int[] dp = new int[n + 1];
		for (int i = 0; i < n; ++i) {
			int maxOfLastJ = arr[i];
			int count = 1;
			for (int j = i; j >= Math.max(0,i - k); --j) {
				maxOfLastJ = Math.max(maxOfLastJ,arr[j]);
				dp[i + 1] = Math.max(dp[i + 1],dp[j] + maxOfLastJ * count);
				++count;
				if (count > k) {
					break;
				}
			}
		}
		return dp[n];
	}
}