class Solution {
	int numberOfGoodSubarraySplits(int[] nums) {
		long ans = 1, mod = (long) 1e9 + 7;
		int n = nums.length;
		int cnt = 0;
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				cnt++;
			}
		}
		if (cnt == 0) {
			return 0;
		}
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				int j = i + 1, count = 0;
				while (j < n && nums[j] == 0) {
					count++;
					j++;
				}
				if (j < n && nums[j] == 1) {
					ans = (ans * (count + 1)) % mod;
				}
				i = j - 1;
			}
		}
		return (int) (ans % mod);
	}
}