class Solution {
	int pre = Integer.MIN_VALUE;
	boolean isValidBST(TreeNode root) {
		if (root == null) {
			return true;
		}
		if (!isValidBST(root.left)) {
			return false;
		}
		if (root.val < pre) {
			return false;
		}
		pre = root.val;
		if (!isValidBST(root.right)) {
			return false;
		}
		return true;
	}
	boolean isValidBST2(TreeNode root) {
		if (root == null) {
			return false;
		}
		Stack<TreeNode> s = new Stack<>();
		while (root != null || !s.isEmpty()) {
			while (root != null) {
				s.push(root);
				root = root.left;
			}
			TreeNode top = s.pop();
			if (top.val < pre) {
				return false;
			} 
			else {
				pre = top.val;
			}
			root = top.right;
		}
		return true;
	}
}