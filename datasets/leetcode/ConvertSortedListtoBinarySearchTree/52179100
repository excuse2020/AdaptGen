class Solution {
	TreeNode helper(List<Integer> a) {
		if (a.size() == 0) {
			return null;
		}
		if (a.size() == 1) {
			TreeNode root = new TreeNode(a.get(0));
			return root;
		}
		int m = (a.size()) / 2;
		TreeNode root = new TreeNode(a.get(m));
		root.left = helper(a.subList(0,m));
		root.right = helper(a.subList(m + 1,a.size()));
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		List<Integer> a = new ArrayList<>();
		ListNode curr = head;
		while (curr != null) {
			a.add(curr.val);
			curr = curr.next;
		}
		return helper(a);
	}
}