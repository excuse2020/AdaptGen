class Solution {
	boolean IsBalanced_Solution(TreeNode pRoot) {
		if (pRoot == null) {
			return true;
		}
		int left_height = tree_high(pRoot.left);
		int right_height = tree_high(pRoot.right);
		if ((left_height - right_height > 1) || (left_height - right_height < -1)) {
			return false;
		}
		if (IsBalanced_Solution(pRoot.left) && IsBalanced_Solution(pRoot.right)) {
			return true;
		} 
		else {
			return false;
		}
	}
	int tree_high(TreeNode pRoot) {
		if (pRoot == null) {
			return 0;
		}
		int left = 1 + tree_high(pRoot.left);
		int right = 1 + tree_high(pRoot.right);
		return Math.max(left,right);
	}
}