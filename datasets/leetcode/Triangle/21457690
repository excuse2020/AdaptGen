class Solution {
	int fun(int[][] dp, List<List<Integer>> t, int n, int i) {
		if (n >= t.size()) {
			return 0;
		}
		if (n == t.size()) {
			return t.get(n).get(i);
		}
		if (dp[n][i] != -1) {
			return dp[n][i];
		}
		return dp[n][i] = Math.min(fun(dp,t,n + 1,i),fun(dp,t,n + 1,i + 1)) + t.get(n).get(i);
	}
	int minimumTotal(List<List<Integer>> t) {
		int dp = new int[t.size()][t.size()];
		int ans = Integer.MAX_VALUE;
		for (int i = 0; i < t.size(); i++) {
			Arrays.fill(dp[i],-1);
		}
		return fun(dp,t,0,0);
	}
}