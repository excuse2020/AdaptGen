class Solution {
	long fun(int i, List<Integer> maxHeights) {
		long res = maxHeights.get(i);
		int temp = maxHeights.get(i);
		for (int k = i - 1; k >= 0; k--) {
			if (maxHeights.get(k) > temp) {
				res += temp;
			} 
			else {
				res += maxHeights.get(k);
				temp = maxHeights.get(k);
			}
		}
		temp = maxHeights.get(i);
		for (int k = i + 1; k < maxHeights.size(); k++) {
			if (maxHeights.get(k) > temp) {
				res += temp;
			} 
			else {
				res += maxHeights.get(k);
				temp = maxHeights.get(k);
			}
		}
		return res;
	}
	long maximumSumOfHeights(List<Integer> maxHeights) {
		long ans = 0;
		for (int i = 0; i < maxHeights.size(); i++) {
			long temp = fun(i,maxHeights);
			System.out.println(temp);
			if (ans < temp) {
				ans = temp;
			}
		}
		return ans;
	}
}