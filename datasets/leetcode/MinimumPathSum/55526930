class Solution {
	int minPathSum(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		int mem = new int[m][n];
		return minSum(grid,0,0,m,n,mem);
	}
	int minSum(int grid, int i, int j, int m, int n, int mem) {
		if (i == m - 1 && j == n - 1) {
			mem[i][j] = grid[i][j];
			return grid[i][j];
		} 
		else if (i == m || j == n) {
			return Integer.MAX_VALUE;
		}
		if (mem[i][j] != 0) {
			return mem[i][j];
		}
		return mem[i][j] = grid[i][j] + Math.min(minSum(grid,i + 1,j,m,n,mem),minSum(grid,i,j + 1,m,n,mem));
	}
}