class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		head1 = reverseList(head1);
		head2 = reverseList(head2);
		ListNode head = new ListNode(-1);
		ListNode nhead = head;
		int flag = 0;
		while (head1 != null || head2 != null) {
			int val = 0;
			if (head1 != null) {
				val += head1.val;
				head1 = head1.next;
			}
			if (head2 != null) {
				val += head2.val;
				head2 = head2.next;
			}
			val += flag;
			if (val > 9) {
				val = val % 10;
				flag = 1;
			} 
			else {
				flag = 0;
			}
			nhead.next = new ListNode(val);
			nhead = nhead.next;
		}
		if (flag == 1) {
			nhead.next = new ListNode(1);
		}
		return reverseList(head.next);
	}
	ListNode reverseList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode pre = null;
		ListNode cur = head;
		ListNode next;
		while (cur != null) {
			next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
		}
		return pre;
	}
}