class Solution {
	int getLengthOfOptimalCompression(String s, int k) {
		int n = s.length();
		int[][] dp = new int[n + 1][k + 1];
		for (int i = 1; i <= n; ++i) {
			for (int j = 0; j <= k; ++j) {
				dp[i][j] = j > 0 ? dp[i - 1][j - 1] : i;
				int count = 0, deletions = 0;
				for (int l = i; l >= 1; --l) {
					if (s.charAt(l - 1) == s.charAt(i - 1)) {
						count++;
					} 
					else {
						deletions++;
					}
					if (deletions > j) {
						break;
					}
					dp[i][j] = Math.min(dp[i][j],dp[l - 1][j - deletions] + 1);
				}
			}
		}
		return dp[n][k];
	}
}