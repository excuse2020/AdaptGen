class Solution {
	ListNode getMid(ListNode head, ListNode end) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != end && fast.next != end) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	TreeNode helper(ListNode head, ListNode end) {
		if (head == end) {
			return null;
		}
		ListNode mid = getMid(head,end);
		TreeNode node = new TreeNode(mid.val);
		node.left = helper(head,mid);
		node.right = helper(mid.next,end);
		return node;
	}
	TreeNode sortedListToBST(ListNode head) {
		return helper(head,null);
	}
}