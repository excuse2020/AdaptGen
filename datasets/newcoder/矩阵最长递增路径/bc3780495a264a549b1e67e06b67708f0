class Solution {
	int res = 0;
	void dfs(int i, int j, int[][] matrix, int path, int tag, int m, int n) {
		if (i < 0 || i > m - 1 || j < 0 || j > n - 1 || tag >= matrix[i][j]) {
			return;
		}
		path++;
		res = path > res ? path : res;
		dfs(i - 1,j,matrix,path,matrix[i][j],m,n);
		dfs(i + 1,j,matrix,path,matrix[i][j],m,n);
		dfs(i,j - 1,matrix,path,matrix[i][j],m,n);
		dfs(i,j + 1,matrix,path,matrix[i][j],m,n);
	}
	int solve(int[][] matrix) {
		int path = 0;
		int m = matrix.length;
		int n = matrix[0].length;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				dfs(i,j,matrix,path,-2000,m,n);
			}
		}
		return res;
	}
}