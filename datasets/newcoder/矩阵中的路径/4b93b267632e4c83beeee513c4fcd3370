class Solution {
	boolean backtrack(char[][] matrix, String word, int index, int i, int j) {
		if (index == word.length()) {
			return true;
		}
		if (i < 0 || i >= matrix.length || j < 0 || j >= matrix[0].length) {
			return false;
		}
		if (word.charAt(index) == '&') {
			return false;
		}
		if (word.charAt(index) == matrix[i][j]) {
			char temp = matrix[i][j];
			matrix[i][j] = '&';
			boolean res = backtrack(matrix,word,index + 1,i - 1,j) || backtrack(matrix,word,index + 1,i + 1,j);
			matrix[i][j] = temp;
			return res;
		}
		return false;
	}
	boolean hasPath(char[][] matrix, String word) {
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (backtrack(matrix,word,0,i,j)) {
					return true;
				}
			}
		}
		return false;
	}
}