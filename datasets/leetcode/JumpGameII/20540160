class Solution {
	int jump(int[] nums) {
		int jump = 0;
		int n = nums.length;
		boolean[] visited = new boolean[n];
		Queue<Integer> q = new LinkedList<>();
		q.add(0);
		while (!q.isEmpty()) {
			int size = q.size();
			for (int j = 0; j < size; j++) {
				int i = q.poll();
				if (i == n - 1) {
					return jump;
				}
				for (int x = 1; x <= nums[i]; x++) {
					if (i + x <= n - 1 && !visited[i + x]) {
						q.add(i + x);
						visited[i + x] = true;
					}
				}
			}
			jump++;
		}
		return -1;
	}
}