class Solution {
	ArrayList<String> force(String s) {
		ArrayList<String> res = new ArrayList<String>();
		char[] si = s.toCharArray();
		for (int i1 = 1; i1 <= 3; i1++) {
			int len1 = i1;
			if (len1 > si.length) {
				continue;
			}
			int c1 = 0;
			if (si[0] - '0' == 0 && i1 > 1) {
				continue;
			}
			for (int j1 = 0; j1 < i1; j1++) {
				c1 = c1 * 10 + (si[j1] - '0');
			}
			if (c1 > 255) {
				continue;
			}
			for (int i2 = 1; i2 <= 3; i2++) {
				int len2 = i1 + i2;
				if (len2 > si.length) {
					continue;
				}
				if (si[i1] - '0' == 0 && i2 > 1) {
					continue;
				}
				int c2 = 0;
				for (int j2 = 0; j2 < i2; j2++) {
					c2 = c2 * 10 + (si[i1 + j2] - '0');
				}
				if (c2 > 255) {
					continue;
				}
				for (int i3 = 1; i3 <= 3; i3++) {
					int len3 = i1 + i2;
					if (len3 > si.length) {
						continue;
					}
					if (si[i1 + i2] - '0' == 0 && i3 > 1) {
						continue;
					}
					int c3 = 0;
					for (int j3 = 0; j3 < i3; j3++) {
						c3 = c3 * 10 + (si[i1 + i2 + j3] - '0');
					}
					if (c3 > 255) {
						continue;
					}
					for (int i4 = 1; i4 <= 3; i4++) {
						int len4 = i1 + i2;
						if (len4 != si.length) {
							continue;
						}
						if (si[i1 + i2 + i3] - '0' == 0 && i4 > 1) {
							continue;
						}
						int c4 = 0;
						for (int j4 = 0; j4 < i4; j4++) {
							c4 = c4 * 10 + (si[i1 + i2 + i3+ j4] - '0');
						}
						if (c4 > 255) {
							continue;
						}
						res.add(c1 + ".");
					}
				}
			}
		}
		return res;
	}
	ArrayList<String> restoreIpAddresses(String s) {
		return force(s);
	}
}