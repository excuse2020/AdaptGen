class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> old = new LinkedList<>();
		if (root == null) {
			return old;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		while (!q.isEmpty()) {
			int n = q.size();
			List<Integer> sub = new ArrayList<>();
			for (int i = 0; i < n; i++) {
				TreeNode k = q.remove();
				if (k.left != null) {
					q.add(k.left);
				}
				if (k.right != null) {
					q.add(k.right);
				}
				sub.add(k.val);
			}
			old.add(sub);
		}
		for (int k = 0, j = old.size() - 1; k < j; k++) {
			old.add(k,old.remove(j));
		}
		return old;
	}
}