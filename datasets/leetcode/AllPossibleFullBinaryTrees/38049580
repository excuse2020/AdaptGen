class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		List<TreeNode> result = new ArrayList<>();
		if (n == 1) {
			result.add(new TreeNode(0));
			return result;
		}
		if (n % 2 == 0) {
			return result;
		}
		for (int i = 1; i < n; i += 2) {
			List<TreeNode> leftSubtrees = allPossibleFBT(i);
			List<TreeNode> rightSubtrees = allPossibleFBT(n - 1);
			for (TreeNode left: leftSubtrees) {	
				for (TreeNode right: rightSubtrees) {	
					TreeNode root = new TreeNode(0, left, right);
					result.add(root);
				}
			}
		}
		return result;
	}
}