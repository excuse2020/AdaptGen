class Solution {
	int[] canSeePersonsCount(int[] heights) {
		int numElements = heights.length;
		int[] seeList = new int[numElements];
		if (isSortedDownward(heights)) {
			for (int i = 0; i < numElements - 1; i++) {
				seeList[i] = 1;
			}
			return seeList;
		}
		int index = 0;
		for (int currentHeight: heights) {	
			int currentMinViewHeight = 0;
			int canSee = 0;
			for (int j = index + 1; j < numElements; j++) {
				int comparedHeight = heights[j];
				if (comparedHeight > currentHeight) {
					canSee++;
					break;
				}
				if (comparedHeight > currentMinViewHeight) {
					currentMinViewHeight = comparedHeight;
					canSee++;
				}
			}
			seeList[index] = canSee;
			index++;
		}
		return seeList;
	}
	boolean isSortedDownward(int[] heights) {
		int previous = heights[0];
		for (int current: heights) {	
			if (current > previous) {
				return false;
			}
			previous = current;
		}
		return true;
	}
}