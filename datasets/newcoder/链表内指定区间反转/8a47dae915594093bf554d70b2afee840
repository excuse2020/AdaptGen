class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (head == null) {
			return head;
		}
		if (m == 1 && n == 1) {
			return head;
		}
		ListNode start = null;
		ListNode end = null;
		ListNode node = new ListNode(0);
		node.next = head;
		ListNode preStart = node;
		for (int i = 1; i < m; i++) {
			preStart = preStart.next;
		}
		start = preStart.next;
		end = node;
		for (int i = 0; i < n; i++) {
			end = end.next;
		}
		ListNode e1 = end.next;
		ListNode next = null;
		end.next = null;
		while (start != null) {
			next = start.next;
			start.next = e1;
			e1 = start;
			start = next;
		}
		preStart.next = e1;
		return node.next;
	}
}