class Solution {
	boolean validateStackSequences(int[] pushed, int[] popped) {
		if (pushed.length != popped.length) {
			return false;
		}
		Stack<Integer> stack = new Stack<>();
		int i = 0, j = 0;
		while (i < pushed.length && j < popped.length) {
			while (i < pushed.length && pushed[i] != popped[j]) {
				stack.push(pushed[i]);
				i++;
			}
			if (i < pushed.length && pushed[i] == popped[j]) {
				i++;
				j++;
			}
			while (!stack.isEmpty() && j < popped.length && stack.peek() == popped[j]) {
				stack.pop();
				j++;
			}
		}
		return stack.isEmpty();
	}
}