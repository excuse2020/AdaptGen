class Solution {
	long continuousSubarrays(int[] nums) {
		TreeMap<Integer, Integer> map = new TreeMap<>();
		int i = 0, j = 1, n = nums.length;
		long res = 0;
		map.put(nums[0],1);
		while (j <= n) {
			while (map.lastEntry().getKey() - map.firstEntry().getKey() > 2) {
				map.put(nums[i],map.get(nums[i]) - 1);
				if (map.get(nums[i]) == 0) {
					map.remove(nums[i]);
				}
				i++;
			}
			res += j - i;
			if (j < n) {
				map.put(nums[j],map.getOrDefault(nums[j],0) + 1);
			}
			j++;
		}
		return res;
	}
}