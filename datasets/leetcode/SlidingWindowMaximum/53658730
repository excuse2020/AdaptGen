class Solution {
	int[] maxSlidingWindow(int[] nums, int k) {
		Deque<Integer> deque = new LinkedList<>();
		int[] ans = new int[nums.length - k + 1];
		int j = 0;
		for (int i = 0; i < k; i++) {
			while (!deque.isEmpty() && nums[deque.peekLast()] <= nums[i]) {
				deque.pollLast();
			}
			deque.addLast(i);
		}
		ans[j++] = nums[deque.peekFirst()];
		for (int i = k; i < nums.length; i++) {
			while (!deque.isEmpty() && deque.peekFirst() <= i - k) {
				deque.pollFirst();
			}
			while (!deque.isEmpty() && nums[deque.peekLast()] <= nums[i]) {
				deque.pollLast();
			}
			deque.addLast(i);
			ans[j++] = nums[deque.peekFirst()];
		}
		return ans;
	}
}