class Solution {
	boolean check(int[] piles, int k, int h) {
		for (int i = 0; i < piles.length; i++) {
			int k1 = (piles[i] / k) + ((piles[i] % k != 0) ? 1 : 0);
			h -= k1;
		}
		if (h >= 0) {
			return true;
		}
		return false;
	}
	int minEatingSpeed(int[] piles, int h) {
		int st = 1, end = 1000000001;
		while (st <= end) {
			int mid = st + (end - st) / 2;
			if (check(piles,mid,h)) {
				end = mid - 1;
			} 
			else {
				st = mid + 1;
			}
		}
		return st;
	}
}