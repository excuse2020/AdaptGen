class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		if (root == null) {
			return false;
		}
		if (root.val == x) {
			int left = count(root.left);
			int right = count(root.right);
			int parent = n - (left + right);
			return left > (right + parent) || right > (left + parent) || parent > (left + right);
		}
		return btreeGameWinningMove(root.left,n,x) || btreeGameWinningMove(root.right,n,x);
	}
	int count(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return count(root.left) + count(root.right);
	}
}