class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		boolean b = new boolean[10];
		for (int i = 1; i < 10; i++) {
			b[i] = true;
			fun(k - 1,n - i,ans,b,i);
			b[i] = false;
		}
		return ans;
	}
	void fun(int k, int n, List<List<Integer>> ans, boolean b, int i) {
		if (n < 0) {
			return;
		}
		if (k == 0) {
			if (n == 0) {
				ArrayList<Integer> x = new ArrayList<>();
				for (int y = 0; y < 10; y++) {
					if (b[y]) {
						x.add(y);
					}
				}
				ans.add(x);
			}
			return;
		}
		i++;
		while (i < b.length) {
			b[i] = true;
			fun(k - 1,n - i,ans,b,i);
			b[i] = false;
			i++;
		}
	}
}