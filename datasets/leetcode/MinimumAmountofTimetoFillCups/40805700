class Solution {
	int fillCups(int[] amount) {
		PriorityQueue<Integer> pq = new PriorityQueue<>((o1, o2) -> {o2 - o1});
		for (int a: amount) {	
			if (a != 0) {
				pq.offer(a);
			}
		}
		int steps = 0;
		while (!pq.isEmpty()) {
			int size = pq.size();
			if (size == 1) {
				return steps + pq.remove();
			}
			int max = pq.remove();
			int min = pq.remove();
			steps += 1;
			max -= 1;
			min -= 1;
			if (max != 0) {
				pq.offer(max);
			}
			if (min != 0) {
				pq.offer(min);
			}
		}
		return steps;
	}
}