class Solution {
	long re = Integer.MIN_VALUE;
	int F(TreeNode root) {
		long left = Integer.MIN_VALUE, right = Integer.MIN_VALUE;
		long max = Integer.MIN_VALUE;
		if (root == null) {
			return 0;
		}
		if (root.left != null) {
			left = F(root.left);
		}
		if (root.right != null) {
			right = F(root.right);
		}
		max = root.val;
		max = Math.max(max,root.val + left);
		max = Math.max(max,root.val + right);
		re = Math.max(re,root.val);
		re = Math.max(re,right);
		re = Math.max(re,left);
		re = Math.max(re,root.val + right);
		return (int) max;
	}
	int maxPathSum(TreeNode root) {
		int tmp = F(root);
		return Math.max((int) re,tmp);
	}
}