class Solution {
	boolean checkInBackwardDirection(int[] nums) {
		for (int i = nums.length - 1; i > 0; i--) {
			if (nums[i] < nums[i - 1]) {
				nums[i - 1] = nums[i];
				break;
			}
		}
		return isNonDecreasing(nums);
	}
	boolean checkInForwardDirection(int[] nums) {
		int issueIndex = -1;
		int num = 0;
		for (int i = 0; i < nums.length - 1; i++) {
			if (nums[i] > nums[i + 1]) {
				issueIndex = i;
				num = nums[i + 1];
				nums[i + 1] = nums[i];
				break;
			}
		}
		if (issueIndex == -1) {
			return true;
		}
		if (isNonDecreasing(nums)) {
			return true;
		}
		nums[issueIndex + 1] = num;
		return false;
	}
	boolean checkPossibility(int[] nums) {
		return checkInForwardDirection(nums) || checkInBackwardDirection(nums);
	}
	boolean isNonDecreasing(int[] nums) {
		for (int i = 0; i < nums.length - 1; i++) {
			if (nums[i] > nums[i + 1]) {
				return false;
			}
		}
		return true;
	}
}