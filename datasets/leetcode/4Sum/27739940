class Solution {
	List<List<Integer>> fourSum(int[] num, int target) {
		long[] nums = new long[num.length];
		for (int z = 0; z < nums.length; z++) {
			nums[z] = (long) num[z];
		}
		Arrays.sort(nums);
		long sum = 0;
		HashSet<List<Integer>> set = new HashSet();
		List<List<Integer>> ar = new ArrayList();
		for (int i = 0; i < nums.length; i++) {
			if (i > 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			for (int j = i + 1; j < nums.length; j++) {
				if (j > i + 1 && nums[j] == nums[j - 1]) {
					continue;
				}
				int k = j + 1;
				int l = nums.length - 1;
				while (k < l) {
					sum = nums[i] + nums[j];
					if (sum > target) {
						l--;
					} 
					else if (sum == target) {
						List<Integer> ar1 = new ArrayList();
						ar1.add((int) nums[i]);
						ar1.add((int) nums[j]);
						ar1.add((int) nums[k]);
						ar1.add((int) nums[l]);
						set.add(ar1);
						k++;
					} 
					else {
						k++;
					}
				}
			}
		}
		for (List<Integer> res: set) {	
			ar.add(res);
		}
		return ar;
	}
}