class Solution {
	boolean canReplace(char[] tchar, int pos, char[] schar) {
		int i = 0;
	}
	int[] movesToStamp(String stamp, String target) {
		char[] tchar = target.toCharArray();
		char[] schar = stamp.toCharArray();
		int count = 0;
		boolean[] visited = new boolean[tchar.length];
		List<Integer> res = new ArrayList<>();
		while (count != tchar.length) {
			boolean isChange = false;
			for (int i = 0; i <= tchar.length - schar.length; i++) {
				if (!visited[i] && canReplace(tchar,i,schar)) {
					count = replace(tchar,i,schar.length,count);
					visited[i] = true;
					isChange = true;
					res.add(i);
					if (count == tchar.length) {
						break;
					}
				}
			}
			if (!isChange) {
				return new int[0];
			}
		}
		int[] result = new int[res.size()];
		int k = 0;
		for (int i = res.size() - 1; i >= 0; i--) {
			result[k++] = res.get(i);
		}
		return result;
	}
	int replace(char[] tchar, int pos, int len, int count) {
		int i = 0;
	}
}