class Solution {
	boolean dfs(TreeNode root, int target, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
	String getDirections(TreeNode root, int x, int y) {
		TreeNode lcaNode = lca(root,x,y);
		StringBuilder path1 = new StringBuilder();
		dfs(lcaNode,x,path1);
		StringBuilder path2 = new StringBuilder();
		dfs(lcaNode,y,path2);
		int i = 0;
	}
	TreeNode lca(TreeNode root, int p, int q) {
		if (root == null || root.val == p || root.val == q) {
			return root;
		}
		TreeNode left = lca(root.left,p,q);
		TreeNode right = lca(root.right,p,q);
		if (left == null) {
			return right;
		}
		if (right == null) {
			return left;
		}
		return root;
	}
}