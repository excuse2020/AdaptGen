class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		q.add(null);
		while (!q.isEmpty()) {
			TreeNode curr_node = q.remove();
			if (curr_node == null) {
				result.add(new ArrayList<>(list));
				list.clear();
				if (q.isEmpty()) {
					break;
				} 
				else {
					q.add(null);
				}
			} 
			else {
				list.add(curr_node.val);
				if (curr_node.left != null) {
					q.add(curr_node.left);
				}
				if (curr_node.right != null) {
					q.add(curr_node.right);
				}
			}
		}
		Collections.reverse(result);
		return result;
	}
}