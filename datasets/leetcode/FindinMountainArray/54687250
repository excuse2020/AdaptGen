class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int start = 0;
		int end = mountainArr.length() - 1;
		while (start < end) {
			int mid = (start + end) / 2;
			if (mountainArr.get(mid) > mountainArr.get(mid + 1)) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		if (search(mountainArr,target,0,end) != -1) {
			return search(mountainArr,target,0,end);
		}
		return search(mountainArr,target,start,mountainArr.length() - 1);
	}
	int search(MountainArray arr, int target, int s, int e) {
		int start = s;
		int end = e;
		boolean isAsc = arr.get(start) < arr.get(end);
		while (start <= end) {
			int mid = (start + end) / 2;
			if (arr.get(mid) == target) {
				return mid;
			} 
			else if (target > arr.get(mid)) {
				if (isAsc) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			} 
			else {
				if (isAsc) {
					end = mid - 1;
				} 
				else {
					start = mid + 1;
				}
			}
		}
		return -1;
	}
}