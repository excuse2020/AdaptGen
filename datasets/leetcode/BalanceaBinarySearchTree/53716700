class Solution {
	TreeNode balanceBST(TreeNode root) {
		if (root == null) {
			return null;
		}
		ArrayList<Integer> list = new ArrayList<>();
		inorder(root,list);
		return buildBalanceBST(list);
	}
	TreeNode buildBalanceBST(List<Integer> list) {
		if (list.size() == 0) {
			return null;
		}
		int mid = list.size() / 2;
		TreeNode node = new TreeNode(list.get(mid));
		node.left = buildBalanceBST(list.subList(0,mid));
		node.right = buildBalanceBST(list.subList(mid + 1,list.size()));
		return node;
	}
	void inorder(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		inorder(root.left,list);
		list.add(root.val);
		inorder(root.right,list);
	}
}