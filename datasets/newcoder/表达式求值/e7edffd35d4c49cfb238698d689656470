class Solution {
	int solve(String s) {
		s.trim();
		s.replaceAll(" ","");
		Deque<Integer> stack = new ArrayDeque<>();
		int number = 0;
		char sign = '+';
		char[] cs = s.toCharArray();
		for (int i = 0; i < cs.length; i++) {
			char c = cs[i];
			if (Character.isDigit(c)) {
				number = number * 10 + (c - '0');
			}
			if (c == '(') {
				int countKuoHao = 1;
				int j = i + 1;
				while (countKuoHao != 0) {
					if (cs[j] == '(') {
						countKuoHao++;
					}
					if (cs[j] == ')') {
						countKuoHao--;
					}
					j++;
				}
				number = solve(s.substring(i + 1,j - 1));
				i = j - 1;
			}
			if (!Character.isDigit(c) || i == cs.length - 1) {
				if (sign == '+') {
					stack.push(number);
				}
				if (sign == '-') {
					stack.push(-1 * number);
				}
				if (sign == '*') {
					stack.push(stack.pop() * number);
				}
				if (sign == '/') {
					stack.push(stack.pop() / number);
				}
				number = 0;
				sign = c;
			}
		}
		int ans = 0;
		while (!stack.isEmpty()) {
			ans += stack.pop();
		}
		return ans;
	}
}