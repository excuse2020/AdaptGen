class Solution {
	boolean isPail(ListNode head) {
		if (head == null) {
			return false;
		}
		if (head.next == null) {
			return true;
		}
		Stack<ListNode> st = new Stack<>();
		ListNode slow = head, fast = head;
		while (fast != null && fast.next != null) {
			st.add(slow);
			slow = slow.next;
			fast = fast.next.next;
		}
		if (fast == null) {
			while (!st.isEmpty()) {
				if (st.pop().val == slow.val) {
					slow = slow.next;
				} 
				else {
					return false;
				}
			}
			return true;
		} 
		else {
			slow = slow.next;
			while (!st.isEmpty()) {
				if (st.pop().val == slow.val) {
					slow = slow.next;
				} 
				else {
					return false;
				}
			}
			return true;
		}
	}
}