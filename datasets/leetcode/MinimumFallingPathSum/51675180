class Solution {
	int minFallingPathSum(int[][] matrix) {
		int n = matrix.length;
		int[][] dp = new int[n][n];
		for (int i = 0; i < n; i++) {
			dp[0][i] = matrix[0][i];
		}
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < n; j++) {
				int up = dp[i - 1][j];
				int ld = (j > 0) ? dp[i - 1][j - 1] : Integer.MAX_VALUE;
				int rd = (j < n - 1) ? dp[i - 1][j + 1] : Integer.MAX_VALUE;
				dp[i][j] = matrix[i][j] + Math.min(up,Math.min(ld,rd));
			}
		}
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < n; i++) {
			min = Math.min(min,dp[n - 1][i]);
		}
		return min;
	}
}