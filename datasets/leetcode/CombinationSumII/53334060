class Solution {
	void Fun(List<List<Integer>> list, List<Integer> temp, int[] nums, int rem, int start) {
		if (rem < 0) {
			return;
		}
		if (rem == 0) {
			list.add(new ArrayList<>(temp));
		}
		for (int i = start; i < nums.length; i++) {
			if (i > start && nums[i] == nums[i - 1]) {
				continue;
			}
			temp.add(nums[i]);
			Fun(list,temp,nums,rem - nums[i],i + 1);
			temp.remove(temp.size() - 1);
		}
	}
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		List<List<Integer>> list = new ArrayList<>();
		Fun(list,new ArrayList<>(),candidates,target,0);
		return list;
	}
}