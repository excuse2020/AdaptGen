class Solution {
	int findPosition(int[] array, int element) {
		int low = 0, high = array.length - 1;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (array[mid] > element) {
				high = mid - 1;
			} 
			else if (array[mid] <= element) {
				low = mid + 1;
			}
		}
		return low;
	}
	int findSmallestOccurence(String s) {
		int freq = 0;
		char smallestChar;
	}
	int[] numSmallerByFrequency(String[] queries, String[] words) {
		int[] result = new int[queries.length];
		int[] q = new int[queries.length], w = new int[words.length];
		for (int i = 0; i < queries.length; i++) {
			q[i] = findSmallestOccurence(queries[i]);
		}
		for (int i = 0; i < words.length; i++) {
			w[i] = findSmallestOccurence(words[i]);
		}
		Arrays.sort(w);
		for (int i = 0; i < q.length; i++) {
			int index = findPosition(w,q[i]);
			result[i] = words.length - index;
		}
		return result;
	}
}