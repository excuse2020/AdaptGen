class Solution {
	boolean TripCal(int[] time, long time_taken, int totalTrips) {
		long cnt = 0;
		for (int i = 0; i < time.length; i++) {
			cnt += time_taken / (long) time[i];
		}
		return (cnt >= totalTrips);
	}
	long minimumTime(int[] time, int totalTrips) {
		long min = Long.MAX_VALUE;
		for (int i = 0; i < time.length; i++) {
			min = Math.min(min,time[i]);
		}
		long l = 1;
		long r = min * (long) totalTrips;
		while (l < r) {
			long mid = l + (r - l) / 2;
			if (TripCal(time,mid,totalTrips)) {
				r = mid;
			} 
			else {
				l = mid + 1;
			}
		}
		return l;
	}
}