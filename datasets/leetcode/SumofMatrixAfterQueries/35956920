class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int countR = n, countC = n;
		HashSet<Integer> rSet = new HashSet<>();
		HashSet<Integer> cSet = new HashSet<>();
		long ans = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int[] q = queries[i];
			if (q[0] == 0 && !rSet.contains(q[1])) {
				ans += (long) q[2] * countC;
				rSet.add(q[1]);
				countR--;
			} 
			else if (q[0] == 1 && !cSet.contains(q[1])) {
				ans += (long) (q[2]) * countR;
				cSet.add(q[1]);
				countC--;
			}
		}
		return ans;
	}
}