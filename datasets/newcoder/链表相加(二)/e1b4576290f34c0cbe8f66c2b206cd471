class Solution {
	ListNode ReverseList(ListNode pHead) {
		ListNode res = null;
		ListNode cur = pHead;
		while (cur != null) {
			ListNode temp = cur.next;
			cur.next = res;
			res = cur;
			cur = temp;
		}
		return res;
	}
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode l1 = ReverseList(head1);
		ListNode l2 = ReverseList(head2);
		ListNode res = null;
		int cnt = 0;
		while (l1 != null || l2 != null) {
			int x1 = l1 == null ? 0 : l1.val;
			int x2 = l2 == null ? 0 : l2.val;
			int sum = x1 + x2;
			cnt = sum / 10;
			ListNode tempNode = new ListNode(sum % 10);
			tempNode.next = res;
			res = tempNode;
			l1 = l1 == null ? null : l1.next;
			l2 = l2 == null ? null : l2.next;
		}
		if (cnt > 0) {
			ListNode tempNode = new ListNode(cnt);
			tempNode.next = res;
			res = tempNode;
		}
		return res;
	}
}