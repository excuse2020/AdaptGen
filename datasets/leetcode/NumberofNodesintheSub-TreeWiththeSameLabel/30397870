class Solution {
	Map<Integer, List<Integer>> adjList;
	int[] ans;
	String labels;
	int[] countSubTrees(int n, int[][] edges, String labels) {
		adjList = new HashMap<>();
		ans = new int[n];
		this.labels = labels;
		for (int[] edge: edges) {	
			List<Integer> fromList = adjList.getOrDefault(edge[0],new ArrayList<>());
			fromList.add(edge[1]);
			adjList.put(edge[0],fromList);
			List<Integer> toList = adjList.getOrDefault(edge[1],new ArrayList<>());
			toList.add(edge[0]);
			adjList.put(edge[1],toList);
		}
		dfs(0,-1);
		return ans;
	}
	int[] dfs(int node, int parent) {
		char ch = labels.charAt(node);
		int[] nodeCounts = new int[26];
	}
}