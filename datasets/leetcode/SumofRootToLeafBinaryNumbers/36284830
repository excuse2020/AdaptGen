class Solution {
	int k = 0;
	int printPath(ArrayList<Integer> path) {
		int s = 0;
		for (int i = 0; i < path.size(); i++) {
			s += path.get(i) * Math.pow(2,path.size() - 1);
		}
		return s;
	}
	void printroot2leaf(TreeNode root, ArrayList<Integer> path) {
		if (root == null) {
			return;
		}
		path.add(root.val);
		if (root.left == null && root.right == null) {
			k += printPath(path);
		} 
		else {
			printroot2leaf(root.left,path);
			printroot2leaf(root.right,path);
		}
		path.remove(path.size() - 1);
	}
	int sumRootToLeaf(TreeNode root) {
		ArrayList<Integer> path = new ArrayList<Integer>();
		printroot2leaf(root,path);
		return k;
	}
}