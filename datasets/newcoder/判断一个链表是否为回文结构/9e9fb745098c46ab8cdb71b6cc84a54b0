class Solution {
	boolean isPail(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode fast = head;
		ListNode slow = head;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		ListNode reverseList = reverse(slow);
		ListNode cur1 = head;
		ListNode cur2 = reverseList;
		while (cur2 != null) {
			if (cur1.val != cur2.val) {
				return false;
			}
			cur1 = cur1.next;
			cur2 = cur2.next;
		}
		return true;
	}
	ListNode reverse(ListNode node) {
		if (node == null || node.next == null) {
			return node;
		}
		ListNode cur = node;
		ListNode pre = null;
		while (cur != null) {
			ListNode next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
		}
		return pre;
	}
}