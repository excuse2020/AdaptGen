class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		PriorityQueue<Integer> fuelQueue = new PriorityQueue<>(Collections.reverseOrder());
		int position = startFuel;
		int stops = 0;
		int nextStationIndex = 0;
		while (position < target) {
			while (nextStationIndex < stations.length && stations[nextStationIndex][0] <= position) {
				fuelQueue.add(stations[nextStationIndex][1]);
				nextStationIndex++;
			}
			if (fuelQueue.isEmpty()) {
				return -1;
			}
			position += fuelQueue.poll();
			stops += 1;
		}
		return stops;
	}
}