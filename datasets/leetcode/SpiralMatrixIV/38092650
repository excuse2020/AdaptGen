class Solution {
	int[][] spiralMatrix(int n, int m, ListNode head) {
		ListNode temp = head;
		int[][] matrix = new int[n][m];
		for (int[] row: matrix) {	
			Arrays.fill(row,-1);
		}
		int count = 0;
		int i, j, startCol = 0, startRow = 0, endRow = n - 1, endCol = m - 1;
		while (temp != null) {
			j = startCol;
			while (j <= endCol && temp != null) {
				matrix[startRow][j] = temp.val;
				temp = temp.next;
				count += 1;
				j += 1;
			}
			startRow += 1;
			i = startRow;
			while (i <= endRow && temp != null) {
				matrix[i][endCol] = temp.val;
				temp = temp.next;
				count += 1;
				i += 1;
			}
			endCol -= 1;
			j = endCol;
			while (j >= startCol && temp != null) {
				matrix[endRow][j] = temp.val;
				temp = temp.next;
				count += 1;
				j -= 1;
			}
			endRow -= 1;
			i = endRow;
			while (i >= startRow && temp != null) {
				matrix[i][startCol] = temp.val;
				temp = temp.next;
				count += 1;
				i -= 1;
			}
			startCol += 1;
		}
		return matrix;
	}
}