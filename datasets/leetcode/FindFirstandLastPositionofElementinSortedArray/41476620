class Solution {
	int searchFirst(int[] nums, int target) {
		int start = 0;
		int end = nums.length - 1;
		int ans = -1;
		while (start <= end) {
			int mid = (start + end) / 2;
			if (nums[mid] >= target) {
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
			if (nums[mid] == target) {
				ans = mid;
			}
		}
		return ans;
	}
	int searchLast(int[] nums, int target) {
		int start = 0;
		int end = nums.length - 1;
		int ans = -1;
		while (start <= end) {
			int mid = (start + end) / 2;
			if (nums[mid] <= target) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
			if (nums[mid] == target) {
				ans = mid;
			}
		}
		return ans;
	}
	int[] searchRange(int[] nums, int target) {
		int[] ans = new int[2];
		Arrays.fill(ans,-1);
		ans[0] = searchFirst(nums,target);
		ans[1] = searchLast(nums,target);
		return ans;
	}
}