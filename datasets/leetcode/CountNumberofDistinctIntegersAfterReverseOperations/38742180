class Solution {
	int countDistinctIntegers(int[] nums) {
		Set<Integer> set = new HashSet<>();
		for (int n: nums) {	
			set.add(n);
			set.add(reverse(n));
		}
		return set.size();
	}
	int countDistinctIntegers(int[] nums) {
		int[] ans = new int[nums.length * 2];
		for (int i = 0; i < nums.length; i++) {
			ans[i] = nums[i];
		}
		for (int i = 0; i < nums.length; i++) {
			ans[i + nums.length] = reverse(nums[i]);
		}
		Arrays.sort(ans);
		int count = 0;
		for (int i = 1; i < ans.length; i++) {
			if (ans[i] != ans[i - 1]) {
				count++;
			}
		}
		return count + 1;
	}
	int reverse(int n) {
		int rev = 0;
		while (n > 0) {
			rev = (rev * 10) + (n % 10);
			n /= 10;
		}
		return rev;
	}
}