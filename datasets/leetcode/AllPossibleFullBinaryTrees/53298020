class Solution {
	List<TreeNode> allPossibleFBT(int N) {
		if (N <= 0 || N % 2 == 0) {
			return new ArrayList<>();
		}
		List<TreeNode> res = new ArrayList<>();
		if (N == 1) {
			res.add(new TreeNode(0));
			return res;
		}
		for (int i = 1; i < N; i += 2) {
			List<TreeNode> leftSubTrees = allPossibleFBT(i);
			List<TreeNode> rightSubTrees = allPossibleFBT(N - i);
			for (TreeNode l: leftSubTrees) {	
				for (TreeNode r: rightSubTrees) {	
					TreeNode root = new TreeNode(0);
					root.left = l;
					root.right = r;
					res.add(root);
				}
			}
		}
		return res;
	}
}