class Solution {
	String robotWithString(String s) {
		Stack<Character> stack = new Stack<>();
		StringBuilder res = new StringBuilder();
		TreeMap<Character, Integer> map = new TreeMap<>();
		for (char c: s.toCharArray()) {	
			map.put(c,map.getOrDefault(c,0) + 1);
		}
		for (char c: s.toCharArray()) {	
			if (!stack.isEmpty() && stack.peek() <= map.firstKey()) {
				while (!stack.isEmpty() && stack.peek() <= map.firstKey()) {
					char current = stack.pop();
					res.append(current);
				}
			}
			stack.push(c);
			map.put(c,map.get(c) - 1);
			if (map.get(c) <= 0) {
				map.remove(c);
			}
		}
		while (!stack.isEmpty()) {
			res.append(stack.pop());
		}
		return res.toString();
	}
}