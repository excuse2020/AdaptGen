class Solution {
	HashSet<String> set = new HashSet<>();
	String findDifferentBinaryString(String[] nums) {
		int n = nums[0].length();
		int arr = new int[n];
		ArrayList<String> l1 = new ArrayList<>();
		for (String i: nums) {	
			l1.add(i);
		}
		rec(arr,n,0);
		for (String s: set) {	
			if (!l1.contains(s)) {
				return s;
			}
		}
		return "";
	}
	void rec(int arr, int n, int i) {
		if (i == n) {
			StringBuilder sb = new StringBuilder();
			for (int j: arr) {	
				sb.append(j);
			}
			set.add(sb.toString());
			return;
		}
		arr[i] = 0;
		rec(arr,n,i + 1);
		arr[i] = 1;
		rec(arr,n,i + 1);
	}
}