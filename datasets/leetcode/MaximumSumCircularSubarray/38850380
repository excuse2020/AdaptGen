class Solution {
	int MaximumSumSub(int[] arr, int n) {
		int max_sum = arr[0];
		int max_ending = arr[0];
		for (int i = 1; i < n; i++) {
			max_ending = Math.max(max_ending + arr[i],arr[i]);
			max_sum = Math.max(max_ending,max_sum);
		}
		return max_sum;
	}
	int maxSubarraySumCircular(int[] nums) {
		int n = nums.length;
		int max_sum = MaximumSumSub(nums,n);
		int array_sum = 0;
		if (max_sum < 0) {
			return max_sum;
		}
		for (int i = 0; i < n; i++) {
			array_sum += nums[i];
			nums[i] = -nums[i];
		}
		int max_circular = array_sum + MaximumSumSub(nums,n);
		return Math.max(max_circular,max_sum);
	}
}