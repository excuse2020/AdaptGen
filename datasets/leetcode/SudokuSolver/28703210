class Solution {
	boolean isSafe(char[][] board, char toPlace, int x, int y) {
		for (int i = 0; i < 9; i++) {
			if (board[i][y] == toPlace) {
				return false;
			}
			if (board[x][i] == toPlace) {
				return false;
			}
		}
		int v = (x / 3) * 3;
		int h = (y / 3) * 3;
		for (int i = v; i < v + 3; i++) {
			for (int j = h; j < h + 3; j++) {
				if (board[i][j] == toPlace) {
					return false;
				}
			}
		}
		return true;
	}
	boolean solve(char[][] board, int row, int col) {
		if (row == 9) {
			return true;
		}
		if (col == 9) {
			return solve(board,row + 1,0);
		}
	}
	void solveSudoku(char[][] board) {
		solve(board,0,0);
	}
}