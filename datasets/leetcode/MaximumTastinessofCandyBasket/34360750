class Solution {
	boolean isValid(int[] price, int incremental, int k) {
		int count = 0, lastSmall = price[0];
		for (int i = 1; i < price.length; i++) {
			if (price[i] - lastSmall >= incremental) {
				count++;
				lastSmall = price[i];
			}
			if (count >= k - 1) {
				return true;
			}
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int minDiff = 0, maxDiff = price[price.length - 1] - price[0];
		maxDiff = maxDiff / (k - 1);
		while (minDiff <= maxDiff) {
			int mid = (minDiff + maxDiff) / 2;
			if (isValid(price,mid,k)) {
				minDiff = mid + 1;
			} 
			else {
				maxDiff = mid - 1;
			}
		}
		return maxDiff;
	}
}