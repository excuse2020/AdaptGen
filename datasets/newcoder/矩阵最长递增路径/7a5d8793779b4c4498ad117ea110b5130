class Solution {
	int maxdepth = 1;
	void func(int[][] mat, int x, int y, int depth) {
		int temp = mat[x][y];
		if (depth > maxdepth) {
			maxdepth = depth;
		}
		if (x + 1 >= 0 && x + 1 < mat.length && y >= 0 && y < mat[0].length && mat[x + 1][y] > temp) {
			func(mat,x + 1,y,depth + 1);
		}
		if (x - 1 >= 0 && x - 1 < mat.length && y >= 0 && y < mat[0].length && mat[x - 1][y] > temp) {
			func(mat,x - 1,y,depth + 1);
		}
		if (x >= 0 && x < mat.length && y + 1 >= 0 && y + 1 < mat[0].length && mat[x][y + 1] > temp) {
			func(mat,x,y + 1,depth + 1);
		}
		if (x >= 0 && x < mat.length && y - 1 >= 0 && y - 1 < mat[0].length && mat[x][y - 1] > temp) {
			func(mat,x,y - 1,depth + 1);
		}
	}
	int solve(int[][] matrix) {
		for (int i = 0; i < matrix.length; ++i) {
			for (int j = 0; j < matrix[0].length; ++j) {
				func(matrix,i,j,1);
			}
		}
		return maxdepth;
	}
}