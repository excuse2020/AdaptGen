class Solution {
	int maxHeight(int[][] grid, int r, int c) {
		int[] row = new int[grid.length];
		for (int i = 0; i < row.length; i++) {
			row[i] = grid[r][i];
		}
		Arrays.sort(row);
		int rowMax = row[row.length - 1];
		int[] col = new int[grid[r].length];
		for (int i = 0; i < col.length; i++) {
			col[i] = grid[i][c];
		}
		Arrays.sort(col);
		int colMax = col[col.length - 1];
		return Math.min(rowMax,colMax);
	}
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				sum += maxHeight(grid,i,j) - grid[i][j];
			}
		}
		return sum;
	}
}