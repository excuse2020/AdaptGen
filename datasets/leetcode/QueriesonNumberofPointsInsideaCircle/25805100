class Solution {
	int[] countPoints(int[][] points, int[][] queries) {
		ArrayList<Integer> al = new ArrayList<Integer>();
		for (int i = 0; i < queries.length; i++) {
			int count = 0;
			for (int j = 0; j < points.length; j++) {
				if (isHelper(points[j][0],points[j][1],queries[i][0],queries[i][1],queries[i][2])) {
					count++;
				}
			}
			al.add(count);
		}
		int[] nums = new int[al.size()];
		for (int i = 0; i < al.size(); i++) {
			nums[i] = al.get(i);
		}
		return nums;
	}
	boolean isHelper(int x1, int y1, int x2, int y2, int radius) {
		if (Math.sqrt(Math.pow(x1 - x2,2) + Math.pow(y1 - y2,2)) <= radius) {
			return true;
		}
		return false;
	}
}