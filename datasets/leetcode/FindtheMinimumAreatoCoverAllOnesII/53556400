class Solution {
	int minimumSum(int[][] grid) {
		int ans = Integer.MAX_VALUE;
		int count1 = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					count1++;
				}
			}
		}
		if (count1 == 3) {
			return 3;
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (i == grid.length - 1) {
					ans = Math.min(ans,solve(grid,0,0,i,j) + solve2(grid,0,j + 1,grid.length - 1,grid[0].length - 1));
				}
				if (j == grid[0].length - 1) {
					ans = Math.min(ans,solve(grid,0,0,i,j) + solve2(grid,i + 1,0,grid.length - 1,grid[0].length - 1));
				}
				int rect1 = solve(grid,0,0,i,j);
				int rect2_1 = solve(grid,0,j + 1,i,grid[0].length - 1);
				int rect3_1 = solve(grid,i + 1,0,grid.length - 1,grid[0].length - 1);
				int rect2_2 = solve(grid,0,j + 1,grid.length - 1,grid[0].length - 1);
				int rect3_2 = solve(grid,i + 1,0,grid.length - 1,j);
				ans = Math.min(ans,rect1 + rect2_1);
				ans = Math.min(ans,rect1 + rect2_2);
			}
		}
		return ans;
	}
	int solve(int[][] grid, int a, int b, int c, int d) {
		int s1 = Integer.MAX_VALUE;
		int s2 = Integer.MAX_VALUE;
		int e1 = Integer.MIN_VALUE;
		int e2 = Integer.MIN_VALUE;
		boolean all_0 = true;
		for (int i = a; i <= c; i++) {
			for (int j = b; j <= d; j++) {
				if (grid[i][j] == 1) {
					all_0 = false;
					s1 = Math.min(s1,i);
					s2 = Math.min(s2,j);
					e1 = Math.max(e1,i);
					e2 = Math.max(e2,j);
				}
			}
		}
		if (all_0) {
			return 0;
		}
		return (e1 - s1 + 1) * (e2 - s2 + 1);
	}
	int solve2(int[][] grid, int a, int b, int c, int d) {
		int ans = Integer.MAX_VALUE;
		int count1 = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					count1++;
				}
			}
		}
		if (count1 == 2) {
			return 2;
		}
		for (int i = a; i < c; i++) {
			int rect1 = solve(grid,a,b,i,d);
			int rect2 = solve(grid,i + 1,b,grid.length - 1,d);
			ans = Math.min(ans,rect1 + rect2);
		}
		for (int j = b; j < d; j++) {
			int rect1 = solve(grid,a,b,c,j);
			int rect2 = solve(grid,a,j + 1,c,d);
			ans = Math.min(ans,rect1 + rect2);
		}
		return ans;
	}
}