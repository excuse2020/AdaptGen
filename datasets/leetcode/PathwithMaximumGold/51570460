class Solution {
	int getMaximumGold(int[][] grid) {
		int max = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 0) {
					continue;
				}
				max = Math.max(max,helper(grid,i,j));
			}
		}
		return max;
	}
	int helper(int[][] grid, int x, int y) {
		if (x < 0 || y < 0 || x >= grid.length || y >= grid[0].length) {
			return 0;
		}
		if (grid[x][y] == 0) {
			return 0;
		}
		int tmp = grid[x][y];
		int max = 0;
		grid[x][y] = 0;
		max = Math.max(helper(grid,x - 1,y),max);
		max = Math.max(helper(grid,x + 1,y),max);
		max = Math.max(helper(grid,x,y - 1),max);
		max = Math.max(helper(grid,x,y + 1),max);
		grid[x][y] = tmp;
		return max + tmp;
	}
}