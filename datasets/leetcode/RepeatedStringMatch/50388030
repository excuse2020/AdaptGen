class Solution {
	int repeatedStringMatch(String a, String b) {
		int ct = 1;
		String w = a;
		while (a.length() < b.length()) {
			ct++;
			a += w;
		}
		int flag = search(a,b);
		if (flag != -1) {
			return ct;
		}
		a += w;
		ct++;
		flag = search(a,b);
		if (flag != -1) {
			return ct;
		}
		return -1;
	}
	int search(String txt, String pat) {
		int M = pat.length();
		int N = txt.length();
		int i, j;
		int p = 0;
		int t = 0;
		int h = 1;
		int q = 100000;
		int d = 26;
		for (i = 0; i < M - 1; i++) {
			h = (h * d) % q;
		}
		for (i = 0; i < M; i++) {
			p = (d * p + pat.charAt(i)) % q;
			t = (d * t + txt.charAt(i)) % q;
		}
		for (i = 0; i <= N - M; i++) {
			if (p == t) {
				for (j = 0; j < M; j++) {
					if (txt.charAt(i + j) != pat.charAt(j)) {
						break;
					}
				}
				if (j == M) {
					return i;
				}
			}
			if (i < N - M) {
				t = (d * (t - txt.charAt(i) * h) + txt.charAt(i + M)) % q;
				if (t < 0) {
					t = (t + q);
				}
			}
		}
		return -1;
	}
}