class Solution {
	ListNode sortInList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode slow = head;
		ListNode fast = head.next;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode tmp = slow.next;
		slow.next = null;
		ListNode left = sortInList(head);
		ListNode right = sortInList(tmp);
		ListNode newNode = new ListNode(-1);
		ListNode p = newNode;
		while (left != null && right != null) {
			if (left.val <= right.val) {
				p.next = left;
				left = left.next;
			} 
			else if (left.val > right.val) {
				p.next = right;
				right = right.next;
			}
			p = p.next;
		}
		if (left != null) {
			p.next = left;
		}
		if (right != null) {
			p.next = right;
		}
		return newNode.next;
	}
}