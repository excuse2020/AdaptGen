class Solution {
	int minimumLengthEncoding(String[] words) {
		if (words.length == 1) {
			return words[0].length() + 1;
		}
		for (int i = 0; i < words.length; i++) {
			words[i] = reverseStr(words[i]);
		}
		Arrays.sort(words);
		int wordCount = 0;
		int wordLength = 0;
		for (int i = 1; i < words.length; i++) {
			if (words[i].startsWith(words[i - 1])) {
				continue;
			}
			wordCount++;
			wordLength += words[i - 1].length();
		}
		if (words.length > 1 && wordCount == 0) {
			return words[words.length - 1].length() + 1;
		}
		if (words.length > 1 && !words[words.length - 1].equals(words[words.length - 2])) {
			wordCount++;
			wordLength += words[words.length - 1].length();
		}
		return wordCount + wordLength;
	}
	String reverseStr(String s) {
		StringBuilder r = new StringBuilder();
		for (int i = s.length() - 1; i >= 0; i--) {
			r.append(s.charAt(i));
		}
		return r.toString();
	}
}