class Solution {
	int kadane(int[] arr) {
		int curr = 0;
		int max = 0;
		for (int i = 0; i < arr.length; i++) {
			curr += arr[i];
			if (curr < 0) {
				curr = 0;
			}
			max = Math.max(curr,max);
		}
		return max;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int[] diff1 = new int[nums1.length];
		int[] diff2 = new int[nums2.length];
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < nums1.length; i++) {
			diff1[i] = nums1[i] - nums2[i];
			diff2[i] = nums2[i] - nums1[i];
			sum1 += nums1[i];
			sum2 += nums2[i];
		}
		int max1 = kadane(diff1);
		int max2 = kadane(diff2);
		return Math.max(max1 + sum2,max2 + sum1);
	}
}