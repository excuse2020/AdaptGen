class Solution {
	int count;
	void helper(TreeNode root, int arr) {
		if (root.left == null && root.right == null) {
			arr[root.val]++;
			int odd = 0;
			for (int i: arr) {	
				if (i != 0 && i % 2 != 0) {
					odd++;
				}
			}
			if (odd <= 1) {
				count++;
			}
			arr[root.val]--;
			return;
		}
		arr[root.val]++;
		if (root.left != null) {
			helper(root.left,arr);
		}
		if (root.right != null) {
			helper(root.right,arr);
		}
		arr[root.val]--;
		return;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		helper(root,new int[10]);
		return count;
	}
}