class Solution {
	int minCost(int n, int[] cuts) {
		Arrays.sort(cuts);
		int ln = cuts.length + 2;
		int[][] cost = new int[ln][ln];
		for (int j = 1; j < ln; j++) {
			int end = n;
			if (j < ln - 1) {
				end = cuts[j - 1];
			}
			for (int i = j - 2; i > -1; i--) {
				int start = 0;
				if (i > 0) {
					start = cuts[i - 1];
				}
				int currCost = Integer.MAX_VALUE;
				for (int c = i + 1; c < j; c++) {
					int cutPos = cuts[c - 1];
					int cutCost = end - start;
					cutCost += cost[i][c] + cost[c][j];
					if (currCost > cutCost) {
						currCost = cutCost;
					}
				}
				cost[i][j] = currCost;
			}
		}
		return cost[0][ln - 1];
	}
}