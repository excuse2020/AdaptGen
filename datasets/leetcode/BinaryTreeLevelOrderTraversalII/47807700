class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		Queue<TreeNode> q = new ArrayDeque<>();
		q.offer(root);
		while (!q.isEmpty()) {
			int q_size = q.size();
			List<Integer> list = new ArrayList<>();
			for (int i = 0; i < q_size; i++) {
				TreeNode currNode = q.poll();
				list.add(currNode.val);
				if (currNode.left != null) {
					q.offer(currNode.left);
				}
				if (currNode.right != null) {
					q.offer(currNode.right);
				}
			}
			ans.add(list);
		}
		Collections.reverse(ans);
		return ans;
	}
}