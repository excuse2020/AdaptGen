class Solution {
	boolean check(TreeNode nd1, TreeNode nd2) {
		if (nd1 == null && nd2 != null) {
			return false;
		}
		if (nd1 != null && nd2 == null) {
			return false;
		}
		if (nd1 == null && nd2 == null) {
			return true;
		}
		if (nd1.val != nd2.val) {
			return false;
		}
		boolean b = check(nd1.left,nd2.right) && check(nd1.right,nd2.left);
		boolean b2 = check(nd1.left,nd2.left) && check(nd1.right,nd2.right);
		return b || b2;
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (check(root1,root2)) {
			return true;
		} 
		else {
			return false;
		}
	}
}