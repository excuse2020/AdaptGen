class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return pRootOfTree;
		}
		LinkedList<TreeNode> ans = new LinkedList<>();
		process(pRootOfTree,ans);
		ans.addFirst(null);
		ans.addLast(null);
		TreeNode head = ans.peekFirst();
		for (int i = 1; i < ans.size() - 1; i++) {
			ans.get(i).left = ans.get(i - 1);
			ans.get(i).right = ans.get(i + 1);
		}
		return ans.get(1);
	}
	void process(TreeNode root, LinkedList<TreeNode> ans) {
		if (root == null) {
			return;
		}
		process(root.left,ans);
		ans.addLast(new TreeNode(root.val));
		process(root.right,ans);
	}
}