class Solution {
	List<List<Integer>> list = new ArrayList<>();
	void dfs(TreeNode root, int targetSum, List<Integer> li) {
		if (root == null) {
			return;
		}
		li.add(root.val);
		if (root.left == null && root.right == null) {
			if (targetSum == root.val) {
				list.add(new ArrayList<>(li));
			}
		}
		dfs(root.left,targetSum - root.val,li);
		dfs(root.right,targetSum - root.val,li);
		li.remove(li.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<Integer> li = new ArrayList<>();
		dfs(root,targetSum,li);
		return list;
	}
}