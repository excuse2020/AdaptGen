class Solution {
	void dfs(int[][] isConnected, boolean[] visited, int index) {
		visited[index] = true;
		for (int j = 0; j < isConnected.length; j++) {
			if (isConnected[index][j] == 1 && !visited[j]) {
				dfs(isConnected,visited,j);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int vertex = isConnected.length;
		boolean[] visited = new boolean[vertex];
		int ans = 0;
		for (int i = 0; i < vertex; i++) {
			if (!visited[i]) {
				ans++;
				dfs(isConnected,visited,i);
			}
		}
		return ans;
	}
}