class Solution {
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		if (nums.length == 1) {
			boolean[] result = new boolean[queries.length];
			Arrays.fill(result,true);
			return result;
		}
		boolean[] parityChanges = new boolean[nums.length - 1];
		for (int i = 0; i < nums.length - 1; i++) {
			parityChanges[i] = (nums[i] % 2) != (nums[i + 1] % 2);
		}
		int[] prefixSum = new int[parityChanges.length];
		prefixSum[0] = parityChanges[0] ? 1 : 0;
		for (int i = 1; i < parityChanges.length; i++) {
			prefixSum[i] = prefixSum[i - 1] + (parityChanges[i] ? 1 : 0);
		}
		boolean[] result = new boolean[queries.length];
		for (int i = 0; i < queries.length; i++) {
			int start = queries[i][0];
			int end = queries[i][1];
			if (start == end) {
				result[i] = true;
				continue;
			}
			int changes;
			if (start == 0) {
				changes = prefixSum[end - 1];
			} 
			else {
				changes = prefixSum[end - 1] - prefixSum[start - 1];
			}
			result[i] = (changes == (end - start));
		}
		return result;
	}
}