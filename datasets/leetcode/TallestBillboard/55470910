class Solution {
	int offset = 5000;
	int solve(int diff, int[] rods, int idx, int[][] dp) {
		if (idx == rods.length) {
			if (diff == 0) {
				return 0;
			}
			return Integer.MIN_VALUE;
		}
		if (dp[idx][diff + offset] != -1) {
			return dp[idx][diff + offset];
		}
		int add_to_l1 = rods[idx] + solve(diff + rods[idx],rods,idx + 1,dp);
		int add_to_l2 = solve(diff - rods[idx],rods,idx + 1,dp);
		int skip = solve(diff,rods,idx + 1,dp);
		return dp[idx][diff + offset] = Math.max(Math.max(add_to_l1,add_to_l2),skip);
	}
	int tallestBillboard(int[] rods) {
		int l1 = 0;
		int l2 = 0;
		int[][] dp = new int[rods.length][10001];
		for (int i = 0; i < dp.length; i++) {
			Arrays.fill(dp[i],-1);
		}
		return solve(0,rods,0,dp);
	}
}