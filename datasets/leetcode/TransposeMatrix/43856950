class Solution {
	void swap(int[][] matrix, int i1, int j1, int i2, int j2) {
		int temp = matrix[i1][j1];
		matrix[i1][j1] = matrix[i2][j2];
		matrix[i2][j2] = temp;
	}
	int[][] transpose(int[][] matrix) {
		if (matrix.length == matrix[0].length) {
			return transposeSquareMatrixInPlace(matrix);
		} 
		else {
			return transposeNonSquareMatrix(matrix);
		}
	}
	int[][] transposeNonSquareMatrix(int[][] matrix) {
		int rows = matrix.length;
		int columns = matrix[0].length;
		int[][] newMatrix = new int[columns][rows];
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				newMatrix[j][i] = matrix[i][j];
			}
		}
		return newMatrix;
	}
	int[][] transposeSquareMatrixInPlace(int[][] matrix) {
		for (int i = 0; i < matrix.length; i++) {
			for (int j = i + 1; j < matrix.length; j++) {
				swap(matrix,i,j,j,i);
			}
		}
		return matrix;
	}
}