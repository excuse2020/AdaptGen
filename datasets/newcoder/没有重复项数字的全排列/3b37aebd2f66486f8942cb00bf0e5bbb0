class Solution {
	void m1(List<Integer> sourceList, Integer toRemove, List<Integer> list, ArrayList<ArrayList<Integer>> resultList, int length) {
		List<Integer> sourceList2 = new ArrayList<>(sourceList);
		sourceList2.remove(toRemove);
		for (Integer i: sourceList2) {	
			ArrayList<Integer> list2 = new ArrayList<>(list);
			list2.add(i);
			if (list2.size() == length) {
				resultList.add(list2);
			} 
			else {
				m1(sourceList2,i,list2,resultList,length);
			}
		}
	}
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		int length = num.length;
		Arrays.sort(num);
		List<Integer> sourceList = new ArrayList<>();
		Arrays.stream(num).forEach((v) -> {sourceList.add(v)});
		List<Integer> list = new ArrayList<>();
		ArrayList<ArrayList<Integer>> resultList = new ArrayList<>();
		m1(sourceList,null,list,resultList,length);
		return resultList;
	}
}