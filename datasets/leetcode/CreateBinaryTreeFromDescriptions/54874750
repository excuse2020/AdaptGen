class Solution {
	TreeNode buildTree(int[][] descriptions) {
		Map<Integer, TreeNode> nodeMap = new HashMap<>();
		Set<Integer> children = new HashSet<>();
		for (int[] description: descriptions) {	
			int parentVal = description[0];
			int childVal = description[1];
			boolean isLeft = description[2] == 1;
			TreeNode parentNode = nodeMap.computeIfAbsent(parentVal,);
			TreeNode childNode = nodeMap.computeIfAbsent(childVal,);
			if (isLeft) {
				parentNode.left = childNode;
			} 
			else {
				parentNode.right = childNode;
			}
			children.add(childVal);
		}
		for (int[] description: descriptions) {	
			if (!children.contains(description[0])) {
				return nodeMap.get(description[0]);
			}
		}
		return null;
	}
	TreeNode createBinaryTree(int[][] descriptions) {
		return buildTree(descriptions);
	}
}