class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode dummyNode = new ListNode(-1);
		dummyNode.next = head;
		ListNode pre = dummyNode;
		for (int i = 0; i < m - 1; i++) {
			pre = pre.next;
		}
		ListNode rightNode = pre;
		for (int i = 0; i < n - m + 1; i++) {
			rightNode = rightNode.next;
		}
		ListNode leftNode = pre.next;
		ListNode cur = rightNode.next;
		pre.next = null;
		rightNode.next = null;
		reverseListNode(leftNode);
		pre.next = rightNode;
		leftNode.next = cur;
		return dummyNode.next;
	}
	void reverseListNode(ListNode head) {
		ListNode temp = null;
		ListNode cur = head;
		while (cur != null) {
			ListNode curNext = cur.next;
			cur.next = temp;
			temp = cur;
			cur = curNext;
		}
	}
}