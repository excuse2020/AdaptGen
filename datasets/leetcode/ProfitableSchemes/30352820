class Solution {
	int profitableSchemes(int n, int minProfit, int[] group, int[] profit) {
		int[][] memo = new int[n + 1][minProfit + 1];
		for (int j = 0; j <= n; ++j) {
			memo[j][0] = 1;
		}
		for (int i = profit.length - 1; i >= 0; --i) {
			for (int j = n; j >= group[i]; --j) {
				for (int k = minProfit; k >= 0; --k) {
					int commit = memo[j - group[i]][Integer.max(k - profit[i],0)];
					memo[j][k] = (memo[j][k] + commit) % 1_000_000_007;
				}
			}
		}
		return memo[n][minProfit];
	}
}