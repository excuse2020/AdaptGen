class Solution {
	int fun(int[] piles, int hour) {
		int totalhour = 0;
		for (int i = 0; i < piles.length; i++) {
			totalhour += Math.ceil((double) piles[i] / (double) hour);
		}
		return totalhour;
	}
	int minEatingSpeed(int[] piles, int h) {
		int maxi = Integer.MIN_VALUE;
		for (int i = 0; i < piles.length; i++) {
			maxi = Math.max(maxi,piles[i]);
		}
		int low = 1;
		int high = maxi;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			int total = fun(piles,mid);
			if (total <= h) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
}