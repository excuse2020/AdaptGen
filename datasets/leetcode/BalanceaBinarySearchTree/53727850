class Solution {
	ArrayList<Integer> list;
	TreeNode balanceBST(TreeNode root) {
		list = new ArrayList<>();
		helper(root);
		return createTree(list,0,list.size() - 1);
	}
	TreeNode createTree(ArrayList<Integer> rec, int s, int e) {
		if (s > e) {
			return null;
		}
		int mid = s + (e - s) / 2;
		TreeNode node = new TreeNode(rec.get(mid));
		node.left = createTree(rec,s,mid - 1);
		node.right = createTree(rec,mid + 1,e);
		return node;
	}
	TreeNode helper(TreeNode node) {
		if (node == null) {
			return null;
		}
		TreeNode left = helper(node.left);
		list.add(node.val);
		TreeNode right = helper(node.right);
		return node;
	}
}