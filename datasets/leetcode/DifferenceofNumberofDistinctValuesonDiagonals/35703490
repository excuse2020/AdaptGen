class Solution {
	int calculate(int matric, int ii, int jj) {
		HashSet<Integer> set1 = new HashSet<>();
		HashSet<Integer> set2 = new HashSet<>();
		int u = ii - 1;
		int v = jj - 1;
		while (u >= 0 && v >= 0) {
			set1.add(matric[u--][v--]);
		}
		ii += 1;
		jj += 1;
		while (ii < matric.length && jj < matric[0].length) {
			set2.add(matric[ii++][jj++]);
		}
		return Math.abs(set1.size() - set2.size());
	}
	int[][] differenceOfDistinctValues(int[][] grid) {
		int lenr = grid.length;
		int lenc = grid[0].length;
		int ans = new int[lenr][lenc];
		for (int i = 0; i < lenr; i++) {
			for (int j = 0; j < lenc; j++) {
				ans[i][j] = calculate(grid,i,j);
			}
		}
		return ans;
	}
}