class Solution {
	int superEggDrop(int k, int n) {
		return superEggDropHelper(k,n);
	}
	int superEggDropHelper(int eggs, int floors) {
		if (floors == 0 || floors == 1) {
			return floors;
		}
		if (eggs == 1) {
			return floors;
		}
		int min = Integer.MAX_VALUE;
		for (int k = 1; k <= floors; k++) {
			int eggBreaks = superEggDropHelper(eggs - 1,k - 1);
			int eggDoesNotBreak = superEggDropHelper(eggs,floors - k);
			int temp = 1 + Math.max(eggBreaks,eggDoesNotBreak);
			min = Math.min(min,temp);
		}
		return min;
	}
}