class Solution {
	TreeNode ans;
	int deepest;
	int longest;
	int helper(TreeNode root, int level) {
		if (root != null) {
			int lh = helper(root.left,level + 1);
			int rh = helper(root.right,level + 1);
			if (lh == rh && lh > longest && lh + level == deepest || level > deepest) {
				longest = lh;
				ans = root;
			}
			if (level > deepest) {
				deepest = level;
			}
			return Math.max(lh,rh) + 1;
		}
		return 0;
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		ans = null;
		deepest = -1;
		longest = -1;
		helper(root,0);
		return ans;
	}
}