class Solution {
	int minReorder(int n, int[][] connections) {
		LinkedList<int[]>[] g = new LinkedList[n];
		for (int i = 0; i < n; ++i) {
			g[i] = new LinkedList<>();
		}
		for (int[] c: connections) {	
			g[c[0]].add(new int{c[1], 1});
			g[c[1]].add(new int{c[0], 0});
		}
		int[] vis = new int[n];
		int reorderRoads = 0;
		LinkedList<Integer> q = new LinkedList<>();
		q.add(0);
		vis[0] = 1;
		while (!q.isEmpty()) {
			int city = q.poll();
			for (int[] neib: g[city]) {	
				if (vis[neib[0]] == 1) {
					continue;
				}
				if (vis[neib[0]] == 0) {
					q.add(neib[0]);
					vis[neib[0]] = 1;
					if (neib[1] == 1) {
						++reorderRoads;
					}
				}
			}
		}
		return reorderRoads;
	}
}