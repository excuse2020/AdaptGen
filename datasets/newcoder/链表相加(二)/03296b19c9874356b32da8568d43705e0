class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode newHead1 = reveseList(head1);
		ListNode newHead2 = reveseList(head2);
		ListNode result = null;
		int flag = 0;
		while (newHead1 != null || newHead2 != null) {
			int a = newHead1 == null ? 0 : newHead1.val;
			int b = newHead2 == null ? 0 : newHead2.val;
			ListNode cur = new ListNode((a + b) % 10);
			cur.next = result;
			result = cur;
			flag = (a + b) / 10;
			newHead1 = newHead1 == null ? null : newHead1.next;
			newHead2 = newHead2 == null ? null : newHead2.next;
			if (newHead2 == null && newHead1 == null && flag != 0) {
				cur = new ListNode(1);
				cur.next = result;
				result = cur;
			}
		}
		return result;
	}
	ListNode reveseList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode pre = null;
		ListNode cur = head;
		ListNode next = null;
		while (cur != null) {
			next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
		}
		return pre;
	}
}