class Solution {
	int combinations(int n) {
		return n * (n - 1) / 2;
	}
	int threeSumMulti(int[] arr, int target) {
		int mod = 1000000007;
		Arrays.sort(arr);
		int res = 0;
		for (int i = 0; i < arr.length; i++) {
			int j = i + 1;
			int k = arr.length - 1;
			while (j < k) {
				if (arr[i] + arr[j] == target) {
					if (arr[j] == arr[k]) {
						res += combinations(k - j + 1);
						res %= mod;
						break;
					}
					int t1 = 1;
					int t2 = 1;
					while (j + 1 < k && arr[j] == arr[j + 1]) {
						t1++;
						j++;
					}
					while (j + 1 < k && arr[k] == arr[k - 1]) {
						t2++;
						k--;
					}
					res += t1 * t2;
					res %= mod;
					j++;
					k--;
				} 
				else if (arr[i] + arr[j] > target) {
					k--;
				} 
				else {
					j++;
				}
			}
		}
		return res % mod;
	}
}