class Solution {
	int semiOrderedPermutation(int[] nums) {
		int firstIndex = 0;
		int lastIndex = 0;
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				firstIndex = i;
			}
		}
		while (nums[0] != 1 && firstIndex > 0) {
			int stub = nums[firstIndex - 1];
			nums[firstIndex - 1] = nums[firstIndex];
			nums[firstIndex] = stub;
			firstIndex--;
			count++;
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == nums.length) {
				lastIndex = i;
			}
		}
		while (nums[nums.length - 1] != nums.length && lastIndex < nums.length) {
			int stub = nums[lastIndex + 1];
			nums[lastIndex + 1] = nums[lastIndex];
			nums[lastIndex] = stub;
			lastIndex++;
			count++;
		}
		return count;
	}
}