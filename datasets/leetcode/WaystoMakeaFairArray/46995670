class Solution {
	int waysToMakeFair(int[] nums) {
		int totalOddSum = 0, totalEvenSum = 0, cumulativeOddSum = 0, cumulativeEvenSum = 0;
		int ways = 0;
		for (int i = 0; i < nums.length; i++) {
			if (i % 2 == 0) {
				totalEvenSum += nums[i];
			} 
			else {
				totalOddSum += nums[i];
			}
		}
		boolean isFair = false;
		for (int i = 0; i < nums.length; i++) {
			if (i % 2 == 0) {
				isFair = cumulativeEvenSum + totalOddSum - cumulativeOddSum == cumulativeOddSum + ((totalEvenSum - nums[i]) - cumulativeEvenSum);
				cumulativeEvenSum += nums[i];
			} 
			else {
				isFair = cumulativeEvenSum + ((totalOddSum - cumulativeOddSum) - nums[i]) == cumulativeOddSum + totalEvenSum - cumulativeEvenSum;
				cumulativeOddSum += nums[i];
			}
			ways += isFair ? 1 : 0;
		}
		return ways;
	}
}