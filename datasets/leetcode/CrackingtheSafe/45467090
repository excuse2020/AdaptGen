class Solution {
	String crackSafe(int n, int k) {
		String allZeros = "0".repeat(n);
		StringBuilder sb = new StringBuilder(allZeros);
		dfs((int) Math.pow(k,n),n,k,new HashSet<>(Arrays.asList(allZeros)),sb);
		return sb.toString();
	}
	boolean dfs(int passwordSize, int n, int k, Set<String> seen, StringBuilder path) {
		if (seen.size() == passwordSize) {
			return true;
		}
		StringBuilder prefix = new StringBuilder(path.substring(path.length() - n + 1));
		char c;
	}
}