class Solution {
	int find(int[] countSort, int x, int data) {
		if (data < x) {
			return 0;
		}
		for (int i = 0; i < 101; i++) {
			if (x - countSort[i] <= 0) {
				return (i - 50);
			} 
			else {
				x = x - countSort[i];
			}
		}
		return 0;
	}
	int[] getSubarrayBeauty(int[] nums, int k, int x) {
		int n = nums.length;
		int[] ans = new int[n - k + 1];
		int index_of_ans = 0;
		int[] countSort = new int[101];
		int start = 0;
		int i = 0;
		int data = 0;
		for (; i < k; i++) {
			if (nums[i] < 0) {
				data++;
			}
			countSort[nums[i] + 50]++;
		}
		int val = find(countSort,x,data);
		ans[index_of_ans++] = val;
		for (; i < n; i++) {
			if (nums[i] < 0) {
				data++;
			}
			countSort[nums[i] + 50]++;
			if (nums[start] < 0) {
				data--;
			}
			countSort[nums[start] + 50]--;
			start++;
			val = find(countSort,x,data);
			ans[index_of_ans++] = val;
		}
		return ans;
	}
}