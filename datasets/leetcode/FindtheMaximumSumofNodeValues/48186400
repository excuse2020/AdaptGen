class Solution {
	long maximumValueSum(int[] nums, int k, int[][] edges) {
		long sum = 0;
		int posMinChange = Integer.MAX_VALUE;
		int negMinChange = Integer.MAX_VALUE;
		int countPos = 0;
		for (int i = 0; i < nums.length; i++) {
			int xor = nums[i] ^ k;
			if (xor >= nums[i]) {
				posMinChange = Math.min(posMinChange,xor - nums[i]);
				sum += xor;
				countPos++;
			} 
			else {
				negMinChange = Math.min(negMinChange,nums[i] - xor);
				sum += nums[i];
			}
		}
		if (countPos % 2 != 0) {
			if (posMinChange >= negMinChange) {
				sum -= negMinChange;
			} 
			else {
				sum -= posMinChange;
			}
		}
		return sum;
	}
}