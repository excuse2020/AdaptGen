class Solution {
	void dfs(int node, boolean[] vis, int[][] isConnected) {
		vis[node] = true;
		for (int it = 0; it < isConnected.length; it++) {
			if (!vis[it] && isConnected[node][it] == 1) {
				dfs(it,vis,isConnected);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		boolean[] vis = new boolean[n];
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (!vis[i]) {
				count++;
				dfs(i,vis,isConnected);
			}
		}
		return count;
	}
}