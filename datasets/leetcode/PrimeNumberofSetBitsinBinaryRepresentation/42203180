class Solution {
	int count(int n) {
		int count = 0;
		while (n != 0) {
			if ((n & 1) == 1) {
				count++;
			}
			n = n >> 1;
		}
		return count;
	}
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			int totalsetbit = count(i);
			if (isprime(totalsetbit)) {
				count++;
			}
		}
		return count;
	}
	boolean isprime(int n) {
		if (n == 1) {
			return false;
		}
		boolean isprime = true;
		for (int i = 2; i <= Math.sqrt(n); i++) {
			if (i != n && n % i == 0) {
				isprime = false;
				break;
			}
		}
		return isprime;
	}
}