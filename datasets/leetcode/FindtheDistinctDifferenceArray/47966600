class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int[] dif = new int[nums.length];
		int[] pre = new int[nums.length];
		int[] suf = new int[nums.length];
		ArrayList<Integer> al = new ArrayList<Integer>();
		ArrayList<Integer> al2 = new ArrayList<Integer>();
		for (int i = 0; i < nums.length; i++) {
			if (!al.contains(nums[i])) {
				al.add(nums[i]);
			}
			pre[i] = al.size();
		}
		for (int i = nums.length - 1; i >= 0; i--) {
			if (!al2.contains(nums[i])) {
				al2.add(nums[i]);
			}
			suf[i] = al2.size();
		}
		for (int j = 0; j < nums.length - 1; j++) {
			dif[j] = pre[j] - suf[j + 1];
		}
		dif[nums.length - 1] = pre[nums.length - 1];
		return dif;
	}
}