class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode temp = reverse(slow.next);
		slow.next = temp;
		ListNode p1 = head;
		ListNode p2 = slow.next;
		int max = Integer.MIN_VALUE;
		while (p2 != null) {
			if (max < p1.val + p2.val) {
				max = p1.val + p2.val;
			}
			p1 = p1.next;
			p2 = p2.next;
		}
		return max;
	}
	ListNode reverse(ListNode head) {
		ListNode curr = head;
		ListNode prev = null;
		ListNode after = null;
		while (curr != null) {
			after = curr.next;
			curr.next = prev;
			prev = curr;
			curr = after;
		}
		return prev;
	}
}