class Solution {
	ListNode Merge(ListNode list1, ListNode list2) {
		Deque<ListNode> d = new ArrayDeque<>();
		Deque<ListNode> d1 = new ArrayDeque<>();
		if (list1 == null && list2 == null) {
			return null;
		} 
		else if (list1 == null && list2 != null) {
			return list2;
		} 
		else if (list1 != null && list2 == null) {
			return list1;
		} 
		else {
			while (list1 != null && list2 != null) {
				if (list1.val < list2.val) {
					d.addLast(list1);
					list1 = list1.next;
				} 
				else {
					d.addLast(list2);
					list2 = list2.next;
				}
				if (list1 == null && list2 != null) {
					d.addLast(list2);
					list2 = list2.next;
				} 
				else if (list1 != null && list2 == null) {
					d.addLast(list1);
					list1 = list1.next;
				}
			}
		}
		ListNode node = d.pollFirst();
		d1.addLast(node);
		while (d.size() != 0) {
			node.next = d.pollFirst();
			node = node.next;
		}
		return d1.pollFirst();
	}
}