class Solution {
	long maximumImportance(int n, int[][] roads) {
		Map<Integer, List<Integer>> adjacencyMap = new HashMap<>();
		List<Integer> nodes = new ArrayList<>();
		for (int[] road: roads) {	
			adjacencyMap.putIfAbsent(road[0],new ArrayList<>());
			adjacencyMap.putIfAbsent(road[1],new ArrayList<>());
			adjacencyMap.get(road[0]).add(road[1]);
			adjacencyMap.get(road[1]).add(road[0]);
		}
		nodes.addAll(adjacencyMap.keySet());
		nodes.sort((a, b) -> {adjacencyMap.get(b).size() - adjacencyMap.get(a).size()});
		Map<Integer, Integer> nodeImportance = new HashMap<>();
		for (int node: nodes) {	
			nodeImportance.put(node,n--);
		}
		long totalImportance = 0;
		for (int node: adjacencyMap.keySet()) {	
			int importance = nodeImportance.get(node);
			for (int neighbor: adjacencyMap.get(node)) {	
				totalImportance += importance + nodeImportance.get(neighbor);
			}
		}
		return totalImportance / 2;
	}
}