class Solution {
	int[][] dp;
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		dp = new int[n + 1][m + 1];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= m; j++) {
				dp[i][j] = -1;
			}
		}
		return solve(n,m,s,t,dp);
	}
	int solve(int ind1, int ind2, String s, String t, int[][] dp) {
		if (ind2 == 0) {
			return 1;
		}
		if (ind1 == 0) {
			return 0;
		}
		if (dp[ind1][ind2] != -1) {
			return dp[ind1][ind2];
		}
		if (s.charAt(ind1 - 1) == t.charAt(ind2 - 1)) {
			return dp[ind1][ind2] = solve(ind1 - 1,ind2 - 1,s,t,dp) + solve(ind1 - 1,ind2,s,t,dp);
		}
		return dp[ind1][ind2] = solve(ind1 - 1,ind2,s,t,dp);
	}
}