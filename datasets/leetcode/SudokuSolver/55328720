class Solution {
	boolean isValidPlacement(char[][] board, int row, int col, char num) {
		for (int i = 0; i < board.length; i++) {
			if (board[i][col] == num) {
				return false;
			}
			if (board[row][i] == num) {
				return false;
			}
			int subgridRow = 3 * (row / 3) + i / 3;
			int subgridCol = 3 * (col / 3) + i % 3;
			if (board[subgridRow][subgridCol] == num) {
				return false;
			}
		}
		return true;
	}
	boolean solve(char[][] board, int row, int col) {
		if (row == board.length) {
			return true;
		}
		if (col == board[0].length) {
			return solve(board,row + 1,0);
		}
	}
	void solveSudoku(char[][] board) {
		solve(board,0,0);
	}
}