class Solution {
	int maxDepth = -1;
	TreeNode result = null;
	int postOrder(TreeNode node, int depth) {
		if (node == null) {
			return depth;
		}
		int left = postOrder(node.left,depth + 1);
		int right = postOrder(node.right,depth + 1);
		if (left == right) {
			maxDepth = Math.max(maxDepth,left);
			if (maxDepth == left) {
				result = node;
			}
		}
		return Math.max(left,right);
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		postOrder(root,0);
		return result;
	}
}