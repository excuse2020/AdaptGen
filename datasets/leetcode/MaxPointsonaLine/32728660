class Solution {
	int maxPoints(int[][] points) {
		if (points.length == 1) {
			return 1;
		}
		int max = 0;
		boolean[][] dp = new boolean[points.length][points.length];
		for (int i = 0; i < points.length; i++) {
			for (int j = i + 1; j < points.length; j++) {
				if (dp[i][j]) {
					continue;
				}
				dp[i][j] = true;
				int count = 2;
				for (int k = j + 1; k < points.length; k++) {
					if ((points[k][1] - points[i][1]) * (points[j][0] - points[i][0]) == (points[k][0] - points[i][0]) * (points[j][1] - points[i][1])) {
						dp[i][k] = true;
						dp[j][k] = true;
						count++;
					}
				}
				max = Math.max(max,count);
			}
		}
		return max;
	}
}