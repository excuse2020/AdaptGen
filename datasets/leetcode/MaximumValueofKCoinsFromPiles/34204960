class Solution {
	int calculateMaxValueOfCoins(List<List<Integer>> piles, int i, int k, Integer[][] dp) {
		if (i == piles.size() || k == 0) {
			return 0;
		}
		if (dp[i][k] != null) {
			return dp[i][k];
		}
		int ans = calculateMaxValueOfCoins(piles,i + 1,k,dp);
		int value = 0;
		for (int j = 0; j < Math.min(piles.get(i).size(),k); ++j) {
			value += piles.get(i).get(j);
			ans = Math.max(ans,value + calculateMaxValueOfCoins(piles,i + 1,k - j,dp));
		}
		dp[i][k] = ans;
		return ans;
	}
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		Integer[][] dp = new Integer[piles.size()][k + 1];
		return calculateMaxValueOfCoins(piles,0,k,dp);
	}
}