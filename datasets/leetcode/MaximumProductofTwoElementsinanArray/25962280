class Solution {
	int maxProduct(int[] nums) {
		int result = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				result = Math.max(result,(nums[i] - 1) * (nums[j] - 1));
			}
		}
		return result;
	}
	int maxProduct(int[] nums) {
		Arrays.sort(nums);
		int length = nums.length;
		return (nums[length - 1] - 1) * (nums[length - 1] - 1);
	}
	int maxProduct(int[] nums) {
		PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer>((a, b) -> {b - a});
		for (int num: nums) {	
			maxHeap.add(num - 1);
		}
		return maxHeap.poll() * maxHeap.poll();
	}
}