class Solution {
	int M = (int) Math.pow(10,9) + 7;
	int sumSubseqWidths(int[] A) {
		int n = A.length;
		Arrays.sort(A);
		long total = 0;
		long[] pow2 = new long[n];
		pow2[0] = 1;
		for (int i = 1; i < n; i++) {
			pow2[i] = (pow2[i - 1] * 2) % M;
		}
		for (int i = 0; i < n; i++) {
			long whenMin = (A[i] * pow2[n - 1 - i]) % M;
			long whenMax = (A[i] * pow2[i]) % M;
			total = (total - whenMin + whenMax) % M;
		}
		return (int) ((total + M) % M);
	}
}