class Solution {
	int closestMeetingNode(int[] edges, int node1, int node2) {
		int length = edges.length;
		boolean[] visited1 = new boolean[length];
		boolean[] visited2 = new boolean[length];
		int answer = length;
		while (node1 != -1 || node2 != -1) {
			if (node1 != -1) {
				if (visited2[node1]) {
					answer = node1;
				}
				if (visited1[node1]) {
					node1 = -1;
				} 
				else {
					visited1[node1] = true;
					node1 = edges[node1];
				}
			}
			if (node2 != -1) {
				if (visited1[node2]) {
					answer = Math.min(answer,node2);
				}
				if (visited2[node2]) {
					node2 = -1;
				} 
				else {
					visited2[node2] = true;
					node2 = edges[node2];
				}
			}
			if (answer < length) {
				return answer;
			}
		}
		return -1;
	}
}