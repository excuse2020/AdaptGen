class Solution {
	List<List<Integer>> threeSum(int[] nums) {
		List<List<Integer>> resultSet = new ArrayList<>();
		Arrays.sort(nums);
		int n = nums.length;
		for (int i = 0; i < n - 2; i++) {
			if (nums[i] > 0) {
				break;
			}
			if (i > 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			int start = i + 1;
			int end = n - 1;
			int tripletSum = 0;
			while (start < end) {
				tripletSum = nums[i] + nums[start];
				if (tripletSum < 0) {
					start++;
				} 
				else if (tripletSum > 0) {
					end--;
				} 
				else {
					List<Integer> triplet = Arrays.asList(nums[i],nums[start],nums[end]);
					resultSet.add(triplet);
					start++;
					while (start < end && nums[start] == nums[start - 1]) {
						start++;
					}
					end--;
					while (start < end && nums[end] == nums[end + 1]) {
						end--;
					}
				}
			}
		}
		return resultSet;
	}
}