class Solution {
	int closestMeetingNode(int[] edges, int node1, int node2) {
		int[] disarr1 = getdisarr(edges,node1);
		int[] disarr2 = getdisarr(edges,node2);
		int mindis = Integer.MAX_VALUE;
		int res = -1;
		for (int i = 0; i < edges.length; i++) {
			if (disarr1[i] == -1 || disarr2[i] == -1) {
				continue;
			}
			int dis = Math.max(disarr1[i],disarr2[i]);
			if (dis < mindis) {
				res = i;
				mindis = dis;
			}
		}
		return res;
	}
	int[] getdisarr(int[] edges, int node) {
		int[] disArray = new int[edges.length];
		Arrays.fill(disArray,-1);
		int dis = 0;
		while (node != -1 && disArray[node] == -1) {
			disArray[node] = dis++;
			node = edges[node];
		}
		return disArray;
	}
}