class Solution {
	int res = 0;
	void dfs(TreeNode root, int[] freq) {
		if (root == null) {
			return;
		}
		freq[root.val] += 1;
		if (root.left == null && root.right == null) {
			if (isValid(freq)) {
				res += 1;
			}
		}
		dfs(root.left,freq);
		dfs(root.right,freq);
		freq[root.val] -= 1;
	}
	boolean isValid(int[] freq) {
		int missCount = 0;
		for (int i: freq) {	
			if (i % 2 != 0) {
				missCount += 1;
			}
			if (missCount > 1) {
				return false;
			}
		}
		return true;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] freq = new int[10];
		dfs(root,freq);
		return res;
	}
}