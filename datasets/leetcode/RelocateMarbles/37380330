class Solution {
	List<Integer> relocateMarbles(int[] nums, int[] moveFrom, int[] moveTo) {
		List<Integer> result = new ArrayList<>();
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			int value = nums[i];
			map.put(nums[i],map.getOrDefault(nums[i],0) + 1);
		}
		for (int i = 0; i < moveFrom.length; i++) {
			int moveFromValue = moveFrom[i];
			int moveToValue = moveTo[i];
			if (map.containsKey(moveFromValue)) {
				int count = map.get(moveFromValue);
				map.remove(moveFromValue);
				map.put(moveToValue,map.getOrDefault(moveToValue,0) + count);
			}
		}
		for (Map.Entry<Integer, Integer> entry: map.entrySet()) {	
			result.add(entry.getKey());
		}
		Collections.sort(result);
		return result;
	}
}