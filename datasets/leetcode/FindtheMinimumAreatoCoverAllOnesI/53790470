class Solution {
	int minimumArea(int[][] grid) {
		int heightUp = -1, heightDown = -1, widthLeft = grid[0].length, widthRight = 0;
		boolean firstHeight = false;
		for (int i = 0; i < grid.length; i++) {
			int left = 0, right = grid[0].length - 1;
			while (left < grid[0].length) {
				if (grid[i][left] == 1) {
					heightDown = i;
					break;
				}
				left++;
			}
			if (!firstHeight && left < grid[0].length && grid[i][left] == 1) {
				heightUp = i;
				firstHeight = true;
			}
			while (right >= left) {
				if (grid[i][right] == 1) {
					break;
				}
				right--;
			}
			if (left < widthLeft) {
				widthLeft = left;
			}
			if (right > widthRight && right >= left) {
				widthRight = right;
			}
		}
		return (heightDown - heightUp + 1) * (widthRight - widthLeft + 1);
	}
}