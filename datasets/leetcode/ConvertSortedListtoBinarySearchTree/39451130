class Solution {
	TreeNode add(ListNode start, ListNode end) {
		if (start == end) {
			return null;
		}
		ListNode mid = mid(start,end);
		TreeNode n = new TreeNode(mid.val);
		n.left = add(start,mid);
		n.right = add(mid.next,end);
		return n;
	}
	ListNode mid(ListNode start, ListNode end) {
		ListNode slow = start;
		ListNode fast = start;
		while (fast != end && fast.next != end) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		TreeNode root = add(head,null);
		return root;
	}
}