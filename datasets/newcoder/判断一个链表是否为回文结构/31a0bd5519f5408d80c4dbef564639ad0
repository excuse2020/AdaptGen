class Solution {
	boolean isPail(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode slow = head, fast = head.next;
		while (fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode secondNode = reverseList(slow.next);
		while (secondNode != null) {
			if (head.val != secondNode.val) {
				return false;
			}
			secondNode = secondNode.next;
			head = head.next;
		}
		return true;
	}
	ListNode reverseList(ListNode head) {
		ListNode pre = null, next = null;
		while (head != null) {
			next = head.next;
			head.next = pre;
			pre = head;
			head = next;
		}
		return pre;
	}
}