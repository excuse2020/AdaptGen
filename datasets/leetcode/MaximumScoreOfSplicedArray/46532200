class Solution {
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int dp = new int[nums1.length][2][3];
		dp[0][0][0] = nums1[0];
		dp[0][0][1] = nums2[0];
		dp[0][0][2] = nums1[0];
		dp[0][1][0] = nums2[0];
		dp[0][1][1] = nums1[0];
		dp[0][1][2] = nums2[0];
		for (int i = 1; i < dp.length; i++) {
			dp[i][0][0] = dp[i - 1][0][0] + nums1[i];
			dp[i][0][1] = Math.max(dp[i - 1][0][0] + nums2[i],dp[i - 1][0][1] + nums2[i]);
			dp[i][0][2] = Math.max(dp[i - 1][0][1] + nums1[i],dp[i - 1][0][2] + nums1[i]);
			dp[i][1][0] = dp[i - 1][1][0] + nums2[i];
			dp[i][1][1] = Math.max(dp[i - 1][1][0] + nums1[i],dp[i - 1][1][1] + nums1[i]);
			dp[i][1][2] = Math.max(dp[i - 1][1][1] + nums2[i],dp[i - 1][1][2] + nums2[i]);
		}
		int max = 0;
		for (int i = 0; i < dp[dp.length - 1].length; i++) {
			for (int j = 0; j < dp[dp.length - 1][i].length; j++) {
				max = Math.max(max,dp[dp.length - 1][i][j]);
			}
		}
		return max;
	}
}