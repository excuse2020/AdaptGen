class Solution {
	int[] beautifulArray(int N) {
		int[][] arr = new int[N + 1][2];
		for (int i = 1; i <= N; i++) {
			arr[i][0] = i;
			arr[i][1] = i;
		}
		int[][] arr2 = func(arr,1,N);
		int[] a = new int[N];
		for (int i = 0; i < N; i++) {
			a[i] = arr2[i + 1][0];
		}
		return a;
	}
	int[][] func(int[][] arr, int st, int en) {
		if (st < en) {
			arr = partition(arr,st,en);
			int mid = (st + en) / 2;
			arr = func(arr,st,mid);
			arr = func(arr,mid + 1,en);
		}
		return arr;
	}
	int[][] partition(int[][] arr, int st, int en) {
		int mid = (st + en) / 2;
		int[][] ret = arr.clone();
		int j = st;
		int k = mid + 1;
		for (int i = st; i <= en; i++) {
			if (arr[i][1] % 2 != 0) {
				ret[j++] = arr[i];
				ret[j - 1][1] = (ret[j - 1][1] + 1) / 2;
			} 
			else {
				ret[k++] = arr[i];
				ret[k - 1][1] = (ret[k - 1][1] / 2);
			}
		}
		return ret;
	}
}