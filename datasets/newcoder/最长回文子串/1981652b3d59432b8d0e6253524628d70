class Solution {
	int getLongestPalindrome(String A, int n) {
		if (n < 2) {
			return n;
		}
		int maxLen = 1;
		boolean[][] dp = new boolean[n][n];
		char[] charArray = A.toCharArray();
		for (int i = 0; i < n; i++) {
			dp[i][i] = true;
		}
		for (int l = 2; l <= n; l++) {
			for (int i = 0; i < n; i++) {
				int j = i + l - 1;
				if (j >= n) {
					break;
				}
				if (charArray[i] != charArray[j]) {
					dp[i][j] = false;
				} 
				else {
					if (j - i < 3) {
						dp[i][j] = true;
					} 
					else {
						dp[i][j] = dp[i + 1][j - 1];
					}
				}
				if (dp[i][j] == true) {
					maxLen = Math.max(maxLen,j - i + 1);
				}
			}
		}
		return maxLen;
	}
}