class Solution {
	int numPrimeArrangements(int n) {
		int MOD = (int) 1e9 + 7;
		boolean[] primes = new boolean[n + 1];
		int primeNum = 0;
		for (int i = 2; i <= n; i++) {
			if (!primes[i]) {
				primeNum++;
				for (int j = 2; j * i <= n; j++) {
					primes[i * j] = true;
				}
			}
		}
		int notPrimeNum = n - primeNum;
		long ans = 1;
		for (int i = 1; i <= primeNum; i++) {
			ans = (ans * i) % MOD;
		}
		for (int i = 1; i <= notPrimeNum; i++) {
			ans = (ans * i) % MOD;
		}
		return (int) ans;
	}
}