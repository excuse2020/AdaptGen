class Solution {
	int countVowelPermutation(int n) {
		int vowelCount = 5;
		int mod = (int) (1e9 + 7);
		long dp = new long[vowelCount][n + 1];
		for (int i = 0; i < vowelCount; i++) {
			dp[i][1] = 1;
		}
		for (int k = 2; k <= n; k++) {
			dp[0][k] = (dp[1][k - 1] + dp[2][k - 1]) % mod;
			dp[1][k] = (dp[0][k - 1] + dp[2][k - 1]) % mod;
			dp[2][k] = (dp[1][k - 1] + dp[3][k - 1]) % mod;
			dp[3][k] = (dp[2][k - 1]) % mod;
			dp[4][k] = (dp[2][k - 1] + dp[3][k - 1]) % mod;
		}
		long ans = 0;
		for (int i = 0; i < vowelCount; i++) {
			ans = (ans + dp[i][n]) % mod;
		}
		return (int) ans;
	}
}