class Solution {
	List<List<Integer>> res;
	List<List<Integer>> combinationSum3(int k, int n) {
		res = new ArrayList<>();
		List<Integer> list = new ArrayList<>();
		helper(k,n,0,1,list);
		return res;
	}
	void helper(int k, int target, int sum, int number, List<Integer> list) {
		if (sum == target && list.size() == k) {
			res.add(new ArrayList<>(list));
			return;
		}
		if (sum > target || number > 9) {
			return;
		}
		sum += number;
		list.add(number);
		helper(k,target,sum,number + 1,list);
		list.remove(list.size() - 1);
		sum -= number;
		helper(k,target,sum,number + 1,list);
	}
}