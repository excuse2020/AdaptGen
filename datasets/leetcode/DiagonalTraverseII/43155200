class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		List<List<Integer>> li = new ArrayList<>();
		int maxcol = 0;
		int maxrow = nums.size();
		for (List<Integer> curr: nums) {	
			maxcol = Math.max(maxcol,curr.size());
		}
		int maxrowcol = maxcol + maxrow;
		for (int i = 0; i < maxrowcol; i++) {
			li.add(new ArrayList<>());
		}
		int arrsize = 0;
		for (int i = 0; i < maxrow; i++) {
			for (int j = 0; j < nums.get(i).size(); j++) {
				int sum = i + j;
				li.get(sum).add(nums.get(i).get(j));
				arrsize++;
			}
		}
		int ans = new int[arrsize];
		int len = 0;
		for (List<Integer> curr: li) {	
			Collections.reverse(curr);
			for (int k = 0; k < curr.size(); k++) {
				ans[len++] = curr.get(k);
			}
		}
		return ans;
	}
}