class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long res = 0;
		long curr_sum = 0;
		Map<Integer, Integer> map = new HashMap<>();
		int windwoStart = 0;
		for (int windowEnd = 0; windowEnd < nums.length; windowEnd++) {
			map.put(nums[windowEnd],windowEnd);
			curr_sum += nums[windowEnd];
			if (windowEnd - windwoStart + 1 == k) {
				if (map.size() == k) {
					res = Math.max(res,curr_sum);
				}
				curr_sum -= nums[windwoStart];
				if (map.get(nums[windwoStart]) == windwoStart) {
					map.remove(nums[windwoStart]);
				}
				++windwoStart;
			}
		}
		return res;
	}
}