class Solution {
	int NOT_PICKED = 0;
	int PICKED = 1;
	int maxScoreSightseeingPair(int[] values) {
		return topDown(values,0,false);
	}
	int topDown(int[] values, int i, int isFirstPicked) {
		if (i >= values.length) {
			return Integer.MIN_VALUE;
		}
		int result = Integer.MIN_VALUE;
		if (isFirstPicked == NOT_PICKED) {
			result = Math.max(topDown(values,i + 1,PICKED) + values[i],topDown(values,i + 1,NOT_PICKED));
		} 
		else {
			result = Math.max(values[i] - i,topDown(values,i + 1,PICKED));
		}
		return result;
	}
}