class Solution {
	long maximumSumOfHeights(List<Integer> maxHeights) {
		long ans = 0;
		for (int idx = 0; idx < maxHeights.size(); idx++) {
			ans = Math.max(ans,mr(maxHeights,idx));
		}
		return ans;
	}
	long mr(List<Integer> maxHeights, int ind) {
		long res = 0;
		res += maxHeights.get(ind);
		int li = ind;
		int lv = Integer.MAX_VALUE;
		if (li > 0) {
			lv = Math.min(maxHeights.get(li),maxHeights.get(li - 1));
		}
		while (li-- > 0) {
			lv = Math.min(maxHeights.get(li),lv);
			res += lv;
		}
		int ri = ind;
		int rv = Integer.MAX_VALUE;
		if (ri < (maxHeights.size() - 1)) {
			rv = Math.min(maxHeights.get(ri),maxHeights.get(ri + 1));
		}
		while (ri++ < maxHeights.size() - 1) {
			rv = Math.min(maxHeights.get(ri),rv);
			res += rv;
		}
		return res;
	}
}