class Solution {
	int getLongestPalindrome(String A) {
		char[] cha = A.toCharArray();
		int len = A.length();
		int count = 0;
		boolean[][] dp = new boolean[len][len];
		for (int j = 0; j < len; j++) {
			for (int i = 0; i <= j; i++) {
				if (i == j) {
					dp[i][j] = true;
					if (dp[i][j]) {
						count = Math.max(count,j - i + 1);
					}
				} 
				else if (i == j - 1) {
					if (cha[i] == cha[j]) {
						dp[i][j] = true;
					}
					if (dp[i][j]) {
						count = Math.max(count,j - i + 1);
					}
				} 
				else if (j - i > 1) {
					if (cha[i] == cha[j] && j > 0 && i < len - 1 && dp[i + 1][j - 1]) {
						dp[i][j] = true;
					}
					if (dp[i][j]) {
						count = Math.max(count,j - i + 1);
					}
				}
			}
		}
		return count;
	}
}