class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int[] rightDistinct = getRightDistinct(nums);
		int[] difference = new int[nums.length];
		boolean[] onLeft = new boolean[51];
		int distinctLeftSum = 0;
		for (int i = 0; i < nums.length; i++) {
			if (!onLeft[nums[i]]) {
				distinctLeftSum++;
			}
			difference[i] = distinctLeftSum - (i < nums.length - 1 ? rightDistinct[i + 1] : 0);
			onLeft[nums[i]] = true;
		}
		return difference;
	}
	int[] getRightDistinct(int[] nums) {
		boolean[] present = new boolean[51];
		int[] rightDistinct = new int[nums.length];
		int distinct = 0;
		for (int i = nums.length - 1; i >= 0; i--) {
			if (!present[nums[i]]) {
				distinct++;
			}
			rightDistinct[i] = distinct;
			present[nums[i]] = true;
		}
		return rightDistinct;
	}
}