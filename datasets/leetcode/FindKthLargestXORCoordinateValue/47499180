class Solution {
	int kthLargestValue(int[][] matrix, int k) {
		PriorityQueue<Integer> maxheap = new PriorityQueue<>();
		int n = matrix.length, m = matrix[0].length;
		int xor = new int[n][m];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				int topCorner = i - 1 < 0 || j - 1 < 0 ? 0 : xor[i - 1][j - 1];
				int up = i - 1 < 0 ? 0 : xor[i - 1][j];
				int left = j - 1 < 0 ? 0 : xor[i][j - 1];
				xor[i][j] = matrix[i][j] ^ topCorner;
				maxheap.add(xor[i][j]);
				if (maxheap.size() > k) {
					maxheap.remove();
				}
			}
		}
		return maxheap.poll();
	}
}