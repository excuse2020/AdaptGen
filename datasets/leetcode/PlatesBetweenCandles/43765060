class Solution {
	int BinarySearch(int i, int j, int nums, int target) {
		int low = i;
		int high = j;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (nums[mid] >= target) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int BinarySearchRight(int i, int j, int nums, int target) {
		int low = i;
		int high = j;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (nums[mid] >= target) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int[] platesBetweenCandles(String s, int[][] queries) {
		int n = s.length();
		int[] nums = new int[n];
		int k = 0;
		int[] ans = new int[queries.length];
		int i = 0;
		char c = s.charAt(i);
	}
}