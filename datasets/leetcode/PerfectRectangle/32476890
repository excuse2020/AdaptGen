class Solution {
	boolean isRectangleCover(int[][] rectangles) {
		int X1 = Integer.MAX_VALUE;
		int Y1 = Integer.MAX_VALUE;
		int X2 = Integer.MIN_VALUE;
		int Y2 = Integer.MIN_VALUE;
		HashSet<String> points = new HashSet<>();
		int areas = 0;
		for (int[] p: rectangles) {	
			int x1 = p[0];
			int y1 = p[1];
			int x2 = p[2];
			int y2 = p[3];
			X1 = Math.min(X1,x1);
			Y1 = Math.min(Y1,y1);
			X2 = Math.max(X2,x2);
			Y2 = Math.max(Y2,y2);
			areas += (x2 - x1) * (y2 - y1);
			String p1 = x1 + ",";
			String p2 = x1 + ",";
			String p3 = x2 + ",";
			String p4 = x2 + ",";
			for (String v: new String{p1, p2, p3, p4}) {	
				if (points.contains(v)) {
					points.remove(v);
				} 
				else {
					points.add(v);
				}
			}
		}
		int expectedAreas = (X2 - X1) * (Y2 - Y1);
		if (expectedAreas != areas) {
			return false;
		}
		if (points.size() != 4) {
			return false;
		}
		String s1 = X1 + ",";
		String s2 = X1 + ",";
		String s3 = X2 + ",";
		String s4 = X2 + ",";
		if (!points.contains(s1)) {
			return false;
		}
		if (!points.contains(s2)) {
			return false;
		}
		if (!points.contains(s3)) {
			return false;
		}
		if (!points.contains(s4)) {
			return false;
		}
		return true;
	}
}