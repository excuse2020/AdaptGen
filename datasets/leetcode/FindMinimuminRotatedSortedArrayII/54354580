class Solution {
	int findMin(int[] nums) {
		int pivot = finpiv(nums);
		if (pivot == nums.length - 1) {
			return nums[0];
		} 
		else {
			return nums[pivot + 1];
		}
	}
	int finpiv(int[] nums) {
		int start = 0, end = nums.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (mid < nums.length - 1) {
				if (nums[mid] > nums[mid + 1]) {
					return mid;
				}
			}
			if (mid > 0) {
				if (nums[mid - 1] > nums[mid]) {
					return mid - 1;
				}
			}
			if (nums[mid] > nums[start]) {
				start = mid + 1;
			} 
			else if (nums[mid] < nums[start]) {
				end = mid - 1;
			} 
			else {
				if (start < end && nums[start] > nums[start + 1]) {
					return start;
				} 
				else {
					start++;
				}
			}
		}
		return nums.length - 1;
	}
}