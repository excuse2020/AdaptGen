class Solution {
	int ans = 0;
	HashMap<String, Integer> map = new HashMap<>();
	int gcd(int x, int y) {
		if (x == 0) {
			return y;
		}
		return gcd(y % x,x);
	}
	int maxPoints(int[][] points) {
		for (int i = 0; i < points.length; i++) {
			map.clear();
			for (int j = i + 1; j < points.length; j++) {
				int x = points[j][0] - points[i][0];
				int y = points[j][1] - points[i][1];
				String m = "";
				if (x == 0) {
					m = "0";
				} 
				else if (y == 0) {
					m = "1";
				} 
				else {
					int sign = x * y > 0 ? 1 : -1;
					int gcd = gcd(Math.abs(x),Math.abs(y));
					x = Math.abs(x / gcd);
					y = Math.abs(y / gcd);
					if (sign > 0) {
						m = String.valueOf(x) + "#";
					} 
					else {
						m = "-" + String.valueOf(x);
					}
				}
				map.put(m,map.getOrDefault(m,0) + 1);
				ans = Math.max(ans,map.get(m));
			}
		}
		return ans + 1;
	}
}