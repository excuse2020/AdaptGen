class Solution {
	int integerReplacement(int n) {
		Map<Integer, Integer> dp = new HashMap<>();
		return operations(n,dp);
	}
	int operations(int n, Map<Integer, Integer> dp) {
		if (n >= Integer.MAX_VALUE) {
			return 32;
		}
		if (n == 1) {
			return 0;
		}
		if (dp.containsKey(n)) {
			return dp.get(n);
		}
		int count = 0;
		if (n % 2 == 0) {
			count = 1 + operations(n / 2,dp);
		} 
		else {
			count = 1 + Math.min(operations(n + 1,dp),operations(n - 1,dp));
		}
		dp.put(n,count);
		return count;
	}
}