class Solution {
	int res = 0;
	int reachableNodes(int n, int[][] edges, int[] restricted) {
		ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		int y = edges.length;
		for (int i = 0; i < n; i++) {
			adj.add(new ArrayList<>());
		}
		for (int[] i: edges) {	
			adj.get(i[0]).add(i[1]);
			adj.get(i[1]).add(i[0]);
		}
		boolean[] vis = new boolean[n];
		for (int i: restricted) {	
			vis[i] = true;
		}
		solve(0,adj,vis);
		return res;
	}
	void solve(int node, ArrayList<ArrayList<Integer>> adj, boolean[] vis) {
		vis[node] = true;
		res++;
		for (int it: adj.get(node)) {	
			if (vis[it] == false) {
				solve(it,adj,vis);
			}
		}
	}
}