class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode p1 = reverseList(head1);
		ListNode p2 = reverseList(head2);
		ListNode p3;
		ListNode p4;
		p3 = null;
		int res = 0;
		while (p1 != null || p2 != null) {
			int m = 0, n = 0;
			if (p1 != null) {
				m = p1.val;
				p1 = p1.next;
			}
			if (p2 != null) {
				n = p2.val;
				p2 = p2.next;
			}
			int temp = (m + n) % 10;
			res = (m + n) / 10;
			ListNode tempNode = new ListNode(temp);
			if (p3 == null) {
				tempNode.next = null;
			}
			tempNode.next = p3;
			p3 = tempNode;
		}
		if (res == 1) {
			ListNode tempNode = new ListNode(res);
			tempNode.next = p3;
			p3 = tempNode;
		}
		return p3;
	}
	ListNode reverseList(ListNode head) {
		ListNode p0 = head;
		ListNode p1 = head;
		if (head != null) {
			p1 = p1.next;
		}
		while (p1 != null) {
			ListNode temp = p1;
			p1 = p1.next;
			temp.next = p0;
			p0 = temp;
		}
		head.next = null;
		return p0;
	}
}