class Solution {
	boolean IsBalanced_Solution(TreeNode pRoot) {
		if (pRoot == null) {
			return true;
		}
		int lDepth = getDepth(pRoot.left);
		int rDepth = getDepth(pRoot.right);
		if (lDepth == -1 || rDepth == -1) {
			return false;
		}
		if (Math.abs(lDepth - rDepth) > 1) {
			return false;
		}
		return true;
	}
	int getDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int lDepth = getDepth(root.left);
		int rDepth = getDepth(root.right);
		if (Math.abs(lDepth - rDepth) > 1) {
			return -1;
		}
		if (lDepth == -1 || rDepth == -1) {
			return -1;
		}
		return 1 + Math.max(lDepth,rDepth);
	}
}