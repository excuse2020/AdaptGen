class Solution {
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				String s1 = String.valueOf(nums[i]);
				String s2 = String.valueOf(nums[j]);
				char c1 = s1.charAt(0);
				char c2 = s2.charAt(s2.length() - 1);
				int v1 = Character.getNumericValue(c1);
				int v2 = Character.getNumericValue(c2);
				if (isCoprime(v1,v2)) {
					count++;
				}
			}
		}
		return count;
	}
	int gcdByEuclidsAlgorithm(int n1, int n2) {
		if (n2 == 0) {
			return n1;
		}
		return gcdByEuclidsAlgorithm(n2,n1 % n2);
	}
	boolean isCoprime(int nu1, int nu2) {
		return gcdByEuclidsAlgorithm(nu1,nu2) == 1;
	}
}