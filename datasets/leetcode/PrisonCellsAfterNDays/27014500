class Solution {
	int[] cellStatesNextDay(int[] cells) {
		int[] tempCells = new int[8];
		for (int i = 1; i < 7; i++) {
			if (cells[i - 1] == cells[i + 1]) {
				tempCells[i] = 1;
			} 
			else {
				tempCells[i] = 0;
			}
		}
		return tempCells;
	}
	int[] prisonAfterNDays(int[] cells, int n) {
		Set<String> cellStates = new HashSet<String>();
		boolean isRepeating = false;
		int days = 0;
		for (int i = 0; i < n; i++) {
			int[] nextDayCellStates = cellStatesNextDay(cells);
			String nextState = Arrays.toString(nextDayCellStates);
			if (cellStates.contains(nextState)) {
				isRepeating = true;
				break;
			}
			cellStates.add(nextState);
			days++;
			cells = nextDayCellStates;
		}
		if (isRepeating) {
			return prisonAfterNDays(cells,n % days);
		}
		return cells;
	}
}