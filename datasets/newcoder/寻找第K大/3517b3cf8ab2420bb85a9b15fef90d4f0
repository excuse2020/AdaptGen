class Solution {
	void buildHeap(int[] arr, int i, int len) {
		int tmp = arr[i];
		for (int j = 2 * i + 1; j < len; j = j * 2 + 1) {
			if (j + 1 < len && arr[j] < arr[j + 1]) {
				j++;
			}
			if (tmp < arr[j]) {
				arr[i] = arr[j];
				i = j;
			}
		}
		arr[i] = tmp;
	}
	int findKth(int[] a, int n, int K) {
		for (int i = a.length / 2 - 1; i >= 0; i--) {
			buildHeap(a,i,a.length);
		}
		for (int i = 0; i < K; i++) {
			swap(a,0,a.length - 1);
			buildHeap(a,0,a.length - 1);
		}
		return a[a.length - K];
	}
	void swap(int[] arr, int idx1, int idx2) {
		int tmp = arr[idx1];
		arr[idx1] = arr[idx2];
		arr[idx2] = tmp;
	}
}