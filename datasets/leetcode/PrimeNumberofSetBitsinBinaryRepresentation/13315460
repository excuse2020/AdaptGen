class Solution {
	int countNumSetBits(int x) {
		int numSetBits = 0;
		while (x > 0) {
			int lsb = (x & 0b1);
			if (lsb == 1) {
				++numSetBits;
			}
			x >>>= 1;
		}
		return numSetBits;
	}
	int countPrimeSetBits(int left, int right) {
		int setPrimes = 0;
		int x = 127;
		for (int i = left; i <= right; ++i) {
			int countBits = countNumSetBits(i);
			if (isPrime(countBits)) {
				++setPrimes;
			}
		}
		return setPrimes;
	}
	boolean isPrime(int x) {
		if (x == 1) {
			return false;
		}
		if (x <= 3) {
			return true;
		}
		int upperLim = (int) Math.sqrt(x);
		for (int i = 2; i <= upperLim; ++i) {
			if (x % i == 0) {
				return false;
			}
		}
		return true;
	}
}