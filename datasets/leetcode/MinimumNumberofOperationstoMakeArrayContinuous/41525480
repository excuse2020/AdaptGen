class Solution {
	int find(int s, int nums, int n) {
		int l = 0, r = n - 1, m;
		while (l <= r) {
			m = (l + r) / 2;
			if (nums[m] == s) {
				return m;
			} 
			else if (nums[m] < s) {
				l = m + 1;
			} 
			else {
				r = m - 1;
			}
		}
		return r;
	}
	int minOperations(int[] nums) {
		Arrays.sort(nums);
		int n = nums.length, res = n, j = 0, prev = -1;
		for (int i = 0; i < n; i++) {
			if (nums[i] != prev) {
				prev = nums[j++] = nums[i];
			}
		}
		n = j;
		for (int i = 0; i < n; i++) {
			int idx = find(nums[i] + nums.length - 1,nums,n);
			res = Math.min(res,nums.length - (idx - i + 1));
		}
		return res;
	}
}