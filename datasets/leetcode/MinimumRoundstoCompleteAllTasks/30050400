class Solution {
	int minimumRounds(int[] tasks) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < tasks.length; i++) {
			map.put(tasks[i],map.getOrDefault(tasks[i],0) + 1);
		}
		System.out.println(map.toString());
		int result = 0;
		for (Integer cnt: map.values()) {	
			System.out.println(cnt);
			System.out.println("result " + result);
			if (cnt == 1) {
				return -1;
			} 
			else if (cnt == 4) {
				System.out.println(" cnt " + cnt);
				result = result + 2;
				continue;
			} 
			else if (cnt % 3 == 0) {
				result = result + cnt / 3;
				System.out.println(" cnt " + cnt);
				continue;
			} 
			else if (cnt % 3 == 1) {
				int odd = (cnt / 3) - 1;
				int even = (cnt - (3 * odd)) / 2;
				result = result + even;
				System.out.println(" cnt " + cnt);
				continue;
			} 
			else if (cnt % 3 == 2) {
				int odd = (cnt / 3);
				System.out.println(odd);
				result = result + odd;
				System.out.println(" cnt " + cnt);
			}
		}
		return result;
	}
}