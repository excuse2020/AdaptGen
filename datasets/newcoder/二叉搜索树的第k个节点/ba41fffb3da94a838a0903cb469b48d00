class Solution {
	int KthNode(TreeNode proot, int k) {
		int res = -1;
		Queue<Integer> queue = new PriorityQueue<>();
		dfs(proot,queue);
		if (queue.isEmpty() || k > queue.size()) {
			return res;
		}
		for (int i = 0; i < k; i++) {
			res = queue.poll();
		}
		return res;
	}
	void dfs(TreeNode proot, Queue<Integer> queue) {
		if (proot == null) {
			return;
		}
		queue.offer(proot.val);
		dfs(proot.left,queue);
		dfs(proot.right,queue);
	}
}