class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> st = new Stack<>();
		int j = 0, a, b;
		for (int i = 0; i < tokens.length; i++) {
			if (tokens[i].equals("+")) {
				j = Integer.valueOf(st.pop()) + Integer.valueOf(st.pop());
				st.push(j);
			} 
			else if (tokens[i].equals("-")) {
				a = st.pop();
				b = st.pop();
				j = Integer.valueOf(b - a);
				st.push(j);
			} 
			else if (tokens[i].equals("*")) {
				j = Integer.valueOf(st.pop()) * Integer.valueOf(st.pop());
				st.push(j);
			} 
			else if (tokens[i].equals("/")) {
				a = st.pop();
				b = st.pop();
				j = Integer.valueOf(b) / Integer.valueOf(a);
				st.push(j);
			} 
			else {
				st.push(Integer.valueOf(tokens[i]));
			}
		}
		return st.pop();
	}
}