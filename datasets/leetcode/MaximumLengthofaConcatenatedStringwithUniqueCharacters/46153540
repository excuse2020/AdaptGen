class Solution {
	int maxLength(List<String> arr) {
		return solve(arr,arr.size(),0,"");
	}
	int solve(List<String> arr, int n, int max, String str) {
		if (n == 0) {
			return max;
		}
		HashSet<Character> h = new HashSet<>();
		for (int i = 0; i < arr.get(n - 1).length(); i++) {
			h.add(arr.get(n - 1).charAt(i));
		}
		if (h.size() != arr.get(n - 1).length()) {
			return max = Math.max(max,0 + solve(arr,n - 1,max,str));
		}
		for (int i = 0; i < str.length(); i++) {
			if (h.contains(str.charAt(i))) {
				return max = Math.max(max,0 + solve(arr,n - 1,max,str));
			}
		}
		String dummy = str;
		str += arr.get(n - 1);
		return max = Math.max(max,Math.max(arr.get(n - 1).length() + solve(arr,n - 1,max,str),0 + solve(arr,n - 1,max,dummy)));
	}
}