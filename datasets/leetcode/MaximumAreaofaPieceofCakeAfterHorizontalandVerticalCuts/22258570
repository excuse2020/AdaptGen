class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		int mxV = 0;
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		for (int i = 0; i < verticalCuts.length; i++) {
			int sub = 0;
			if (i != 0) {
				sub = verticalCuts[i - 1];
			}
			mxV = Math.max(mxV,verticalCuts[i] - sub);
		}
		mxV = Math.max(mxV,w - verticalCuts[verticalCuts.length - 1]);
		int mxH = 0;
		for (int i = 0; i < horizontalCuts.length; i++) {
			int sub = 0;
			if (i != 0) {
				sub = horizontalCuts[i - 1];
			}
			mxH = Math.max(mxH,horizontalCuts[i] - sub);
		}
		mxH = Math.max(mxH,h - horizontalCuts[horizontalCuts.length - 1]);
		return (int) (((long) mxV * (long) mxH) % 1000000007);
	}
}