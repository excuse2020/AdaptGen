class Solution {
	int digitSum(int number) {
		int digitSum = 0;
		int digit = 0;
		while (number > 0) {
			digit = number % 10;
			digitSum += digit;
			number /= 10;
		}
		return digitSum;
	}
	int maximumSum(int[] nums) {
		int n = nums.length;
		int array = new int[82][2];
		int i;
		int sumOfDigits = 0;
		int result = -1;
		for (int x: nums) {	
			sumOfDigits = digitSum(x);
			if (array[sumOfDigits][0] == 0) {
				array[sumOfDigits][0] = x;
				array[sumOfDigits][1] = -1;
			} 
			else {
				if (x > array[sumOfDigits][0]) {
					array[sumOfDigits][1] = array[sumOfDigits][0];
					array[sumOfDigits][0] = x;
				} 
				else if (x > array[sumOfDigits][1]) {
					array[sumOfDigits][1] = x;
				}
			}
		}
		for (i = 81; i >= 0; i--) {
			if (array[i][1] != -1 && array[i][1] != 0) {
				result = Math.max(result,array[i][1] + array[i][0]);
			}
		}
		return result;
	}
}