class Solution {
	int maxDistance(int[][] grid) {
		ArrayList<ArrayList<Integer>> land = new ArrayList<ArrayList<Integer>>();
		ArrayList<ArrayList<Integer>> water = new ArrayList<ArrayList<Integer>>();
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] == 1) {
					land.add(new ArrayList<Integer>(Arrays.asList(i,j)));
				} 
				else {
					water.add(new ArrayList<Integer>(Arrays.asList(i,j)));
				}
			}
		}
		if (land.isEmpty() || water.isEmpty()) {
			return -1;
		}
		int result = -1;
		for (int i = 0; i < water.size(); i++) {
			int x0 = water.get(i).get(0);
			int y0 = water.get(i).get(1);
			int curMin = 0;
			int min = Integer.MAX_VALUE;
			for (int j = 0; j < land.size(); j++) {
				int x1 = land.get(j).get(0);
				int y1 = land.get(j).get(1);
				curMin = Math.abs(x0 - x1) + Math.abs(y0 - y1);
				if (curMin < min) {
					min = curMin;
				}
				if (min == 1) {
					break;
				}
			}
			if (min > result) {
				result = min;
			}
		}
		return result;
	}
}