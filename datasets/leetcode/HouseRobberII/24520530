class Solution {
	int function(int[] nums) {
		int n = nums.length;
		int[] money = new int[2];
		money[0] = nums[0];
		if (n == 1) {
			return money[0];
		}
		money[1] = Math.max(nums[0],nums[1]);
		for (int i = 2; i < n; i++) {
			int max = Math.max(nums[i] + money[0],money[1]);
			money[0] = money[1];
			money[1] = max;
		}
		return money[1];
	}
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		if (n == 2) {
			return Math.max(nums[0],nums[1]);
		}
		int[] num1 = Arrays.copyOfRange(nums,0,n - 1);
		int[] num2 = Arrays.copyOfRange(nums,1,n);
		return Math.max(function(num1),function(num2));
	}
}