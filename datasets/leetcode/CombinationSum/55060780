class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		combinations(candidates,0,target,new ArrayList<>(),ans);
		return ans;
	}
	void combinations(int[] arr, int idx, int target, List<Integer> li, List<List<Integer>> ans) {
		if (idx == arr.length) {
			if (target == 0) {
				ans.add(new ArrayList<>(li));
			}
			return;
		}
		if (arr[idx] <= target) {
			li.add(arr[idx]);
			combinations(arr,idx,target - arr[idx],li,ans);
			li.remove(li.size() - 1);
		}
		combinations(arr,idx + 1,target,li,ans);
	}
}