class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new LinkedList<List<Integer>>();
		Queue<TreeNode> visited = new LinkedList<TreeNode>();
		if (root == null) {
			return result;
		}
		visited.offer(root);
		while (!visited.isEmpty()) {
			int listSize = visited.size();
			List<Integer> currLevel = new ArrayList<Integer>(listSize);
			for (int i = 0; i < listSize; ++i) {
				TreeNode curr = visited.poll();
				currLevel.add(curr.val);
				if (curr.left != null) {
					visited.add(curr.left);
				}
				if (curr.right != null) {
					visited.add(curr.right);
				}
			}
			result.add(0,currLevel);
		}
		return result;
	}
}