class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		int[] hm2 = new int[100001];
		TreeNode[] hm = new TreeNode[100001];
		for (int[] d: descriptions) {	
			int p = d[0], c = d[1], l = d[2];
			TreeNode par = hm[p] != null ? hm[p] : new TreeNode(p);
			TreeNode ch = hm[c] != null ? hm[c] : new TreeNode(c);
			if (l == 1) {
				par.left = ch;
			} 
			else {
				par.right = ch;
			}
			hm2[c] = 1;
			hm[p] = par;
			hm[c] = ch;
		}
		for (int[] d: descriptions) {	
			int p = d[0];
			if (hm2[p] != 1) {
				return hm[p];
			}
		}
		return null;
	}
}