class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		int stops = 0;
		int CanTravelUpTo = startFuel;
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a, b) -> {b - a});
		for (int[] s: stations) {	
			while (CanTravelUpTo < s[0]) {
				if (maxHeap.isEmpty()) {
					return -1;
				}
				stops++;
				CanTravelUpTo += maxHeap.poll();
			}
			maxHeap.add(s[1]);
		}
		while (CanTravelUpTo < target) {
			if (maxHeap.isEmpty()) {
				return -1;
			}
			stops++;
			CanTravelUpTo += maxHeap.poll();
		}
		return stops;
	}
}