class Solution {
	int numNodes = 0;
	int sum = 0;
	int averageOfSubtree(TreeNode root) {
		Queue<TreeNode> q1 = new LinkedList<>();
		TreeNode tmp = root;
		q1.add(tmp);
		int count = 0;
		while (!q1.isEmpty()) {
			TreeNode r = q1.remove();
			numNodes = 0;
			sum = 0;
			dfs(r);
			if ((sum / numNodes) == r.val) {
				count++;
			}
			if (r.left != null) {
				q1.add(r.left);
			}
			if (r.right != null) {
				q1.add(r.right);
			}
		}
		return count;
	}
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		sum += root.val;
		numNodes++;
		dfs(root.left);
		dfs(root.right);
	}
}