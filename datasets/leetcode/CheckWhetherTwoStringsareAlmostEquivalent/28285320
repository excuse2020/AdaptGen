class Solution {
	boolean checkAlmostEquivalent(String word1, String word2) {
		HashMap<Character, Integer> h1 = new HashMap<>();
		for (int i = 0; i < word1.length(); i++) {
			if (h1.containsKey(word1.charAt(i))) {
				h1.replace(word1.charAt(i),h1.get(word1.charAt(i)) + 1);
			} 
			else {
				h1.put(word1.charAt(i),1);
			}
		}
		HashMap<Character, Integer> h2 = new HashMap<>();
		for (int i = 0; i < word2.length(); i++) {
			if (h2.containsKey(word2.charAt(i))) {
				h2.replace(word2.charAt(i),h2.get(word2.charAt(i)) + 1);
			} 
			else {
				h2.put(word2.charAt(i),1);
			}
		}
		String s = "abcdefghijklmnopqrstuvwxyz";
		for (int i = 0; i < s.length(); i++) {
			if (h1.containsKey(s.charAt(i)) || h2.containsKey(s.charAt(i))) {
				int val1 = 0;
				if (h1.containsKey(s.charAt(i))) {
					val1 = h1.get(s.charAt(i));
				}
				int val2 = 0;
				if (h2.containsKey(s.charAt(i))) {
					val2 = h2.get(s.charAt(i));
				}
				if (Math.abs(val1 - val2) > 3) {
					return false;
				}
			}
		}
		return true;
	}
}