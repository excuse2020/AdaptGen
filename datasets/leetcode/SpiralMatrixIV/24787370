class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int matrix = new int[m][n];
		for (int[] row: matrix) {	
			Arrays.fill(row,-1);
		}
		int top = 0;
		int bottom = m - 1;
		int left = 0;
		int right = n - 1;
		while (head != null) {
			for (int i = left; i <= right; i++) {
				if (head == null) {
					return matrix;
				}
				matrix[top][i] = head.val;
				head = head.next;
			}
			top += 1;
			for (int i = top; i <= bottom; i++) {
				if (head == null) {
					return matrix;
				}
				matrix[i][right] = head.val;
				head = head.next;
			}
			right -= 1;
			for (int i = right; i >= left; i--) {
				if (head == null) {
					return matrix;
				}
				matrix[bottom][i] = head.val;
				head = head.next;
			}
			bottom -= 1;
			for (int i = bottom; i >= top; i--) {
				if (head == null) {
					return matrix;
				}
				matrix[i][left] = head.val;
				head = head.next;
			}
			left += 1;
		}
		return matrix;
	}
}