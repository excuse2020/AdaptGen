class Solution {
	boolean dfs(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return root1 == root2;
		}
		if (root1.val != root2.val) {
			return false;
		}
		boolean flip = false;
		if (root1.left != null && root2.right != null && root1.left.val == root2.right.val) {
			flip = true;
		}
		if (root1.right != null && root2.left != null && root1.right.val == root2.left.val) {
			flip = true;
		}
		boolean left = dfs(root1.left,flip ? root2.right : root2.left);
		boolean right = dfs(root1.right,flip ? root2.left : root2.right);
		return left && right;
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return dfs(root1,root2);
	}
}