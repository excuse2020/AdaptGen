class Solution {
	int COVERED = (LOWER | UPPER);
	int DIGIT = 4;
	int LOWER = 1;
	int[] MASK_MAP = new int[128];
	int SPECIAL = 8;
	int UPPER = 2;
	boolean strongPasswordCheckerII(String password) {
		if (password.length() < 8) {
			return false;
		}
		char last = (char) 0;
		int coverage = 0;
		for (int i = 0; i < password.length(); ++i) {
			char ch = password.charAt(i);
			if (ch == last) {
				return false;
			}
			coverage |= MASK_MAP[(int)ch];
			last = ch;
		}
		return (coverage == COVERED);
	}
}