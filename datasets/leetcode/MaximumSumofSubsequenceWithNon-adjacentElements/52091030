class Solution {
	long maxNonAdjacentSum(int[] a) {
		if (a.length == 0) {
			return 0;
		}
		if (a.length == 1) {
			if (a[0] >= 0) {
				return a[0];
			} 
			else {
				return 0;
			}
		}
		long take = a[0];
		long nottake = 0;
		for (int i = 1; i < a.length; i++) {
			long temp = Math.max(take,nottake);
			take = nottake + a[i];
			nottake = temp;
		}
		return Math.max(take,nottake);
	}
	int maximumSumSubsequence(int[] a, int[][] que) {
		long ans = 0, sum;
		for (int[] q: que) {	
			int i = q[0];
			int x = q[1];
			a[i] = x;
			sum = maxNonAdjacentSum(a);
			ans += sum;
		}
		ans = ans % 1000000007;
		return (int) ans;
	}
}