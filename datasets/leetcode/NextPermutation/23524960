class Solution {
	void nextPermutation(int[] arr) {
		int n = arr.length;
		int pivot = -1;
		for (int i = n - 2; i >= 0; --i) {
			if (arr[i] < arr[i + 1]) {
				pivot = i;
				break;
			}
		}
		if (pivot == -1) {
			reverseArr(arr,-1);
			return;
		}
		int biggerInd = -1;
		for (int i = n - 1; i > pivot; --i) {
			if (arr[i] > arr[pivot]) {
				biggerInd = i;
				break;
			}
		}
		swap(arr,pivot,biggerInd);
		reverseArr(arr,pivot);
	}
	void reverseArr(int[] arr, int ind) {
		int l = ind + 1;
		int r = arr.length - 1;
		while (l <= r) {
			swap(arr,l,r);
			l++;
			r--;
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}