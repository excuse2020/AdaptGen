class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		long r = 0, c = 0;
		int cntr = n, cntc = n;
		HashSet<Integer> row = new HashSet<>();
		HashSet<Integer> col = new HashSet<>();
		for (int i = queries.length - 1; i >= 0 && (cntr != 0 || cntc != 0); i--) {
			if (queries[i][0] == 0 && !row.contains(queries[i][1])) {
				r += (cntr * queries[i][2]);
				cntc--;
				row.add(queries[i][1]);
			} 
			else if (queries[i][0] == 1 && !col.contains(queries[i][1])) {
				c += (cntc * queries[i][2]);
				cntr--;
				col.add(queries[i][1]);
			}
		}
		long sum = r + c;
		return sum;
	}
}