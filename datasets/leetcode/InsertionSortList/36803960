class Solution {
	ListNode insertionSortList(ListNode head) {
		ListNode sortedHead = head, currInput = head.next;
		sortedHead.next = null;
		while (currInput != null) {
			ListNode currSorted = sortedHead, nextInput = currInput.next;
			if (currInput.val < sortedHead.val) {
				while (currSorted.next != null && currSorted.next.val > currInput.val) {
					currSorted = currSorted.next;
				}
				currInput.next = currSorted.next;
				currSorted.next = currInput;
			} 
			else {
				currInput.next = sortedHead;
				sortedHead = currInput;
			}
			currInput = nextInput;
		}
		ListNode currOutput = sortedHead, prevOutput = null;
		while (currOutput != null) {
			ListNode nextOutput = currOutput.next;
			currOutput.next = prevOutput;
			prevOutput = currOutput;
			currOutput = nextOutput;
		}
		return prevOutput;
	}
}