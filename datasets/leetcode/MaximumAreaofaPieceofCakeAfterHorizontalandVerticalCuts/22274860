class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		long x = 1, y = 1;
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int hl = horizontalCuts.length, vl = verticalCuts.length;
		if (hl > 1) {
			for (int i = 1; i < horizontalCuts.length; i++) {
				x = Math.max(x,horizontalCuts[i] - horizontalCuts[i - 1]);
			}
			x = Math.max(x,horizontalCuts[0]);
			x = Math.max(x,h - horizontalCuts[hl - 1]);
		} 
		else if (hl == 1) {
			x = Math.max(horizontalCuts[0] - 0,h - horizontalCuts[0]);
		} 
		else {
			x = h;
		}
		if (vl > 1) {
			for (int i = 1; i < verticalCuts.length; i++) {
				y = Math.max(y,verticalCuts[i] - verticalCuts[i - 1]);
			}
			y = Math.max(y,verticalCuts[0]);
			y = Math.max(y,w - verticalCuts[vl - 1]);
		} 
		else if (vl == 1) {
			y = Math.max(verticalCuts[0] - 0,w - verticalCuts[0]);
		} 
		else {
			y = h;
		}
		return (int) (((x % 1000000007) * (y % 1000000007)) % 1000000007);
	}
}