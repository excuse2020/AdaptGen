class Solution {
	boolean isPail(ListNode head) {
		ListNode p = head;
		int n = 0;
		while (p != null) {
			n++;
			p = p.next;
		}
		n = n / 2;
		p = head;
		while (n > 0) {
			p = p.next;
			n--;
		}
		p = reverse(p);
		ListNode q = head;
		while (p != null) {
			if (p.val != q.val) {
				return false;
			}
			p = p.next;
			q = q.next;
		}
		return true;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = prev;
			prev = head;
			head = next;
		}
		return prev;
	}
}