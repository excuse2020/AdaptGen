class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode target = getter(root,x);
		int redRegion = count(target);
		if (redRegion <= n / 2) {
			return true;
		}
		int blueRegion = count(target.left);
		if (blueRegion > n / 2) {
			return true;
		}
		blueRegion = count(target.right);
		if (blueRegion > n / 2) {
			return true;
		}
		return false;
	}
	int count(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + count(root.left);
	}
	TreeNode getter(TreeNode root, int val) {
		if (root == null) {
			return null;
		}
		if (root.val == val) {
			return root;
		}
		TreeNode left = getter(root.left,val);
		TreeNode right = getter(root.right,val);
		if (left == null) {
			return right;
		}
		return left;
	}
}