class Solution {
	boolean binarySearch(int[] target, int i) {
		int start = 0;
		int end = target.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (target[mid] < i) {
				start = mid + 1;
			} 
			else if (target[mid] > i) {
				end = mid - 1;
			} 
			else {
				return true;
			}
		}
		return false;
	}
	List<String> buildArray(int[] target, int n) {
		List<String> arr = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			if (binarySearch(target,i)) {
				arr.add("Push");
			} 
			else {
				arr.add("Push");
				arr.add("Pop");
			}
			if (i == target[target.length - 1]) {
				break;
			}
		}
		return arr;
	}
}