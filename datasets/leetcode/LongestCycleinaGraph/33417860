class Solution {
	int longestCycle(int[] edges) {
		var n = edges.length;
		var seen = new boolean[n];
		var ans = -1;
		for (var i = 0; i < n; i++) {
			if (!seen[i]) {
				var j = i;
				var k = 0;
				var map = new HashMap<Integer, Integer>();
				for (; j != -1 && !seen[j]; j = edges[j]) {
					seen[j] = true;
					map.put(j,k++);
				}
				if (map.containsKey(j)) {
					ans = Math.max(ans,k - map.get(j));
				}
			}
		}
		return ans;
	}
}