class Solution {
	ListNode insertionSortList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode curr = head;
		ArrayList<Integer> ans = new ArrayList<>();
		while (curr != null) {
			ans.add(curr.val);
			curr = curr.next;
		}
		int[] val = ans.stream().mapToInt().toArray();
		insertionsort(val);
		ListNode node = new ListNode(-1);
		ListNode list = node;
		for (int x: val) {	
			list.next = new ListNode(x);
			list = list.next;
		}
		return node.next;
	}
	void insertionsort(int[] arr) {
		for (int i = 0; i < arr.length; i++) {
			int j = i;
			while (j > 0 && arr[j - 1] >= arr[j]) {
				int temp = arr[j - 1];
				arr[j - 1] = arr[j];
				arr[j] = temp;
				j--;
			}
		}
	}
}