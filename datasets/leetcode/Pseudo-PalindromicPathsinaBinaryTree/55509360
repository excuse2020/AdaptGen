class Solution {
	int count = 0;
	boolean check(int[] hash) {
		int odds = 0;
		for (int i: hash) {	
			if (i % 2 == 1) {
				odds++;
			}
		}
		return odds > 1;
	}
	void helper(TreeNode root, int[] hash) {
		if (root == null) {
			return;
		}
		hash[root.val]++;
		if (root.left == null && root.right == null) {
			count += check(hash) ? 0 : 1;
		} 
		else {
			helper(root.left,hash);
			helper(root.right,hash);
		}
		hash[root.val]--;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] hash = new int[10];
		helper(root,hash);
		return count;
	}
}