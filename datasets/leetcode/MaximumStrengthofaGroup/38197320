class Solution {
	long maxStrength(int[] nums) {
		int n = nums.length, i, count = 0, zeros = 0;
		long prod = 1;
		boolean flag = false;
		if (n == 1) {
			return (long) nums[0];
		}
		PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
		for (i = 0; i < n; i++) {
			if (nums[i] == 0) {
				zeros++;
				continue;
			}
			if (nums[i] < 0) {
				pq.add(nums[i]);
				count++;
			} 
			else {
				prod *= nums[i];
			}
			flag = true;
		}
		if (count == 1 && zeros == (n - 1)) {
			return 0;
		}
		if (count % 2 == 1) {
			count--;
		}
		while (count != 0) {
			prod *= (int) pq.remove();
			count--;
		}
		if (flag == true) {
			return prod;
		}
		return 0;
	}
}