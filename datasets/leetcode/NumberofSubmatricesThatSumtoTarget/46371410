class Solution {
	int numSubmatrixSumTarget(int[][] matrix, int target) {
		int n = matrix.length, m = matrix[0].length, count = 0;
		for (int i = 0; i < n; i++) {
			int sum = new int[m];
			for (int j = i; j < n; j++) {
				for (int k = 0; k < m; k++) {
					sum[k] += matrix[j][k];
				}
				count += solve(sum,target);
			}
		}
		return count;
	}
	int solve(int sum, int target) {
		int n = sum.length, s = 0, count = 0;
		HashMap<Integer, Integer> mp = new HashMap<>();
		for (int i = 0; i < n; i++) {
			s += sum[i];
			if (s == target) {
				count++;
			}
			if (mp.containsKey(s - target)) {
				count += mp.get(s - target);
			}
			mp.put(s,mp.getOrDefault(s,0) + 1);
		}
		return count;
	}
}