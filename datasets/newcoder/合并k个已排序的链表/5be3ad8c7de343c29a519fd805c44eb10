class Solution {
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists.size() == 0) {
			return null;
		}
		if (lists.size() == 1) {
			return lists.get(0);
		}
		ListNode head = new ListNode(0);
		head = lists.get(0);
		for (int i = 1; i < lists.size(); i++) {
			head = mergeTwoLists(head,lists.get(i));
		}
		return head;
	}
	ListNode mergeTwoLists(ListNode list1, ListNode list2) {
		if (list1 == null) {
			return list2;
		}
		if (list2 == null) {
			return list1;
		}
		ListNode head = new ListNode(0);
		if (list1.val > list2.val) {
			head = list2;
			list2 = list2.next;
		} 
		else {
			head = list1;
			list1 = list1.next;
		}
		ListNode currentHead = head;
		while (list1 != null && list2 != null) {
			ListNode tempNode = new ListNode(0);
			if (list1.val < list2.val) {
				tempNode = list1;
				list1 = list1.next;
			} 
			else {
				tempNode = list2;
				list2 = list2.next;
			}
			currentHead.next = tempNode;
			currentHead = currentHead.next;
		}
		if (list1 == null) {
			currentHead.next = list2;
		} 
		else {
			currentHead.next = list1;
		}
		return head;
	}
}