class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode a = reverse(head1);
		ListNode b = reverse(head2);
		int carry = 0;
		ListNode ans = null;
		while (a != null || b != null || carry == 1) {
			int sum = (a == null ? 0 : a.val) + (b == null ? 0 : b.val);
			carry = sum / 10;
			ListNode dump = new ListNode(sum % 10);
			dump.next = ans;
			ans = dump;
			if (a != null) {
				a = a.next;
			}
			if (b != null) {
				b = b.next;
			}
		}
		return ans;
	}
	ListNode reverse(ListNode root) {
		ListNode temp = null;
		while (root != null) {
			ListNode d = root.next;
			root.next = temp;
			temp = root;
			root = d;
		}
		return temp;
	}
}