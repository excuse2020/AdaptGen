class Solution {
	int getDepth(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return Math.max(getDepth(node.left),getDepth(node.right)) + 1;
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		TreeNode parent = root;
		int leftDepth = getDepth(parent.left);
		int rightDepth = getDepth(parent.right);
		while (leftDepth != rightDepth) {
			if (leftDepth > rightDepth) {
				parent = parent.left;
			} 
			else {
				parent = parent.right;
			}
			leftDepth = getDepth(parent.left);
			rightDepth = getDepth(parent.right);
		}
		return parent;
	}
}