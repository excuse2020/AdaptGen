class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean[] prime = new boolean[n + 1];
		Arrays.fill(prime,true);
		prime[0] = prime[1] = false;
		for (int i = 2; i * i <= n; i++) {
			if (prime[i]) {
				for (int p = i * i; p <= n; p += i) {
					prime[p] = false;
				}
			}
		}
		List<List<Integer>> ans = new ArrayList<>();
		int i = 2, j = n - 1;
		while (i <= j) {
			int sum = i + j;
			if (sum == n) {
				if (prime[i] && prime[j]) {
					List<Integer> l = new ArrayList<>();
					l.add(i);
					l.add(j);
					ans.add(l);
				}
				i++;
				j--;
			} 
			else if (sum < n) {
				i++;
			} 
			else {
				j--;
			}
		}
		return ans;
	}
}