class Solution {
	int minimumRightShifts(List<Integer> nums) {
		int maxValueLeftSide = nums.get(0);
		int indexLeftSide = 0;
		for (int i = 1; i < nums.size(); i++) {
			int num = nums.get(i);
			if (num > maxValueLeftSide) {
				maxValueLeftSide = num;
				indexLeftSide = i;
			} 
			else {
				break;
			}
		}
		if (indexLeftSide == nums.size() - 1) {
			return 0;
		}
		int maxValueRightSide = nums.get(indexLeftSide + 1);
		int indexRightSide = indexLeftSide + 1;
		for (int i = indexRightSide + 1; i < nums.size(); i++) {
			int num = nums.get(i);
			if (num > maxValueRightSide) {
				maxValueRightSide = num;
				indexRightSide = i;
			} 
			else {
				return -1;
			}
		}
		if (maxValueLeftSide > maxValueRightSide) {
			return nums.size() - 1;
		} 
		else {
			return -1;
		}
	}
}