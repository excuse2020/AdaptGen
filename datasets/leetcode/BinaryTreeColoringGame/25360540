class Solution {
	int leftSize;
	int rightSize;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		size(root,x);
		int otherSide = n - leftSize;
		int max = Math.max(otherSide,Math.max(leftSize,rightSize));
		int diff = n - max;
		if (diff < max) {
			return true;
		}
		return false;
	}
	int size(TreeNode node, int data) {
		if (node == null) {
			return 0;
		}
		int ls = size(node.left,data);
		int rs = size(node.right,data);
		if (node.val == data) {
			leftSize = ls;
			rightSize = rs;
		}
		return ls + rs;
	}
}