class Solution {
	int pairSum(ListNode head) {
		int res = 0;
		ListNode slow = head, fast = head.next, prev = null, temp1 = null, temp2 = null;
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		ListNode reverseHead = reverseLinkedList(slow.next);
		slow.next = null;
		while (head != null && reverseHead != null) {
			int curRes = head.val + reverseHead.val;
			res = Math.max(res,curRes);
			head = head.next;
			reverseHead = reverseHead.next;
		}
		return res;
	}
	ListNode reverseLinkedList(ListNode head) {
		ListNode prev = null, tempHead = head, temp = tempHead;
		while (temp != null) {
			temp = tempHead.next;
			tempHead.next = prev;
			prev = tempHead;
			tempHead = temp;
		}
		return prev;
	}
}