class Solution {
	int minimumAverageDifference(int[] nums) {
		long[] prefixSum = new long[nums.length];
		long[] suffixSum = new long[nums.length];
		for (int i = 0; i < nums.length; i++) {
			if (i == 0) {
				prefixSum[i] = nums[i];
			} 
			else {
				prefixSum[i] = prefixSum[i - 1] + nums[i];
			}
		}
		for (int i = nums.length - 1; i >= 0; i--) {
			if (i == nums.length - 1) {
				suffixSum[i] = nums[i];
			} 
			else {
				suffixSum[i] = suffixSum[i + 1] + nums[i];
			}
		}
		long min = Integer.MAX_VALUE;
		int minIndex = Integer.MAX_VALUE;
		for (int i = 1; i <= nums.length; i++) {
			long avg1 = prefixSum[i - 1] / i;
			long avg2 = 0;
			if (i != nums.length) {
				avg2 = suffixSum[i] / (nums.length - i);
			}
			long avg = Math.abs(avg1 - avg2);
			if (min > avg) {
				min = avg;
				minIndex = i - 1;
			}
		}
		return minIndex;
	}
}