class Solution {
	ListNode midnode(ListNode head) {
		ListNode turtle = head;
		ListNode hare = head;
		while (hare != null && hare.next != null) {
			turtle = turtle.next;
			hare = hare.next.next;
		}
		return turtle;
	}
	int pairSum(ListNode head) {
		ListNode mid = midnode(head);
		ListNode head1 = head;
		ListNode prev = null;
		ListNode curr = mid;
		while (curr != null) {
			ListNode next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		ListNode head2 = prev;
		int sum = 0;
		int max = Integer.MIN_VALUE;
		while (head2 != null) {
			sum = head1.val + head2.val;
			max = Math.max(sum,max);
			head1 = head1.next;
			head2 = head2.next;
		}
		return max;
	}
}