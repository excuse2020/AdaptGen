class Solution {
	String LCS(String s1, String s2) {
		char[] chs1 = s1.toCharArray();
		char[] chs2 = s2.toCharArray();
		int m = chs1.length, n = chs2.length;
		if (m == 0 || n == 0) {
			return "-1";
		}
		int[][] f = new int[m + 1][n + 1];
		int i, j = 0;
		for (i = 1; i <= m; i++) {
			for (j = 1; j <= n; j++) {
				if (chs1[i - 1] == chs2[j - 1]) {
					f[i][j] = f[i - 1][j - 1] + 1;
				} 
				else {
					f[i][j] = Math.max(f[i - 1][j],f[i][j - 1]);
				}
			}
		}
		if (f[m][n] == 0) {
			return "-1";
		}
		i = m;
		j = n;
		String str = "";
		while (i > 0 && j > 0) {
			if (chs1[i - 1] == chs2[j - 1]) {
				str = chs1[i - 1] + str;
				i--;
				j--;
			} 
			else if (f[i][j - 1] > f[i - 1][j]) {
				j--;
			} 
			else {
				i--;
			}
		}
		return str;
	}
}