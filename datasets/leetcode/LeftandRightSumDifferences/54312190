class Solution {
	int[] leftRightDifference(int[] nums) {
		int n = nums.length;
		int[] left = new int[n];
		int[] right = new int[n];
		int[] res = new int[n];
		int countleft = 0;
		int countright = 0;
		for (int i = 0; i < n; i++) {
			if (i == 0) {
				left[i] = countleft;
			} 
			else {
				countleft = countleft + nums[i - 1];
				left[i] = countleft;
			}
		}
		for (int i = n - 1; i >= 0; i--) {
			if (i == n - 1) {
				right[i] = 0;
			} 
			else {
				countright = countright + nums[i + 1];
				right[i] = countright;
			}
		}
		for (int i = 0; i < n; i++) {
			if (left[i] - right[i] < 0) {
				res[i] = -1 * (left[i] - right[i]);
			} 
			else {
				res[i] = (left[i] - right[i]);
			}
		}
		return res;
	}
}