class Solution {
	void nextPermutation(int[] nums) {
		int n = nums.length;
		int ind = -1;
		int ind2 = -1;
		for (int i = n - 2; i >= 0; i--) {
			if (nums[i] < nums[i + 1]) {
				ind = i;
				break;
			}
		}
		if (ind == -1) {
			reverse(nums,0);
		} 
		else {
			for (int i = n - 1; i >= 0; i--) {
				if (nums[i] > nums[ind]) {
					ind2 = i;
					break;
				}
			}
			swap(nums,ind,ind2);
			reverse(nums,ind + 1);
		}
	}
	void reverse(int[] nums, int start) {
		int i = start;
		int j = nums.length - 1;
		while (i < j) {
			swap(nums,i,j);
			i++;
			j--;
		}
	}
	void swap(int[] nums, int i, int j) {
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}