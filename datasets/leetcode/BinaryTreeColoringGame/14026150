class Solution {
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		TreeNode nodex = search(root,x);
		int right = countnodes(nodex.right);
		int left = countnodes(nodex.left);
		int up = (n - 1) - left;
		System.out.println(right + " ");
		if (up > n - up) {
			return true;
		} 
		else if (left > n - left) {
			return true;
		} 
		else if (right > n - right) {
			return true;
		}
		return false;
	}
	int countnodes(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int count = 1;
		if (root.left != null) {
			count += countnodes(root.left);
		}
		if (root.right != null) {
			count += countnodes(root.right);
		}
		return count;
	}
	TreeNode search(TreeNode root, int x) {
		if (root.val == x) {
			return root;
		}
		if (root.left != null) {
			TreeNode res = search(root.left,x);
			if (res != null) {
				return res;
			}
		}
		if (root.right != null) {
			TreeNode res = search(root.right,x);
			if (res != null) {
				return res;
			}
		}
		return null;
	}
}