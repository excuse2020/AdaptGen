class Solution {
	ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		Deque<TreeNode> deque = new LinkedList<>();
		if (pRoot == null) {
			return result;
		}
		deque.offer(pRoot);
		while (!deque.isEmpty()) {
			ArrayList<Integer> result1 = new ArrayList<>();
			int length = deque.size();
			while (length > 0) {
				TreeNode now = deque.poll();
				result1.add(now.val);
				if (now.left != null) {
					deque.offer(now.left);
				}
				if (now.right != null) {
					deque.offer(now.right);
				}
				length--;
			}
			result.add(result1);
		}
		return result;
	}
}