class Solution {
	void backtrack(List<String> result, Map<Character, String> phoneMap, String digits, String current, int index) {
		if (index == digits.length()) {
			result.add(current);
			return;
		}
		char digit = digits.charAt(index);
		String letters = phoneMap.get(digit);
		for (int i = 0; i < letters.length(); i++) {
			backtrack(result,phoneMap,digits,current + letters.charAt(i),index + 1);
		}
	}
	List<String> letterCombinations(String digits) {
		List<String> result = new ArrayList<>();
		if (digits == null || digits.length() == 0) {
			return result;
		}
		Map<Character, String> phoneMap = new HashMap<>();
	}
}