class Solution {
	int maxDotProduct(int[] nums1, int[] nums2) {
		int[][] t = new int[nums1.length + 1][nums2.length + 1];
		for (int[] temp: t) {	
			Arrays.fill(temp,Integer.MIN_VALUE);
		}
		int x = solve(nums1,nums2,0,0,t);
		if (x == 0) {
			Arrays.sort(nums1);
			Arrays.sort(nums2);
			if (nums1[0] < 0) {
				return nums1[nums1.length - 1] * nums2[0];
			} 
			else {
				return nums2[nums1.length - 1] * nums1[0];
			}
		}
		return x;
	}
	int solve(int[] nums1, int[] nums2, int i, int j, int[][] t) {
		if (i == nums1.length || j == nums2.length) {
			return 0;
		}
		if (t[i][j] != Integer.MIN_VALUE) {
			return t[i][j];
		}
		int pickboth = (nums1[i] * nums2[j]) + solve(nums1,nums2,i + 1,j + 1,t);
		int pick1 = solve(nums1,nums2,i,j + 1,t);
		int pick2 = solve(nums1,nums2,i + 1,j,t);
		return t[i][j] = Math.max(Math.max(pick1,pick2),pickboth);
	}
}