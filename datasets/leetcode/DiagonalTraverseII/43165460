class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		LinkedHashMap<Integer, List<Integer>> map = new LinkedHashMap<>();
		int size = 0;
		for (int i = 0; i < nums.size(); i++) {
			for (int j = 0; j < nums.get(i).size(); j++) {
				int sum = i + j;
				List<Integer> arr;
				if (map.getOrDefault(sum,null) != null) {
					arr = map.get(sum);
				} 
				else {
					arr = new ArrayList<>();
				}
				size++;
				arr.add(nums.get(i).get(j));
				map.put(sum,arr);
			}
		}
		int[] res = new int[size];
		int index = 0;
		for (int i: map.keySet()) {	
			List<Integer> arr = map.get(i);
			for (int j = arr.size() - 1; j >= 0; j--) {
				res[index] = arr.get(j);
				index++;
			}
		}
		return res;
	}
}