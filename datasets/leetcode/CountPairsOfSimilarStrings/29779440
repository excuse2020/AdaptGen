class Solution {
	int getPair(int n) {
		int cnt = 0;
		for (int i = 1; i < n; i++) {
			cnt += i;
		}
		return cnt;
	}
	String getString(char[] arr) {
		String str = "";
		Arrays.sort(arr);
		str += arr[0];
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] != arr[i - 1]) {
				str += arr[i];
			}
		}
		return str;
	}
	int similarPairs(String[] words) {
		HashMap<String, Integer> map = new HashMap<>();
		String str = "";
		int cnt = 0;
		for (int i = 0; i < words.length; i++) {
			str = getString(words[i].toCharArray());
			map.put(str,map.getOrDefault(str,0) + 1);
		}
		for (String s: map.keySet()) {	
			int temp = map.get(s);
			if (temp > 1) {
				cnt += getPair(temp);
			}
		}
		return cnt;
	}
}