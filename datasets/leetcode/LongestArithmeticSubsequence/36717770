class Solution {
	int longestArithSeqLength(int[] nums) {
		int[][] dp = new int[nums.length][1003];
		for (int[] d: dp) {	
			Arrays.fill(d,-1);
		}
		return solve(nums,0,-501,dp);
	}
	int solve(int[] nums, int ind, int diff, int[][] dp) {
		if (ind >= nums.length) {
			return 0;
		}
		if (dp[ind][diff + 501] != -1) {
			return dp[ind][diff + 501];
		}
		int max = 1;
		if (diff == -501) {
			for (int i = ind + 1; i < nums.length; i++) {
				int a = 1 + solve(nums,i,nums[i] - nums[ind],dp);
				int b = solve(nums,i,diff,dp);
				max = Math.max(max,Math.max(a,b));
			}
		} 
		else {
			for (int i = ind + 1; i < nums.length; i++) {
				if (nums[i] - nums[ind] == diff) {
					max = Math.max(max,1 + solve(nums,i,diff,dp));
				}
			}
		}
		return dp[ind][diff + 501] = max;
	}
}