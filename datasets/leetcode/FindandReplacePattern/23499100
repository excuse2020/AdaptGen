class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		double check = getCheck(pattern);
		List<String> ans = new ArrayList<>();
		for (String word: words) {	
			if (getCheck(word) == check) {
				ans.add(word);
			}
		}
		return ans;
	}
	double getCheck(String s) {
		double check = 0;
		Map<Character, Integer> map = new HashMap<>();
		int nthChar = 1;
		char ch;
		for (int i = 0; i < s.length(); i++) {
			ch = s.charAt(i);
			if (!map.containsKey(ch)) {
				nthChar++;
				map.put(ch,nthChar);
				check += Math.pow(i + 1,nthChar);
			} 
			else {
				check += Math.pow(i + 1,map.get(ch));
			}
		}
		return check;
	}
}