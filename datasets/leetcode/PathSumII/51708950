class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	List<Integer> ls = new ArrayList<>();
	void dfs(TreeNode root, int sum) {
		if (root == null) {
			return;
		}
		ls.add(root.val);
		if (root.left == null && root.right == null && root.val == sum) {
			ans.add(new ArrayList<>(ls));
		}
		dfs(root.left,sum - root.val);
		dfs(root.right,sum - root.val);
		ls.remove(ls.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		dfs(root,targetSum);
		return ans;
	}
}