class Solution {
	int longestStrChain(String[] words) {
		Map<String, Integer> dp = new HashMap<>();
		Arrays.sort(words,new Comparator<>());
		int ans = 1;
		for (String word: words) {	
			dp.put(word,1);
			for (int k = 0; k < word.length(); k++) {
				String subsequence = word.substring(0,k) + word.substring(k + 1,word.length());
				if (dp.containsKey(subsequence)) {
					dp.put(word,Math.max(dp.get(word),dp.get(subsequence) + 1));
				}
			}
			ans = Math.max(dp.get(word),ans);
		}
		return ans;
	}
}