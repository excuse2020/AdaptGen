class Solution {
	int ans = 0;
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		solve(root);
		return ans;
	}
	int solve(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = solve(root.left);
		int right = solve(root.right);
		int left_same_value_edges = root.left != null && root.left.val == root.val ? left + 1 : 0;
		int right_same_value_edges = root.right != null && root.right.val == root.val ? right + 1 : 0;
		int possible_stagnent = left_same_value_edges + right_same_value_edges;
		ans = Math.max(ans,possible_stagnent);
		return Math.max(left_same_value_edges,right_same_value_edges);
	}
}