class Solution {
	TreeLinkNode GetNext(TreeLinkNode pNode) {
		if (pNode == null) {
			return null;
		}
		if (pNode.right == null && pNode.next == null) {
			return null;
		}
		if (pNode.right != null) {
			if (pNode.right.left != null) {
				pNode = pNode.right;
				while (pNode.left != null) {
					pNode = pNode.left;
				}
				return pNode;
			} 
			else {
				return pNode.right;
			}
		} 
		else if (pNode == pNode.next.right) {
			TreeLinkNode temp = new TreeLinkNode(-1);
			temp = pNode.next;
			if (temp == temp.next.left) {
				return temp.next;
			} 
			else {
				while (temp.next != null) {
					temp = temp.next;
				}
				TreeLinkNode leaf = new TreeLinkNode(-1);
				if (temp.right != null) {
					leaf = temp.right;
					while (leaf.right != null || leaf.left != null) {
						if (leaf.right != null) {
							leaf = leaf.right;
						}
						if (leaf.left != null) {
							leaf = leaf.left;
						}
					}
					if (leaf.equals(pNode)) {
						return null;
					}
				}
			}
			return temp;
		} 
		else {
			return pNode.next;
		}
	}
}