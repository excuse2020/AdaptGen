class Solution {
	int nextGreaterElement(int n) {
		char[] digits = Integer.toString(n).toCharArray();
		int len = digits.length;
		int i = len - 2;
		while (i >= 0 && digits[i] >= digits[i + 1]) {
			i--;
		}
		if (i < 0) {
			return -1;
		}
		int j = len - 1;
		while (j >= 0 && digits[j] <= digits[i]) {
			j--;
		}
		swap(digits,i,j);
		reverse(digits,i + 1,len - 1);
		long nextGreater = Long.parseLong(new String(digits));
		return (nextGreater <= Integer.MAX_VALUE) ? (int) nextGreater : -1;
	}
	void reverse(char[] digits, int start, int end) {
		while (start < end) {
			swap(digits,start,end);
			start++;
			end--;
		}
	}
	void swap(char[] digits, int i, int j) {
		char temp = digits[i];
		digits[i] = digits[j];
		digits[j] = temp;
	}
}