class Solution {
	int maxPoints(int[][] points) {
		if (points.length <= 2) {
			return points.length;
		}
		int maxPoints = 0;
		for (int i = 0; i < points.length; i++) {
			int samePointCount = 1;
			for (int j = i + 1; j < points.length; j++) {
				int deltaX = points[i][0] - points[j][0];
				int deltaY = points[i][1] - points[j][1];
				if (deltaX == 0 && deltaY == 0) {
					samePointCount++;
				} 
				else {
					int count = 2;
					for (int k = j + 1; k < points.length; k++) {
						int deltaX1 = points[i][0] - points[k][0];
						int deltaY1 = points[i][1] - points[k][1];
						if (deltaX * deltaY1 == deltaX1 * deltaY) {
							count++;
						}
					}
					maxPoints = Math.max(maxPoints,count);
				}
			}
			maxPoints = Math.max(maxPoints,samePointCount);
		}
		return maxPoints;
	}
}