class Solution {
	int sumRootToLeaf(TreeNode root) {
		int result = 0;
		if (root == null) {
			return result;
		}
		Queue<TreeNode> Nodequeue = new LinkedList<>();
		Queue<Integer> Numberqueue = new LinkedList<>();
		Nodequeue.add(root);
		Numberqueue.add(root.val);
		while (!Nodequeue.isEmpty()) {
			int size = Nodequeue.size();
			for (int i = 0; i < size; i++) {
				TreeNode currentNode = Nodequeue.remove();
				int currentNumber = Numberqueue.remove();
				if (currentNode.left == null && currentNode.right == null) {
					result += currentNumber;
				}
				if (currentNode.left != null) {
					Nodequeue.add(currentNode.left);
					Numberqueue.add(currentNumber * 2 + currentNode.left.val);
				}
				if (currentNode.right != null) {
					Nodequeue.add(currentNode.right);
					Numberqueue.add(currentNumber * 2 + currentNode.right.val);
				}
			}
		}
		return result;
	}
}