class Solution {
	boolean isAlienSorted(String[] words, String order) {
		HashMap<Character, Integer> alphabetOrderMap = new HashMap<>();
		for (int i = 0; i < order.length(); i++) {
			alphabetOrderMap.put(order.charAt(i),i);
		}
		for (int i = 0; i < words.length - 1; i++) {
			if (!isOrdered(words[i],words[i + 1],alphabetOrderMap)) {
				return false;
			}
		}
		return true;
	}
	boolean isOrdered(String word1, String word2, HashMap<Character, Integer> alphabetOrderMap) {
		int len1 = word1.length();
		int len2 = word2.length();
		int minLength = Math.min(len1,len2);
		for (int i = 0; i < minLength; i++) {
			char char1 = word1.charAt(i);
			char char2 = word2.charAt(i);
			if (char1 != char2) {
				return alphabetOrderMap.get(char1) < alphabetOrderMap.get(char2);
			}
		}
		return len1 <= len2;
	}
}