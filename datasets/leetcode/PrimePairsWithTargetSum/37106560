class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean[] st = new boolean[n + 1];
		int[] primes = new int[n + 1];
		int cnt = 0;
		for (int i = 2; i <= n; i++) {
			if (!st[i]) {
				primes[cnt++] = i;
			}
			for (int j = 0; primes[j] <= n / i; j++) {
				st[primes[j] * i] = true;
				if (i % primes[j] == 0) {
					break;
				}
			}
		}
		Set<Integer> set = new HashSet<>();
		for (int i = 0; i < cnt; i++) {
			set.add(primes[i]);
		}
		List<List<Integer>> ret = new ArrayList<>();
		for (int i = 2; i <= n / 2; i++) {
			if (set.contains(i) && set.contains(n - i)) {
				ret.add(Arrays.asList(i,n - i));
			}
		}
		return ret;
	}
}