class Solution {
	boolean VerifySquenceOfBST(int[] sequence) {
		if (sequence.length == 0) {
			return false;
		}
		if (sequence.length == 1) {
			return true;
		}
		return judgeBST(sequence,0,sequence.length - 1);
	}
	boolean judgeBST(int[] sequence, int l, int r) {
		if (l == r) {
			return true;
		}
		int i;
		for (i = l; i < r; i++) {
			if (sequence[i] >= sequence[r]) {
				break;
			}
		}
		int mid = i;
		for (; i < r; i++) {
			if (sequence[i] < sequence[r]) {
				return false;
			}
		}
		if (mid == l) {
			return judgeBST(sequence,mid,r - 1);
		} 
		else if (mid == r) {
			return judgeBST(sequence,l,mid - 1);
		} 
		else {
			return judgeBST(sequence,l,mid - 1) && judgeBST(sequence,mid,r - 1);
		}
	}
}