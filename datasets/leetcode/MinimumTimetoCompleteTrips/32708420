class Solution {
	boolean is_possible(long possible_min, int time, int totalTrips) {
		long count = 0;
		for (int t: time) {	
			count += (long) (possible_min / t);
		}
		return (count >= totalTrips);
	}
	long minimumTime(int[] time, int totalTrips) {
		long mini = time[0];
		for (int t: time) {	
			mini = Math.min(t,mini);
		}
		long low = 1, high = mini * totalTrips;
		long ans = high;
		while (low <= high) {
			long mid = (low + (high - low) / 2);
			if (is_possible(mid,time,totalTrips)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}