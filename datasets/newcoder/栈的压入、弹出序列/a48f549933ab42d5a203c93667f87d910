class Solution {
	boolean IsPopOrder(int[] pushV, int[] popV) {
		int n = pushV.length;
		Stack<Integer> s = new Stack<Integer>();
		int top1 = pushV.length;
		int top2 = popV.length;
		int top = 0;
		int begin1 = 0;
		int begin2 = 0;
		int count = 0;
		while (begin1 < top1) {
			s.push(pushV[begin1]);
			while (!s.empty() && s.peek() == popV[begin2]) {
				s.pop();
				begin2++;
			}
			begin1++;
		}
		if (s.empty() && begin2 < top2) {
			return false;
		} 
		else if (!s.empty() && begin2 < top2) {
			while (!s.empty()) {
				if (s.peek() == popV[begin2]) {
					s.pop();
					begin2++;
				} 
				else {
					return false;
				}
			}
			return true;
		} 
		else {
			return true;
		}
	}
}