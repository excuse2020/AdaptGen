class Solution {
	void dfs(int node, boolean[] visited, int[][] isConnected) {
		visited[node] = true;
		for (int j = 0; j < isConnected.length; j++) {
			if (isConnected[node][j] == 1 && !visited[j]) {
				dfs(j,visited,isConnected);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int v = isConnected.length;
		int provinces = 0;
		boolean[] visited = new boolean[v];
		for (int i = 0; i < v; i++) {
			if (!visited[i]) {
				dfs(i,visited,isConnected);
				provinces++;
			}
		}
		return provinces;
	}
}