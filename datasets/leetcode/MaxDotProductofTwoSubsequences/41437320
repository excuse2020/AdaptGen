class Solution {
	int calculateMaxDot(int[][] dp, int r, int c) {
		for (int i = r - 2; i >= 0; i--) {
			dp[i][c - 1] = Math.max(dp[i][c - 1],dp[i + 1][c - 1]);
		}
		for (int i = c - 2; i >= 0; i--) {
			dp[r - 1][i] = Math.max(dp[r - 1][i],dp[r - 1][i + 1]);
		}
		for (int i = r - 2; i >= 0; i--) {
			for (int j = c - 2; j >= 0; j--) {
				dp[i][j] = Math.max(dp[i][j],dp[i][j] + dp[i + 1][j + 1]);
				dp[i][j] = Math.max(dp[i][j],dp[i][j + 1]);
				dp[i][j] = Math.max(dp[i][j],dp[i + 1][j]);
			}
		}
		return dp[0][0];
	}
	int maxDotProduct(int[] nums1, int[] nums2) {
		int[][] dp = new int[nums1.length][nums2.length];
		for (int i = 0; i < nums1.length; i++) {
			for (int j = 0; j < nums2.length; j++) {
				dp[i][j] = nums1[i] * nums2[j];
			}
		}
		return calculateMaxDot(dp,nums1.length,nums2.length);
	}
}