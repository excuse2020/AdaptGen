class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int maxH = horizontalCuts[0];
		int maxV = verticalCuts[0];
		for (int i = 1; i < horizontalCuts.length; i++) {
			int cut = horizontalCuts[i] - horizontalCuts[i - 1];
			if (cut > maxH) {
				maxH = cut;
			}
		}
		maxH = Math.max(h - horizontalCuts[horizontalCuts.length - 1],maxH);
		for (int i = 1; i < verticalCuts.length; i++) {
			int cut = verticalCuts[i] - verticalCuts[i - 1];
			if (cut > maxV) {
				maxV = cut;
			}
		}
		maxV = Math.max(w - verticalCuts[verticalCuts.length - 1],maxV);
		long temp = (long) maxH * (long) maxV;
		temp %= 1000000007;
		return (int) temp;
	}
}