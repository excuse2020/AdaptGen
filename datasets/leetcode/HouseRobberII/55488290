class Solution {
	int find(int[] nums) {
		int n = nums.length;
		int prev2 = 0;
		int prev = nums[0];
		for (int i = 1; i < n; i++) {
			int take = nums[i] + prev2;
			int nottake = 0 + prev;
			int curr = Math.max(take,nottake);
			prev2 = prev;
			prev = curr;
		}
		return prev;
	}
	int rob(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		int[] temp1 = new int[nums.length - 1];
		int[] temp2 = new int[nums.length - 1];
		for (int i = 0; i < nums.length - 1; i++) {
			temp1[i] = nums[i + 1];
		}
		for (int i = 0; i < nums.length - 1; i++) {
			temp2[i] = nums[i];
		}
		int ans = find(temp1);
		int ans1 = find(temp2);
		return Math.max(ans,ans1);
	}
}