class Solution {
	int minFallingPathSum(int[][] matrix) {
		if (matrix[0].length > 1) {
			for (int i = matrix.length - 2; i >= 0; i--) {
				for (int j = 0; j < matrix[0].length; j++) {
					if (j == 0) {
						matrix[i][j] = matrix[i][j] + Math.min(matrix[i + 1][j],matrix[i + 1][j + 1]);
					} 
					else if (j == matrix[0].length - 1) {
						matrix[i][j] = matrix[i][j] + Math.min(matrix[i + 1][j],matrix[i + 1][j - 1]);
					} 
					else {
						matrix[i][j] = matrix[i][j] + Math.min(Math.min(matrix[i + 1][j + 1],matrix[i + 1][j - 1]),matrix[i + 1][j]);
					}
				}
			}
		}
		for (int i = 0; i < matrix[0].length - 1; i++) {
			if (matrix[0][i] < matrix[0][i + 1]) {
				int temp = matrix[0][i];
				matrix[0][i] = matrix[0][i + 1];
				matrix[0][i + 1] = temp;
			}
		}
		return matrix[0][matrix[0].length - 1];
	}
}