class Solution {
	boolean check(int[] time, long mid, int totalTrips) {
		long trip = 0;
		for (int i = 0; i < time.length; i++) {
			trip = trip + (mid / time[i]);
			if (trip >= totalTrips) {
				return true;
			}
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		int n = time.length;
		Arrays.sort(time);
		long l = time[0];
		long r = (long) time[n - 1] * (long) totalTrips;
		while (l < r) {
			long mid = l + (r - l) / 2;
			if (check(time,mid,totalTrips) == true) {
				r = mid;
			} 
			else {
				l = mid + 1;
			}
		}
		return l;
	}
}