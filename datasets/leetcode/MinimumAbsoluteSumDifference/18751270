class Solution {
	int minAbsoluteSumDiff(int[] nums1, int[] nums2) {
		TreeSet<Integer> set = new TreeSet<>();
		long sum = 0;
		int n = nums1.length;
		for (int i = 0; i < n; i++) {
			sum += (int) Math.abs(nums1[i] - nums2[i]);
			set.add(nums1[i]);
		}
		long result = sum;
		for (int i = 0; i < n; i++) {
			Integer fl = set.floor(nums2[i]), ce = set.ceiling(nums2[i]);
			if (fl != null) {
				result = Math.min(result,sum - (Math.abs(nums2[i] - nums1[i]) - Math.abs(nums2[i] - fl)));
			}
			if (ce != null) {
				result = Math.min(result,sum - (Math.abs(nums2[i] - nums1[i]) - Math.abs(nums2[i] - ce)));
			}
		}
		return Integer.parseInt((result % ((long) 1e9 + 7)) + "");
	}
}