class Solution {
	boolean isFine(Map<Character, Integer> map) {
		if (map.size() > 2) {
			return false;
		}
		if (map.size() == 1) {
			return true;
		}
		int[] num = new int[2];
		int i = 0;
		for (Map.Entry<Character, Integer> entry: map.entrySet()) {	
			num[i] = entry.getValue();
			i++;
		}
		if (num[0] > 1 && num[1] > 1) {
			return false;
		}
		return true;
	}
	boolean isOk(String text, int start, int end, Map<Character, Integer> map, int[] count) {
		char[] arr = new char[2];
		int i = 0;
		for (Map.Entry<Character, Integer> entry: map.entrySet()) {	
			arr[i] = entry.getKey();
			i++;
		}
		char less, more;
		if (map.get(arr[0]) <= map.get(arr[1])) {
			less = arr[0];
			more = arr[1];
		} 
		else {
			less = arr[1];
			more = arr[0];
		}
	}
	int maxRepOpt1(String text) {
		int[] count = new int[26];
	}
}