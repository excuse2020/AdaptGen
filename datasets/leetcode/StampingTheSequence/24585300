class Solution {
	boolean canReplace(char[] tchar, int pos, char[] schar) {
		int i = 0;
	}
	int[] movesToStamp(String stamp, String target) {
		char[] tchar = target.toCharArray();
		char[] schar = stamp.toCharArray();
		int count = 0, l = target.length(), n = stamp.length();
		boolean vis = new boolean[l];
		List<Integer> al = new ArrayList<>();
		while (count != l) {
			boolean didchange = false;
			for (int i = 0; i <= l - n; i++) {
				if (!vis[i] && canReplace(tchar,i,schar)) {
					count = replace(tchar,i,n,count);
					vis[i] = true;
					didchange = true;
					al.add(i);
					if (count == l) {
						break;
					}
				}
			}
			if (!didchange) {
				return new int[0];
			}
		}
		int res = new int[al.size()];
		int k = 0;
		for (int i = al.size() - 1; i >= 0; i--) {
			res[k++] = al.get(i);
		}
		return res;
	}
	int replace(char[] tchar, int pos, int len, int count) {
		int i = 0;
	}
}