class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q = new ArrayDeque<>();
		q.add(root);
		while (q.size() > 0) {
			List<Integer> currentLevel = new ArrayList<>();
			int levelSize = q.size();
			for (int i = 0; i < levelSize; i++) {
				TreeNode x = q.poll();
				currentLevel.add(x.val);
				if (x.left != null) {
					q.add(x.left);
				}
				if (x.right != null) {
					q.add(x.right);
				}
			}
			result.add(currentLevel);
		}
		Collections.reverse(result);
		return result;
	}
}