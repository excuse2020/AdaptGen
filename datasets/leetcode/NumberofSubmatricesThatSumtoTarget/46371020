class Solution {
	int c;
	int jawab;
	HashMap<Integer, Integer> m;
	int r;
	int numSubmatrixSumTarget(int[][] matrix, int target) {
		jawab = 0;
		r = matrix.length;
		c = matrix[0].length;
		for (int[] p: matrix) {	
			for (int j = 1; j < c; j++) {
				p[j] += p[j - 1];
			}
		}
		for (int ic = 0; ic < c; ic++) {
			for (int j = ic; j < c; j++) {
				m = new HashMap<>();
				m.put(0,1);
				int jor = 0;
				for (int p = 0; p < r; p++) {
					jor += matrix[p][j];
					if (ic > 0) {
						jor -= matrix[p][ic - 1];
					}
					jawab += m.getOrDefault(jor - target,0);
					m.merge(jor,1,);
				}
			}
		}
		return jawab;
	}
}