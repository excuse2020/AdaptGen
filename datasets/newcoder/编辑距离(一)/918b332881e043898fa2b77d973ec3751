class Solution {
	int editDistance(String str1, String str2) {
		int[][] dp = new int[2][str2.length() + 1];
		for (int i = 1; i <= str2.length(); i++) {
			dp[0][i] = i;
		}
		for (int i = 1; i <= str1.length(); i++) {
			for (int j = 1; j <= str2.length(); j++) {
				if (str1.charAt(i - 1) == str2.charAt(j - 1)) {
					if (j - 1 == 0) {
						dp[i % 2][j] = i - 1;
					} 
					else {
						dp[i % 2][j] = dp[(i + 1) % 2][j - 1];
					}
				} 
				else {
					if (j - 1 == 0) {
						dp[i % 2][j] = Math.min(dp[(i + 1) % 2][j] + 1,i);
					} 
					else {
						dp[i % 2][j] = Math.min(dp[(i + 1) % 2][j] + 1,Math.min(dp[(i + 1) % 2][j - 1] + 1,dp[i % 2][j - 1] + 1));
					}
				}
			}
		}
		return dp[str1.length() % 2][str2.length()];
	}
}