class Solution {
	int semiOrderedPermutation(int[] nums) {
		int n = nums.length;
		int a = 0, b = 0, c = 0;
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				a = i;
			}
		}
		while (nums[0] != 1) {
			int temp = nums[a - 1];
			nums[a - 1] = nums[a];
			nums[a] = temp;
			a = a - 1;
			c++;
		}
		for (int j = 0; j < n; j++) {
			if (nums[j] == n) {
				b = j;
			}
		}
		while (nums[n - 1] != n && b + 1 < n) {
			int t = nums[b + 1];
			nums[b + 1] = nums[b];
			nums[b] = t;
			b = b + 1;
			c++;
		}
		return c;
	}
}