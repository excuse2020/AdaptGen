class Solution {
	int maximumSum(int[] nums) {
		HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
		int max = -1;
		for (int x: nums) {	
			if (!map.containsKey(sum(x))) {
				map.put(sum(x),new ArrayList<Integer>());
			}
			map.get(sum(x)).add(x);
		}
		for (Integer x: map.keySet()) {	
			int sum = 0;
			System.out.println(map.get(x));
			if (map.get(x).size() > 1) {
				Collections.sort(map.get(x),(a, b) -> {b - a});
				for (int a = 0; a < 2; a++) {
					sum += map.get(x).get(a);
				}
			}
			max = Math.max(max,sum);
		}
		return max == 0 ? -1 : max;
	}
	int sum(int num) {
		int sum = 0;
		while (num != 0) {
			int d = num % 10;
			num /= 10;
			sum += d;
		}
		return sum;
	}
}