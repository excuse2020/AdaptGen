class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean prime = new boolean[n + 1];
		for (int i = 2; i <= n; i++) {
			if (prime[i] == true) {
				continue;
			}
			int times = 2;
			while (i * times <= n) {
				prime[i * times] = true;
				times++;
			}
		}
		ArrayList<Integer> arr = new ArrayList<>();
		for (int i = 2; i <= n; i++) {
			if (prime[i] == false) {
				arr.add(i);
			}
		}
		int i = 0;
		int j = arr.size() - 1;
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		while (i <= j) {
			if (arr.get(i) + arr.get(j) == n) {
				ArrayList<Integer> sub = new ArrayList<>();
				sub.add(arr.get(i));
				sub.add(arr.get(j));
				ans.add(sub);
				j--;
			} 
			else if (arr.get(i) + arr.get(j) > n) {
				j--;
			} 
			else {
				i++;
			}
		}
		return ans;
	}
}