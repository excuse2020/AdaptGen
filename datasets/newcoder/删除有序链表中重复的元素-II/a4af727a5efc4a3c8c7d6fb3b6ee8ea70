class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode newHead = new ListNode(-1);
		newHead.next = head;
		ListNode currentNode = head;
		ListNode pre = newHead;
		while (currentNode != null) {
			ListNode next = currentNode.next;
			boolean needDel = false;
			if (next != null && currentNode.val == next.val) {
				needDel = true;
			}
			if (!needDel) {
				pre = currentNode;
				currentNode = currentNode.next;
			} 
			else {
				int value = currentNode.val;
				ListNode toBeDel = currentNode;
				while (toBeDel != null && toBeDel.val == value) {
					next = toBeDel.next;
					pre.next = next;
					toBeDel = next;
				}
				currentNode = pre.next;
			}
		}
		return newHead.next;
	}
}