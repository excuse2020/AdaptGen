class Solution {
	boolean check(int[] nums, int maxop, int mid) {
		int curropt = 0;
		for (int i = 0; i < nums.length; i++) {
			int currballs = nums[i];
			int divider = currballs / mid;
			if (currballs % mid == 0) {
				divider--;
			}
			curropt += divider;
		}
		if (curropt <= maxop) {
			return true;
		} 
		else {
			return false;
		}
	}
	int minimumSize(int[] nums, int maxOperations) {
		int low = 1;
		int high = 0;
		for (int max: nums) {	
			high = Math.max(max,high);
		}
		int p_ans = 0;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (check(nums,maxOperations,mid) == true) {
				p_ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return p_ans;
	}
}