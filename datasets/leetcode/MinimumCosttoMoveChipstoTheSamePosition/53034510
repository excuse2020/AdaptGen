class Solution {
	boolean allEven(int[] arr) {
		boolean flag = false;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 != 0) {
				break;
			}
			flag = true;
		}
		return flag;
	}
	boolean allOdd(int[] arr) {
		boolean flag = false;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 == 0) {
				break;
			}
			flag = true;
		}
		return flag;
	}
	int minCostToMoveChips(int[] position) {
		int ans = 0;
		int odd = 0;
		int even = 0;
		if (allEven(position) || allOdd(position)) {
			ans = 0;
		}
		for (int i = 0; i < position.length; i++) {
			if (position[i] % 2 == 0) {
				even++;
			} 
			else {
				odd++;
			}
		}
		if (even >= odd) {
			ans = odd;
		} 
		else {
			ans = even;
		}
		return ans;
	}
}