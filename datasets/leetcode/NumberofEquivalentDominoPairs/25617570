class Solution {
	int numEquivDominoPairs(int[][] dominoes) {
		for (int i = 0; i < dominoes.length; i++) {
			if (dominoes[i][0] > dominoes[i][1]) {
				int tmp = dominoes[i][1];
				dominoes[i][1] = dominoes[i][0];
				dominoes[i][0] = tmp;
			}
		}
		HashMap<Integer, Integer> hm = new HashMap<>();
		int c = 0;
		for (int i = 0; i < dominoes.length; i++) {
			if (hm.get(dominoes[i][0] * 10 + dominoes[i][1]) == null) {
				hm.put(dominoes[i][0] * 10 + dominoes[i][1],1);
			} 
			else {
				hm.put(dominoes[i][0] * 10 + dominoes[i][1],hm.get(dominoes[i][0] * 10 + dominoes[i][1]) + 1);
			}
		}
		System.out.println(hm);
		for (Map.Entry<Integer, Integer> e: hm.entrySet()) {	
			int k = e.getValue();
			if (k > 1) {
				c += ((k * (k - 1)) / 2);
			}
		}
		return c;
	}
}