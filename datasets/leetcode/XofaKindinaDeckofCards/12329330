class Solution {
	int gcd(int num1, int num2) {
		return num1 == 0 ? num2 : gcd(num2 % num1,num1);
	}
	boolean hasGroupsSizeX(int[] deck) {
		HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();
		int maxCommon = 0;
		for (int i = 0; i < deck.length; i++) {
			int temp = count.get(deck[i]) == null ? 1 : count.get(deck[i]) + 1;
			count.put(deck[i],temp);
		}
		maxCommon = count.get(deck[0]);
		for (int value: count.values()) {	
			maxCommon = gcd(maxCommon,value);
		}
		if (maxCommon >= 2) {
			return true;
		}
		return false;
	}
}