class Solution {
	int MOD = 1000000007;
	int count(String num1, String num2, int min_sum, int max_sum) {
		int n1 = num1.length();
		int n2 = num2.length();
		int[][][] dp = new int[101][500][2];
		for (int i = 0; i < 101; i++) {
			for (int j = 0; j < 500; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		int result = solve(num2,n2,min_sum,max_sum,true,0,dp);
		for (int i = 0; i < 101; i++) {
			for (int j = 0; j < 500; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		result -= solve(num1,n1,min_sum,max_sum,true,0,dp);
		int v = digitSum(num1);
		if (v <= max_sum && v >= min_sum) {
			result++;
		}
		result %= MOD;
		return (result + MOD) % MOD;
	}
	int digitSum(String x) {
		int sum = 0;
		int i = 0;
	}
	int solve(String num, int n, int min, int max, boolean tight, int cursum, int dp) {
		if (n == 0) {
			if (cursum >= min && cursum <= max) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		if (dp[n][cursum][tight == true ? 1 : 0] != -1) {
			return dp[n][cursum][tight == true ? 1 : 0];
		}
		int ans = 0;
		int end;
	}
}