class Solution {
	int helper(int[][] dp, String s, String t, int n, int m, int i, int j) {
		if (j == m) {
			return 1;
		}
		if (n - i < m - j) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int ans = helper(dp,s,t,n,m,(i + 1),j);
		if (s.charAt(i) == t.charAt(j)) {
			ans += helper(dp,s,t,n,m,(i + 1),(j + 1));
		}
		return dp[i][j] = ans;
	}
	int numDistinct(String s, String t) {
		int n = s.length();
		int m = t.length();
		int dp = new int[n][m];
		for (int[] a: dp) {	
			Arrays.fill(a,-1);
		}
		return helper(dp,s,t,n,m,0,0);
	}
}