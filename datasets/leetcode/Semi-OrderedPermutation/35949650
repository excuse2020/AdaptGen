class Solution {
	int semiOrderedPermutation(int[] nums) {
		int min = Arrays.stream(nums).min().getAsInt();
		int max = Arrays.stream(nums).max().getAsInt();
		if (nums[0] == min && nums[nums.length - 1] == max) {
			return 0;
		}
		int indx1 = 0, indx2 = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == min) {
				indx1 = i;
			}
			if (nums[i] == max) {
				indx2 = i;
			}
		}
		if (indx1 < indx2) {
			return (indx1 + (nums.length - 1) - indx2);
		} 
		else {
			return indx1 + (nums.length - 1) - indx2 - 1;
		}
	}
}