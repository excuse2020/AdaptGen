class Solution {
	void helper(ArrayList<ArrayList<Integer>> adj, int i, boolean[] visited) {
		if (visited[i]) {
			return;
		}
		visited[i] = true;
		for (int neighbour: adj.get(i)) {	
			helper(adj,neighbour,visited);
		}
	}
	int removeStones(int[][] stones) {
		ArrayList<ArrayList<Integer>> adj = new ArrayList();
		for (int[] stone: stones) {	
			adj.add(new ArrayList());
		}
		for (int i = 0; i < stones.length; i++) {
			int x1 = stones[i][0];
			int y1 = stones[i][1];
			for (int j = i + 1; j < stones.length; j++) {
				int x2 = stones[j][0];
				int y2 = stones[j][1];
				if (x1 == x2 || y1 == y2) {
					adj.get(i).add(j);
					adj.get(j).add(i);
				}
			}
		}
		boolean visited = new boolean[stones.length];
		int count = 0;
		for (int i = 0; i < stones.length; i++) {
			if (visited[i]) {
				count++;
			} 
			else {
				helper(adj,i,visited);
			}
		}
		return count;
	}
}