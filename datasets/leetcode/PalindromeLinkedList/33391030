class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null || head.next == null) {
			return true;
		}
		ListNode mid = middleList(head);
		ListNode secondHalf = reverse(mid.next);
		ListNode firstHalf = head;
		while (secondHalf != null) {
			if (firstHalf.val != secondHalf.val) {
				return false;
			}
			firstHalf = firstHalf.next;
			secondHalf = secondHalf.next;
		}
		return true;
	}
	ListNode middleList(ListNode head) {
		ListNode hare = head;
		ListNode turtle = head;
		while (hare.next != null && hare.next.next != null) {
			hare = hare.next.next;
			turtle = turtle.next;
		}
		return turtle;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		ListNode curr = head;
		while (curr != null) {
			ListNode next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}