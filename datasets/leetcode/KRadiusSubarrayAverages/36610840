class Solution {
	int[] getAverages(int[] nums, int k) {
		int n = nums.length;
		int[] ans = new int[n];
		Arrays.fill(ans,Integer.MIN_VALUE);
		if (k == 0) {
			return nums;
		}
		if (n < k || n < k + (k + 1)) {
			Arrays.fill(ans,-1);
			return ans;
		}
		long tempK = (long) k + (long) (k + 1);
		int i = 0;
		int j = k + k;
		long val = 0;
		for (int a = i; a <= j; a++) {
			val += (long) nums[a];
		}
		ans[k] = (int) (val / tempK);
		i++;
		j++;
		k++;
		while (j < n) {
			val = val - nums[i - 1] + nums[j];
			ans[k] = (int) (val / tempK);
			i++;
			j++;
			k++;
		}
		for (int x = 0; x < n; x++) {
			if (ans[x] == Integer.MIN_VALUE) {
				ans[x] = -1;
			}
		}
		return ans;
	}
}