class Solution {
	long countBadPairs(int[] nums) {
		int n = nums.length;
		Map<Integer, Integer> map = new HashMap<>();
		long count = 0;
		for (int i = 0; i < n; i++) {
			map.put(i - nums[i],map.getOrDefault(i - nums[i],0) + 1);
		}
		for (int i = 0; i < n; i++) {
			map.put(i - nums[i],map.get(i - nums[i]) - 1);
			if (map.containsKey(i - nums[i])) {
				count = count + map.get(i - nums[i]);
			}
		}
		return 1L * n / 2 - count;
	}
}