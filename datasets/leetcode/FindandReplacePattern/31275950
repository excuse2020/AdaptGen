class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> ans = new ArrayList<String>();
		for (String a: words) {	
			boolean flag = find_pattern(pattern,a);
			if (flag == true) {
				ans.add(a);
			}
		}
		return ans;
	}
	boolean find_pattern(String pat, String w) {
		Map<Character, Character> pat_map = new HashMap<Character, Character>();
		Map<Character, Character> w_map = new HashMap<Character, Character>();
		for (int i = 0; i < w.length(); i++) {
			if (!pat_map.containsKey(pat.charAt(i))) {
				pat_map.put(pat.charAt(i),w.charAt(i));
			} 
			else {
				char val = pat_map.get(pat.charAt(i));
				if (val != w.charAt(i)) {
					return false;
				}
			}
			if (!w_map.containsKey(w.charAt(i))) {
				w_map.put(w.charAt(i),pat.charAt(i));
			} 
			else {
				char val = w_map.get(w.charAt(i));
				if (val != pat.charAt(i)) {
					return false;
				}
			}
		}
		return true;
	}
}