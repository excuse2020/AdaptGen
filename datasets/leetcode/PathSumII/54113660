class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		pathSum2(root,targetSum,0,new ArrayList<Integer>());
		return ans;
	}
	void pathSum2(TreeNode root, int targetSum, int count, List<Integer> lt) {
		if (root == null) {
			return;
		}
		lt.add(root.val);
		if (root.left == null && root.right == null) {
			if (root.val + count == targetSum) {
				ans.add(new ArrayList<>(lt));
			}
		}
		pathSum2(root.left,targetSum,count + root.val,lt);
		pathSum2(root.right,targetSum,count + root.val,lt);
		lt.remove(lt.size() - 1);
	}
}