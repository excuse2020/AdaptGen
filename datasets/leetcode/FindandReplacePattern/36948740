class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		ArrayList<String> list = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			HashMap<Character, Integer> hm1 = new HashMap<>();
			HashMap<Character, Integer> hm2 = new HashMap<>();
			boolean bool = true;
			for (int j = 0; j < words[0].length(); j++) {
				if (hm1.containsKey(words[i].charAt(j)) && !hm2.containsKey(pattern.charAt(j))) {
					bool = false;
				}
				if (!hm1.containsKey(words[i].charAt(j)) && hm2.containsKey(pattern.charAt(j))) {
					bool = false;
				}
				if (hm1.containsKey(words[i].charAt(j)) && hm2.containsKey(pattern.charAt(j))) {
					if (hm1.get(words[i].charAt(j)) != hm2.get(pattern.charAt(j))) {
						bool = false;
					}
				} 
				else {
					hm1.put(words[i].charAt(j),j);
					hm2.put(pattern.charAt(j),j);
				}
				if (!bool) {
					break;
				}
			}
			if (bool && hm1.size() == hm2.size()) {
				list.add(words[i]);
			}
		}
		return list;
	}
}