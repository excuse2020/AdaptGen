class Solution {
	List<List<Integer>> mergeSimilarItems(int[][] items1, int[][] items2) {
		Map<Integer, Integer> frequency = new HashMap<>();
		for (int i = 0; i < items1.length; i++) {
			frequency.put(items1[i][0],frequency.getOrDefault(items1[i][0],0) + items1[i][1]);
		}
		for (int i = 0; i < items2.length; i++) {
			frequency.put(items2[i][0],frequency.getOrDefault(items2[i][0],0) + items2[i][1]);
		}
		List<List<Integer>> res = new ArrayList<>();
		for (Map.Entry<Integer, Integer> item: frequency.entrySet()) {	
			res.add(Arrays.asList(item.getKey(),item.getValue()));
		}
		Comparator<List<Integer>> f = (a, b) -> {a.get(1) - b.get(1)};
		Collections.sort(res,f);
		Comparator<List<Integer>> s = (a, b) -> {a.get(0) - b.get(0)};
		Collections.sort(res,s);
		return res;
	}
}