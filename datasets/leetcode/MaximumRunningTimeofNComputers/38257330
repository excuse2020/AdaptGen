class Solution {
	boolean ispossible(long time, int n, int[] batteries) {
		long tottime = 0;
		for (int i = 0; i < batteries.length; i++) {
			if (batteries[i] > time) {
				tottime += time;
			} 
			else {
				tottime += batteries[i];
			}
		}
		return tottime >= time * n;
	}
	long maxRunTime(int n, int[] batteries) {
		long left = 0, right = 0, mid, ans = -1;
		for (int i = 0; i < batteries.length; i++) {
			right += batteries[i];
		}
		while (left <= right) {
			mid = left - (left - right) / 2;
			if (ispossible(mid,n,batteries)) {
				ans = mid;
				left = mid + 1;
			} 
			else {
				right = mid - 1;
			}
		}
		return ans;
	}
}