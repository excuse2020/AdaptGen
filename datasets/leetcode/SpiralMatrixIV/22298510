class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] result = new int[m][n];
		int rowBegin = 0;
		int rowEnd = result.length - 1;
		int colBegin = 0;
		int colEnd = result[0].length - 1;
		int index = 0;
		while (rowBegin <= rowEnd && colBegin <= colEnd) {
			for (int i = colBegin; i <= colEnd; i++) {
				if (head == null) {
					result[rowBegin][i] = -1;
					continue;
				}
				result[rowBegin][i] = head.val;
				head = head.next;
			}
			rowBegin++;
			for (int i = rowBegin; i <= rowEnd; i++) {
				if (head == null) {
					result[i][colEnd] = -1;
					continue;
				}
				result[i][colEnd] = head.val;
				head = head.next;
			}
			colEnd--;
			if (rowBegin <= rowEnd) {
				for (int i = colEnd; i >= colBegin; i--) {
					if (head == null) {
						result[rowEnd][i] = -1;
						continue;
					}
					result[rowEnd][i] = head.val;
					head = head.next;
				}
			}
			rowEnd--;
			if (colBegin <= colEnd) {
				for (int i = rowEnd; i >= rowBegin; i--) {
					if (head == null) {
						result[i][colBegin] = -1;
						continue;
					}
					result[i][colBegin] = head.val;
					head = head.next;
				}
			}
			colBegin++;
		}
		return result;
	}
}