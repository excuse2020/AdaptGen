class Solution {
	int maxDivScore(int[] nums, int[] d) {
		ArrayList<Integer> a = new ArrayList<>();
		HashMap<Integer, Integer> b = new HashMap<>();
		for (int i = 0; i < d.length; i++) {
			int c = 0;
			for (int j = 0; j < nums.length; j++) {
				if (nums[j] % d[i] == 0) {
					c++;
				}
			}
			b.put(d[i],c);
		}
		int max = 0;
		for (Map.Entry<Integer, Integer> f: b.entrySet()) {	
			if (max < f.getValue()) {
				max = f.getValue();
			}
		}
		for (Map.Entry<Integer, Integer> f: b.entrySet()) {	
			if (max == f.getValue()) {
				a.add(f.getKey());
			}
		}
		System.out.print(a);
		int v = Integer.MAX_VALUE;
		int g = Integer.MAX_VALUE;
		if (b.size() == a.size()) {
			for (int i = 0; i < a.size(); i++) {
				if (v > a.get(i)) {
					v = a.get(i);
				}
			}
			return v;
		} 
		else if (a.size() != 0) {
			for (int i = 0; i < a.size(); i++) {
				if (g > a.get(i)) {
					g = a.get(i);
				}
			}
			return g;
		}
		return a.get(0);
	}
}