class Solution {
	int helper(String s, String t, int i, int j, int[][] dp) {
		if (t.length() == j) {
			return 1;
		}
		if (s.length() == i) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		int one = 0;
		int two = 0;
		if (s.charAt(i) == t.charAt(j)) {
			one = helper(s,t,i + 1,j + 1,dp) + helper(s,t,i + 1,j,dp);
		} 
		else {
			two = helper(s,t,i + 1,j,dp);
		}
		return dp[i][j] = one + two;
	}
	int numDistinct(String s, String t) {
		int l1 = s.length();
		int l2 = t.length();
		int[][] dp = new int[l1][l2];
		for (int i = 0; i < l1; i++) {
			Arrays.fill(dp[i],-1);
		}
		return helper(s,t,0,0,dp);
	}
}