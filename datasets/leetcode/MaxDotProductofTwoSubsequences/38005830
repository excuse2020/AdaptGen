class Solution {
	int find(int i, int j, int f, int g, int dp, int ct) {
		if (i >= f.length || j >= g.length) {
			if (ct != 0) {
				return 0;
			}
			return Integer.MIN_VALUE;
		}
		if (dp[i][j][ct] != -1) {
			return dp[i][j][ct];
		}
		int a = Integer.MIN_VALUE, b = Integer.MIN_VALUE, c = Integer.MIN_VALUE, d = Integer.MIN_VALUE;
		a = find(i + 1,j + 1,f,g,dp,ct | 1) + f[i] * g[j];
		b = find(i + 1,j + 1,f,g,dp,ct);
		c = find(i + 1,j,f,g,dp,ct);
		d = find(i,j + 1,f,g,dp,ct);
		return dp[i][j][ct] = Math.max(a,Math.max(b,Math.max(c,d)));
	}
	int maxDotProduct(int[] nums1, int[] nums2) {
		int dp = new int[nums1.length][nums2.length][2];
		for (int i = 0; i < nums1.length; i++) {
			for (int j = 0; j < nums2.length; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		return find(0,0,nums1,nums2,dp,0);
	}
}