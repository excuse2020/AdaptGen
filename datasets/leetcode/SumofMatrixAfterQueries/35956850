class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		HashSet<Integer> col = new HashSet<>();
		HashSet<Integer> row = new HashSet<>();
		long sum = 0L;
		for (int i = queries.length - 1; i >= 0; i--) {
			int type = queries[i][0];
			int idx = queries[i][1];
			long val = queries[i][2];
			if (type == 0 && row.contains(idx) == false) {
				long prod = val * (n - col.size());
				sum += prod;
				row.add(idx);
			} 
			else if (type == 1 && col.contains(idx) == false) {
				long prod = val * (n - row.size());
				sum += prod;
				col.add(idx);
			}
		}
		return sum;
	}
}