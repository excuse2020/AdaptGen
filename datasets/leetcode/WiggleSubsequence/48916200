class Solution {
	int solve(boolean isPos, int idx, int[] nums, int n) {
		if (idx >= n - 1) {
			return 0;
		}
		int val1 = 0;
		int val2 = 0;
		if (isPos == false) {
			if (nums[idx + 1] - nums[idx] > 0) {
				val1 = 1 + solve(true,idx + 1,nums,n);
			} 
			else {
				val1 = solve(false,idx + 1,nums,n);
			}
		} 
		else {
			if (nums[idx + 1] - nums[idx] < 0) {
				val2 = 1 + solve(false,idx + 1,nums,n);
			} 
			else {
				val2 = solve(true,idx + 1,nums,n);
			}
		}
		return Math.max(val1,val2);
	}
	int wiggleMaxLength(int[] nums) {
		int n = nums.length;
		return 1 + Math.max(solve(false,0,nums,n),solve(true,0,nums,n));
	}
}