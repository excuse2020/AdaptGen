class Solution {
	String getDirections(TreeNode root, int startValue, int destValue) {
		if (root == null || root.left == null && root.right == null) {
			return "";
		}
		StringBuilder startValuePath = new StringBuilder();
		StringBuilder destValuePath = new StringBuilder();
		boolean flag = getPath(root,startValue,startValuePath);
		boolean flag2 = getPath(root,destValue,destValuePath);
		if (!flag || !flag2) {
			return "";
		}
		StringBuilder resultPath = new StringBuilder();
		startValuePath.replace(0,startValuePath.length(),"U".repeat(startValuePath.length()));
		resultPath.append(startValuePath.toString());
		resultPath.append(destValuePath.toString());
		return resultPath.toString();
		int i = 0;
		while (i < startValuePath.length() && i < destValuePath.length() && startValuePath.charAt(i) == destValuePath.charAt(i)) {
			i++;
		}
		int j = i;
	}
	boolean getPath(TreeNode root, int target, StringBuilder sb) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
}