class Solution {
	boolean IsContinuous(int[] numbers) {
		ArrayList<Integer> listNotZero = new ArrayList<>();
		int zeroNum = 0;
		for (int i = 0; i < numbers.length; i++) {
			if (numbers[i] != 0) {
				listNotZero.add(numbers[i]);
			}
		}
		zeroNum = numbers.length - listNotZero.size();
		Collections.sort(listNotZero);
		for (int i = 0; i < listNotZero.size() - 1; i++) {
			if (listNotZero.get(i) + 1 != listNotZero.get(i + 1) && zeroNum != 0) {
				listNotZero.add(i + 1,listNotZero.get(i) + 1);
				zeroNum--;
			}
		}
		boolean isTrue = true;
		for (int i = 0; i < listNotZero.size() - 1; i++) {
			if (listNotZero.get(i) + 1 != listNotZero.get(i + 1)) {
				isTrue = false;
				break;
			}
		}
		return isTrue;
	}
}