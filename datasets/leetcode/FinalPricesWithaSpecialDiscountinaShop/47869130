class Solution {
	int[] finalPrices(int[] prices) {
		int n = prices.length;
		int res = new int[n];
		res[n - 1] = prices[n - 1];
		Stack<Integer> st = new Stack<>();
		st.push(prices[n - 1]);
		for (int i = n - 2; i >= 0; i--) {
			while (!st.empty() && st.peek() > prices[i]) {
				st.pop();
			}
			if (st.empty()) {
				res[i] = prices[i];
			} 
			else {
				res[i] = prices[i] - st.peek();
			}
			st.push(prices[i]);
		}
		return res;
	}
}