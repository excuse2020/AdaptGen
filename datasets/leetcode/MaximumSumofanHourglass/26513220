class Solution {
	int calcuateHourGlass(int[][] grid, int i, int j) {
		int curSum = 0;
		curSum += grid[i][j];
		curSum += grid[i][j + 1];
		curSum += grid[i][j + 2];
		curSum += grid[i + 1][j + 1];
		curSum += grid[i + 2][j];
		curSum += grid[i + 2][j + 1];
		curSum += grid[i + 2][j + 2];
		return curSum;
	}
	int maxSum(int[][] grid) {
		int m = grid.length, n = grid[0].length;
		int res = 0;
		for (int i = 0; i <= m - 3; i++) {
			for (int j = 0; j <= n - 3; j++) {
				res = Math.max(res,calcuateHourGlass(grid,i,j));
			}
		}
		return res;
	}
}