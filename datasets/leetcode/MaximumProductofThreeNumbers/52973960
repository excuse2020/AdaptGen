class Solution {
	int maximumProduct(int[] nums) {
		int posCount = 0;
		int negCount = 0;
		List<Integer> negList = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < 0) {
				negCount++;
				negList.add(nums[i] * (-1));
			} 
			else {
				posCount++;
			}
		}
		int ans = 1;
		Arrays.sort(nums);
		if (posCount == nums.length || negCount == nums.length) {
			ans = nums[nums.length - 1] * nums[nums.length - 2];
		} 
		else {
			int maxneg = 0;
			if (negCount >= 2) {
				Collections.sort(negList);
				maxneg = negList.get(negList.size() - 1) * negList.get(negList.size() - 2);
			}
			ans = Math.max((nums[nums.length - 1] * nums[nums.length - 2]),nums[nums.length - 1] * maxneg);
		}
		return ans;
	}
}