class Solution {
	String removeDuplicates(String s, int k) {
		Stack<int[]> st = new Stack<>();
		for (int i = 0; i < s.length(); i++) {
			char ch = s.charAt(i);
			int chCode = (int) ch;
			if (i == 0) {
				st.push(new int{chCode, 1});
			} 
			else {
				if (!st.isEmpty() && chCode == st.peek()[0]) {
					int a = st.peek();
					a[1]++;
					if (a[1] == k) {
						st.pop();
					}
				} 
				else {
					st.push(new int{chCode, 1});
				}
			}
		}
		StringBuilder sb = new StringBuilder("");
		while (!st.isEmpty()) {
			int a = st.pop();
			for (int i = 0; i < a[1]; i++) {
				sb.append((char) a[0]);
			}
		}
		return sb.reverse().toString();
	}
}