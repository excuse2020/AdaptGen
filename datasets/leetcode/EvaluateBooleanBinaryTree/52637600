class Solution {
	boolean evaluateTree(TreeNode root) {
		while (root.val != 0 && root.val != 1) {
			traverse(root);
		}
		if (root.val == 1) {
			return true;
		} 
		else {
			return false;
		}
	}
	void traverse(TreeNode root) {
		if (root == null) {
			return;
		}
		traverse(root.left);
		traverse(root.right);
		if (root.left != null && root.right != null) {
			if ((root.left.val == 1 || root.left.val == 0) && (root.right.val == 1 || root.right.val == 0)) {
				if (root.val == 2) {
					if (root.left.val == 0 && root.right.val == 0) {
						root.val = 0;
					} 
					else {
						root.val = 1;
					}
				} 
				else {
					if (root.left.val == 1 && root.right.val == 1) {
						root.val = 1;
					} 
					else {
						root.val = 0;
					}
				}
			}
		}
		return;
	}
}