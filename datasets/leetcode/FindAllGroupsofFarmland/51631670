class Solution {
	void dfs(int[][] land, int i, int j, ArrayList<int[]> list) {
		land[i][j] = -1;
		if (i + 1 < land.length && j + 1 < land[0].length && land[i + 1][j] == 0 && land[i][j + 1] == 0) {
			setList(list,i,j);
		} 
		else if (i + 1 >= land.length && j + 1 < land[0].length && land[i][j + 1] == 0) {
			setList(list,i,j);
		} 
		else if (j + 1 >= land[0].length && i + 1 < land.length && land[i + 1][j] == 0) {
			setList(list,i,j);
		} 
		else if (i + 1 >= land.length && j + 1 >= land[0].length) {
			setList(list,i,j);
		} 
		else {
			if (i + 1 < land.length && land[i + 1][j] == 1) {
				dfs(land,i + 1,j,list);
			}
			if (j + 1 < land[0].length && land[i][j + 1] == 1) {
				dfs(land,i,j + 1,list);
			}
		}
	}
	int[][] findFarmland(int[][] land) {
		ArrayList<int[]> list = new ArrayList<>();
		for (int i = 0; i < land.length; i++) {
			for (int j = 0; j < land[0].length; j++) {
				if (land[i][j] == 1) {
					list.add(new int[4]);
					list.get(list.size() - 1)[0] = i;
					list.get(list.size() - 1)[1] = j;
					dfs(land,i,j,list);
				}
			}
		}
		int i = 0;
		int res = new int[list.size()][4];
		for (int[] arr: list) {	
			res[i][0] = arr[0];
			res[i][1] = arr[1];
			res[i][2] = arr[2];
			res[i++][3] = arr[3];
		}
		return res;
	}
	void setList(ArrayList<int[]> list, int i, int j) {
		list.get(list.size() - 1)[2] = i;
		list.get(list.size() - 1)[3] = j;
	}
}