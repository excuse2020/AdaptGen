class Solution {
	int atMostNGivenDigitSet(String[] digits, int n) {
		int no_digits = (int) Math.floor(Math.log10(n)) + 1 - 1;
		System.out.println(no_digits);
		int output = 0;
		int power_term = digits.length;
		int power_expo = no_digits;
		int power_output = 1;
		while (power_expo != 0) {
			if ((power_expo & 1) == 1) {
				power_output *= power_term;
			}
			power_expo = power_expo >> 1;
			power_term *= power_term;
		}
		if (digits.length > 1) {
			output = (digits.length * (power_output - 1)) / (digits.length - 1);
		} 
		else {
			output = no_digits;
		}
		int div = 1;
		for (int i = 0; i < no_digits; i++) {
			div *= 10;
		}
		boolean flag = false;
		int j = no_digits;
		int digit = n / div;
		flag = false;
		int count = 0;
		int i = 0;
	}
}