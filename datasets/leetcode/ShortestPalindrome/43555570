class Solution {
	boolean isPalindrome(String s, int left, int right) {
		if (s == null || s.isEmpty() || s.length() <= 1) {
			return true;
		}
		while (left < right) {
			if (s.charAt(right) != s.charAt(left)) {
				return false;
			}
			left++;
			right--;
		}
		return true;
	}
	String shortestPalindrome(String s) {
		if (s == null || s.isEmpty() || s.length() <= 1) {
			return s;
		}
		int n = s.length();
		int maxIndex = 0;
		for (int i = n - 1; i >= 0; i--) {
			if (isPalindrome(s,0,i)) {
				maxIndex = i;
				break;
			}
		}
		StringBuilder sb = new StringBuilder(s.substring(maxIndex + 1,n));
		return sb.reverse().append(s).toString();
	}
}