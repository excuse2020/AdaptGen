class Solution {
	int dfs(int[] piles, int left, int right, int[][] dp) {
		if (left > right) {
			return 0;
		}
		if (dp[left][right] != 0) {
			return dp[left][right];
		}
		int leftM = piles[left] - dfs(piles,left + 1,right,dp);
		int rightM = piles[right] - dfs(piles,left,right - 1,dp);
		dp[left][right] = Math.max(leftM,rightM);
		return dp[left][right];
	}
	boolean stoneGame(int[] piles) {
		int[][] dp = new int[piles.length][piles.length];
		return dfs(piles,0,piles.length - 1,dp) > 0;
	}
}