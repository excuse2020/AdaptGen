class Solution {
	boolean judge(String str) {
		if (str == null || str.length() == 0 || str.length() == 1) {
			return true;
		}
		char[] chars = str.toCharArray();
		int mid = str.length() / 2;
		Stack<Character> stack = new Stack<>();
		if (str.length() % 2 == 0) {
			for (int i = 0; i < chars.length; i++) {
				if (i < mid) {
					stack.push(chars[i]);
				} 
				else {
					if (chars[i] != stack.pop()) {
						return false;
					}
				}
			}
		} 
		else {
			for (int i = 0; i < chars.length; i++) {
				if (i < mid) {
					stack.push(chars[i]);
				} 
				else if (i >= (mid + 1)) {
					if (chars[i] != stack.pop()) {
						return false;
					}
				}
			}
		}
		return true;
	}
}