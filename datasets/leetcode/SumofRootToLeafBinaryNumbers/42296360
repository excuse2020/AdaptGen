class Solution {
	List<String> helper(TreeNode root, String curr) {
		List<String> binaries = new ArrayList<>();
		List<String> leftBinaries = new ArrayList<>();
		List<String> rightBinaries = new ArrayList<>();
		if (root.left == null && root.right == null) {
			String str = curr + root.val;
			binaries.add(str);
			return binaries;
		}
		if (root.left != null) {
			leftBinaries = helper(root.left,"");
		}
		if (root.right != null) {
			rightBinaries = helper(root.right,"");
		}
		for (int i = 0; i < leftBinaries.size(); i++) {
			String str = leftBinaries.get(i);
			str = "" + root.val;
			binaries.add(str);
		}
		for (int i = 0; i < rightBinaries.size(); i++) {
			String str = rightBinaries.get(i);
			str = "" + root.val;
			binaries.add(str);
		}
		return binaries;
	}
	int strToDec(String s) {
		int power = 1, num = 0;
		int i = s.length() - 1;
	}
	int sumRootToLeaf(TreeNode root) {
		List<String> binary = helper(root,"");
		int total = 0;
		for (int i = 0; i < binary.size(); i++) {
			total += strToDec(binary.get(i));
		}
		return total;
	}
}