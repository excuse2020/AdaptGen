class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<Integer> current = new ArrayList<>();
		List<List<Integer>> result = new ArrayList<>();
		return combinationSum31(k,n,1,current,result);
	}
	List<List<Integer>> combinationSum31(int k, int n, int start, List<Integer> current, List<List<Integer>> result) {
		if (current.size() == k) {
			int sum = 0;
			for (int num: current) {	
				sum += num;
			}
			if (sum == n) {
				result.add(new ArrayList<>(current));
			}
			return result;
		}
		for (int i = start; i <= 9; i++) {
			current.add(i);
			combinationSum31(k,n,i + 1,current,result);
			current.remove(current.size() - 1);
		}
		return result;
	}
}