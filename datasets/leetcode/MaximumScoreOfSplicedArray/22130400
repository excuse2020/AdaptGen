class Solution {
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < n; i++) {
			sum1 += nums1[i];
			sum2 += nums2[i];
		}
		int[] diff = new int[n];
		for (int i = 0; i < n; i++) {
			diff[i] = nums2[i] - nums1[i];
		}
		int max = 0, curr = 0;
		for (int i = 0; i < n; i++) {
			curr += diff[i];
			curr = curr < 0 ? 0 : curr;
			max = Math.max(max,curr);
		}
		int res = sum1 + max;
		max = 0;
		curr = 0;
		diff = new int[n];
		for (int i = 0; i < n; i++) {
			diff[i] = nums1[i] - nums2[i];
		}
		for (int i = 0; i < n; i++) {
			curr += diff[i];
			curr = curr < 0 ? 0 : curr;
			max = Math.max(max,curr);
		}
		res = Math.max(res,sum2 + max);
		return res;
	}
}