class Solution {
	int[] deckRevealedIncreasing(int[] deck) {
		Deque<Integer> q = new LinkedList<>();
		reverseSortIntArray(deck);
		q.add(deck[0]);
		int i = 1;
		while (i < deck.length) {
			int c = q.removeLast();
			q.addFirst(c);
			q.addFirst(deck[i]);
			i++;
		}
		int a = new int[deck.length];
		int x = 0;
		while (!q.isEmpty()) {
			a[x++] = q.removeFirst();
		}
		return a;
	}
	void reverseSortIntArray(int[] array) {
		Arrays.sort(array);
		int left = 0;
		int right = array.length - 1;
		while (left < right) {
			int temp = array[left];
			array[left] = array[right];
			array[right] = temp;
			left++;
			right--;
		}
	}
}