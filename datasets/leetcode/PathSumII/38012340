class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		int sum = 0;
		List<Integer> path = new ArrayList<>();
		solve(root,sum,targetSum,path,ans);
		return ans;
	}
	void solve(TreeNode root, int sum, int targetSum, List<Integer> path, List<List<Integer>> ans) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			path.add(root.val);
			sum += root.val;
			if (sum == targetSum) {
				ans.add(new ArrayList<>(path));
			}
			path.remove(path.size() - 1);
			sum -= root.val;
			return;
		}
		path.add(root.val);
		sum += root.val;
		solve(root.left,sum,targetSum,path,ans);
		solve(root.right,sum,targetSum,path,ans);
		path.remove(path.size() - 1);
		sum -= root.val;
	}
}