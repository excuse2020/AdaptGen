class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int n = arr.length;
		int[] dp = new int[n + 1];
		dp[n] = 0;
		for (int i = n - 1; i >= 0; i--) {
			int len = 0, maxi = -(int)1e9;
			int maxSum = -(int)1e9;
			for (int ind = i; ind < i + k && ind < arr.length; ind++) {
				len++;
				maxi = Math.max(maxi,arr[ind]);
				int sum = (len * maxi) + dp[ind + 1];
				maxSum = Math.max(maxSum,sum);
			}
			dp[i] = maxSum;
		}
		return dp[0];
	}
}