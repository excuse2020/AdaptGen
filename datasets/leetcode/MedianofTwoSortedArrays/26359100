class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		double res = 0, sum = 0;
		int i = 0, j = 0, k = 0;
		int[] ar = new int[nums1.length + nums2.length];
		while (i < nums1.length || j < nums2.length) {
			if (i < nums1.length && j < nums2.length && nums1[i] <= nums2[j]) {
				ar[k] = nums1[i];
				k++;
				i++;
			} 
			else if (i < nums1.length && j < nums2.length && nums1[i] > nums2[j]) {
				ar[k] = nums2[j];
				k++;
				j++;
			} 
			else if (i < nums1.length) {
				ar[k] = nums1[i];
				k++;
				i++;
			} 
			else if (j < nums2.length) {
				ar[k] = nums2[j];
				k++;
				j++;
			}
		}
		if (ar.length % 2 == 0) {
			return (double) (ar[ar.length / 2] + ar[ar.length / 2 - 1]) / 2;
		} 
		else {
			return ar[ar.length / 2];
		}
	}
}