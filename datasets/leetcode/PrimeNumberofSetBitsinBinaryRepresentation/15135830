class Solution {
	boolean checkingPrime(int n) {
		if (n <= 1) {
			return false;
		} 
		else if (n == 2) {
			return true;
		} 
		else if (n % 2 == 0) {
			return false;
		}
		for (int i = 3; i <= Math.sqrt(n); i += 2) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int countPrimeSetBits(int left, int right) {
		int primes = 0;
		for (int i = left; i <= right; i++) {
			int x = countSetBits(i);
			if (checkingPrime(x)) {
				primes++;
			}
		}
		return primes;
	}
	int countSetBits(int n) {
		int count = 0;
		while (n != 0) {
			count++;
			n = n & (n - 1);
		}
		return count;
	}
}