class Solution {
	int pairSum(ListNode head) {
		ListNode slow = head;
		ListNode fast = head.next;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode mid = slow;
		ListNode prev = null;
		ListNode curr = mid.next;
		mid.next = null;
		ListNode next;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		ListNode left = head, right = prev;
		int max = 0;
		while (left != null && right != null) {
			int sum = left.val + right.val;
			max = Math.max(sum,max);
			left = left.next;
			right = right.next;
		}
		return max;
	}
}