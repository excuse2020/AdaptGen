class Solution {
	int equalSubstring(String s, String t, int maxCost) {
		int l = 0, r = s.length();
		while (l <= r) {
			int k = (l + r) / 2;
			if (isPossible(s,t,maxCost,k)) {
				l = k + 1;
			} 
			else {
				r = k - 1;
			}
		}
		return r;
	}
	boolean isPossible(String s, String t, int cost, int k) {
		int n = s.length(), sum = 0;
		for (int i = 0; i < k; i++) {
			sum += Math.abs(s.charAt(i) - t.charAt(i));
		}
		if (sum <= cost) {
			return true;
		}
		for (int i = k; i < n; i++) {
			sum -= Math.abs(s.charAt(i - k) - t.charAt(i - k));
			sum += Math.abs(s.charAt(i) - t.charAt(i));
			if (sum <= cost) {
				return true;
			}
		}
		return false;
	}
}