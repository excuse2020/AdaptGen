class Solution {
	int dp = new int[1005][2005];
	int maxValueOfCoins(List<List<Integer>> piles, int k) {
		for (int i = 0; i <= piles.size(); i++) {
			for (int j = 0; j < k + 1; j++) {
				dp[i][j] = -1;
			}
		}
		return solve(piles,0,k);
	}
	int solve(List<List<Integer>> piles, int idx, int k) {
		if (idx == piles.size()) {
			if (k == 0) {
				return 0;
			} 
			else {
				return -10000000;
			}
		}
		if (dp[idx][k] != -1) {
			return dp[idx][k];
		}
		int ans = solve(piles,idx + 1,k);
		int sum = 0;
		for (int i = 0; i < piles.get(idx).size(); i++) {
			sum += piles.get(idx).get(i);
			if (k - i >= 0) {
				ans = Math.max(ans,solve(piles,idx + 1,k - i) + sum);
			}
		}
		return dp[idx][k] = ans;
	}
}