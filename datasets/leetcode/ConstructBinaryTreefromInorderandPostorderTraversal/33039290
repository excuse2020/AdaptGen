class Solution {
	Map<Integer, Integer> inorderIndexMap;
	int postorderIndex;
	TreeNode arrayToTree(int[] postorder, int left, int right) {
		if (left > right) {
			return null;
		}
		int rootValue = postorder[postorderIndex--];
		TreeNode root = new TreeNode(rootValue);
		root.right = arrayToTree(postorder,inorderIndexMap.get(rootValue) + 1,right);
		root.left = arrayToTree(postorder,left,inorderIndexMap.get(rootValue) - 1);
		return root;
	}
	TreeNode buildTree(int[] inorder, int[] postorder) {
		postorderIndex = postorder.length - 1;
		inorderIndexMap = new HashMap<>();
		for (int i = 0; i < inorder.length; i++) {
			inorderIndexMap.put(inorder[i],i);
		}
		return arrayToTree(postorder,0,postorder.length - 1);
	}
}