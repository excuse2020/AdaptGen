class Solution {
	boolean checkAlmostEquivalent(String word1, String word2) {
		HashMap<Character, Integer> hm1 = new HashMap<>();
		HashMap<Character, Integer> hm2 = new HashMap<>();
		for (int i = 0; i < word1.length(); i++) {
			hm1.put(word1.charAt(i),hm1.getOrDefault(word1.charAt(i),0) + 1);
		}
		for (int i = 0; i < word2.length(); i++) {
			hm2.put(word2.charAt(i),hm2.getOrDefault(word2.charAt(i),0) + 1);
		}
		for (int i = 0; i < word1.length(); i++) {
			int f1 = hm1.getOrDefault(word1.charAt(i),0);
			int f2 = hm2.getOrDefault(word1.charAt(i),0);
			int d = Math.abs(f1 - f2);
			if (d > 3) {
				return false;
			}
		}
		for (int i = 0; i < word2.length(); i++) {
			int f1 = hm1.getOrDefault(word2.charAt(i),0);
			int f2 = hm2.getOrDefault(word2.charAt(i),0);
			int d = Math.abs(f1 - f2);
			if (d > 3) {
				return false;
			}
		}
		return true;
	}
}