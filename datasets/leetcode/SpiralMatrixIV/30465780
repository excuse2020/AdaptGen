class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int num = new int[m][n];
		ListNode temp = head;
		ArrayList<Integer> list1 = new ArrayList<>();
		for (int[] arr: num) {	
			Arrays.fill(arr,-1);
		}
		int startrow = 0;
		int startcol = 0;
		int endcol = n - 1;
		int endrow = m - 1;
		while (startrow <= endrow && startcol <= endcol) {
			for (int i = startcol; i <= endcol; i++) {
				if (temp != null) {
					num[startrow][i] = temp.val;
					temp = temp.next;
				}
			}
			for (int i = startrow + 1; i <= endrow; i++) {
				if (temp != null) {
					num[i][endcol] = temp.val;
					temp = temp.next;
				}
			}
			for (int i = endcol - 1; i >= startcol; i--) {
				if (temp != null) {
					num[endrow][i] = temp.val;
					temp = temp.next;
				}
			}
			for (int i = endrow - 1; i >= startrow + 1; i--) {
				if (temp != null) {
					num[i][startcol] = temp.val;
					temp = temp.next;
				}
			}
			startrow++;
			startcol++;
			endrow--;
			endcol--;
		}
		return num;
	}
}