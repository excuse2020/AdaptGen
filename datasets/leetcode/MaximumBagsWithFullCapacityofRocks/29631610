class Solution {
	int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
		int overallMax = 0;
		Queue<Integer> q = new PriorityQueue<>();
		for (int i = 0; i < rocks.length; i++) {
			int offset = capacity[i] - rocks[i];
			if (offset == 0) {
				overallMax++;
			} 
			else {
				q.add(offset);
			}
		}
		while (!q.isEmpty() && additionalRocks - q.peek() >= 0) {
			additionalRocks -= q.poll();
			overallMax++;
		}
		return overallMax;
	}
}