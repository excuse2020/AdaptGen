class Solution {
	long maximumSumOfHeights(List<Integer> maxHeights) {
		int n = maxHeights.size();
		long ans = Long.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			int[] arr = new int[n];
			long sum = 0;
			arr[i] = maxHeights.get(i);
			sum += arr[i];
			for (int j = i + 1; j < n; j++) {
				if (maxHeights.get(j) > arr[j - 1]) {
					arr[j] = Math.min(arr[j - 1],maxHeights.get(j));
					sum += arr[j];
				} 
				else {
					arr[j] = maxHeights.get(j);
					sum += arr[j];
				}
			}
			for (int j = i - 1; j >= 0; j--) {
				if (maxHeights.get(j) > arr[j + 1]) {
					arr[j] = Math.min(arr[j + 1],maxHeights.get(j));
					sum += arr[j];
				} 
				else {
					arr[j] = maxHeights.get(j);
					sum += arr[j];
				}
			}
			ans = Math.max(ans,sum);
		}
		return ans;
	}
}