class Solution {
	void dfs(int i, int[] visited, int[][] isConnected) {
		visited[i] = 1;
		for (int j = 0; j < isConnected.length; j++) {
			if (j != i && visited[j] == 0 && isConnected[i][j] == 1) {
				dfs(j,visited,isConnected);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		int[] visited = new int[n];
		int res = 0;
		for (int i = 0; i < n; i++) {
			if (visited[i] == 0) {
				res++;
				dfs(i,visited,isConnected);
			}
		}
		return res;
	}
}