class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int MOD = 1_000_000_007;
		long maxDiffHc = Math.max(horizontalCuts[0] - 0,h - horizontalCuts[horizontalCuts.length - 1]);
		for (int i = 1; i < horizontalCuts.length; i++) {
			maxDiffHc = Math.max(maxDiffHc,horizontalCuts[i] - horizontalCuts[i - 1]);
		}
		long maxDiffVc = Math.max(verticalCuts[0] - 0,w - verticalCuts[verticalCuts.length - 1]);
		for (int i = 1; i < verticalCuts.length; i++) {
			maxDiffVc = Math.max(maxDiffVc,verticalCuts[i] - verticalCuts[i - 1]);
		}
		long res = ((maxDiffHc % MOD) * (maxDiffVc % MOD)) % MOD;
		return (int) res;
	}
}