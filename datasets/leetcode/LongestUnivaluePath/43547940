class Solution {
	int answer = 0;
	int dfs(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int result = 0;
		boolean leftValFound = false, rightValFound = false;
		int leftValue = dfs(root.left);
		int rightValue = dfs(root.right);
		if (root.left != null && root.left.val == root.val) {
			answer = Integer.max(answer,leftValue + 1);
			result = Integer.max(result,leftValue + 1);
			leftValFound = true;
		}
		if (root.right != null && root.right.val == root.val) {
			answer = Integer.max(answer,rightValue + 1);
			result = Integer.max(result,rightValue + 1);
			rightValFound = true;
		}
		if (leftValFound && rightValFound) {
			answer = Integer.max(answer,leftValue + rightValue);
		}
		return result;
	}
	int longestUnivaluePath(TreeNode root) {
		dfs(root);
		return answer;
	}
}