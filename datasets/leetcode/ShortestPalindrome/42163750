class Solution {
	String shortestPalindrome(String s) {
		if (s.length() <= 1) {
			return s;
		}
		int lps = new int[s.length()], i = 1, j = 0, max = 0;
		char ch = s.toCharArray();
		lps[0] = 0;
		while (i < s.length()) {
			if (ch[i] == ch[j]) {
				j++;
				lps[i] = j;
				i++;
			} 
			else if (j != 0) {
				j = lps[j - 1];
			} 
			else {
				lps[i++] = 0;
			}
		}
		StringBuilder op = new StringBuilder(s);
		op.reverse();
		String yo = op.toString();
		j = 0;
		i = 0;
		while (i < yo.length()) {
			if (yo.charAt(i) == ch[j]) {
				i++;
				j++;
			} 
			else if (j != 0) {
				j = lps[j - 1];
			} 
			else {
				i = i + 1;
			}
		}
		StringBuilder jk = new StringBuilder(s.substring(j,s.length()));
		jk.reverse();
		jk.append(s);
		return jk.toString();
	}
}