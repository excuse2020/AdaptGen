class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		HashSet<Integer> set = new HashSet<>();
		HashMap<Integer, TreeNode> mp = new HashMap<>();
		for (int desc: descriptions) {	
			if (!mp.containsKey(desc[0])) {
				mp.put(desc[0],new TreeNode(desc[0]));
			}
			if (!mp.containsKey(desc[1])) {
				mp.put(desc[1],new TreeNode(desc[1]));
			}
			if (desc[2] == 1) {
				mp.get(desc[0]).left = mp.get(desc[1]);
			} 
			else {
				mp.get(desc[0]).right = mp.get(desc[1]);
			}
			set.add(desc[1]);
		}
		for (int desc: descriptions) {	
			if (!set.contains(desc[0])) {
				return mp.get(desc[0]);
			}
		}
		return null;
	}
}