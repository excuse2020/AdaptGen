class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		boolean ans = false;
		if (root1.val == root2.val) {
			ans = IsSame(root1,root2);
		}
		if (!ans) {
			ans = HasSubtree(root1.left,root2);
		}
		if (!ans) {
			ans = HasSubtree(root1.right,root2);
		}
		return ans;
	}
	boolean IsSame(TreeNode begin, TreeNode beginSub) {
		if (beginSub == null) {
			return true;
		}
		if (begin == null) {
			return false;
		}
		if (begin.val != beginSub.val) {
			return false;
		}
		return IsSame(begin.left,beginSub.left) && IsSame(begin.right,beginSub.right);
	}
}