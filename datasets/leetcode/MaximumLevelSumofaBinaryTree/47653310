class Solution {
	int maxLevelSum(TreeNode root) {
		if (root == null) {
			return 0;
		}
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		queue.add(root);
		int maxLevelSum = Integer.MIN_VALUE;
		int level = 1;
		int maxLevel = level;
		while (!queue.isEmpty()) {
			int sum = 0;
			int queueSize = queue.size();
			for (int i = 0; i < queueSize; i++) {
				TreeNode node = queue.remove();
				sum += node.val;
				if (node.left != null) {
					queue.add(node.left);
				}
				if (node.right != null) {
					queue.add(node.right);
				}
			}
			if (sum > maxLevelSum) {
				maxLevelSum = sum;
				maxLevel = level;
			}
			level++;
		}
		return maxLevel;
	}
}