class Solution {
	int countVowelPermutation(int n) {
		int mod = 1000000007;
		HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
		map.put(0,new ArrayList<>(List.of(1,2,4)));
		map.put(1,new ArrayList<>(List.of(0,2)));
		map.put(2,new ArrayList<>(List.of(1,3)));
		map.put(3,new ArrayList<>(List.of(2)));
		map.put(4,new ArrayList<>(List.of(3,2)));
		long dp = new long[n + 1][5];
		Arrays.fill(dp[1],1);
		for (int i = 2; i <= n; i++) {
			for (int j = 0; j < 5; j++) {
				ArrayList<Integer> list = map.get(j);
				long sum = 0;
				for (int x = 0; x < list.size(); x++) {
					sum += dp[i - 1][list.get(x)];
					sum %= mod;
				}
				dp[i][j] = sum;
			}
		}
		long ans = 0;
		for (int i = 0; i < 5; i++) {
			ans += dp[n][i];
			ans %= mod;
		}
		return (int) ans;
	}
}