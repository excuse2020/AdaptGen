class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int n = nums.length;
		int SUM = nums[0];
		for (int i = 1; i < n; i++) {
			SUM += nums[i];
		}
		int max_subarray_sum = nums[0];
		int sum = nums[0];
		for (int i = 1; i < n; i++) {
			sum = Math.max(sum + nums[i],nums[i]);
			max_subarray_sum = Math.max(sum,max_subarray_sum);
		}
		int min_subarray_sum = nums[0];
		int sum1 = nums[0];
		for (int i = 1; i < n; i++) {
			sum1 = Math.min(sum1 + nums[i],nums[i]);
			min_subarray_sum = Math.min(sum1,min_subarray_sum);
		}
		int max_circular_subarray_sum = SUM - min_subarray_sum;
		if (max_subarray_sum > 0) {
			return Math.max(max_subarray_sum,max_circular_subarray_sum);
		}
		return max_subarray_sum;
	}
}