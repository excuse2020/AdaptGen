class Solution {
	int semiOrderedPermutation(int[] nums) {
		int one = 0;
		int n = 0;
		int ans = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				one = i;
			}
			if (nums[i] == nums.length) {
				n = i;
			}
		}
		while (!(nums[nums.length - 1] == nums.length)) {
			ans++;
			int temp = nums[n + 1];
			nums[n + 1] = nums[n];
			nums[n] = temp;
			n++;
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				one = i;
			}
			if (nums[i] == nums.length) {
				n = i;
			}
		}
		while (!(nums[0] == 1)) {
			ans++;
			int temp = nums[one - 1];
			nums[one - 1] = nums[one];
			nums[one] = temp;
			one--;
		}
		return ans;
	}
}