class Solution {
	int[] decrypt(int[] code, int k) {
		int n = code.length;
		int[] res = new int[n];
		Arrays.fill(res,0);
		if (k == 0) {
			return res;
		}
		int[] sum = new int[n];
		sum[0] = code[0];
		for (int i = 1; i < n; i++) {
			sum[i] = sum[i - 1] + code[i];
		}
		for (int i = 0; i < n; i++) {
			if (k > 0) {
				int start = (i + 1) % n;
				int end = (i + k) % n;
				int s = 0;
				if (start <= end) {
					s = start != 0 ? sum[end] - sum[start - 1] : sum[end];
				} 
				else {
					s = sum[n - 1] - (sum[start - 1] - sum[end]);
				}
				res[i] = s;
			} 
			else {
				int start = (i + k) % n;
				int end = (i - 1 + n) % n;
				int s = 0;
				if (start <= end) {
					s = start != 0 ? sum[end] - sum[start - 1] : sum[end];
				} 
				else {
					s = sum[n - 1] - (sum[start - 1] - sum[end]);
				}
				res[i] = s;
			}
		}
		return res;
	}
}