class Solution {
	int countDigitOne(int n) {
		int ans = 0;
		int last = 0;
		int newNum = 0;
		int unitCount = 0;
		while (n > 0) {
			int rem = n % 10;
			if (rem == 0) {
			} 
			else if (rem == 1) {
				ans = last + rem * (countOne(unitCount)) + rem * (newNum + 1);
			} 
			else {
				ans = last + rem * (countOne(unitCount)) + (int) (Math.pow(10,unitCount));
			}
			last = ans;
			newNum = newNum + rem * (int) (Math.pow(10,unitCount));
			n = n / 10;
			unitCount++;
		}
		return ans;
	}
	int countOne(int unit) {
		if (unit == 0) {
			return 0;
		} 
		else if (unit == 1) {
			return 1;
		} 
		else if (unit == 2) {
			return 20;
		} 
		else {
			return countOne(unit - 1) * 10 + (int) (Math.pow(10,unit - 1));
		}
	}
}