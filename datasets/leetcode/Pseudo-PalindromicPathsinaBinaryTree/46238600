class Solution {
	int ans = 0;
	Map<Integer, Integer> m = new HashMap<>();
	void fun(TreeNode root) {
		m.put(root.val,m.getOrDefault(root.val,0) + 1);
		if (root.left == null && root.right == null) {
			int count = 0;
			for (int c: m.keySet()) {	
				if (m.get(c) % 2 != 0) {
					count++;
				}
			}
			if (count == 0 || count == 1) {
				ans++;
			}
			m.put(root.val,m.get(root.val) - 1);
			return;
		}
		if (root.left != null) {
			fun(root.left);
		}
		if (root.right != null) {
			fun(root.right);
		}
		m.put(root.val,m.get(root.val) - 1);
		return;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		fun(root);
		return ans;
	}
}