class Solution {
	List<List<Integer>> lis = new ArrayList<>();
	void permute(int nums, int idx) {
		if (idx == nums.length) {
			List<Integer> l = new ArrayList<>();
			for (int i = 0; i < nums.length; i++) {
				l.add(nums[i]);
			}
			lis.add(l);
			return;
		}
		for (int i = idx; i < nums.length; i++) {
			swap(nums,idx,i);
			permute(nums,idx + 1);
			swap(nums,idx,i);
		}
	}
	String smallestNumber(String pattern) {
		int n = pattern.length() + 1;
		int nums = new int[n];
		for (int i = 0; i < n; i++) {
			nums[i] = i + 1;
		}
		permute(nums,0);
		String str = "";
		int j = 0;
		int flag = 0;
		List<Integer> l = lis.get(j);
		int i = 1;
		char ch = pattern.charAt(i - 1);
	}
	void swap(int nums, int idx, int i) {
		int temp = nums[idx];
		nums[idx] = nums[i];
		nums[i] = temp;
	}
}