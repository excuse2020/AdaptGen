class Solution {
	long countBadPairs(int[] nums) {
		long n = nums.length;
		long total = (n * (n - 1)) / 2;
		long count = 0;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < n; i++) {
			int x = nums[i] - i;
			map.put(x,map.getOrDefault(x,0) + 1);
		}
		for (Map.Entry<Integer, Integer> e: map.entrySet()) {	
			if (e.getValue() > 1) {
				long x = e.getValue();
				long tot = (x * (x - 1)) / 2;
				count += tot;
			}
		}
		return total - count;
	}
}