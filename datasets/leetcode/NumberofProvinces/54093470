class Solution {
	void dfs(int ind, int[][] adj, int[] visited) {
		visited[ind] = 1;
		int n = adj.length;
		for (int i = 0; i < n; i++) {
			if (visited[i] == 0 && adj[ind][i] == 1) {
				dfs(i,adj,visited);
			}
		}
		return;
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		int[] visited = new int[n];
		Arrays.fill(visited,0);
		int ans = 0;
		for (int i = 0; i < n; i++) {
			if (visited[i] == 0) {
				ans++;
				dfs(i,isConnected,visited);
			}
		}
		return ans;
	}
}