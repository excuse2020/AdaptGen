class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Stack<Integer> num1 = new Stack<>();
		Stack<Integer> num2 = new Stack<>();
		for (ListNode i = head1; i != null; i = i.next) {
			num1.push(i.val);
		}
		for (ListNode i = head2; i != null; i = i.next) {
			num2.push(i.val);
		}
		int add1 = 0;
		int count = 0;
		ListNode sumhead = new ListNode(0);
		while (!num1.empty() || !num2.empty()) {
			int dig1 = num1.empty() ? 0 : num1.pop();
			int dig2 = num2.empty() ? 0 : num2.pop();
			int cursum = dig1 + dig2;
			ListNode temp = new ListNode(cursum % 10);
			temp.next = sumhead.next;
			sumhead.next = temp;
			if (dig1 + dig2 > 9) {
				add1 = 1;
			} 
			else {
				add1 = 0;
			}
		}
		return sumhead.next;
	}
}