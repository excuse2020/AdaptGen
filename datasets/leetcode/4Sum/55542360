class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		long h = target;
		List<List<Integer>> v = new ArrayList<>();
		int n = nums.length;
		Arrays.sort(nums);
		for (int i = 0; i < n; i++) {
			if (i != 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			for (int j = i + 1; j < n; j++) {
				if (j != i + 1 && nums[j] == nums[j - 1]) {
					continue;
				}
				int k1 = j + 1, k2 = n - 1;
				while (k1 < k2) {
					long sum = (long) nums[i] + (long) nums[j];
					if (sum > h) {
						k2--;
					} 
					else if (sum < h) {
						k1++;
					} 
					else {
						List<Integer> v1 = new ArrayList<Integer>();
						v1.add(nums[i]);
						v1.add(nums[j]);
						v1.add(nums[k1]);
						v1.add(nums[k2]);
						v.add(v1);
						k1++;
						k2--;
						while (k1 < k2 && nums[k1] == nums[k1 - 1]) {
							k1++;
						}
						while (k1 < k2 && nums[k2] == nums[k2 + 1]) {
							k2--;
						}
					}
				}
			}
		}
		return v;
	}
}