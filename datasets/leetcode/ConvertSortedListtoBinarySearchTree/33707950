class Solution {
	List<Integer> ls = new ArrayList<>();
	TreeNode createBBST(int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(ls.get(mid));
		root.left = createBBST(start,mid - 1);
		root.right = createBBST(mid + 1,end);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		while (head != null) {
			ls.add(head.val);
			head = head.next;
		}
		int start = 0;
		int end = ls.size() - 1;
		return createBBST(start,end);
	}
}