class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] ans = new int[m][n];
		for (int[] arr: ans) {	
			Arrays.fill(arr,-1);
		}
		int rows = m;
		int cols = n;
		int left = 0;
		int right = cols - 1;
		int top = 0;
		int bottom = rows - 1;
		ListNode cur = head;
		while (left <= right && top <= bottom && cur != null) {
			for (int i = left; i <= right && cur != null; i++) {
				ans[top][i] = cur.val;
				cur = cur.next;
			}
			top++;
			for (int i = top; i <= bottom && cur != null; i++) {
				ans[i][right] = cur.val;
				cur = cur.next;
			}
			right--;
			if (top <= bottom) {
				for (int i = right; i >= left && cur != null; i--) {
					ans[bottom][i] = cur.val;
					cur = cur.next;
				}
				bottom--;
			}
			if (left <= right) {
				for (int i = bottom; i >= top && cur != null; i--) {
					ans[i][left] = cur.val;
					cur = cur.next;
				}
				left++;
			}
		}
		return ans;
	}
}