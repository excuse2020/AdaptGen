class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null && pHead2 == null) {
			return pHead1;
		} 
		else if (pHead1 == null && pHead2 != null) {
			return pHead2;
		} 
		else if (pHead1 != null && pHead2 == null) {
			return pHead1;
		}
		ListNode newList;
		if (pHead1.val <= pHead2.val) {
			newList = pHead1;
			pHead1 = pHead1.next;
		} 
		else {
			newList = pHead2;
			pHead2 = pHead2.next;
		}
		ListNode newList_head = newList;
		while (pHead1 != null && pHead2 != null) {
			if (pHead1.val <= pHead2.val) {
				newList.next = pHead1;
				newList = newList.next;
				pHead1 = pHead1.next;
			} 
			else {
				newList.next = pHead2;
				newList = newList.next;
				pHead2 = pHead2.next;
			}
		}
		if (pHead1 != null && pHead2 == null) {
			newList.next = pHead1;
		}
		if (pHead2 != null && pHead1 == null) {
			newList.next = pHead2;
		}
		return newList_head;
	}
}