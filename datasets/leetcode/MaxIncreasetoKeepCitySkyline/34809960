class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] maxSide = new int[grid.length];
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			int max = -1;
			for (int j = 0; j < grid.length; j++) {
				if (grid[i][j] > max) {
					max = grid[i][j];
				}
			}
			maxSide[i] = max;
		}
		int[] maxTop = new int[grid.length];
		for (int j = 0; j < grid.length; j++) {
			int max = -1;
			for (int i = 0; i < grid.length; i++) {
				if (grid[i][j] > max) {
					max = grid[i][j];
				}
			}
			maxTop[j] = max;
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				sum += (Math.min(maxTop[j],maxSide[i]) - grid[i][j]);
			}
		}
		return sum;
	}
}