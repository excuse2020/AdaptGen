class Solution {
	int[] getStrongest(int[] arr, int k) {
		Arrays.sort(arr);
		int m = arr[(arr.length - 1) / 2];
		int i = 0, j = arr.length - 1, ai = 0;
		int ans = new int[k];
		int ke = k;
		while (i < j && k-- > 0) {
			if (Math.abs(arr[i] - m) > Math.abs(arr[j] - m)) {
				ans[ai++] = arr[i];
				i++;
			} 
			else if (Math.abs(arr[i] - m) < Math.abs(arr[j] - m)) {
				ans[ai++] = arr[j];
				j--;
			} 
			else if ((Math.abs(arr[i] - m) == Math.abs(arr[j] - m)) && (arr[i] > arr[j])) {
				ans[ai++] = arr[i];
				i++;
			} 
			else if ((Math.abs(arr[i] - m) == Math.abs(arr[j] - m)) && (arr[i] < arr[j])) {
				ans[ai++] = arr[j];
				j--;
			} 
			else {
				ans[ai++] = arr[j];
				j--;
			}
		}
		if (ke == arr.length) {
			ans[ke - 1] = m;
		}
		return ans;
	}
}