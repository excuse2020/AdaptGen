class Solution {
	int numberOfSubarrays(int[] A, int k) {
		List<Integer> idx = new ArrayList<>();
		int n = A.length;
		for (int i = 0; i < n; ++i) {
			if (A[i] % 2 == 1) {
				idx.add(i);
			}
		}
		int s = idx.size(), res = 0;
		if (s < k) {
			return res;
		}
		for (int i = 0; i <= s - k; ++i) {
			int leftCount = (i == 0) ? idx.get(i) + 1 : idx.get(i) - idx.get(i - 1);
			int rightCount = (i + k == s) ? n - idx.get(i + k - 1) : idx.get(i + k) - idx.get(i + k - 1);
			res += leftCount * rightCount;
		}
		return res;
	}
}