class Solution {
	int longestPalindrome(String[] words) {
		int ans = 0;
		HashMap<String, Integer> a = new HashMap();
		int n = words.length;
		for (int i = 0; i < n; i++) {
			StringBuffer str = new StringBuffer(words[i]);
			str.reverse();
			String aa = str.toString();
			if (a.containsKey(aa)) {
				ans = ans + 4;
				if (a.get(aa) == 1) {
					a.remove(aa);
				} 
				else {
					int val = a.get(aa);
					val--;
					a.put(aa,val);
				}
			} 
			else {
				if (a.containsKey(words[i])) {
					int val = a.get(words[i]);
					val++;
					a.put(words[i],val);
				} 
				else {
					a.put(words[i],1);
				}
			}
		}
		for (String s: a.keySet()) {	
			StringBuffer str = new StringBuffer(s);
			str.reverse();
			String aa = str.toString();
			if (s.equals(aa)) {
				ans = ans + 2;
				break;
			}
		}
		return ans;
	}
}