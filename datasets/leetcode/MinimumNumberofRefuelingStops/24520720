class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		int c = 0, id = 0;
		PriorityQueue<Integer> q = new PriorityQueue<>((o1, o2) -> {o2 - o1});
		for (; startFuel < target; c++) {
			for (; id != stations.length && stations[id][0] <= startFuel; id++) {
				q.add(stations[id][1]);
			}
			if (q.isEmpty()) {
				return -1;
			}
			startFuel += q.poll();
		}
		return c;
	}
}