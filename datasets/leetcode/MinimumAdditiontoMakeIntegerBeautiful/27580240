class Solution {
	int getSum(long n) {
		int sum = 0;
		while (n != 0) {
			int lastBit = (int) (n % 10);
			n /= 10;
			sum += lastBit;
		}
		return sum;
	}
	long makeIntegerBeautiful(long n, int target) {
		int sum = getSum(n);
		if (sum <= target) {
			return 0L;
		}
		long original = n;
		int bits = 1;
		while (sum > target) {
			int lastBit = (int) ((n % (long) Math.pow(10,bits)) / (long) Math.pow(10,bits - 1));
			n += (long) Math.pow(10,bits - 1) * (10 - lastBit);
			bits++;
			sum = getSum(n);
		}
		return n - original;
	}
}