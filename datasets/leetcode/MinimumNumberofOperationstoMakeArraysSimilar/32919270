class Solution {
	long makeSimilar(int[] nums, int[] target) {
		List<Integer> numsOdd = new ArrayList<>();
		List<Integer> numsEven = new ArrayList<>();
		List<Integer> targetOdd = new ArrayList<>();
		List<Integer> targetEven = new ArrayList<>();
		for (int i: nums) {	
			if (i % 2 != 0) {
				numsOdd.add(i);
			} 
			else {
				numsEven.add(i);
			}
		}
		for (int i: target) {	
			if (i % 2 != 0) {
				targetOdd.add(i);
			} 
			else {
				targetEven.add(i);
			}
		}
		Collections.sort(numsOdd);
		Collections.sort(numsEven);
		Collections.sort(targetOdd);
		Collections.sort(targetEven);
		long ans = 0;
		for (int i = 0; i < numsOdd.size(); i++) {
			ans += Math.abs(numsOdd.get(i) - targetOdd.get(i));
		}
		for (int i = 0; i < numsEven.size(); i++) {
			ans += Math.abs(numsEven.get(i) - targetEven.get(i));
		}
		return ans / 4;
	}
}