class Solution {
	List<List<Integer>> findPrimePairs(int n) {
		boolean arr = prime(n);
		List<List<Integer>> ans = new ArrayList<>();
		for (int i = 2; i <= n / 2; i++) {
			if (arr[i]) {
				int second = n - i;
				if (arr[second]) {
					List<Integer> temp = new ArrayList<>();
					temp.add(i);
					temp.add(second);
					ans.add(temp);
				}
			}
		}
		return ans;
	}
	boolean[] prime(int n) {
		boolean[] arr = new boolean[n + 1];
		for (int i = 0; i <= n; i++) {
			arr[i] = true;
		}
		arr[0] = false;
		arr[1] = false;
		for (int i = 2; i <= Math.sqrt(n); i++) {
			if (arr[i]) {
				for (int j = i * i; j <= n; j += i) {
					arr[j] = false;
				}
			}
		}
		return arr;
	}
}