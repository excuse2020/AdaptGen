class Solution {
	int help(int[][] o, int x, int y, int[][] dp) {
		if (x == o.length - 1 && y == o[0].length - 1) {
			return 1;
		}
		if (dp[x][y] == 0) {
			int r = 0, u = 0;
			if (x < o.length - 1 && o[x + 1][y] != 1) {
				r = help(o,x + 1,y,dp);
			}
			if (y < o[0].length - 1 && o[x][y + 1] != 1) {
				u = help(o,x,y + 1,dp);
			}
			dp[x][y] = r + u;
		}
		return dp[x][y];
	}
	int uniquePathsWithObstacles(int[][] o) {
		if (o[0][0] == 1) {
			return 0;
		}
		int[][] dp = new int[o.length][o[0].length];
		return help(o,0,0,dp);
	}
}