class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int s = 0, temp, e = mountainArr.length() - 1, peak = e, m = s + (e - s) / 2;
		while (s < e) {
			m = s + (e - s) / 2;
			temp = mountainArr.get(m);
			if (temp > mountainArr.get(m - 1) && temp > mountainArr.get(m + 1)) {
				peak = m;
				break;
			} 
			else if (temp < mountainArr.get(m + 1)) {
				s = m;
			} 
			else {
				e = m;
			}
		}
		s = 0;
		e = peak;
		while (s <= e) {
			m = s + (e - s) / 2;
			temp = mountainArr.get(m);
			if (temp == target) {
				return m;
			} 
			else if (temp < target) {
				s = m + 1;
			} 
			else {
				e = m - 1;
			}
		}
		s = peak;
		e = mountainArr.length() - 1;
		while (s <= e) {
			m = s + (e - s) / 2;
			temp = mountainArr.get(m);
			if (temp == target) {
				return m;
			} 
			else if (temp > target) {
				s = m + 1;
			} 
			else {
				e = m - 1;
			}
		}
		return -1;
	}
}