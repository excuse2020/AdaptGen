class Solution {
	boolean isAlienSorted(String[] words, String order) {
		@r HashMap<Character, Integer> map = new HashMap<>();
		@r String str = "";
		@r String str1 = "";
		for (int i = 0; i < order.length(); i++) {
			map.put(order.charAt(i),i);
		}
		for (int i = 0; i < words.length - 1; i++) {
		}
		int n = Math.min(words[i].length(),words[i + 1].length());
		r str = str + words[i];
		r str1 = str1 + words[i + 1];
		@r boolean flag = false;
		for (int j = 0; j < n; j++) {
			if (map.get(words[i].charAt(j)) < map.get(words[i + 1].charAt(j))) {
			}
		}
		r flag = true;
		if (map.get(words[i].charAt(j)) > map.get(words[i + 1].charAt(j))) {
			return false;
		}
		if (!flag && str.length() > str1.length()) {
			return false;
		}
		return true;
	}
}