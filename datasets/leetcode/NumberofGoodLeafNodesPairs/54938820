class Solution {
	int MAX_DISTANCE = 10;
	int ans = 0;
	int countPairs(TreeNode root, int distance) {
		dfs(root,distance);
		return ans;
	}
	int[] dfs(TreeNode root, int distance) {
		if (root == null) {
			return new int[MAX_DISTANCE + 1];
		}
		if (root.left == null && root.right == null) {
			int[] res = new int[MAX_DISTANCE + 1];
			res[1] = 1;
			return res;
		}
		int[] left = dfs(root.left,distance);
		int[] right = dfs(root.right,distance);
		for (int i = 1; i <= distance; i++) {
			for (int j = 1; j <= distance - i; j++) {
				ans += left[i] * right[j];
			}
		}
		int[] res = new int[MAX_DISTANCE + 1];
		for (int i = 1; i < MAX_DISTANCE; i++) {
			res[i + 1] = left[i] + right[i];
		}
		return res;
	}
}