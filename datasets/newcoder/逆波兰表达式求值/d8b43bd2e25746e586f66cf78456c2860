class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> stk = new Stack<Integer>();
		if (tokens.length == 0 || tokens == null) {
			return 0;
		}
		int t1 = 0, t2 = 0;
		for (int i = 0; i < tokens.length; i++) {
			if (tokens[i].equals("+")) {
				t1 = stk.pop() + stk.pop();
				stk.push(t1);
			} 
			else if (tokens[i].equals("-")) {
				t1 = -(stk.pop() - stk.pop());
				stk.push(t1);
			} 
			else if (tokens[i].equals("*")) {
				t1 = stk.pop() * stk.pop();
				stk.push(t1);
			} 
			else if (tokens[i].equals("/")) {
				t1 = stk.pop();
				t2 = stk.pop();
				t1 = t2 / t1;
				stk.push(t1);
			} 
			else {
				stk.push(Integer.parseInt(tokens[i]));
			}
		}
		return stk.pop();
	}
}