class Solution {
	int maxScore(List<List<Integer>> grid) {
		int maxScore = Integer.MIN_VALUE;
		int m = grid.size(), n = grid.get(0).size();
		int[][] rows = new int[m][2];
		int[][] cols = new int[n][2];
		for (int i = m - 1; i >= 0; i--) {
			for (int j = n - 1; j >= 0; j--) {
				int val = grid.get(i).get(j);
				int valRows = Math.max(rows[i][0] - val,rows[i][0] - val + rows[i][1]);
				int valCols = Math.max(cols[j][0] - val,cols[j][0] - val + cols[j][1]);
				int localMax = (i == m - 1 && j == n - 1) ? (Integer.MIN_VALUE / 2) : Math.max(valRows,valCols);
				maxScore = Math.max(maxScore,localMax);
				if (val >= rows[i][0] || localMax > rows[i][1]) {
					rows[i][0] = val;
					rows[i][1] = localMax;
				}
				if (val >= cols[j][0] || localMax > cols[j][1]) {
					cols[j][0] = val;
					cols[j][1] = localMax;
				}
			}
		}
		return maxScore;
	}
}