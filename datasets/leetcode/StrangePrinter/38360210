class Solution {
	int dfs(String s, int l, int r, int[][] dp) {
		if (dp[l][r] > 0) {
			return dp[l][r];
		}
		if (l > r) {
			return 0;
		}
		dp[l][r] = 1 + dfs(s,l + 1,r,dp);
		for (int i = l + 1; i <= r; i++) {
			if (s.charAt(i) == s.charAt(l)) {
				dp[l][r] = Math.min(dfs(s,l,i - 1,dp) + dfs(s,i + 1,r,dp),dp[l][r]);
			}
		}
		return dp[l][r];
	}
	int strangePrinter(String s) {
		int n = s.length();
		if (n == 1) {
			return 1;
		}
		int[][] dp = new int[n + 1][n + 1];
		return dfs(s,0,n - 1,dp);
	}
}