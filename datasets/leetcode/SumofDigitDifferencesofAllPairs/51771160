class Solution {
	long sumDigitDifferences(int[] nums) {
		int noOfDigits = 0;
		int num = nums[0];
		while (num != 0) {
			num = num / 10;
			noOfDigits++;
		}
		int[][] digitMap = new int[noOfDigits][10];
		for (int itr: nums) {	
			for (int i = 0; i < noOfDigits; i++) {
				++digitMap[i][itr % 10];
				itr = itr / 10;
			}
		}
		long res = 0l;
		for (int[] itr: digitMap) {	
			for (int i = 0; i < 10; i++) {
				for (int j = i + 1; j < 10; j++) {
					res += itr[i] * itr[j];
				}
			}
		}
		return res;
	}
}