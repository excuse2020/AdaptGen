class Solution {
	int ans = 0;
	int[][] dp = new int[503][503];
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		for (int[] ar: dp) {	
			Arrays.fill(ar,-1);
		}
		ans = Math.max(ans,solve(nums1,nums2,0,0));
		return ans;
	}
	int solve(int[] nums1, int[] nums2, int ind1, int ind2) {
		if (ind1 == nums1.length || ind2 == nums2.length) {
			return 0;
		}
		if (dp[ind1][ind2] != -1) {
			return dp[ind1][ind2];
		}
		int ret = 0;
		for (int i = ind2; i < nums2.length; i++) {
			int num = nums2[i];
			int inc = 0, dis = 0;
			int b = solve(nums1,nums2,ind1 + 1,i);
			int c = solve(nums1,nums2,ind1 + 1,i + 1);
			if (nums1[ind1] == num) {
				inc = c + 1;
			} 
			else {
				dis = Math.max(b,c);
			}
			ret = Math.max(ret,Math.max(inc,dis));
		}
		return dp[ind1][ind2] = ret;
	}
}