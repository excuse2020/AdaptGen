class Solution {
	int helper(int[] nums1, int[] nums2, int i, int j, Integer dp) {
		if (i >= nums1.length || j >= nums2.length) {
			return 0;
		}
		if (dp[i][j] != null) {
			return dp[i][j];
		}
		int op1 = 0, op2 = 0, op3 = 0;
		if (nums1[i] == nums2[j]) {
			op1 = 1 + helper(nums1,nums2,i + 1,j + 1,dp);
		}
		op2 = helper(nums1,nums2,i + 1,j,dp);
		op3 = helper(nums1,nums2,i,j + 1,dp);
		return dp[i][j] = Math.max(op1,Math.max(op2,op3));
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		Integer dp = new Integer[nums1.length + 1][nums2.length + 1];
		return helper(nums1,nums2,0,0,dp);
	}
}