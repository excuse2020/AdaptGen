class Solution {
	int solve(String s) {
		Stack<Integer> stk = new Stack<>();
		int res = 0;
		int num = 0;
		char sign = '+';
		char[] arr = s.toCharArray();
		for (int i = 0; i < s.length(); i++) {
			if (arr[i] == '(') {
				int j = i + 1;
				int counterPar = 1;
				while (counterPar > 0) {
					if (arr[j] == '(') {
						counterPar++;
					}
					if (arr[j] == ')') {
						counterPar--;
					}
					j++;
				}
				num = solve(s.substring(i + 1,j - 1));
				i = j - 1;
			}
			if (Character.isDigit(arr[i])) {
				num = num * 10 + arr[i] - '0';
			}
			if (!Character.isDigit(arr[i]) || i == s.length() - 1) {
				if (sign == '+') {
					stk.push(num);
				} 
				else if (sign == '-') {
					stk.push(-1 * num);
				} 
				else if (sign == '*') {
					stk.push(stk.pop() * num);
				} 
				else if (sign == '/') {
					stk.push(stk.pop() / num);
				}
				num = 0;
				sign = arr[i];
			}
		}
		while (!stk.isEmpty()) {
			res += stk.pop();
		}
		return res;
	}
}