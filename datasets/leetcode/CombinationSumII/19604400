class Solution {
	void combSum(int index, List<List<Integer>> ans, int a, int t, List<Integer> ds) {
		if (t == 0) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		for (int i = index; i < a.length; i++) {
			if (i > index && a[i] == a[i - 1]) {
				continue;
			}
			if (a[i] > t) {
				break;
			}
			ds.add(a[i]);
			combSum(i + 1,ans,a,t - a[i],ds);
			ds.remove(ds.size() - 1);
		}
	}
	List<List<Integer>> combinationSum2(int[] a, int t) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> ls = new ArrayList<>();
		Arrays.sort(a);
		int index = 0;
		combSum(index,ans,a,t,ls);
		return ans;
	}
}