class Solution {
	Map<String, Integer> dp;
	int maxMoves(int[][] grid) {
		int ans = Integer.MIN_VALUE;
		dp = new HashMap<>();
		for (int i = 0; i < grid.length; i++) {
			ans = Math.max(ans,solve(grid,i,0,grid[i][0]));
		}
		return ans;
	}
	int solve(int grid, int i, int j, int prev) {
		String key = i + "_";
		if (dp.containsKey(key)) {
			return dp.get(key);
		}
		int max = 0;
		if (i + 1 < grid.length && j + 1 < grid[0].length && grid[i + 1][j + 1] > prev) {
			max = Math.max(max,1 + solve(grid,i + 1,j + 1,grid[i + 1][j + 1]));
		}
		if (i - 1 >= 0 && j + 1 < grid[0].length && grid[i - 1][j + 1] > prev) {
			max = Math.max(max,1 + solve(grid,i - 1,j + 1,grid[i - 1][j + 1]));
		}
		if (i < grid.length && j + 1 < grid[0].length && grid[i][j + 1] > prev) {
			max = Math.max(max,1 + solve(grid,i,j + 1,grid[i][j + 1]));
		}
		dp.put(key,max);
		return max;
	}
}