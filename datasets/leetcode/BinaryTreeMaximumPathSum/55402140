class Solution {
	int maxSum = Integer.MIN_VALUE;
	int maxContrib(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int leftMax = maxContrib(root.left);
		int rightMax = maxContrib(root.right);
		int leftSubTree = 0;
		int rightSubTree = 0;
		if (leftMax > 0) {
			leftSubTree = leftMax;
		}
		if (rightMax > 0) {
			rightSubTree = rightMax;
		}
		int newPathValue = root.val + leftSubTree;
		this.maxSum = Math.max(maxSum,newPathValue);
		return root.val + Math.max(leftSubTree,rightSubTree);
	}
	int maxPathSum(TreeNode root) {
		this.maxSum = Integer.MIN_VALUE;
		maxContrib(root);
		return this.maxSum;
	}
}