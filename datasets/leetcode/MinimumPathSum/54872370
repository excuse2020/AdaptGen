class Solution {
	int minPathSum(int[][] grid) {
		int n = grid.length, m = grid[0].length;
		int[][] dp = new int[n][m];
		return solve(grid,n - 1,m - 1,dp);
	}
	int solve(int[][] grid, int n, int m, int[][] dp) {
		if (m == 0 && n == 0) {
			return grid[n][m];
		} 
		else if (m < 0 || n < 0) {
			return Integer.MAX_VALUE;
		} 
		else if (dp[n][m] != 0) {
			return dp[n][m];
		}
		return dp[n][m] = Math.min(solve(grid,n - 1,m,dp),solve(grid,n,m - 1,dp)) + grid[n][m];
	}
}