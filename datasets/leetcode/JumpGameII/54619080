class Solution {
	int jump(int[] nums) {
		int n = nums.length;
		if (n < 3) {
			return n - 1;
		}
		int dp = new int[n];
		dp[0] = 0;
		for (int i = 1; i < n; i++) {
			dp[i] = Integer.MAX_VALUE;
		}
		int currVal = 0;
		for (int i = 0; i < n - 1; i++) {
			int currRowVal = i + 1;
			if (i + nums[i] >= nums.length - 1) {
				return dp[i] + 1;
			}
			for (int j = i + 1; j < Math.min(n,currRowVal); j++) {
				dp[j] = Math.min(dp[i] + 1,dp[j]);
			}
		}
		return dp[n - 1];
	}
}