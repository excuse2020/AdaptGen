class Solution {
	int findUltimateParent(int node, int[] characters) {
		if (node == characters[node]) {
			return node;
		}
		int ulp = findUltimateParent(characters[node],characters);
		characters[node] = ulp;
		return characters[node];
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		int[] characters = new int[26];
		for (int i = 0; i < 26; i++) {
			characters[i] = i;
		}
		int i = 0;
	}
	void union(int node1, int node2, int[] characters) {
		int ulp_node1 = findUltimateParent(node1,characters);
		int ulp_node2 = findUltimateParent(node2,characters);
		if (ulp_node1 > ulp_node2) {
			characters[ulp_node1] = ulp_node2;
		} 
		else if (ulp_node1 < ulp_node2) {
			characters[ulp_node2] = ulp_node1;
		} 
		else {
			characters[ulp_node1] = ulp_node2;
		}
	}
}