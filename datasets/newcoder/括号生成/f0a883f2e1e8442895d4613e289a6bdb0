class Solution {
	void backTrace(String currentStr, int leftNum, int rightNum, int n, ArrayList<String> list) {
		if (2 * n == currentStr.length()) {
			list.add(currentStr);
			return;
		}
		if (leftNum < n) {
			backTrace(currentStr + "(",leftNum + 1,rightNum,n,list);
		}
		if (rightNum < leftNum) {
			backTrace(currentStr + ")",leftNum,rightNum + 1,n,list);
		}
	}
	ArrayList<String> generateParenthesis(int n) {
		if (n == 0) {
			return new ArrayList<String>();
		}
		ArrayList<String> list = new ArrayList<String>();
		backTrace("",0,0,n,list);
		return list;
	}
}