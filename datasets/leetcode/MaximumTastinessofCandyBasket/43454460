class Solution {
	boolean check(int arr, int k, int c) {
		int s = 1;
		int cur = arr[0];
		for (int i = 1; i < arr.length; i++) {
			if (Math.abs(arr[i] - cur) >= c) {
				s++;
				cur = arr[i];
			}
		}
		return s >= k;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int low = 0, high = price[price.length - 1] - price[0], ans = Integer.MIN_VALUE;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			boolean a = check(price,k,mid);
			if (a == true) {
				ans = Math.max(ans,mid);
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return ans;
	}
}