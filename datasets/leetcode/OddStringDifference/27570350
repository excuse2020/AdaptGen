class Solution {
	String oddString(String[] words) {
		int m = words.length;
		int n = words[0].length();
		Integer[] diff1 = new Integer[n - 1];
		Integer[] diff2 = new Integer[n - 1];
		int res1 = 0;
		int res2 = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n - 1; j++) {
				if (i == 0) {
					diff1[j] = words[i].charAt(j + 1) - words[i].charAt(j);
					res1 = i;
				} 
				else {
					if (diff2[j] == null && words[i].charAt(j + 1) - words[i].charAt(j) != diff1[j]) {
						diff2[j] = words[i].charAt(j + 1) - words[i].charAt(j);
						res2 = i;
					} 
					else if (diff2[j] == null && words[i].charAt(j + 1) - words[i].charAt(j) == diff1[j]) {
						continue;
					} 
					else {
						if (words[i].charAt(j + 1) - words[i].charAt(j) != diff1[j]) {
							return words[res1];
						} 
						else if (words[i].charAt(j + 1) - words[i].charAt(j) != diff2[j]) {
							return words[res2];
						}
					}
				}
			}
		}
		return words[m - 1];
	}
}