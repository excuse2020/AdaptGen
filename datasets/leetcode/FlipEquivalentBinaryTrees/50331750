class Solution {
	boolean flipEquiv(TreeNode h, TreeNode r) {
		if ((h != null && r != null) && h.val != r.val) {
			return false;
		}
		return fn(h,r);
	}
	boolean fn(TreeNode r, TreeNode h) {
		if (r == null && h == null) {
			return true;
		}
		if (r == null || h == null) {
			return false;
		}
		boolean a = false, b = false, c = false, d = false;
		if ((r.left == null && h.left == null) || ((r.left != null && h.left != null) && (r.left.val == h.left.val))) {
			a = fn(r.left,h.left);
		}
		if ((r.left == null && h.right == null) || ((r.left != null && h.right != null) && (r.left.val == h.right.val))) {
			b = fn(r.left,h.right);
		}
		if ((r.right == null && h.right == null) || ((r.right != null && h.right != null) && (r.right.val == h.right.val))) {
			c = fn(r.right,h.right);
		}
		if ((r.right == null && h.left == null) || ((r.right != null && h.left != null) && (r.right.val == h.left.val))) {
			d = fn(r.right,h.left);
		}
		return ((a || b) && (c || d));
	}
}