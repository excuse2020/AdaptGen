class Solution {
	int maxSatisfaction(int[] satisfaction) {
		Arrays.sort(satisfaction);
		int n = satisfaction.length;
		int sumOfArray = 0, ltc = 0;
		for (int i = n - 1; i >= 0; i--) {
			sumOfArray += satisfaction[i];
			if (sumOfArray < 0) {
				break;
			}
			ltc += sumOfArray;
		}
		return ltc;
	}
	int runDP(int[] satisfaction, int i, int time, int result) {
		if (i >= satisfaction.length) {
			return result;
		}
		return Math.max(runDP(satisfaction,i + 1,time,result),runDP(satisfaction,i + 1,time + 1,result + satisfaction[i] * time));
	}
}