class Solution {
	int result = 0;
	int pseudoPalindromicPaths(TreeNode root) {
		int[] temp = new int[10];
		solve(root,temp);
		return result;
	}
	void solve(TreeNode root, int[] temp) {
		if (root != null) {
			temp[root.val]++;
		}
		if (root.left == null && root.right == null) {
			int oddFreq = 0;
			for (int i = 1; i <= 9; i++) {
				if (temp[i] % 2 != 0) {
					oddFreq++;
				}
			}
			if (oddFreq <= 1) {
				result += 1;
			} 
			else {
				result += 0;
			}
		}
		if (root.left != null) {
			solve(root.left,temp);
		}
		if (root.right != null) {
			solve(root.right,temp);
		}
		temp[root.val]--;
	}
}