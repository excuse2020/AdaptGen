class Solution {
	Map<Character, String> digitToLetters = new HashMap<>();
	List<String> resultList = new ArrayList<>();
	void generateCombinations(String digits, int currentIndex, StringBuilder currentCombination) {
		if (currentIndex == digits.length()) {
			resultList.add(currentCombination.toString());
			return;
		}
		char currentDigit = digits.charAt(currentIndex);
		String letterOptions = digitToLetters.get(currentDigit);
		if (letterOptions != null) {
			for (int i = 0; i < letterOptions.length(); i++) {
				char letter = letterOptions.charAt(i);
				currentCombination.append(letter);
				generateCombinations(digits,currentIndex + 1,currentCombination);
				currentCombination.deleteCharAt(currentCombination.length() - 1);
			}
		}
	}
	List<String> letterCombinations(String digits) {
		if (digits == null || digits.length() == 0) {
			return resultList;
		}
	}
}