class Solution {
	int res = Integer.MIN_VALUE;
	int dfs(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = dfs(root.left);
		int right = dfs(root.right);
		int leftLen = 0;
		int rightLen = 0;
		if (root.left != null) {
			if (root.left.val == root.val) {
				leftLen++;
				leftLen = left + leftLen;
			}
		}
		if (root.right != null) {
			if (root.right.val == root.val) {
				rightLen++;
				rightLen = rightLen + right;
			}
		}
		res = Math.max(res,rightLen + leftLen);
		return Math.max(rightLen,leftLen);
	}
	int longestUnivaluePath(TreeNode root) {
		dfs(root);
		return res == Integer.MIN_VALUE ? 0 : res;
	}
}