class Solution {
	int[] cycleLengthQueries(int n, int[][] queries) {
		int len = queries.length;
		int[] ans = new int[len];
		int pos = 0;
		for (int[] q: queries) {	
			int s1 = getDist(q[0]);
			int s2 = getDist(q[1]);
			int s3 = getDist(getLCA(q[0],q[1]));
			ans[pos++] = 1 + s1 - (2 * s3);
		}
		return ans;
	}
	int getDist(int n) {
		int dist = 0;
		while (n > 0) {
			dist++;
			n /= 2;
		}
		return dist - 1;
	}
	int getLCA(int a1, int b1) {
		int a = a1;
		int b = b1;
		while (a != b) {
			a = a == 1 ? b1 : a / 2;
			b = b == 1 ? a1 : b / 2;
		}
		return a;
	}
}