class Solution {
	boolean checkIfCompleteKTrips(int[] A, int k, long mid) {
		int sum = 0;
		for (int x: A) {	
			sum += mid / x;
			if (sum >= k) {
				return true;
			}
		}
		return false;
	}
	long minimumTime(int[] A, int k) {
		int n = A.length;
		Arrays.sort(A);
		long low = 1, high = (long) k * (long) A[0];
		long ans = 0;
		while (low <= high) {
			long mid = (low + high) / 2;
			if (checkIfCompleteKTrips(A,k,mid)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}