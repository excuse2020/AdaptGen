class Solution {
	long gcd(long a, long b) {
		return (b == 0) ? a : gcd(b,a % b);
	}
	int nthMagicalNumber(long n, long a, long b) {
		long l = 2, r = Math.min(a,b) * n, both = a * b / gcd(a,b);
		while (r > l) {
			long m = l + (r - l) / 2;
			long numberOfMegicalsUpToMid = m / a + m / b - m / both;
			if (numberOfMegicalsUpToMid > n) {
				r = m - 1;
			}
			if (numberOfMegicalsUpToMid < n) {
				l = m + 1;
			}
			if (numberOfMegicalsUpToMid == n) {
				return (int) (Math.max(m / a * a,m / b * b) % 1000000007);
			}
		}
		return (int) (r % 1000000007);
	}
}