class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		HashMap<Character, Integer> map = new HashMap<>();
		int left = 1;
		int right = 0;
		int n = s.length();
		int cnt = 0;
		int ans = 0;
		if (n == 1 || n == 2) {
			return n;
		}
		for (int i = 1; i < n; i++) {
			if (s.charAt(i) == s.charAt(i - 1)) {
				cnt++;
			}
			while (cnt > 1) {
				if (s.charAt(left) == s.charAt(left - 1)) {
					cnt--;
				}
				left++;
			}
			ans = Math.max(ans,i - left + 2);
		}
		return ans;
	}
}