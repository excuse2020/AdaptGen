class Solution {
	TreeNode populateSorted(ArrayList<Integer> al, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(al.get(mid));
		root.left = populateSorted(al,start,mid - 1);
		root.right = populateSorted(al,mid + 1,end);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode temp = head;
		ArrayList<Integer> al = new ArrayList<>();
		while (temp != null) {
			al.add(temp.val);
			temp = temp.next;
		}
		return populateSorted(al,0,al.size() - 1);
	}
}