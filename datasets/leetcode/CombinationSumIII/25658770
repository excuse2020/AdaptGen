class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	void backtrack(List<Integer> current, int k, int target, int number) {
		if (current.size() == k) {
			int sum = 0;
			for (int num: current) {	
				sum += num;
			}
			if (sum == target) {
				ans.add(new ArrayList(current));
			}
			return;
		}
		for (int n = number; n <= 9; n++) {
			current.add(n);
			backtrack(current,k,target,n + 1);
			current.remove(current.size() - 1);
		}
	}
	List<List<Integer>> combinationSum3(int k, int n) {
		backtrack(new ArrayList(),k,n,1);
		return ans;
	}
}