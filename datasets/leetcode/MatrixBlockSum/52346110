class Solution {
	int helper(int[][] nums, int row, int col, int k) {
		int sum = 0;
		for (int i = row - k; i <= row + k; i++) {
			for (int j = col - k; j <= col + k; j++) {
				if (isValid(nums,i,j)) {
					sum += nums[i][j];
				}
			}
		}
		return sum;
	}
	boolean isValid(int[][] nums, int row, int col) {
		if (row >= 0 && row < nums.length && col >= 0 && col < nums[0].length) {
			return true;
		}
		return false;
	}
	int[][] matrixBlockSum(int[][] mat, int k) {
		int[][] ans = new int[mat.length][mat[0].length];
		for (int i = 0; i < mat.length; i++) {
			for (int j = 0; j < mat[i].length; j++) {
				ans[i][j] = helper(mat,i,j,k);
			}
		}
		return ans;
	}
}