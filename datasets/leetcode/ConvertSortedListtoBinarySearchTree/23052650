class Solution {
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode temp = head;
		int n = 0;
		while (temp.next != null) {
			temp = temp.next;
			n++;
		}
		return sortedListToBST(head,0,n);
	}
	TreeNode sortedListToBST(ListNode head, int start, int end) {
		if (start > end) {
			return null;
		}
		int middle = (end + start) / 2;
		ListNode temp = head;
		for (int i = start; i < middle; i++) {
			temp = temp.next;
		}
		TreeNode node = new TreeNode(temp.val);
		node.left = sortedListToBST(head,start,middle - 1);
		node.right = sortedListToBST(temp.next,middle + 1,end);
		return node;
	}
}