class Solution {
	int MOD = 1000000007;
	int numberOfGoodSubarraySplits(int[] nums) {
		int count = 0, x = 0, c = 0;
		long res = 1;
		for (int r = nums.length - 1; r > 0; r--) {
			if (nums[r] == 0) {
				c++;
			} 
			else {
				break;
			}
		}
		int n = nums.length - c;
		List<Integer> a = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				x++;
				int j = i + 1;
				while (j < n - 1 && nums[j] != 1) {
					count++;
					j++;
				}
				a.add((count + 1));
				count = 0;
			}
		}
		for (int k = 0; k < a.size(); k++) {
			res = res * a.get(k) % MOD;
		}
		if (x == 0 || x == 1) {
			return x;
		} 
		else {
			return (int) res;
		}
	}
}