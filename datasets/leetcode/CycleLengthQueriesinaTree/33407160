class Solution {
	int[] cycleLengthQueries(int n, int[][] queries) {
		int[] ans = new int[queries.length];
		for (int i = 0; i < queries.length; i++) {
			int a = (int) (Math.log(queries[i][0]) / Math.log(2));
			int b = (int) (Math.log(queries[i][1]) / Math.log(2));
			int suma = 0, sumb = 0;
			int para = queries[i][0], parb = queries[i][1];
			if (a > b) {
				for (int j = 0; j < a - b; j++) {
					suma++;
					para = (int) para / 2;
				}
			} 
			else if (b > a) {
				for (int j = 0; j < b - a; j++) {
					sumb++;
					parb = (int) parb / 2;
				}
			}
			for (int j = 0; j < Math.min(a,b); j++) {
				if (para == parb) {
					break;
				}
				para = (int) para / 2;
				parb = (int) parb / 2;
				suma++;
				sumb++;
			}
			ans[i] = suma + sumb;
		}
		return ans;
	}
}