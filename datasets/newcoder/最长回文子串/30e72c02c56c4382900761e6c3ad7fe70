class Solution {
	int getLongestPalindrome(String A, int n) {
		boolean[][] dp = new boolean[n + 1][n + 1];
		for (int i = 0; i < n; i++) {
			dp[i][i] = true;
		}
		char[] chs = A.toCharArray();
		int max = 0;
		for (int i = 0; i < n; i++) {
			for (int j = i; j >= 0; j--) {
				if (j + 1 == i) {
					dp[j][i] = chs[j] == chs[i];
					if (i - j + 1 > max) {
						max = i - j + 1;
					}
				} 
				else if (j + 1 < i) {
					if (dp[j + 1][i - 1] == true && chs[j] == chs[i]) {
						dp[j][i] = true;
						if (i - j + 1 > max) {
							max = i - j + 1;
						}
					} 
					else {
						dp[j][i] = false;
					}
				}
			}
		}
		return max;
	}
}