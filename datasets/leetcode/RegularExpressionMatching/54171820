class Solution {
	int dfs(String s, String p, int n, int m, int[][] dp) {
		if (dp[n][m] != -1) {
			return dp[n][m];
		}
		if (n == 0 && m == 0) {
			return 1;
		}
		if (m == 0) {
			return 0;
		}
		int i = 0;
	}
	boolean isMatch(String s, String p) {
		int n = s.length();
		int m = p.length();
		int[][] dp = new int[n + 1][m + 1];
		for (int i = 0; i <= n; i++) {
			Arrays.fill(dp[i],-1);
		}
		return dfs(s,p,n,m,dp) != 1 ? false : true;
	}
}