class Solution {
	TreeNode LCA(TreeNode root, int p, int q) {
		if (root == null) {
			return null;
		}
		int rootValue = root.val;
		if (rootValue == p || rootValue == q) {
			return root;
		}
		TreeNode leftTree = LCA(root.left,p,q);
		TreeNode rightTree = LCA(root.right,p,q);
		if (leftTree != null && rightTree != null) {
			return root;
		}
		if (leftTree != null) {
			return leftTree;
		}
		return rightTree;
	}
	TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		if (root == null) {
			return null;
		}
		return LCA(root,p.val,q.val);
	}
}