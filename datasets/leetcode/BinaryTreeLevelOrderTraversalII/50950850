class Solution {
	List<Integer> helper(Queue<TreeNode> q) {
		List<Integer> list = new ArrayList<>();
		for (TreeNode node: q) {	
			list.add(node.val);
		}
		return list;
	}
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		while (!q.isEmpty()) {
			result.add(0,helper(q));
			int size = q.size();
			for (int i = 0; i < size; i++) {
				TreeNode curr = q.poll();
				if (curr.left != null) {
					q.add(curr.left);
				}
				if (curr.right != null) {
					q.add(curr.right);
				}
			}
		}
		return result;
	}
}