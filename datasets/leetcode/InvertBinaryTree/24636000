class Solution {
	TreeNode invertTree(TreeNode root) {
		if (root == null) {
			return root;
		}
		invertTree(root.left);
		invertTree(root.right);
		TreeNode curr = root.left;
		root.left = root.right;
		root.right = curr;
		return root;
	}
}
class Solution {
	TreeNode invertTree(TreeNode root) {
		LinkedList<TreeNode> q = new LinkedList<TreeNode>();
		if (root != null) {
			q.add(root);
		}
		while (!q.isEmpty()) {
			TreeNode temp = q.poll();
			if (temp.left != null) {
				q.add(temp.left);
			}
			if (temp.right != null) {
				q.add(temp.right);
			}
			TreeNode curr = temp.left;
			temp.left = temp.right;
			temp.right = curr;
		}
		return root;
	}
}