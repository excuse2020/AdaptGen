class Solution {
	int countSpecialNumbers(int n) {
		return (int) digitDp(String.valueOf(n));
	}
	long digitDp(String str) {
		Long[][][][] dp = new Long[str.length() + 1][1024][2][2];
		return solve(str,0,1,0,1,dp);
	}
	long solve(String str, int idx, int leading, int available, int tight, Long[][][][] dp) {
		if (idx >= str.length()) {
			if (leading == 1) {
				return 0L;
			}
			return 1L;
		}
		if (dp[idx][available][leading][tight] != null) {
			return dp[idx][available][leading][tight];
		}
		long ans = 0;
		int upperBound;
	}
}