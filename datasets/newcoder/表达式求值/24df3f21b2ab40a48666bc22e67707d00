class Solution {
	int solve(String s) {
		Stack<Integer> stack = new Stack<>();
		int num = 0;
		char sign = '+';
		for (int i = 0; i < s.length(); i++) {
			char ch = s.charAt(i);
			if (Character.isDigit(ch)) {
				num = num * 10 + (ch - '0');
			}
			if (ch == '(') {
				int j = i, count = 0;
				for (; i < s.length(); i++) {
					if (s.charAt(i) == '(') {
						count++;
					}
					if (s.charAt(i) == ')') {
						count--;
					}
					if (count == 0) {
						break;
					}
				}
				num = solve(s.substring(j + 1,i));
			}
			if (ch == '+' || ch == '-' || ch == '*' || ch == '/' || i == s.length() - 1) {
				if (sign == '+') {
					stack.push(num);
				} 
				else if (sign == '-') {
					stack.push(-num);
				} 
				else if (sign == '*') {
					stack.push(stack.pop() * num);
				} 
				else if (sign == '/') {
					stack.push(stack.pop() / num);
				}
				sign = ch;
				num = 0;
			}
		}
		int res = 0;
		while (!stack.isEmpty()) {
			res = res + stack.pop();
		}
		return res;
	}
}