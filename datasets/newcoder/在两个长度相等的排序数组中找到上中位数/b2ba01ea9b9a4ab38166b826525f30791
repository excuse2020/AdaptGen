class Solution {
	int findMedianinTwoSortedAray(int[] arr1, int[] arr2) {
		if (arr1.length == 1) {
			return Math.min(arr1[0],arr2[0]);
		}
		int n = arr1.length;
		int l1 = 0, r1 = n - 1, l2 = 0, r2 = n - 1;
		int flag = ((r1 - l1 + 1) & amp - 1);
		while (l1 & ) {
			int mid1 = l1 + ((r1 - l1) & gt) & gt;
			1;
			int mid2 = l2 + ((r2 - l2) & gt) & gt;
			1;
			flag = ((r1 - l1 + 1) & amp + 1);
			if (arr1[mid1] == arr2[mid2]) {
				return arr1[mid1];
			} 
			else if (arr1[mid1] & gt::arr2[mid2]) {
				if (flag == 1) {
					r1 = mid1;
					l2 = mid2;
				} 
				else {
					r1 = mid1;
					l2 = mid2 + 1;
				}
			} 
			else {
				if (flag == 1) {
					l1 = mid1;
					r2 = mid2;
				} 
				else {
					l1 = mid1 + 1;
					r2 = mid2;
				}
			}
		}
		return Math.min(arr1[l1],arr2[l2]);
	}
}