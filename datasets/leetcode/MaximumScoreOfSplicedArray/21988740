class Solution {
	int helper(int arr1, int arr2) {
		int n = arr1.length;
		int currentSum = 0;
		int maxSum = 0;
		for (int i = 0; i < n; i++) {
			currentSum = currentSum + arr1[i] - arr2[i];
			if (currentSum < 0) {
				currentSum = 0;
			}
			maxSum = Math.max(maxSum,currentSum);
		}
		return maxSum;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int sum1 = 0;
		int sum2 = 0;
		int max = 0;
		for (int i = 0; i < nums1.length; i++) {
			sum1 = sum1 + nums1[i];
			sum2 = sum2 + nums2[i];
		}
		max = Math.max(max,sum2 + helper(nums1,nums2));
		max = Math.max(max,sum1 + helper(nums2,nums1));
		return max;
	}
}