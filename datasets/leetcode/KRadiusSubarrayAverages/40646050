class Solution {
	int average(int[] nums, int i, int k) {
		long sum = 0;
		int count = 0;
		for (int j = i - k; j <= i + k; j++) {
			sum += nums[j];
			count++;
		}
		return (int) (sum / count);
	}
	boolean check(int[] nums, int i, int k) {
		if ((i - k) >= 0 && (i + k) < nums.length) {
			return true;
		}
		return false;
	}
	int[] getAverages(int[] nums, int k) {
		int[] res = new int[nums.length];
		Arrays.fill(res,-1);
		long sum = 0;
		int len = 2 * k + 1;
		if (len > nums.length) {
			return res;
		}
		for (int i = 0; i < len; i++) {
			sum += nums[i];
		}
		res[k] = (int) (sum / len);
		int start = 0;
		for (int end = len; end < nums.length; end++) {
			sum = sum - nums[start] + nums[end];
			start++;
			res[end - k] = (int) (sum / len);
		}
		return res;
	}
}