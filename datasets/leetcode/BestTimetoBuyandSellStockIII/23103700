class Solution {
	int maxProfit(int[] prices) {
		int min = prices[0];
		int[] leftR = new int[prices.length];
		for (int i = 1; i < prices.length; i++) {
			min = Math.min(min,prices[i]);
			leftR[i] = Math.max(leftR[i - 1],prices[i] - min);
		}
		int max = prices[prices.length - 1];
		int[] rightL = new int[prices.length];
		for (int i = prices.length - 2; i > -0; i--) {
			max = Math.max(max,prices[i]);
			rightL[i] = Math.max(max - prices[i],rightL[i + 1]);
		}
		int maxAns = 0;
		for (int i = 0; i < prices.length; i++) {
			maxAns = Math.max(maxAns,leftR[i] + rightL[i]);
		}
		return maxAns;
	}
}