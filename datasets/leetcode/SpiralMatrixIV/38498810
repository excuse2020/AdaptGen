class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] arr = new int[m][n];
		Arrays.stream(arr).forEach((A) -> {Arrays.fill(A,-1)});
		int minr = 0, minc = 0, maxr = m - 1, maxc = n - 1;
		int c = 0, t = m * n;
		while (c < t && head != null) {
			for (int i = minr, j = minc; j <= maxc && c < t; j++) {
				if (head != null) {
					arr[i][j] = head.val;
					head = head.next;
				}
				c++;
			}
			minr++;
			for (int i = minr, j = maxc; i <= maxr && c < t; i++) {
				if (head != null) {
					arr[i][j] = head.val;
					head = head.next;
				}
				c++;
			}
			maxc--;
			for (int i = maxr, j = maxc; j >= minc && c < t; j--) {
				if (head != null) {
					arr[i][j] = head.val;
					head = head.next;
				}
				c++;
			}
			maxr--;
			for (int i = maxr, j = minc; i >= minr && c < t; i--) {
				if (head != null) {
					arr[i][j] = head.val;
					head = head.next;
				}
				c++;
			}
			minc++;
		}
		return arr;
	}
}