class Solution {
	ListNode EntryNodeOfLoop(ListNode pHead) {
		ListNode node = meetingNode(pHead);
		if (node == null) {
			return null;
		}
		int count = 1;
		ListNode p1 = node;
		while (p1.next != node) {
			p1 = p1.next;
			count++;
		}
		p1 = pHead;
		for (int i = 0; i < count; i++) {
			p1 = p1.next;
		}
		ListNode p2 = pHead;
		while (p1 != p2) {
			p1 = p1.next;
			p2 = p2.next;
		}
		return p1;
	}
	ListNode meetingNode(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode slow = head.next;
		if (slow == null) {
			return null;
		}
		ListNode fast = slow.next;
		while (slow != null && fast != null) {
			if (slow == fast) {
				return fast;
			}
			slow = slow.next;
			fast = fast.next.next;
		}
		return null;
	}
}