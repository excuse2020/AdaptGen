class Solution {
	int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int rect1 = findTotalArea(ax1,ay1,ax2,ay2);
		int rect2 = findTotalArea(bx1,by1,bx2,by2);
		int iAreaX = findIntersectionArea(ax1,ax2,bx1,bx2);
		int iAreaY = findIntersectionArea(ay1,ay2,by1,by2);
		int overlapArea = 0;
		if (iAreaX > 0 && iAreaY > 0) {
			overlapArea = iAreaX * iAreaY;
		}
		return rect1 + rect2 - overlapArea;
	}
	int findIntersectionArea(int c1, int c2, int c3, int c4) {
		return Math.min(c2,c4) - Math.max(c1,c3);
	}
	int findTotalArea(int x1, int y1, int x2, int y2) {
		return Math.abs(x1 - x2) * Math.abs(y1 - y2);
	}
}