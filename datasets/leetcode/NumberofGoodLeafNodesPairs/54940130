class Solution {
	int cnt = 0;
	int countPairs(TreeNode root, int distance) {
		helper(root,distance);
		return cnt;
	}
	List<Integer> helper(TreeNode root, int d) {
		if (root == null) {
			return new ArrayList<>();
		}
		if (root.left == null && root.right == null) {
			List<Integer> leaf = new ArrayList<>();
			leaf.add(1);
			return leaf;
		}
		List<Integer> leftDistances = helper(root.left,d);
		List<Integer> rightDistances = helper(root.right,d);
		for (int l: leftDistances) {	
			for (int r: rightDistances) {	
				if (l + r <= d) {
					cnt++;
				}
			}
		}
		List<Integer> currentDistances = new ArrayList<>();
		for (int l: leftDistances) {	
			currentDistances.add(l + 1);
		}
		for (int r: rightDistances) {	
			currentDistances.add(r + 1);
		}
		return currentDistances;
	}
}