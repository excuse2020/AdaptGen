class Solution {
	boolean dsu(String s, String t) {
		int n = s.length();
		int[] parr = new int[52];
		int[] size = new int[52];
		for (int i = 0; i < 52; i++) {
			size[i] = 1;
			parr[i] = i;
		}
		int i = 0;
		char c1 = s.charAt(i);
		char c2 = t.charAt(i);
		int p1;
	}
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> ans = new ArrayList<>();
		for (String s: words) {	
			if (dsu(s,pattern)) {
				ans.add(s);
			}
		}
		return ans;
	}
	int findPar(int u, int[] parr) {
		return (u == parr[u]) ? u : (parr[u] = findPar(parr[u],parr));
	}
}