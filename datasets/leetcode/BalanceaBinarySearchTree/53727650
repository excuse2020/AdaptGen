class Solution {
	List<Integer> li = new LinkedList<>();
	TreeNode balanceBST(TreeNode root) {
		dfs(root);
		return buildBST(0,li.size() - 1);
	}
	TreeNode buildBST(int l, int r) {
		if (l > r) {
			return null;
		}
		int m = (l + r) / 2;
		TreeNode t = new TreeNode(li.get(m));
		t.left = buildBST(l,m - 1);
		t.right = buildBST(m + 1,r);
		return t;
	}
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		dfs(root.left);
		li.add(root.val);
		dfs(root.right);
	}
}