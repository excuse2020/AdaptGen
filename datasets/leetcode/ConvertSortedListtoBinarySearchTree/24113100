class Solution {
	TreeNode build(int[] nums, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(nums[mid]);
		root.left = build(nums,start,mid - 1);
		root.right = build(nums,mid + 1,end);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		ListNode t = head;
		int c = 0;
		while (t != null) {
			c++;
			t = t.next;
		}
		int nums = new int[c];
		for (int i = 0; head != null; i++) {
			nums[i] = head.val;
			head = head.next;
		}
		return build(nums,0,c - 1);
	}
}