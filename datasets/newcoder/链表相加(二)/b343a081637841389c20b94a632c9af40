class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode overHead1 = overList(head1);
		ListNode overHead2 = overList(head2);
		ListNode head = new ListNode(0);
		ListNode index = head;
		int carry = 0;
		int sum = 0;
		int val = 0;
		while (overHead1 != null || overHead2 != null) {
			if (overHead1 == null) {
				sum = overHead2.val + carry;
				overHead2 = overHead2.next;
			} 
			else if (overHead2 == null) {
				sum = overHead1.val + carry;
				overHead1 = overHead1.next;
			} 
			else {
				sum = overHead1.val + overHead2.val;
				overHead1 = overHead1.next;
				overHead2 = overHead2.next;
			}
			val = sum % 10;
			carry = sum / 10;
			index.next = new ListNode(val);
			index = index.next;
		}
		if (carry != 0) {
			index.next = new ListNode(carry);
			index = index.next;
		}
		return overList(head.next);
	}
	ListNode overList(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode node = null, cur = head;
		while (cur != null) {
			ListNode tail = cur.next;
			cur.next = node;
			node = cur;
			cur = tail;
		}
		return node;
	}
}