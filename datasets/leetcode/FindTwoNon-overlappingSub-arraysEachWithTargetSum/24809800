class Solution {
	int minSumOfLengths(int[] arr, int target) {
		int n = arr.length, ws = 0, we = 0, sum = 0;
		long[] dp = new long[n];
		Arrays.fill(dp,Integer.MAX_VALUE);
		while (ws < n) {
			sum += arr[ws];
			while (sum > target) {
				sum -= arr[we++];
			}
			if (sum == target) {
				dp[ws] = ws - we + 1;
			}
			ws++;
		}
		long res = Integer.MAX_VALUE;
		for (int i = 0; i < n; i++) {
			if (dp[i] < Integer.MAX_VALUE) {
				int left = i - (int) dp[i];
				if (left >= 0) {
					res = Math.min(res,dp[i] + dp[left]);
				}
			}
			if (i - 1 >= 0) {
				dp[i] = Math.min(dp[i],dp[i - 1]);
			}
		}
		if (res > n) {
			return -1;
		}
		return (int) res;
	}
}