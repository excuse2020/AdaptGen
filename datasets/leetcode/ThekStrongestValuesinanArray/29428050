class Solution {
	int[] getStrongest(int[] arr, int k) {
		int n = arr.length, x = 0;
		Arrays.sort(arr);
		int m = arr[((n - 1) / 2)];
		int[] ans = new int[k];
		int left = 0, right = n - 1;
		while (left < right) {
			int lft = m - arr[left];
			int rht = arr[right] - m;
			if (lft == rht) {
				if (arr[left] > arr[right]) {
					ans[x] = arr[left];
					left++;
				} 
				else {
					ans[x] = arr[right];
					right--;
				}
			} 
			else if (lft > rht) {
				ans[x] = arr[left];
				left++;
			} 
			else {
				ans[x] = arr[right];
				right--;
			}
			x++;
			if (x == k) {
				return ans;
			}
		}
		ans[x] = arr[left];
		return ans;
	}
}