class Solution {
	ListNode oddEvenList(ListNode head) {
		Queue<Integer> q1 = new LinkedList<>();
		Queue<Integer> q2 = new LinkedList<>();
		ListNode node = new ListNode(-1);
		ListNode newNode = node;
		int index = 1;
		while (head != null) {
			if (index % 2 != 0) {
				q1.offer(head.val);
			} 
			else {
				q2.offer(head.val);
			}
			index++;
			head = head.next;
		}
		while (!q1.isEmpty()) {
			node.next = new ListNode(q1.poll());
			node = node.next;
		}
		while (!q2.isEmpty()) {
			node.next = new ListNode(q2.poll());
			node = node.next;
		}
		return newNode.next;
	}
}