class Solution {
	int longestSubsequence(int[] arr, int difference) {
		int max = 1;
		HashMap<Integer, Integer> hm = new HashMap<>();
		HashSet<Integer> hs = new HashSet<>();
		for (int i = arr.length - 1; i >= 0; i--) {
			if (hs.contains(arr[i])) {
				int val = hm.get(arr[i] + difference) + 1;
				hm.put(arr[i],val);
				hs.add(arr[i] - difference);
				if (max < val) {
					max = val;
				}
			} 
			else {
				hm.put(arr[i],1);
				hs.add(arr[i] - difference);
			}
		}
		return max;
	}
}