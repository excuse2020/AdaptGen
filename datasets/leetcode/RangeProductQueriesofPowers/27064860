class Solution {
	int[] productQueries(int n, int[][] queries) {
		int mod = (int) 1e9 + 7;
		List<Integer> temp = new ArrayList<>();
		List<Integer> sum = new ArrayList<>();
		while (n > 0) {
			temp.add((int) n % 2);
			n /= 2;
		}
		for (int i = 0; i < temp.size(); i++) {
			if (temp.get(i) == 1) {
				int t = (int) Math.pow(2,i);
				sum.add(t);
			}
		}
		int[] ans = new int[queries.length];
		int index = 0;
		for (int[] row: queries) {	
			long sm = 1;
			for (int i = row[0]; i <= row[1]; i++) {
				sm = (long) (sm * sum.get(i) % mod);
			}
			ans[index++] = ((int) sm % mod);
		}
		return ans;
	}
}