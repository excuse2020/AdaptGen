class Solution {
	int binarySearch(int[] potions, int spell, long success) {
		int low = 0;
		int high = potions.length - 1;
		while (low <= high) {
			int mid = (low + high) / 2;
			if ((long) potions[mid] * spell >= success) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int[] ansA = new int[spells.length];
		Arrays.sort(potions);
		for (int i = 0; i < spells.length; i++) {
			int ans = binarySearch(potions,spells[i],success);
			int possible = potions.length - ans;
			ansA[i] = possible;
		}
		return ansA;
	}
}