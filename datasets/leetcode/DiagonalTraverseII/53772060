class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		HashMap<Integer, List<Integer>> hs = new HashMap<>();
		int count = 0;
		for (int i = nums.size() - 1; i >= 0; i--) {
			for (int j = 0; j < nums.get(i).size(); j++) {
				if (hs.containsKey(i + j)) {
					hs.get(i + j).add(nums.get(i).get(j));
				} 
				else {
					List<Integer> ans = new ArrayList<>();
					ans.add(nums.get(i).get(j));
					hs.put(i + j,ans);
				}
				count++;
			}
		}
		System.out.println(hs);
		int[] arr = new int[count];
		int l = 0;
		int d = 0;
		while (hs.containsKey(d)) {
			List<Integer> z = hs.get(d);
			for (int a: z) {	
				arr[l] = a;
				l++;
			}
			d++;
		}
		return arr;
	}
}