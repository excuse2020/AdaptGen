class Solution {
	StringBuilder getRepresentation(int n, int b) {
		StringBuilder sb = new StringBuilder();
		while (n > b) {
			sb.append(n % b);
			n = n / b;
		}
		sb.append(n);
		return sb;
	}
	boolean isPalindrome(StringBuilder s) {
		int n = s.length();
		for (int i = 0; i < n / 2; i++) {
			if (s.charAt(i) != s.charAt(n - 1)) {
				return false;
			}
		}
		return true;
	}
	boolean isStrictlyPalindromic(int n) {
		for (int i = 2; i < n - 1; i++) {
			if (!isPalindrome(getRepresentation(n,i))) {
				return false;
			}
		}
		return true;
	}
}