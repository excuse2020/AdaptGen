class Solution {
	void inOrder(TreeNode root, Queue<TreeNode> q) {
		if (root == null) {
			return;
		}
		inOrder(root.left,q);
		q.add(root);
		inOrder(root.right,q);
	}
	TreeNode increasingBST(TreeNode root) {
		if (root == null) {
			return root;
		}
		Queue<TreeNode> q = new LinkedList<>();
		inOrder(root,q);
		TreeNode rootNode = q.remove();
		makeTree(rootNode,q);
		return rootNode;
	}
	void makeTree(TreeNode rootNode, Queue<TreeNode> q) {
		if (q.isEmpty()) {
			return;
		}
		TreeNode currNode = q.remove();
		currNode.left = null;
		rootNode.right = currNode;
		makeTree(currNode,q);
	}
}