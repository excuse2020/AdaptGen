class Solution {
	int minimumCost(int m, int n, int[] hCut, int[] vCut) {
		int h = 1, v = 1;
		Arrays.sort(hCut);
		Arrays.sort(vCut);
		int p1 = m - 2;
		int p2 = n - 2;
		int ans = 0;
		while (p1 >= 0 && p2 >= 0) {
			if (hCut[p1] > vCut[p2]) {
				h++;
				ans += v * hCut[p1];
				p1--;
			} 
			else {
				v++;
				ans += h * vCut[p2];
				p2--;
			}
		}
		while (p1 >= 0) {
			h++;
			ans += v * hCut[p1];
			p1--;
		}
		while (p2 >= 0) {
			v++;
			ans += h * vCut[p2];
			p2--;
		}
		return ans;
	}
}