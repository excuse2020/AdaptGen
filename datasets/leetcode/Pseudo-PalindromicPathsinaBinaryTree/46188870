class Solution {
	int count = 0;
	int[] freq;
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		freq[root.val]++;
		if (root.left == null && root.right == null) {
			if (isPalindrome()) {
				count++;
			}
		}
		dfs(root.left);
		dfs(root.right);
		freq[root.val]--;
	}
	boolean isPalindrome() {
		int odd = 0;
		for (int i = 1; i <= 9; i++) {
			if (freq[i] % 2 != 0) {
				odd++;
			}
		}
		if (odd > 1) {
			return false;
		}
		return true;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		freq = new int[10];
		dfs(root);
		return count;
	}
}