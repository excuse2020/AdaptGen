class Solution {
	int mod = (int) Math.pow(10,9) + 7;
	int numRollsToTarget(int n, int k, int target) {
		int[][] dp = new int[n + 1][target + 1];
		for (int i = 0; i < n + 1; i++) {
			Arrays.fill(dp[i],-1);
		}
		return solve(n,k,target,dp);
	}
	int solve(int n, int k, int target, int[][] dp) {
		if (target < 0) {
			return 0;
		}
		if (dp[n][target] != -1) {
			return dp[n][target];
		}
		if (n == 0) {
			return dp[n][target] = target == 0 ? 1 : 0;
		}
		int result = 0;
		for (int i = 1; i <= k; i++) {
			result = (result + solve(n - 1,k,target - i,dp)) % mod;
		}
		return dp[n][target] = result;
	}
}