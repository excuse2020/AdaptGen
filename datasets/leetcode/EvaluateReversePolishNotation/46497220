class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> st = new Stack<>();
		for (int i = 0; i < tokens.length; i++) {
			if (st.size() > 0 && tokens[i].equals("+")) {
				int v2 = st.pop();
				int v1 = st.pop();
				int ans = v1 + v2;
				st.add(ans);
			} 
			else if (st.size() > 0 && tokens[i].equals("-")) {
				int v2 = st.pop();
				int v1 = st.pop();
				int ans = v1 - v2;
				st.add(ans);
			} 
			else if (st.size() > 0 && tokens[i].equals("*")) {
				int v2 = st.pop();
				int v1 = st.pop();
				int ans = v1 * v2;
				st.add(ans);
			} 
			else if (st.size() > 0 && tokens[i].equals("/")) {
				int v2 = st.pop();
				int v1 = st.pop();
				int ans = v1 / v2;
				st.add(ans);
			} 
			else {
				String s = tokens[i];
				st.add(Integer.parseInt(s));
			}
		}
		return st.pop();
	}
}