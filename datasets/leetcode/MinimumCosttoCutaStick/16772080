class Solution {
	int minCost(int n, int[] cuts) {
		if (n <= 1) {
			return 0;
		}
		int[] arr = new int[cuts.length + 2];
		arr[0] = 0;
		arr[arr.length - 1] = n;
		for (int i = 0; i < cuts.length; i++) {
			arr[i + 1] = cuts[i];
		}
		Arrays.sort(arr);
		int dp = new int[arr.length][arr.length];
		n = arr.length;
		for (int l = 2; l <= n; l++) {
			for (int i = 0; i <= n - l; i++) {
				int j = l + i;
				dp[i][j] = Integer.MAX_VALUE;
				for (int k = i + 1; k <= j; k++) {
					int len = arr[j] - arr[i];
					dp[i][j] = mini(dp[i][j],len + dp[i][k]);
				}
			}
		}
		return dp[0][arr.length - 1];
	}
	int mini(int a, int b) {
		return a < b ? a : b;
	}
}