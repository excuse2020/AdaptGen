class Solution {
	HashMap<Integer, Integer> dic = new HashMap<>();
	int[] pre;
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		this.pre = pre;
		for (int i = 0; i < vin.length; i++) {
			dic.put(vin[i],i);
		}
		return recur(0,0,vin.length - 1);
	}
	TreeNode recur(int root, int left, int right) {
		if (left > right) {
			return null;
		}
		TreeNode RootNode = new TreeNode(pre[root]);
		int idx = dic.get(pre[root]);
		RootNode.left = recur(root + 1,left,idx - 1);
		RootNode.right = recur(root + idx - left + 1,idx + 1,right);
		return RootNode;
	}
}