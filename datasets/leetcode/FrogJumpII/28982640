class Solution {
	int maxJump(int[] stones) {
		int n = stones.length;
		int best = stones[n - 1] - stones[0];
		if (n == 2) {
			return best;
		}
		int maxTake = stones[1] - stones[0];
		for (int i = 2; i < n; i += 2) {
			maxTake = Math.max(maxTake,stones[i] - stones[i - 2]);
		}
		for (int i = 3; i < n; i++) {
			maxTake = Math.max(maxTake,stones[i] - stones[i - 2]);
		}
		return Math.min(maxTake,best);
	}
}