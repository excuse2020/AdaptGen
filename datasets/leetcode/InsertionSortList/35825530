class Solution {
	ListNode insertionSortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode newhead = new ListNode(Integer.MIN_VALUE);
		newhead.next = head;
		head = newhead;
		ListNode currNode = head.next.next;
		ListNode prevNode = head.next;
		while (currNode != null) {
			ListNode temp = head;
			if (currNode.val < prevNode.val) {
				while (temp != currNode) {
					if (temp.next.val > currNode.val) {
						ListNode currNodenext = currNode.next;
						ListNode newNode = new ListNode(currNode.val);
						newNode.next = temp.next;
						temp.next = newNode;
						currNode = currNode.next;
						prevNode.next = currNode;
						break;
					}
					temp = temp.next;
				}
			} 
			else {
				prevNode = currNode;
				currNode = currNode.next;
			}
		}
		return head.next;
	}
}