class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		int i = 0, currwidth = 0, currWords = 0;
		List<String> text = new ArrayList<>();
		StringBuilder strbldr = new StringBuilder();
		while (i < words.length) {
			currwidth = 0;
			currWords = 0;
			while (i < words.length && currwidth + words[i].length() <= maxWidth) {
				strbldr.append(words[i] + " ");
				currwidth += words[i].length() + 1;
				currWords++;
				++i;
			}
			strbldr.deleteCharAt(strbldr.length() - 1);
			text.add(justify(strbldr,currWords,maxWidth,i == words.length));
			strbldr = new StringBuilder();
		}
		return text;
	}
	String justify(StringBuilder strbldr, int currWords, int maxWidth, boolean last) {
		StringBuilder spaceWord = new StringBuilder();
		int total = maxWidth - strbldr.length();
		spaceWord.append(strbldr).append(" ".repeat(total));
		int all = total / (currWords - 1);
		int extra = total % (currWords - 1);
		int i = 0;
		int k = 0;
		int spacesToApply = all + (extra-- > 0 ? 1 : 0);
	}
}