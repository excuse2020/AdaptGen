class Solution {
	HashMap<Integer, Integer> map = new HashMap<>();
	int[] po;
	TreeNode reConstructBinaryTree(int[] pre, int[] in) {
		po = pre;
		for (int i = 0; i < in.length; i++) {
			map.put(in[i],i);
		}
		return recur(0,0,in.length - 1);
	}
	TreeNode recur(int pre_root, int in_left, int in_right) {
		if (in_left > in_right) {
			return null;
		}
		TreeNode root = new TreeNode(po[pre_root]);
		int i = map.get(po[pre_root]);
		root.left = recur(pre_root + 1,in_left,i - 1);
		root.right = recur(pre_root + (i - in_left),i + 1,in_right);
		return root;
	}
}