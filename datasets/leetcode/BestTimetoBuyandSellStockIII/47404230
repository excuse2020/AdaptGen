class Solution {
	int maxProfit(int[] prices) {
		int[][][] dp = new int[prices.length][2][3];
		for (int[][] arr: dp) {	
			for (int[] subarr: arr) {	
				Arrays.fill(subarr,-1);
			}
		}
		return profit(0,prices,1,0,dp);
	}
	int profit(int index, int[] prices, int buy, int count, int[][][] dp) {
		if (index == prices.length) {
			return 0;
		}
		if (count == 2) {
			return 0;
		}
		if (dp[index][buy][count] != -1) {
			return dp[index][buy][count];
		}
		int profit = 0;
		if (buy == 1) {
			profit = Math.max(-prices[index] + profit(index + 1,prices,0,count,dp),0 + profit(index + 1,prices,1,count,dp));
		} 
		else {
			profit = Math.max(prices[index] + profit(index + 1,prices,1,count + 1,dp),0 + profit(index + 1,prices,0,count,dp));
		}
		return dp[index][buy][count] = profit;
	}
}