class Solution {
	int res = 0;
	int dfs(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = dfs(root.left);
		int right = dfs(root.right);
		int rightCheck = 0;
		int leftCheck = 0;
		if (root.right != null && root.val == root.right.val) {
			rightCheck = right + 1;
		}
		if (root.left != null && root.val == root.left.val) {
			leftCheck = left + 1;
		}
		res = Math.max(res,rightCheck + leftCheck);
		return Math.max(rightCheck,leftCheck);
	}
	int longestUnivaluePath(TreeNode root) {
		dfs(root);
		return res;
	}
}