class Solution {
	TreeNode lca;
	int maxDepth;
	TreeNode lcaDeepestLeaves(TreeNode root) {
		maxDepth = 0;
		lcaDeepestLeaves(root,0);
		return lca;
	}
	int lcaDeepestLeaves(TreeNode root, int depth) {
		if (root == null) {
			return -1;
		}
		if (depth >= maxDepth) {
			maxDepth = depth;
			lca = root;
		}
		int ld = lcaDeepestLeaves(root.left,depth + 1);
		int rd = lcaDeepestLeaves(root.right,depth + 1);
		if (ld == rd && ld == maxDepth) {
			lca = root;
		}
		if (root.left == null && root.right == null) {
			return depth;
		} 
		else {
			return Math.max(ld,rd);
		}
	}
}