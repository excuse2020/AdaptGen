class Solution {
	boolean isNice(String s) {
		int[] map = new int[128];
		for (char ch: s.toCharArray()) {	
			map[ch]++;
		}
	}
	String longestNiceSubstring(String s) {
		int longest = -1;
		int longestStartIndex = -1;
		int longestEndIndex = -1;
		for (int start = 0; start < s.length(); start++) {
			Set<Character> set = new HashSet<>();
			for (int end = start; end < s.length(); end++) {
				String subStr = s.substring(start,end + 1);
				if (isNice(subStr)) {
					if (end - start + 1 > longest) {
						longestStartIndex = start;
						longestEndIndex = end;
						longest = end - start + 1;
					}
				}
			}
		}
		if (longestStartIndex != -1) {
			return s.substring(longestStartIndex,longestEndIndex + 1);
		} 
		else {
			return "";
		}
	}
}