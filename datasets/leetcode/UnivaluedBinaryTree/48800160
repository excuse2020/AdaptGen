class Solution {
	boolean find_sameNode(TreeNode root, int samnum) {
		if (root == null) {
			return true;
		}
		if (root.val != samnum) {
			return false;
		}
		boolean left = find_sameNode(root.left,samnum);
		boolean rigth = find_sameNode(root.right,samnum);
		if (!left || !rigth) {
			return false;
		}
		return true;
	}
	boolean isUnivalTree(TreeNode root) {
		boolean flag = true;
		int samnum = root.val;
		boolean left = find_sameNode(root.left,samnum);
		boolean right = find_sameNode(root.right,samnum);
		if (!left || !right) {
			flag = false;
		} 
		else {
			flag = true;
		}
		return flag;
	}
}