class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int start = 0;
		int end = mountainArr.length() - 1;
		while (start < end) {
			int mid = start + (end - start) / 2;
			if (mountainArr.get(mid) > mountainArr.get(mid + 1)) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		int index1 = start;
		int index2 = end + 1;
		int ans = -1;
		start = 0;
		while (start <= index1) {
			int mid = (start + index1) / 2;
			if (mountainArr.get(mid) < target) {
				start = mid + 1;
			} 
			else if (mountainArr.get(mid) > target) {
				index1 = mid - 1;
			} 
			else {
				ans = mid;
				break;
			}
		}
		if (ans == -1) {
			end = mountainArr.length() - 1;
			while (index2 <= end) {
				int mid = (index2 + end) / 2;
				if (mountainArr.get(mid) < target) {
					end = mid - 1;
				} 
				else if (mountainArr.get(mid) > target) {
					index2 = mid + 1;
				} 
				else {
					ans = mid;
					break;
				}
			}
		}
		return ans;
	}
}