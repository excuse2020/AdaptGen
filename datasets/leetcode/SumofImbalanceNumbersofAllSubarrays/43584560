class Solution {
	int sumImbalanceNumbers(int[] A) {
		int n = A.length;
		int cnt = 0;
		int[] rightBoundary = new int[n + 2];
		int[] valToLastId = new int[n + 2];
		Arrays.fill(valToLastId,n);
		Arrays.fill(rightBoundary,n);
		for (int i = n - 1; i >= 0; i--) {
			rightBoundary[i] = Math.min(valToLastId[A[i]],valToLastId[A[i] + 1]);
			valToLastId[A[i]] = i;
		}
		Arrays.fill(valToLastId,-1);
		for (int i = 0; i < n; i++) {
			int numLeft = i - valToLastId[A[i] + 1];
			int numRight = rightBoundary[i] - i;
			cnt += numLeft * numRight;
			valToLastId[A[i]] = i;
		}
		int numOvercounted = n * (n + 1) / 2;
		return cnt - numOvercounted;
	}
}