class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums1.length; i++) {
			map.put(nums1[i][0],nums1[i][1]);
		}
		for (int i = 0; i < nums2.length; i++) {
			if (map.containsKey(nums2[i][0])) {
				map.put(nums2[i][0],map.get(nums2[i][0]) + nums2[i][1]);
			} 
			else {
				map.put(nums2[i][0],nums2[i][1]);
			}
		}
		List<List<Integer>> ans = new ArrayList<>();
		for (Integer i: map.keySet()) {	
			ans.add(new ArrayList<>());
			ans.get(ans.size() - 1).add(i);
			ans.get(ans.size() - 1).add(map.get(i));
		}
		Collections.sort(ans,new Comparator<List<Integer>>());
		int[][] finalAns = new int[ans.size()][2];
		for (int i = 0; i < ans.size(); i++) {
			finalAns[i][0] = ans.get(i).get(0);
			finalAns[i][1] = ans.get(i).get(1);
		}
		return finalAns;
	}
}