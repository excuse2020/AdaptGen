class Solution {
	void flatten(TreeNode root) {
		if (root == null) {
			return;
		}
		List<Integer> list = new ArrayList<>();
		traverseBST(root,list);
		root.left = null;
		root.right = null;
		TreeNode curr = root;
		for (int i = 1; i < list.size(); i++) {
			curr.right = new TreeNode(list.get(i));
			curr = curr.right;
		}
	}
	void traverseBST(TreeNode node, List<Integer> list) {
		if (node == null) {
			return;
		}
		list.add(node.val);
		traverseBST(node.left,list);
		traverseBST(node.right,list);
	}
}