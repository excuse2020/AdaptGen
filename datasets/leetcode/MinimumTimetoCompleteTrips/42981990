class Solution {
	boolean isPossible(int[] time, int totalTrips, long t) {
		long sum = 0;
		for (int i = 0; i < time.length; i++) {
			sum = sum + t / time[i];
		}
		return (sum >= totalTrips);
	}
	long minimumTime(int[] time, int totalTrips) {
		int maxTime = Integer.MIN_VALUE;
		for (int i = 0; i < time.length; i++) {
			maxTime = Math.max(maxTime,time[i]);
		}
		long lo = 1;
		long hi = (long) maxTime * totalTrips;
		while (lo < hi) {
			long mid = lo + (hi - lo) / 2;
			if (isPossible(time,totalTrips,mid)) {
				hi = mid;
			} 
			else {
				lo = mid + 1;
			}
		}
		return lo;
	}
}