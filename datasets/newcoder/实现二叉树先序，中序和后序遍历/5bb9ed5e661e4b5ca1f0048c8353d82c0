class Solution {
	ArrayList<Integer> list = new ArrayList<>();
	void houxu(TreeNode root) {
		if (root == null) {
			return;
		}
		houxu(root.left);
		houxu(root.right);
		list.add(root.val);
	}
	int[][] threeOrders(TreeNode root) {
		xianxu(root);
		int len = list.size();
		int[][] res = new int[3][len];
		for (int i = 0; i < len; i++) {
			res[0][i] = list.get(i);
		}
		list.clear();
		zhongxu(root);
		for (int i = 0; i < len; i++) {
			res[1][i] = list.get(i);
		}
		list.clear();
		houxu(root);
		for (int i = 0; i < len; i++) {
			res[2][i] = list.get(i);
		}
		list.clear();
		return res;
	}
	void xianxu(TreeNode root) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		xianxu(root.left);
		xianxu(root.right);
	}
	void zhongxu(TreeNode root) {
		if (root == null) {
			return;
		}
		zhongxu(root.left);
		list.add(root.val);
		zhongxu(root.right);
	}
}