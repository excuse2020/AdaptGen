class Solution {
	boolean containsZero(int n1, int n2) {
		return containsZero(n1) || containsZero(n2);
	}
	boolean containsZero(int n) {
		if (n == 0) {
			return true;
		}
		while (n > 0) {
			if (n % 10 == 0) {
				return true;
			}
			n = n / 10;
		}
		return false;
	}
	int[] getNoZeroIntegers(int n) {
		int[] result = new int[2];
		int i = 1;
		boolean solutionFound = false;
		while (i < n && !solutionFound) {
			if (!containsZero(i,n - i)) {
				result[0] = i;
				result[1] = n - i;
				solutionFound = true;
			}
			i++;
		}
		return result;
	}
}