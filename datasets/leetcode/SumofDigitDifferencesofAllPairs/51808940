class Solution {
	long sumDigitDifferences(int[] nums) {
		int numLen = String.valueOf(nums[0]).length();
		int[][] digitFreq = new int[numLen][10];
		for (int num: nums) {	
			int pos = numLen - 1;
			while (num > 0) {
				int rem = num % 10;
				digitFreq[pos--][rem] += 1;
				num /= 10;
			}
		}
		long ans = 0;
		for (int[] digits: digitFreq) {	
			for (int i = 0; i < 10; i++) {
				for (int j = i + 1; digits[i] != 0 && j < 10; j++) {
					ans += (digits[i] * digits[j]);
				}
			}
		}
		return ans;
	}
}