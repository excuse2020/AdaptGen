class Solution {
	long maxStrength(int[] nums) {
		Arrays.sort(nums);
		if (nums[0] > 0) {
			long ans = 1;
			for (int x: nums) {	
				if (x > 0) {
					ans *= x;
				}
			}
			return ans;
		}
		if (nums[nums.length - 1] < 0) {
			int ng = 0;
			long ans = nums[0];
			for (int x: nums) {	
				if (x < 0) {
					ng++;
				}
			}
			ans = nums[0];
			if (ng % 2 != 0) {
				ng = ng - 1;
			}
			for (int i = 1; i < ng; i++) {
				ans *= nums[i];
			}
			return ans;
		}
		int temp = 1;
		for (int x: nums) {	
			if (x != 0) {
				temp *= x;
			}
			if (temp > 1) {
				temp = 7;
				break;
			}
		}
		if (temp != 7) {
			if (nums[nums.length - 1] == 0) {
				return 0;
			}
		}
		long ans = 1;
		int ng = 0;
		for (int x: nums) {	
			if (x > 0) {
				ans *= x;
			}
			if (x < 0) {
				ng++;
			}
		}
		if (ng % 2 != 0) {
			ng = ng - 1;
		}
		long ans2 = 1;
		for (int i = 0; i < ng; i++) {
			if (nums[i] < 0) {
				ans2 *= nums[i];
			}
		}
		return ans * ans2;
	}
}