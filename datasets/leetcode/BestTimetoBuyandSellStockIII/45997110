class Solution {
	int maxProfit(int[] prices) {
		int[][][] dp = new int[prices.length + 1][2][3];
		for (int i = 0; i < prices.length + 1; i++) {
			for (int j = 0; j < 2; j++) {
				Arrays.fill(dp[i][j],-1);
			}
		}
		return solve(prices,0,1,2,dp);
	}
	int solve(int[] p, int i, int buy, int limit, int[][][] dp) {
		if (i == p.length || limit == 0) {
			return 0;
		}
		if (dp[i][buy][limit] != -1) {
			return dp[i][buy][limit];
		}
		int profit = 0;
		if (buy == 1) {
			profit = Math.max(-p[i] + solve(p,i + 1,0,limit,dp),0 + solve(p,i + 1,1,limit,dp));
		}
		if (buy == 0) {
			profit = Math.max(p[i] + solve(p,i + 1,1,limit - 1,dp),0 + solve(p,i + 1,0,limit,dp));
		}
		return dp[i][buy][limit] = profit;
	}
}