class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int n = arr.length;
		int dp = new int[n + 1];
		for (int i = 1; i < n + 1; i++) {
			int currentMax = 0;
			int bestSum = 0;
			for (int j = 1; j <= k && i - j >= 0; j++) {
				currentMax = Math.max(currentMax,arr[i - j]);
				bestSum = Math.max(bestSum,dp[i - j] + currentMax * j);
			}
			dp[i] = bestSum;
		}
		return dp[n];
	}
}