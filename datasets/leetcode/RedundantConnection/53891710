class Solution {
	int[] parent;
	int find(int x) {
		if (parent[x] != x) {
			parent[x] = find(parent[x]);
		}
		return parent[x];
	}
	int[] findRedundantConnection(int[][] edges) {
		int n = edges.length;
		parent = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			parent[i] = i;
		}
		for (int[] edge: edges) {	
			if (union(edge[0],edge[1])) {
				return edge;
			}
		}
		return new int[0];
	}
	boolean union(int x, int y) {
		int rootX = find(x);
		int rootY = find(y);
		if (rootX == rootY) {
			return true;
		}
		parent[rootX] = rootY;
		return false;
	}
}