class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		int currdist = startFuel;
		if (startFuel >= target) {
			return 0;
		}
		int n = stations.length;
		int stationidx = 0;
		PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> {b - a});
		int refcnt = 0;
		while (currdist < target) {
			while (stationidx < n && stations[stationidx][0] <= currdist) {
				pq.add(stations[stationidx][1]);
				stationidx++;
			}
			if (pq.isEmpty()) {
				return -1;
			}
			currdist += pq.remove();
			refcnt++;
		}
		return refcnt;
	}
}