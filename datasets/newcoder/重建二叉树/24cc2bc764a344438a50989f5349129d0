class Solution {
	TreeNode order(List<Integer> listPre, List<Integer> listVin) {
		if (listVin.size() == 0) {
			return null;
		}
		int rootVal = listPre.remove(0);
		TreeNode root = new TreeNode(rootVal);
		int mid = listVin.indexOf(rootVal);
		root.left = order(listPre,listVin.subList(0,mid));
		root.right = order(listPre,listVin.subList(mid + 1,listVin.size()));
		return root;
	}
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		List<Integer> listPre = new ArrayList<>();
		List<Integer> listVin = new ArrayList<>();
		for (int i = 0; i < pre.length; i++) {
			listPre.add(pre[i]);
			listVin.add(vin[i]);
		}
		TreeNode root = order(listPre,listVin);
		return root;
	}
}