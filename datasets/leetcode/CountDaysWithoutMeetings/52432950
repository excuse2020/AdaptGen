class Solution {
	int countDays(int days, int[][] meetings) {
		Arrays.sort(meetings,(a, b) -> {a[0] - b[0]});
		List<int[]> merged = new ArrayList<>();
		merged.add(meetings[0]);
		for (int i = 1; i < meetings.length; i++) {
			int[] prev = merged.get(merged.size() - 1);
			int[] curr = meetings[i];
			if (prev[1] >= curr[0]) {
				merged.remove(merged.size() - 1);
				merged.add(new int{Math.min(prev[0],curr[0]), Math.max(prev[1],curr[1])});
			} 
			else {
				merged.add(curr);
			}
		}
		if (merged.size() == 1) {
			return (merged.get(0)[0] - 1) + (days - merged.get(0)[1]);
		}
		int ans = 0, idx = 0;
		ans += merged.get(idx++)[0] - 1;
		for (; idx < merged.size(); idx++) {
			int[] curr = merged.get(idx);
			ans += curr[0] - merged.get(idx - 1)[1];
		}
		ans += days - merged.get(idx - 1)[1];
		return ans;
	}
}