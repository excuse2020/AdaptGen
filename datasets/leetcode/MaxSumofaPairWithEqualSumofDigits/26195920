class Solution {
	int maximumSum(int[] nums) {
		return this.sol(nums);
	}
	int sol(int[] nums) {
		PriorityQueue<int[]> que = new PriorityQueue<>((int[] a, int[] b) -> {a[1] == b[1] ? b[0] - a[0] : b[1] - a[1]});
		for (int num: nums) {	
			int count = 0;
			int n = num;
			while (n > 0) {
				count = count + (n % 10);
				n = n / 10;
			}
			que.add(new int{num, count});
		}
		int max = -1;
		while (que.size() >= 2) {
			int[] top = que.poll();
			if (que.peek()[1] == top[1]) {
				max = Math.max(top[0] + que.peek()[0],max);
			}
		}
		return max;
	}
}