class Solution {
	void inorder(TreeNode root, List<Integer> list) {
		if (root != null) {
			inorder(root.left,list);
			list.add(root.val);
			inorder(root.right,list);
		}
	}
	int[] listToArray(List<Integer> list) {
		return list.stream().mapToInt().toArray();
	}
	void postorder(TreeNode root, List<Integer> list) {
		if (root != null) {
			postorder(root.left,list);
			postorder(root.right,list);
			list.add(root.val);
		}
	}
	void preorder(TreeNode root, List<Integer> list) {
		if (root != null) {
			list.add(root.val);
			preorder(root.left,list);
			preorder(root.right,list);
		}
	}
	int[][] threeOrders(TreeNode root) {
		int[][] arr = new int[3];
		List<Integer> list = new ArrayList<>();
		preorder(root,list);
		arr[0] = listToArray(list);
		list.clear();
		inorder(root,list);
		arr[1] = listToArray(list);
		list.clear();
		postorder(root,list);
		arr[2] = listToArray(list);
		list.clear();
		return arr;
	}
}