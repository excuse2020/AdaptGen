class Solution {
	String LCS(String str1, String str2) {
		int maxLenth = 0;
		int maxLastIndex = 0;
		int[][] dp = new int[str1.length()][str2.length()];
		int i, j;
		for (i = 0, j = 0; i < str1.length(); i++) {
			if (str1.charAt(i) == str2.charAt(j)) {
				dp[i][j] = 1;
			} 
			else {
				dp[i][j] = 0;
			}
		}
		for (i = 0, j = 0; j < str2.length(); j++) {
			if (str1.charAt(i) == str2.charAt(j)) {
				dp[i][j] = 1;
			} 
			else {
				dp[i][j] = 0;
			}
		}
		for (i = 1; i < str1.length(); i++) {
			for (j = 1; j < str2.length(); j++) {
				if (str1.charAt(i) == str2.charAt(j)) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
					if (dp[i][j] > maxLenth) {
						maxLenth = dp[i][j];
						maxLastIndex = i;
					}
				} 
				else {
					dp[i][j] = 0;
				}
			}
		}
		return str1.substring(maxLastIndex + 1 - maxLenth,maxLastIndex + 1);
	}
}