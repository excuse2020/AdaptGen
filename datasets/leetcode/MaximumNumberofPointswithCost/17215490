class Solution {
	long maxPoints(int[][] points) {
		int n = points.length, m = points[0].length;
		long[][] dp = new long[n + 1][m + 1];
		for (long[] arr: dp) {	
			Arrays.fill(arr,Long.MIN_VALUE);
		}
		long ans = Long.MIN_VALUE;
		for (int i = 0; i < m; i++) {
			ans = Math.max(ans,solve(0,i,n,m,points,dp));
		}
		return ans;
	}
	long solve(int row, int col, int n, int m, int[][] points, long[][] dp) {
		if (row == n) {
			return 0;
		}
		if (dp[row][col] != Long.MIN_VALUE) {
			return dp[row][col];
		}
		long ans = Long.MIN_VALUE;
		for (int i = 0; i < m; i++) {
			ans = Math.max(ans,points[row][col] - Math.abs(col - i) + solve(row + 1,i,n,m,points,dp));
		}
		return dp[row][col] = ans;
	}
}