class Solution {
	boolean IsBalanced_Solution(TreeNode root) {
		if (root == null) {
			return true;
		}
		return isBalanced(root.left,root.right);
	}
	int depth(TreeNode node) {
		if (node == null) {
			return 0;
		}
		return 1 + Math.max(depth(node.left),depth(node.right));
	}
	boolean isBalanced(TreeNode left, TreeNode right) {
		int leftDep = depth(left);
		int rightDep = depth(right);
		if (leftDep - rightDep < -1 || leftDep - rightDep > 1) {
			return false;
		}
		if (left == null || right == null) {
			return true;
		}
		return isBalanced(left.left,left.right) && isBalanced(right.left,right.right);
	}
}