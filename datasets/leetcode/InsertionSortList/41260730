class Solution {
	ListNode sorted;
	ListNode insertionSortList(ListNode head) {
		ListNode n = head;
		ListNode answer = null;
		while (n != null) {
			answer = sortedInsert(n.val);
			n = n.next;
		}
		return answer;
	}
	ListNode sortedInsert(int val) {
		ListNode node = new ListNode(val);
		if (sorted == null || sorted.val > val) {
			node.next = sorted;
			sorted = node;
		} 
		else {
			ListNode current = sorted;
			while (current.next != null && current.next.val < val) {
				current = current.next;
			}
			node.next = current.next;
			current.next = node;
		}
		return sorted;
	}
}