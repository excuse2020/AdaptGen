class Solution {
	int numberOfGoodSubarraySplits(int[] nums) {
		long combinations = 1;
		int mod = (int) 1e9 + 7;
		List<Integer> indicies = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				indicies.add(i);
			}
		}
		if (indicies.size() == 0) {
			return 0;
		}
		if (indicies.size() == 1) {
			return 1;
		}
		for (int i = 0; i < indicies.size() - 1; i++) {
			long current = (long) indicies.get(i);
			long next = (long) indicies.get(i + 1);
			combinations = ((combinations % mod) * ((next - current) % mod)) % mod;
		}
		return (int) combinations;
	}
}