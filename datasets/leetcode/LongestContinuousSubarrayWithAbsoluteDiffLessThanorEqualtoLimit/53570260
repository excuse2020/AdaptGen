class Solution {
	int longestSubarray(int[] nums, int limit) {
		ArrayDeque<Integer> inc = new ArrayDeque<>();
		ArrayDeque<Integer> dec = new ArrayDeque<>();
		int n = nums.length;
		int left = 0;
		int res = 0;
		for (int right = 0; right < n; right++) {
			while (!inc.isEmpty() && inc.getLast() > nums[right]) {
				inc.removeLast();
			}
			while (!dec.isEmpty() && dec.getLast() < nums[right]) {
				dec.removeLast();
			}
			inc.addLast(nums[right]);
			dec.addLast(nums[right]);
			while (dec.getFirst() - inc.getFirst() > limit) {
				if (inc.getFirst() == nums[left]) {
					inc.removeFirst();
				}
				if (dec.getFirst() == nums[left]) {
					dec.removeFirst();
				}
				left++;
			}
			res = Math.max(res,right - left + 1);
		}
		return res;
	}
}