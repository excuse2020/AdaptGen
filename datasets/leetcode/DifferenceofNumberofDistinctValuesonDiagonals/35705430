class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int output = new int[grid.length][grid[0].length];
		for (int i = 0; i < grid.length; i++) {
			int m = i, n = 0;
			HashSet<Integer> temp = new HashSet<>();
			while (m < grid.length && n < grid[0].length) {
				output[m][n] = temp.size();
				temp.add(grid[m][n]);
				m++;
				n++;
			}
			temp.clear();
			m -= 1;
			n -= 1;
			while (m >= 0 && n >= 0) {
				output[m][n] = (int) Math.abs(output[m][n] - temp.size());
				temp.add(grid[m][n]);
				m--;
				n--;
			}
		}
		for (int i = 1; i < grid[0].length; i++) {
			int m = 0, n = i;
			HashSet<Integer> temp = new HashSet<>();
			while (m < grid.length && n < grid[0].length) {
				output[m][n] = temp.size();
				temp.add(grid[m][n]);
				m++;
				n++;
			}
			temp.clear();
			m -= 1;
			n -= 1;
			while (m >= 0 && n >= 0) {
				output[m][n] = (int) Math.abs(output[m][n] - temp.size());
				temp.add(grid[m][n]);
				m--;
				n--;
			}
		}
		return output;
	}
}