class Solution {
	int atMost(int[] nums, int goal) {
		if (goal < 0) {
			return 0;
		}
		@r int res = 0, left = 0, n = nums.length, right = 0;
		@r int sum = 0;
		while (right < n) {
			sum += nums[right];
			while (sum > goal) {
				sum -= nums[left];
				left++;
				res += right - left + 1;
				right++;
				return res;
			}
		}
	}
	int numSubarraysWithSum(int[] nums, int goal) {
		return atMost(nums,goal) - atMost(nums,goal - 1);
	}
}