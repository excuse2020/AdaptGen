class Solution {
	int findPeakElement(int[] nums) {
		if (nums.length == 1) {
			return 0;
		}
		int low = 0;
		int high = nums.length - 1;
		return search1(nums,low,high);
	}
	int search1(int[] nums, int low, int high) {
		if (low > high) {
			return -1;
		}
		int mid = (low + high) / 2;
		if (mid - 1 < 0 && mid + 1 <= nums.length - 1 && nums[mid + 1] < nums[mid]) {
			return mid;
		}
		if (mid + 1 >= nums.length && mid - 1 >= 0 && nums[mid - 1] < nums[mid]) {
			return mid;
		}
		if (mid - 1 >= 0 && mid + 1 < nums.length && nums[mid - 1] < nums[mid] && nums[mid] > nums[mid + 1]) {
			return mid;
		}
		int result1 = search1(nums,low,mid - 1);
		if (result1 != -1) {
			return result1;
		}
		int result2 = search1(nums,mid + 1,high);
		if (result2 != -1) {
			return result2;
		}
		return -1;
	}
}