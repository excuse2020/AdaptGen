class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		return solver(inorder,0,inorder.length - 1,postorder,0,postorder.length - 1);
	}
	TreeNode solver(int[] inorder, int inStart, int inEnd, int[] postorder, int postStart, int postEnd) {
		if (inStart > inEnd) {
			return null;
		}
		int rootIndex = 0;
		for (int i = inStart; i <= inEnd; i++) {
			if (postorder[postEnd] == inorder[i]) {
				rootIndex = i;
				break;
			}
		}
		TreeNode root = new TreeNode(postorder[postEnd]);
		int leftSubTreeSize = rootIndex - inStart;
		root.left = solver(inorder,inStart,rootIndex - 1,postorder,postStart,postStart + leftSubTreeSize - 1);
		root.right = solver(inorder,rootIndex + 1,inEnd,postorder,postStart + leftSubTreeSize,postEnd - 1);
		return root;
	}
}