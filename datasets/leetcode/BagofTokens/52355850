class Solution {
	int ans = 0;
	int[][] cache;
	int bagOfTokensScore(int[] tokens, int power) {
		cache = new int[tokens.length + 1][tokens.length + 1];
		for (int i = 0; i < tokens.length; i++) {
			Arrays.fill(cache[i],-1);
		}
		if (tokens.length == 0) {
			return 0;
		}
		Arrays.sort(tokens);
		maximize(tokens,power,0,tokens.length - 1,0);
		return ans;
	}
	void maximize(int[] tokens, int power, int start, int end, int score) {
		if (score < 0) {
			return;
		}
		if (power < 0) {
			return;
		}
		ans = Math.max(ans,score);
		if (cache[start][end] != -1) {
			return;
		}
		cache[start][end] = ans;
		if (start > end) {
			return;
		}
		maximize(tokens,power - tokens[start],start + 1,end,score + 1);
		maximize(tokens,power + tokens[end],start,end - 1,score - 1);
	}
}