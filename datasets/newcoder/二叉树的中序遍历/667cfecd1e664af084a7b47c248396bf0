class Solution {
	int[] inorderTraversal(TreeNode root) {
		if (root == null) {
			return new int[0];
		}
		List<Integer> ll = new ArrayList<>();
		TreeNode tn = root;
		if (root.left != null) {
			tn = root.left;
			int[] left = inorderTraversal(tn);
			for (int j = 0; j < left.length; j++) {
				ll.add(left[j]);
			}
		}
		ll.add(root.val);
		if (root.right != null) {
			tn = root.right;
			int[] right = inorderTraversal(tn);
			for (int j = 0; j < right.length; j++) {
				ll.add(right[j]);
			}
		}
		int[] result = new int[ll.size()];
		for (int i = 0; i < ll.size(); i++) {
			result[i] = ll.get(i);
		}
		return result;
	}
}