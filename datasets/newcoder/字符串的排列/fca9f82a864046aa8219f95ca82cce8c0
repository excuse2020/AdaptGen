class Solution {
	boolean[] check;
	StringBuilder path;
	Set<String> ret = new HashSet<>();
	ArrayList<String> Permutation(String str) {
		check = new boolean[10];
		path = new StringBuilder();
		dfs(str);
		ArrayList<String> res = new ArrayList<>(ret);
		return res;
	}
	void dfs(String str) {
		if (path.length() == str.length()) {
			ret.add(new String(path));
			return;
		}
		for (int i = 0; i < str.length(); i++) {
			if (check[i] == false) {
				path = path.append(str.charAt(i));
				check[i] = true;
				dfs(str);
				check[i] = false;
				path.deleteCharAt(path.length() - 1);
			}
		}
	}
}