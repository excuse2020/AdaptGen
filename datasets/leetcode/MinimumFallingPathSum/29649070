class Solution {
	int minFallingPathSum(int[][] matrix) {
		int n = matrix.length;
		int m = matrix[0].length;
		int dp = new int[n][m];
		for (int i = 0; i < m; i++) {
			dp[0][i] = matrix[0][i];
		}
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < m; j++) {
				int up = matrix[i][j] + dp[i - 1][j];
				int ld = matrix[i][j];
				int rd = matrix[i][j];
				if (j > 0) {
					ld += dp[i - 1][j - 1];
				} 
				else {
					ld = Integer.MAX_VALUE;
				}
				if (j < m - 1) {
					rd += dp[i - 1][j + 1];
				} 
				else {
					rd = Integer.MAX_VALUE;
				}
				System.out.println(up + " ");
				dp[i][j] = Math.min(up,Math.min(ld,rd));
			}
		}
		int ans = Integer.MAX_VALUE;
		for (int i = 0; i < m; i++) {
			ans = Math.min(dp[n - 1][i],ans);
			System.out.println(ans);
		}
		return ans;
	}
}