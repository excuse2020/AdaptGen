class Solution {
	long maxStrength(int[] nums) {
		if (nums.length == 1) {
			return (long) nums[0];
		}
		PriorityQueue<Integer> pq = new PriorityQueue<>();
		long ans = 1;
		boolean flag = false;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < 0) {
				pq.add(nums[i]);
			} 
			else if (nums[i] > 0) {
				ans = ans * (long) nums[i];
				flag = true;
			}
		}
		while (pq.size() >= 2) {
			int num1 = pq.remove();
			int num2 = pq.remove();
			flag = true;
			ans = ans * (long) num1;
		}
		if (flag == false) {
			return 0;
		}
		return ans;
	}
}