class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		Map<Integer, TreeNode> nodes = new HashMap<>();
		Set<Integer> children = new HashSet<>();
		for (int[] desc: descriptions) {	
			int parentVal = desc[0];
			int childVal = desc[1];
			boolean isLeft = desc[2] == 1;
			TreeNode parent = nodes.getOrDefault(parentVal,new TreeNode(parentVal));
			nodes.putIfAbsent(parentVal,parent);
			TreeNode child = nodes.getOrDefault(childVal,new TreeNode(childVal));
			nodes.putIfAbsent(childVal,child);
			if (isLeft) {
				parent.left = child;
			} 
			else {
				parent.right = child;
			}
			children.add(childVal);
		}
		TreeNode root = null;
		for (int[] desc: descriptions) {	
			if (!children.contains(desc[0])) {
				root = nodes.get(desc[0]);
				break;
			}
		}
		return root;
	}
}