class Solution {
	List<Integer> largestDivisibleSubset(int[] nums) {
		int n = nums.length;
		int[] dp = new int[n + 1];
		Arrays.fill(dp,1);
		int[] prev = new int[n + 1];
		Arrays.fill(prev,-1);
		int m = 0;
		int idx = -1;
		Arrays.sort(nums);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < i; j++) {
				if (nums[i] % nums[j] == 0 && dp[i] < dp[j] + 1) {
					dp[i] = dp[j] + 1;
					prev[i] = j;
				}
			}
			if (dp[i] > m) {
				m = dp[i];
				idx = i;
			}
		}
		List<Integer> ans = new ArrayList<>();
		while (idx != -1) {
			ans.add(nums[idx]);
			idx = prev[idx];
		}
		return ans;
	}
}