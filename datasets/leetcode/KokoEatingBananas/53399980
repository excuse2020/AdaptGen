class Solution {
	boolean isWithinHours(int[] piles, int k, int h) {
		long sum = 0;
		for (int pile: piles) {	
			sum += (pile + k - 1) / k;
		}
		return sum <= h;
	}
	int minEatingSpeed(int[] piles, int h) {
		int maxPile = 0;
		for (int pile: piles) {	
			if (pile > maxPile) {
				maxPile = pile;
			}
		}
		int l = 1;
		int r = maxPile;
		int res = Integer.MAX_VALUE;
		while (l <= r) {
			int k = l + (r - l) / 2;
			if (isWithinHours(piles,k,h)) {
				if (k < res) {
					res = k;
				}
				r = k - 1;
			} 
			else {
				l = k + 1;
			}
		}
		return res;
	}
}