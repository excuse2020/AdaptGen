class Solution {
	TreeNode helper(int[] nums, int low, int high) {
		if (low > high) {
			return null;
		}
		int mid = (low + high) / 2;
		TreeNode root = new TreeNode(nums[mid]);
		root.left = helper(nums,low,mid - 1);
		root.right = helper(nums,mid + 1,high);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		ListNode temp = head;
		int n = 0;
		while (temp != null) {
			n++;
			temp = temp.next;
		}
		int nums = new int[n];
		temp = head;
		int i = 0;
		while (temp != null) {
			nums[i] = temp.val;
			i++;
			temp = temp.next;
		}
		return helper(nums,0,n - 1);
	}
}