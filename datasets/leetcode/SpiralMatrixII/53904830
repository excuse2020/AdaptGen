class Solution {
	void fillans(int[][] ans, int a, int b, int i, int n) {
		ans[a][b] = i++;
		if ((a - 1 < 0 || ans[a - 1][b] != 0) && b + 1 < n && ans[a][b + 1] == 0) {
			fillans(ans,a,b + 1,i,n);
		} 
		else if ((b + 1 >= ans[0].length || ans[a][b + 1] != 0) && a + 1 < n && ans[a + 1][b] == 0) {
			fillans(ans,a + 1,b,i,n);
		} 
		else if ((a + 1 >= ans.length || ans[a + 1][b] != 0) && b - 1 >= 0 && ans[a][b - 1] == 0) {
			fillans(ans,a,b - 1,i,n);
		} 
		else if ((b - 1 < 0 || ans[a][b - 1] != 0) && a - 1 >= 0 && ans[a - 1][b] == 0) {
			fillans(ans,a - 1,b,i,n);
		}
	}
	int[][] generateMatrix(int n) {
		int[][] ans = new int[n][n];
		fillans(ans,0,0,1,n);
		return ans;
	}
}