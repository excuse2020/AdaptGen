class Solution {
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		if (n == 2) {
			return Math.max(nums[0],nums[1]);
		}
		int b = nums[n - 2];
		int a;
		if (nums[n - 3] > b) {
			a = nums[n - 3];
		} 
		else {
			a = b;
		}
		for (int i = n - 4; i >= 0; i--) {
			int curr = nums[i];
			if (curr + b > a) {
				curr = curr + b;
				b = a;
				a = curr;
			} 
			else {
				b = a;
			}
		}
		int max1 = a;
		b = nums[n - 1];
		if (nums[n - 2] > b) {
			a = nums[n - 2];
		} 
		else {
			a = b;
		}
		boolean containsLast = false;
		for (int i = n - 3; i >= 1; i--) {
			int curr = nums[i];
			if (curr + b > a) {
				curr = curr + b;
				b = a;
				a = curr;
			} 
			else {
				b = a;
			}
		}
		int max2 = a;
		return Math.max(max1,max2);
	}
}