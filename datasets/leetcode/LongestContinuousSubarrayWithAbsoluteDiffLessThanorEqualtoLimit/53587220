class Solution {
	int longestSubarray(int[] nums, int limit) {
		int i = 0, j = 0, n = nums.length;
		int ans = 0;
		TreeMap<Integer, Integer> mpp = new TreeMap<>();
		while (j < n) {
			mpp.put(nums[j],mpp.getOrDefault(nums[j],0) + 1);
			if (mpp.lastKey() - mpp.firstKey() > limit) {
				mpp.put(nums[i],mpp.get(nums[i]) - 1);
				if (mpp.get(nums[i]) == 0) {
					mpp.remove(nums[i]);
				}
				i++;
			}
			ans = Math.max(ans,j - i + 1);
			j++;
		}
		return ans;
	}
}