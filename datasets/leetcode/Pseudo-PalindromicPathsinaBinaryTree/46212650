class Solution {
	int[] arr = new int[9];
	boolean isPalindrome() {
		boolean isAlreadyOdd = false;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 == 1) {
				if (isAlreadyOdd) {
					return false;
				}
				isAlreadyOdd = true;
			}
		}
		return true;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		return solve(root);
	}
	int solve(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int total = 0;
		arr[root.val - 1]++;
		if (root.left == null && root.right == null) {
			total = isPalindrome() ? 1 : 0;
		} 
		else {
			total = solve(root.left) + solve(root.right);
		}
		arr[root.val - 1]--;
		return total;
	}
}