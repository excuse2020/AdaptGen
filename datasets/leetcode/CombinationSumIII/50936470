class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		int[] nums = new int[9];
		List<Integer> li = new ArrayList<>();
		List<List<Integer>> res = new ArrayList<>();
		for (int i = 1; i <= 9; i++) {
			nums[i - 1] = i;
		}
		helper(nums,0,0,k,li,res,n,1);
		return res;
	}
	void helper(int[] nums, int count, int sum, int k, List<Integer> li, List<List<Integer>> res, int n, int index) {
		if (count == k) {
			if (sum == n) {
				res.add(new ArrayList<>(li));
			}
			return;
		}
		for (int i = index; i <= 9; i++) {
			li.add(i);
			sum += i;
			if (sum <= n) {
				helper(nums,count + 1,sum,k,li,res,n,i + 1);
			}
			sum -= i;
			li.remove(li.size() - 1);
		}
	}
}