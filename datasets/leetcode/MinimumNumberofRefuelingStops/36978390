class Solution {
	int minRefuelStops(int target, int startFuel, int[][] stations) {
		int count = 0;
		int distance = startFuel;
		int index = 0;
		Queue<Integer> max = new PriorityQueue<>((a, b) -> {b - a});
		while (distance < target) {
			while (index < stations.length && stations[index][0] <= distance) {
				max.offer(stations[index][1]);
				index++;
			}
			if (max.isEmpty()) {
				return -1;
			}
			distance += max.poll();
			count++;
		}
		System.gc();
		return count;
	}
}