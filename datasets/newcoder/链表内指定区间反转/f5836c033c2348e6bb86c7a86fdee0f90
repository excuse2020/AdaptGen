class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode cur = head;
		ListNode pre = null;
		ListNode temp = null;
		ListNode startBeforeNode = null;
		ListNode mNode = null;
		int index = 1;
		while (cur != null) {
			if (index < m) {
				if (index == m - 1) {
					startBeforeNode = cur;
				}
				cur = cur.next;
			} 
			else if (index <= n) {
				if (m == index) {
					mNode = cur;
				}
				temp = cur.next;
				cur.next = pre;
				pre = cur;
				cur = temp;
				if (index == n) {
					if (startBeforeNode == null) {
					} 
					else {
						startBeforeNode.next = pre;
					}
				}
			} 
			else {
				if (index == n + 1) {
					mNode.next = cur;
					break;
				}
			}
			index++;
		}
		if (m > 1) {
			return head;
		} 
		else {
			return pre;
		}
	}
}