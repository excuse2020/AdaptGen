class Solution {
	int countBits(long n) {
		int c = 0;
		while (n != 0) {
			long temp = n & 1;
			if (temp % 10 == 1) {
				c++;
			}
			n = n >> 1;
		}
		return c;
	}
	int countPrimeSetBits(int left, int right) {
		int ans = 0;
		for (int i = left; i <= right; i++) {
			int c = countBits(i);
			if (isPrime(c)) {
				ans++;
			}
		}
		return ans;
	}
	boolean isPrime(int n) {
		if (n <= 1) {
			return false;
		}
		if (n == 2 || n == 3) {
			return true;
		}
		if (n % 2 == 0) {
			return false;
		}
		for (int i = 3; i * i <= n; i += 2) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}