class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null) {
			return true;
		}
		if (head.next == null) {
			return true;
		}
		ListNode fast = head, slow = head;
		if (fast.next.next == null && fast.val != fast.next.val) {
			return false;
		}
		while (fast != null && fast.next != null) {
			fast = fast.next.next;
			slow = slow.next;
		}
		ListNode list2 = reverse(slow);
		slow.next = null;
		fast = head;
		slow = list2;
		while (fast != null && slow != null) {
			if (fast.val != slow.val) {
				return false;
			}
			fast = fast.next;
			slow = slow.next;
		}
		return true;
	}
	ListNode reverse(ListNode head) {
		ListNode curr = head, next = null, prev = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}