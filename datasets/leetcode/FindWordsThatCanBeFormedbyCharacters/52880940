class Solution {
	int countCharacters(String[] words, String chars) {
		HashMap<Character, Integer> letterToOccurrence = new HashMap<>();
		int answ = 0;
		for (int i = 0; i < chars.length(); i++) {
			letterToOccurrence.put(chars.charAt(i),letterToOccurrence.getOrDefault(chars.charAt(i),0) + 1);
		}
		for (String word: words) {	
			HashMap<Character, Integer> wordLetterToOccurrence = new HashMap<>();
			for (int i = 0; i < word.length(); i++) {
				wordLetterToOccurrence.put(word.charAt(i),wordLetterToOccurrence.getOrDefault(word.charAt(i),0) + 1);
			}
			boolean wordCanBeFormed = true;
			for (Character letter: wordLetterToOccurrence.keySet()) {	
				if (!letterToOccurrence.containsKey(letter) || letterToOccurrence.get(letter) < wordLetterToOccurrence.get(letter)) {
					wordCanBeFormed = false;
					break;
				}
			}
			if (wordCanBeFormed) {
				answ += word.length();
			}
		}
		return answ;
	}
}