class Solution {
	void dfs(TreeNode root, int targetSum, int sum, List<Integer> sublist, List<List<Integer>> result) {
		if (root == null) {
			return;
		}
		sublist.add(root.val);
		sum += root.val;
		if (root.left == null && root.right == null && sum == targetSum) {
			result.add(new ArrayList<>(sublist));
		}
		dfs(root.left,targetSum,sum,sublist,result);
		dfs(root.right,targetSum,sum,sublist,result);
		sublist.remove(sublist.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> result = new ArrayList<>();
		dfs(root,targetSum,0,new ArrayList<>(),result);
		return result;
	}
}