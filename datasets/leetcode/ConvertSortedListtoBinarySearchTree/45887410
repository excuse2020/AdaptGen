class Solution {
	TreeNode createBST(ArrayList<Integer> nums, int si, int ei) {
		if (si > ei) {
			return null;
		}
		int mid = si + (ei - si) / 2;
		TreeNode newNode = new TreeNode(nums.get(mid));
		newNode.left = createBST(nums,si,mid - 1);
		newNode.right = createBST(nums,mid + 1,ei);
		return newNode;
	}
	TreeNode sortedListToBST(ListNode head) {
		ArrayList<Integer> path = new ArrayList<>();
		ListNode temp = head;
		while (temp != null) {
			path.add(temp.val);
			temp = temp.next;
		}
		return createBST(path,0,path.size() - 1);
	}
}