class Solution {
	int numberOfPaths(int[][] grid, int k) {
		int MOD = 1_000_000_007;
		int m = grid.length, n = grid[0].length;
		int[][][] dp = new int[m][n][k];
		for (int i = m - 1; i >= 0; i--) {
			for (int j = n - 1; j >= 0; j--) {
				int cr = grid[i][j] % k;
				if (i == m - 1 && j == n - 1) {
					dp[i][j][cr] = 1;
					continue;
				}
				for (int l = 0; l < k; l++) {
					int next = (k - cr + l) % k;
					dp[i][j][l] = ((i + 1 < m ? dp[i + 1][j][next] : 0) + (j + 1 < n ? dp[i][j + 1][next] : 0)) % MOD;
				}
			}
		}
		return dp[0][0][0];
	}
}