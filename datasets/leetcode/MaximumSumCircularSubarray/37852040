class Solution {
	int kadaneAlgorithm(int[] nums) {
		int max = nums[0];
		int curSum = nums[0];
		for (int i = 1; i < nums.length; i++) {
			if (curSum < 0) {
				curSum = 0;
			}
			curSum += nums[i];
			max = Math.max(max,curSum);
		}
		return max;
	}
	int maxSubarraySumCircular(int[] nums) {
		if (nums.length == 0) {
			return 0;
		}
		int x = kadaneAlgorithm(nums);
		int y = 0;
		for (int i = 0; i < nums.length; i++) {
			y += nums[i];
			nums[i] = -nums[i];
		}
		int z = kadaneAlgorithm(nums);
		if (y + z == 0) {
			return x;
		}
		return Math.max(x,y + z);
	}
}