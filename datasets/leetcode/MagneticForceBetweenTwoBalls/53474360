class Solution {
	boolean isPossible(int[] position, int gap, int m) {
		int cnt = 1, s = 0;
		for (int i = 1; i < position.length; i++) {
			if (position[i] - position[s] >= gap) {
				cnt++;
				s = i;
			}
			if (cnt >= m) {
				return true;
			}
		}
		return false;
	}
	int maxDistance(int[] position, int m) {
		Arrays.sort(position);
		int i = 1, j = position[position.length - 1] - position[0];
		int ans = 0;
		while (i <= j) {
			int mid = i + (j - i) / 2;
			if (isPossible(position,mid,m)) {
				ans = mid;
				i = mid + 1;
			} 
			else {
				j = mid - 1;
			}
		}
		return ans;
	}
}