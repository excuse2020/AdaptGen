class Solution {
	int maxm = Integer.MIN_VALUE;
	Map<Integer, List<List<Integer>>> orMap;
	int calculate(List<Integer> temp) {
		int ans = 0;
		for (int i = 0; i < temp.size(); i++) {
			ans = ans | temp.get(i);
		}
		return ans;
	}
	int countMaxOrSubsets(int[] nums) {
		orMap = new HashMap<>();
		generate(nums,0,nums.length,new ArrayList<>());
		List<List<Integer>> t = orMap.get(maxm);
		return t.size();
	}
	void generate(int nums, int start, int end, List<Integer> temp) {
		if (start == end) {
			if (temp.size() == 0) {
				return;
			}
			int orValue = calculate(temp);
			maxm = Math.max(orValue,maxm);
			List<List<Integer>> orMapVal = orMap.get(orValue);
			if (orMapVal == null) {
				orMapVal = new ArrayList<List<Integer>>();
			}
			orMapVal.add(temp);
			orMap.put(orValue,orMapVal);
			return;
		}
		temp.add(nums[start]);
		generate(nums,start + 1,end,temp);
		temp.remove(temp.size() - 1);
		generate(nums,start + 1,end,temp);
	}
}