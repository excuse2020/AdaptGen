class Solution {
	String getPermutation(int n, int k) {
		StringBuilder s = new StringBuilder();
		for (int i = 1; i <= n; i++) {
			s.append(i);
		}
		List<String> arr = new ArrayList<>();
		solve(s.toString().toCharArray(),arr,0,n);
		Collections.sort(arr);
		return arr.get(k - 1);
	}
	void solve(char s, List<String> arr, int idx, int n) {
		if (idx == n) {
			String str = new String(s);
			arr.add(str);
			return;
		}
		for (int i = idx; i < n; i++) {
			swap(s,i,idx);
			solve(s,arr,idx + 1,n);
			swap(s,i,idx);
		}
	}
	void swap(char s, int i, int j) {
		char temp = s[i];
		s[i] = s[j];
		s[j] = temp;
	}
}