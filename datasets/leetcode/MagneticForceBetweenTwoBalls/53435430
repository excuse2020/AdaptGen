class Solution {
	boolean check(int[] position, int mid, int m) {
		int prev = position[0];
		int placed = 1;
		for (int i = 1; i < position.length; i++) {
			if (position[i] - prev >= mid) {
				prev = position[i];
				placed++;
				if (placed == m) {
					return true;
				}
			}
		}
		if (placed < m) {
			return false;
		}
		return true;
	}
	int maxDistance(int[] position, int m) {
		Arrays.sort(position);
		int low = 1;
		int ans = 1;
		int high = (position[position.length - 1] - position[0]) / (m - 1);
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (check(position,mid,m)) {
				ans = mid;
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return ans;
	}
}