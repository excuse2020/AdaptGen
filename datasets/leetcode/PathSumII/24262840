class Solution {
	List<List<Integer>> list = new ArrayList<List<Integer>>();
	void go(TreeNode node, int sum, int target, List<Integer> lis) {
		if (node == null) {
			return;
		}
		List<Integer> newl = new ArrayList<Integer>(lis);
		newl.add(node.val);
		if (node.left != null) {
			go(node.left,sum + node.val,target,newl);
		}
		if (node.right != null) {
			go(node.right,sum + node.val,target,newl);
		}
		if (node.left == null && node.right == null && node.val + sum == target) {
			list.add(newl);
		}
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		go(root,0,targetSum,new ArrayList<Integer>());
		return list;
	}
}