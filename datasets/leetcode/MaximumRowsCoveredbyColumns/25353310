class Solution {
	int ans = 0;
	void helper(int[][] mat, int cols, int curr) {
		int r = mat.length;
		int c = mat[0].length;
		if (cols == 0) {
			return;
		}
		if (curr >= c) {
			return;
		}
		int[] temp = new int[r];
		for (int i = 0; i < r; i++) {
			temp[i] = mat[i][curr];
			mat[i][curr] = 0;
		}
		int count = 0;
		for (int i = 0; i < r; i++) {
			boolean got = true;
			for (int j = 0; j < c; j++) {
				if (mat[i][j] == 1) {
					got = false;
					break;
				}
			}
			if (got) {
				count++;
			}
		}
		ans = Math.max(ans,count);
		for (int i = curr + 1; i < c; i++) {
			helper(mat,cols - 1,i);
		}
		for (int i = 0; i < r; i++) {
			mat[i][curr] = temp[i];
		}
	}
	int maximumRows(int[][] mat, int cols) {
		int c = mat[0].length;
		for (int i = 0; i < c; i++) {
			helper(mat,cols,i);
		}
		return ans;
	}
}