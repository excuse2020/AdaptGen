class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int rows = grid.length;
		int columns = grid[0].length;
		int[] maxRowHt = new int[rows];
		int[] maxColHt = new int[columns];
		Arrays.fill(maxRowHt,0);
		Arrays.fill(maxColHt,0);
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				maxRowHt[i] = Math.max(maxRowHt[i],grid[i][j]);
				maxColHt[j] = Math.max(maxColHt[j],grid[i][j]);
			}
		}
		int maxIncreaseSum = 0;
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				maxIncreaseSum += (Math.min(maxColHt[j],maxRowHt[i]) - grid[i][j]);
			}
		}
		return maxIncreaseSum;
	}
}