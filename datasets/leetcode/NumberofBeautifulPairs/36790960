class Solution {
	int countBeautifulPairs(int[] nums) {
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i + 1; j < nums.length; j++) {
				if (isCoPrime(nums[i],nums[j])) {
					count++;
				}
			}
		}
		return count;
	}
	int gcd(int num1, int num2) {
		if (num2 == 0) {
			return num1;
		}
		return gcd(num2,num1 % num2);
	}
	boolean isCoPrime(int num1, int num2) {
		int firstDigit = 0;
		int lastDigit = num2 % 10;
		while (num1 != 0) {
			firstDigit = num1 % 10;
			num1 = num1 / 10;
		}
		return gcd(firstDigit,lastDigit) == 1;
	}
}