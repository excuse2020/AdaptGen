class Solution {
	int binarySearch(int[] arr, int target) {
		int result = arr.length;
		int left = 0, right = arr.length - 1;
		while (left <= right) {
			int mid = (left + right) / 2;
			if (arr[mid] >= target) {
				result = mid;
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return result;
	}
	int[] fullBloomFlowers(int[][] flowers, int[] people) {
		int n = flowers.length;
		int starts = new int[n];
		int ends = new int[n];
		for (int i = 0; i < n; i++) {
			starts[i] = flowers[i][0];
			ends[i] = flowers[i][1];
		}
		Arrays.sort(starts);
		Arrays.sort(ends);
		int j = people.length;
		int ans = new int[j];
		for (int i = 0; i < j; i++) {
			int x = binarySearch(starts,people[i] + 1);
			int y = binarySearch(ends,people[i]);
			ans[i] = x - y;
		}
		return ans;
	}
}