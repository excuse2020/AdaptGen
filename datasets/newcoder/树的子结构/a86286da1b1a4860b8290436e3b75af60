class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		boolean result = false;
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val == root2.val) {
			result = isSame(root1,root2);
		}
		if (result == false) {
			result = HasSubtree(root1.left,root2);
			if (result == false) {
				result = HasSubtree(root1.right,root2);
			}
		}
		return result;
	}
	boolean isSame(TreeNode sub_root1, TreeNode root2) {
		boolean result = false;
		if (root2 == null) {
			return true;
		} 
		else {
			if (sub_root1 != null && sub_root1.val == root2.val) {
				return isSame(sub_root1.left,root2.left) && isSame(sub_root1.right,root2.right);
			} 
			else {
				return false;
			}
		}
	}
}