class Solution {
	int findKth(int[] a, int n, int K) {
		quickSort(a,0,a.length - 1);
		return a[n - K];
	}
	void quickSort(int[] a, int begin, int end) {
		if (begin < end) {
			int theSelectedNum = begin;
			int thSelectedValue = a[begin];
			for (int i = begin + 1; i <= end; i++) {
				if (a[i] < thSelectedValue) {
					swap(a,++theSelectedNum,i);
				}
			}
			a[begin] = a[theSelectedNum];
			a[theSelectedNum] = thSelectedValue;
			quickSort(a,begin,theSelectedNum - 1);
			quickSort(a,theSelectedNum + 1,end);
		}
	}
	void swap(int[] a, int left, int right) {
		int temp = a[left];
		a[left] = a[right];
		a[right] = temp;
	}
}