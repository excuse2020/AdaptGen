class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int height1 = 0;
		int height2 = 0;
		int red1 = red, red2 = red;
		int blue1 = blue, blue2 = blue;
		while (red1 > 0 && blue1 > 0) {
			if (height1 % 2 == 0) {
				red1 -= height1 + 1;
				if (red1 >= 0) {
					height1++;
				}
			} 
			else {
				blue1 -= height1 + 1;
				if (blue1 >= 0) {
					height1++;
				}
			}
		}
		if (red1 > 0 || blue1 > 0) {
			if (height1 % 2 == 0) {
				red1 -= height1 + 1;
				if (red1 >= 0) {
					height1++;
				}
			} 
			else {
				blue1 -= height1 + 1;
				if (blue1 >= 0) {
					height1++;
				}
			}
		}
		while (red2 > 0 && blue2 > 0) {
			if (height2 % 2 == 0) {
				blue2 -= height2 + 1;
				if (blue2 >= 0) {
					height2++;
				}
			} 
			else {
				red2 -= height2 + 1;
				if (red2 >= 0) {
					height2++;
				}
			}
		}
		if (red2 > 0 || blue2 > 0) {
			if (height2 % 2 == 0) {
				blue2 -= height2 + 1;
				if (blue2 >= 0) {
					height2++;
				}
			} 
			else {
				red2 -= height2 + 1;
				if (red2 >= 0) {
					height2++;
				}
			}
		}
		return Math.max(height1,height2);
	}
}