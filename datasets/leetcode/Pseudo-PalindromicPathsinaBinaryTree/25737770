class Solution {
	int count = 0;
	void dfs(TreeNode node, HashSet<Integer> unpaired) {
		if (node == null) {
			return;
		}
		if (!unpaired.add(node.val)) {
			unpaired.remove(node.val);
		}
		if (node.left == null && node.right == null) {
			if (unpaired.size() <= 1) {
				count++;
			}
			return;
		}
		dfs(node.left,new HashSet<>(unpaired));
		dfs(node.right,new HashSet<>(unpaired));
	}
	int pseudoPalindromicPaths(TreeNode root) {
		dfs(root,new HashSet<>());
		return count;
	}
}