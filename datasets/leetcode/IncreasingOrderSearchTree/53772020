class Solution {
	void buildBST(TreeNode currRoot, List<Integer> list) {
		while (!list.isEmpty()) {
			currRoot.right = new TreeNode(list.get(0));
			list.remove(0);
			currRoot = currRoot.right;
		}
	}
	TreeNode increasingBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		inorder(root,list);
		TreeNode newRoot = new TreeNode(list.get(0));
		list.remove(0);
		buildBST(newRoot,list);
		return newRoot;
	}
	void inorder(TreeNode root, List<Integer> list) {
		if (root == null) {
			return;
		}
		inorder(root.left,list);
		list.add(root.val);
		inorder(root.right,list);
	}
}