class Solution {
	int minimumUnfairValue = Integer.MAX_VALUE;
	int distributeCookies(int[] cookies, int k) {
		int[] childrenDistributionList = new int[k];
		helper(0,childrenDistributionList,cookies);
		return minimumUnfairValue;
	}
	void findMinimumUnFairValue(int[] arr) {
		int maxValueFromArray = Integer.MIN_VALUE;
		for (int item: arr) {	
			maxValueFromArray = Math.max(maxValueFromArray,item);
		}
		minimumUnfairValue = Math.min(minimumUnfairValue,maxValueFromArray);
	}
	void helper(int ind, int[] childrenDistributionList, int[] cookies) {
		if (ind == cookies.length) {
			findMinimumUnFairValue(childrenDistributionList);
			return;
		}
		int currentCookie = cookies[ind];
		for (int i = 0; i < childrenDistributionList.length; i++) {
			childrenDistributionList[i] += currentCookie;
			helper(ind + 1,childrenDistributionList,cookies);
			childrenDistributionList[i] -= currentCookie;
			if (childrenDistributionList[i] == 0) {
				break;
			}
		}
	}
}