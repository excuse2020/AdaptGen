class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int l = 0;
		int r = mountainArr.length() - 1;
		while (l <= r) {
			int mid = l + ((r - l) / 2);
			if (mountainArr.get(mid) > mountainArr.get(mid + 1)) {
				r = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		int maxIndex = l;
		l = 0;
		r = maxIndex - 1;
		while (l <= r) {
			int mid = l + ((r - l) / 2);
			if (mountainArr.get(mid) == target) {
				return mid;
			}
			if (mountainArr.get(mid) > target) {
				r = mid - 1;
			} 
			else {
				l = mid + 1;
			}
		}
		l = maxIndex;
		r = mountainArr.length() - 1;
		while (l <= r) {
			int mid = l + ((r - l) / 2);
			if (mountainArr.get(mid) == target) {
				return mid;
			}
			if (mountainArr.get(mid) > target) {
				l = mid + 1;
			} 
			else {
				r = mid - 1;
			}
		}
		return -1;
	}
}