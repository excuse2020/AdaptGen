class Solution {
	String caculate(String sn, String tn) {
		int length = 1;
		if (sn.length() < tn.length()) {
			length = tn.length() + 1;
		} 
		else {
			length = sn.length() + 1;
		}
		char[] result = new char[length];
		int k = length - 1;
		int i = sn.length() - 1;
		int j = tn.length() - 1;
		while (k >= 0) {
			int s = 0;
			if (i >= 0) {
				s = sn.charAt(i--) - '0';
			}
			int t = 0;
			if (j >= 0) {
				t = tn.charAt(j--) - '0';
			}
			int sum = s + t;
			result[k--] = (char) (sum + '0');
		}
		int index = length - 1;
		while (index > 0) {
			if (result[index] >= 10) {
				result[index - 1] = (char) (result[index - 1] - '0' + (result[index] - '0') / 10 + '0');
				result[index] = (char) ((result[index] - '0') % 10 + '0');
			}
			index--;
		}
		StringBuffer resultNew = new StringBuffer(String.valueOf(result));
		if (result[0] != '0') {
			return resultNew.toString();
		} 
		else {
			resultNew.deleteCharAt(0);
			return resultNew.toString();
		}
	}
	String solve(String s, String t) {
		return caculate(s,t);
	}
}