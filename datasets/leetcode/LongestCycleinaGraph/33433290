class Solution {
	int longestCycle(int[] edges) {
		int n = edges.length;
		int[] map = new int[n];
		int[] iteration = new int[n];
		Arrays.fill(map,-1);
		Arrays.fill(iteration,-1);
		int max = -1;
		int count = 0;
		for (int i = 0; i < n; i++) {
			var curr = i;
			while (curr != -1) {
				if (iteration[curr] != -1 && iteration[curr] != i) {
					break;
				}
				iteration[curr] = i;
				if (map[curr] != -1) {
					max = Math.max(max,count - map[curr]);
					break;
				}
				map[curr] = count++;
				curr = edges[curr];
			}
		}
		return max;
	}
}