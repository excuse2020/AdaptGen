class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		if (nums.length == 1 && nums[0] > threshold) {
			return 0;
		}
		if (nums.length == 1 && nums[0] <= threshold && nums[0] % 2 == 0) {
			return 1;
		}
		int max = 0;
		for (int i = 0; i < nums.length; i++) {
			int count = 0;
			int j = 0;
			if (nums[i] % 2 == 0 && nums[i] <= threshold) {
				j = i;
				while (j < nums.length) {
					if (nums[j] <= threshold) {
						if (j == nums.length - 1) {
							count++;
							break;
						} 
						else if (nums[j] % 2 != nums[j + 1] % 2) {
							count++;
						} 
						else {
							count++;
							break;
						}
						j++;
					} 
					else {
						break;
					}
				}
			}
			max = Math.max(max,count);
		}
		return max;
	}
}