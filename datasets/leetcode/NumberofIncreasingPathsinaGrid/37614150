class Solution {
	int[][] dp;
	int mod = 1_000_000_007;
	int countPaths(int[][] grid) {
		dp = new int[grid.length][grid[0].length];
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				sum = (sum + helper(grid,i,j,0)) % mod;
			}
		}
		return sum;
	}
	int helper(int[][] grid, int i, int j, int prev) {
		if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || prev >= grid[i][j]) {
			return 0;
		}
		if (dp[i][j] != 0) {
			return dp[i][j];
		}
		int cur = grid[i][j];
		dp[i][j] = (1 + helper(grid,i + 1,j,cur)) % mod;
		return dp[i][j];
	}
}