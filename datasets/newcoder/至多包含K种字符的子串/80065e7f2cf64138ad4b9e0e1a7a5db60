class Solution {
	int longestSubstring(String s, int k) {
		int left = 0, right = 0, count = 0, subcount = 0;
		HashMap<Character, Integer> frequency = new HashMap<>();
		while (right < s.length()) {
			int value = frequency.getOrDefault(s.charAt(right),0) + 1;
			frequency.put(s.charAt(right),value);
			right++;
			if (value == 1) {
				count++;
			}
			if (count <= k) {
				subcount = Math.max(subcount,right - left);
			}
			if (count > k) {
				int subValue = frequency.getOrDefault(s.charAt(left),0) - 1;
				frequency.put(s.charAt(left),subValue);
				left++;
				if (subValue == 0) {
					count--;
				}
			}
		}
		return subcount;
	}
}