class Solution {
	boolean validMountainArray(int[] arr) {
		if (arr == null || arr.length < 3) {
			return false;
		}
		int highestIndex = 0;
		int highestValue = arr[highestIndex];
		for (int i = 1; i < arr.length - 1; i++) {
			if (arr[i] > highestValue) {
				highestValue = arr[i];
				highestIndex = i;
			}
		}
		boolean leftTree = false;
		for (int i = highestIndex; i > 0; i--) {
			if (arr[i] > arr[i - 1]) {
				leftTree = true;
			} 
			else {
				leftTree = false;
				break;
			}
		}
		boolean rightTree = false;
		for (int i = highestIndex; i < arr.length - 1; i++) {
			if (arr[highestIndex] >= arr[i] && arr[i] > arr[i + 1]) {
				rightTree = true;
			} 
			else {
				rightTree = false;
				break;
			}
		}
		return leftTree && rightTree;
	}
}