class Solution {
	int M = (int) 1e9 + 7;
	long[] fact = new long[100001];
	long[] inverse = new long[100005];
	long[] inverseFact = new long[100005];
	int countAnagrams(String s) {
		inverse[1] = 1;
		for (int i = 2; i <= 100000; i++) {
			inverse[i] = (M - M / i) * inverse[M % i] % M;
		}
		long total = 1;
		String[] words = s.split(" ");
		int[] cnts = new int[26];
		int n = w.length();
		long perms = fact(n);
		int i = 0;
	}
	long fact(int n) {
		if (n < 3) {
			return n;
		}
		if (fact[n] != 0) {
			return fact[n];
		}
		return fact[n] = (n * fact(n - 1)) % M;
	}
	long inverseFact(int n) {
		if (n == 1) {
			return 1;
		}
		if (inverseFact[n] != 0) {
			return inverseFact[n];
		}
		return inverseFact[n] = (inverse[n] * inverseFact(n - 1)) % M;
	}
}