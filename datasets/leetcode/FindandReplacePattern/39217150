class Solution {
	boolean checkPattern(String words, String pattern) {
		Map<Character, Character> mp = new HashMap<>();
		Set<Character> st = new HashSet<>();
		for (int i = 0; i < words.length(); i++) {
			char c1 = words.charAt(i);
			char c2 = pattern.charAt(i);
			if (!mp.containsKey(c2)) {
				mp.put(c2,c1);
				if (st.contains(c1)) {
					return false;
				}
				st.add(c1);
			} 
			else {
				if (mp.get(c2) != c1) {
					return false;
				}
			}
		}
		return true;
	}
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> li = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			if (checkPattern(words[i],pattern)) {
				li.add(words[i]);
			}
		}
		return li;
	}
}