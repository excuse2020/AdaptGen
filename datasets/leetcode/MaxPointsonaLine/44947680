class Solution {
	int maxPoints(int[][] points) {
		HashMap<Double, Integer> h1 = new HashMap<>();
		int res = 2;
		if (points.length == 1) {
			return 1;
		}
		for (int i = 0; i < points.length; i++) {
			h1.clear();
			for (int j = i + 1; j < points.length; j++) {
				int p1 = points[i];
				int p2 = points[j];
				double slope = Integer.MAX_VALUE;
				if (p2[0] != p1[0]) {
					if (p2[1] != p1[1]) {
						slope = (p2[1] - p1[1]) * 1.0d / (p2[0] - p1[0]) * 1.0d;
					} 
					else {
						slope = 0;
					}
				}
				if (h1.containsKey(slope)) {
					int count = h1.get(slope) + 1;
					h1.replace(slope,count);
					res = Math.max(res,count);
				} 
				else {
					h1.put(slope,2);
				}
			}
		}
		return res;
	}
}