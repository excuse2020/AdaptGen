class Solution {
	String trans(String s, int n) {
		if (n == 0) {
			return s;
		}
		StringBuffer res = new StringBuffer();
		for (int i = 0; i < n; i++) {
			if (Character.isLowerCase(s.charAt(i))) {
				res.append(Character.toUpperCase(s.charAt(i)));
			} 
			else if (Character.isUpperCase(s.charAt(i))) {
				res.append(Character.toLowerCase(s.charAt(i)));
			} 
			else {
				res.append(s.charAt(i));
			}
		}
		Stack<String> stack = new Stack<>();
		for (int i = 0; i < n; i++) {
			int j = i;
			while (j < n && res.charAt(j) != ' ') {
				j++;
			}
			stack.push(res.substring(i,j));
			i = j;
		}
		if (s.charAt(n - 1) == ' ') {
			res = new StringBuffer(" ");
		} 
		else {
			res = new StringBuffer();
		}
		while (!stack.isEmpty()) {
			res.append(stack.pop());
			if (!stack.isEmpty()) {
				res.append(" ");
			}
		}
		return res.toString();
	}
}