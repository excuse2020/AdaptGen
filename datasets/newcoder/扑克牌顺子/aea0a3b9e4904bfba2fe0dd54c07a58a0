class Solution {
	boolean IsContinuous(int[] numbers) {
		if (numbers == null || numbers.length == 0) {
			return false;
		}
		int max = 0;
		int min = 14;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < numbers.length; i++) {
			int count = map.getOrDefault(numbers[i],0) + 1;
			if (numbers[i] != 0) {
				if (count != 1) {
					return false;
				}
				min = Math.min(min,numbers[i]);
				max = Math.max(max,numbers[i]);
			}
			map.put(numbers[i],count);
		}
		int zoreNum = map.getOrDefault(0,0);
		for (int i = min; i <= max; i++) {
			if (!map.containsKey(i)) {
				if (zoreNum == 0) {
					return false;
				} 
				else {
					zoreNum--;
				}
			}
		}
		return true;
	}
}