class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			if (map.containsKey(nums[i])) {
				map.put(nums[i],map.get(nums[i]) + 1);
			} 
			else {
				map.put(nums[i],1);
			}
		}
		int[] ans = new int[nums.length];
		HashMap<Integer, Integer> prefix = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			if (prefix.containsKey(nums[i])) {
				prefix.put(nums[i],prefix.get(nums[i]) + 1);
			} 
			else {
				prefix.put(nums[i],1);
			}
			if (map.get(nums[i]) == 1) {
				map.remove(nums[i]);
			} 
			else {
				map.put(nums[i],map.get(nums[i]) - 1);
			}
			ans[i] = prefix.size() - map.size();
		}
		return ans;
	}
}