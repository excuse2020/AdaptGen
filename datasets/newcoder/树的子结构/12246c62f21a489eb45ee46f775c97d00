class Solution {
	int cnt = 0;
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		cnt = cnt + 1;
		if (root1 == null && root2 == null) {
			if (cnt == 1) {
				return false;
			} 
			else {
				return true;
			}
		} 
		else if (root1 != null && root2 == null) {
			if (cnt == 1) {
				return false;
			} 
			else {
				return true;
			}
		} 
		else if (root1 == null && root2 != null) {
			return false;
		} 
		else {
			boolean result1;
			boolean result2;
			if (root1.val == root2.val) {
				result1 = HasSubtree(root1.left,root2.left);
				result2 = HasSubtree(root1.right,root2.right);
				if (result1 && result2) {
					return true;
				} 
				else {
					result1 = HasSubtree(root1.left,root2);
					result2 = HasSubtree(root1.right,root2);
					return result1 || result2;
				}
			} 
			else {
				result1 = HasSubtree(root1.left,root2);
				result2 = HasSubtree(root1.right,root2);
				return result1 || result2;
			}
		}
	}
}