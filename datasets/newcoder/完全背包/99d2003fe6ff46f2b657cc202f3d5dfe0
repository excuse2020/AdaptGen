class Solution {
	ArrayList<Integer> knapsack(int v, int n, ArrayList<ArrayList<Integer>> nums) {
		ArrayList<Integer> res = new ArrayList<Integer>();
		int[] dp = new int[v + 1];
		int[] dp1 = new int[v + 1];
		for (int i = 1; i <= v; ++i) {
			int max = Integer.MIN_VALUE;
			int max1 = Integer.MIN_VALUE;
			for (int j = 0; j < n; ++j) {
				if (i >= nums.get(j).get(0)) {
					max = Math.max(dp[i - nums.get(j).get(0)] + nums.get(j).get(1),max);
					max1 = Math.max(dp1[i - nums.get(j).get(0)] + nums.get(j).get(1),max1);
				}
				max = Math.max(max,dp[i - 1]);
			}
			dp[i] = max;
			dp1[i] = max1;
		}
		res.add(dp[v]);
		res.add(dp1[v] < 0 ? 0 : dp1[v]);
		return res;
	}
}