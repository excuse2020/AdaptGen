class Solution {
	boolean checkXMatrix(int[][] grid) {
		boolean check = false;
		int c = 0, c2 = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if ((i + j) == (grid.length - 1) || i == j) {
					c++;
				} 
				else {
					c2++;
				}
			}
		}
		int diagonal = new int[c], idx = 0;
		int non_diagonal = new int[c2], idx2 = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if ((i + j) == (grid.length - 1) || i == j) {
					diagonal[idx] = grid[i][j];
					idx++;
				} 
				else {
					non_diagonal[idx2] = grid[i][j];
					idx2++;
				}
			}
		}
		for (int i = 0; i < diagonal.length; i++) {
			if (diagonal[i] != 0) {
				check = true;
			} 
			else {
				check = false;
				break;
			}
		}
		if (check == true) {
			for (int i = 0; i < non_diagonal.length; i++) {
				if (non_diagonal[i] == 0) {
					check = true;
				} 
				else {
					check = false;
					break;
				}
			}
		} 
		else {
			return check;
		}
		return check;
	}
}