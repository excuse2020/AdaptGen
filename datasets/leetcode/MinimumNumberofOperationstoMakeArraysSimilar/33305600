class Solution {
	long makeSimilar(int[] A, int[] B) {
		Arrays.sort(A);
		Arrays.sort(B);
		List<Integer> oddA = new ArrayList<>(), evenA = new ArrayList<>(), oddB = new ArrayList<>(), evenB = new ArrayList<>();
		for (int i = 0; i < A.length; i++) {
			if (A[i] % 2 == 1) {
				oddA.add(A[i]);
			} 
			else {
				evenA.add(A[i]);
			}
			if (B[i] % 2 == 1) {
				oddB.add(B[i]);
			} 
			else {
				evenB.add(B[i]);
			}
		}
		long ans = 0;
		for (int i = 0; i < oddA.size(); i++) {
			if (oddA.get(i) > oddB.get(i)) {
				ans += (oddA.get(i) - oddB.get(i)) / 2;
			}
		}
		for (int i = 0; i < evenA.size(); i++) {
			if (evenA.get(i) > evenB.get(i)) {
				ans += (evenA.get(i) - evenB.get(i)) / 2;
			}
		}
		return ans;
	}
}