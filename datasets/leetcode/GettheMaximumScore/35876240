class Solution {
	int maxSum(int[] nums1, int[] nums2) {
		long mod = (long) (1e9 + 7);
		int i = 0, j = 0, n = nums1.length, m = nums2.length;
		long currSum = 0, sum1 = 0, sum2 = 0;
		while (i < n && j < m) {
			if (nums1[i] == nums2[j]) {
				currSum += Math.max(sum1,sum2) + nums2[j];
				i++;
				j++;
				sum1 = 0;
				sum2 = 0;
			} 
			else if (nums1[i] < nums2[j]) {
				sum1 += nums1[i];
				i++;
			} 
			else {
				sum2 += nums2[j];
				j++;
			}
		}
		while (i < nums1.length) {
			sum1 += nums1[i];
			i++;
		}
		while (j < nums2.length) {
			sum2 += nums2[j];
			j++;
		}
		currSum += Math.max(sum1,sum2);
		currSum = (currSum % mod);
		return (int) currSum;
	}
}