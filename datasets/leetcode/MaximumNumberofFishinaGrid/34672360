class Solution {
	int count = 0;
	int findMaxFish(int[][] grid) {
		boolean[][] visited = new boolean[grid.length][grid[0].length];
		return help(grid,visited);
	}
	int help(int[][] arr, boolean[][] visited) {
		int max = 0;
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[0].length; j++) {
				if (arr[i][j] != 0 && visited[i][j] == false) {
					help(arr,visited,i,j);
					max = Math.max(count,max);
					count = 0;
				}
			}
		}
		return max;
	}
	void help(int[][] arr, boolean[][] visited, int i, int j) {
		if (i < 0 || j < 0 || i >= arr.length || j >= arr[0].length || visited[i][j] == true || arr[i][j] == 0) {
			return;
		}
		visited[i][j] = true;
		count += arr[i][j];
		help(arr,visited,i - 1,j);
		help(arr,visited,i,j + 1);
		help(arr,visited,i + 1,j);
		help(arr,visited,i,j - 1);
	}
}