class Solution {
	int[] maxSlidingWindow(int[] a, int k) {
		if (a == null || k <= 0) {
			return new int[0];
		}
		int len = a.length;
		int[] ans = new int[len - k + 1];
		Deque<Integer> deque = new ArrayDeque<>();
		for (int i = 0; i < len; i++) {
			while (!deque.isEmpty() && deque.peekFirst() < i - k + 1) {
				deque.pollFirst();
			}
			while (!deque.isEmpty() && a[deque.peekLast()] < a[i]) {
				deque.pollLast();
			}
			deque.offerLast(i);
			if (i >= k - 1) {
				ans[i - k + 1] = a[deque.peekFirst()];
			}
		}
		return ans;
	}
}