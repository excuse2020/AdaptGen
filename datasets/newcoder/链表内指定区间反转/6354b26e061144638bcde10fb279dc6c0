class Solution {
	ListNode reverse(ListNode head) {
		ListNode pre = null;
		ListNode cur = head;
		ListNode next = cur.next;
		while (next != null) {
			cur.next = pre;
			pre = cur;
			cur = next;
			next = next.next;
		}
		cur.next = pre;
		return cur;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode dummy = new ListNode(-1);
		ListNode left = dummy;
		ListNode cur = dummy;
		dummy.next = head;
		for (int i = 0; i < n; i++) {
			if (i < m - 1) {
				left = left.next;
			}
			cur = cur.next;
		}
		ListNode right = cur.next;
		ListNode subHead = left.next;
		left.next = null;
		cur.next = null;
		left.next = reverse(subHead);
		subHead.next = right;
		return dummy.next;
	}
}