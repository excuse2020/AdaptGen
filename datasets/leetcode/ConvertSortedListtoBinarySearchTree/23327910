class Solution {
	ListNode findMid(ListNode head) {
		if (head.next == null) {
			return head;
		}
		ListNode slow = head, fast = head, prev = null;
		while (fast != null && fast.next != null) {
			prev = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		prev.next = null;
		return slow;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode mid = findMid(head);
		if (mid == head) {
			head = null;
		}
		TreeNode node = new TreeNode(mid.val);
		node.left = sortedListToBST(head);
		node.right = sortedListToBST(mid.next);
		return node;
	}
}