class Pair {
	int loc;
	int pass;
}
class Solution {
	boolean carPooling(int[][] trips, int capacity) {
		List<Pair> obj = new ArrayList<>();
		for (int[] val: trips) {	
			Pair nn1 = new Pair();
			nn1.loc = val[1];
			nn1.pass = val[0];
			obj.add(nn1);
			Pair nn2 = new Pair();
			nn2.loc = val[2];
			nn2.pass = -val[0];
			obj.add(nn2);
		}
		int cap = 0;
		Collections.sort(obj,(a, b) -> {b.loc == a.loc ? a.pass - b.pass : a.loc - b.loc});
		for (int i = 0; i < obj.size(); i++) {
			cap += obj.get(i).pass;
			if (cap > capacity) {
				return false;
			}
		}
		return true;
	}
}