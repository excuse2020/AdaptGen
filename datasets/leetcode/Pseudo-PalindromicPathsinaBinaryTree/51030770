class Solution {
	void dfs(TreeNode root, int[] arr, int[] res) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			arr[root.val]++;
			int odd = 0;
			for (int i = 1; i <= 9; i++) {
				if (arr[i] % 2 == 1) {
					odd++;
				}
			}
			if (odd <= 1) {
				res[0]++;
			}
			arr[root.val]--;
			return;
		}
		arr[root.val]++;
		dfs(root.left,arr,res);
		dfs(root.right,arr,res);
		arr[root.val]--;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		int[] arr = new int[10];
		int[] res = new int[1];
		dfs(root,arr,res);
		return res[0];
	}
}