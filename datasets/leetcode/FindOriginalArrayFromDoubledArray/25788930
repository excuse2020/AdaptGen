class Solution {
	int[] findOriginalArray(int[] changed) {
		if (changed.length % 2 == 1) {
			return new int[0];
		}
		HashMap<Integer, Integer> map = new HashMap<>();
		ArrayList<Integer> ans = new ArrayList<>();
		Arrays.sort(changed);
		for (int i = changed.length - 1; i >= 0; i--) {
			int num = changed[i];
			if (map.containsKey(num * 2)) {
				ans.add(num);
				map.put(num * 2,map.get(num * 2) - 1);
			} 
			else {
				map.put(num,map.getOrDefault(num,0) + 1);
			}
			if (map.containsKey(num * 2) && map.get(num * 2) <= 0) {
				map.remove(num * 2);
			}
		}
		if (ans.size() != (changed.length / 2)) {
			return new int[0];
		}
		int[] arr = new int[ans.size()];
		for (int i = 0; i < ans.size(); i++) {
			arr[i] = ans.get(i);
		}
		return arr;
	}
}