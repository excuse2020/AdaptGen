class Solution {
	List<Integer> longest = new ArrayList<>(Arrays.asList(0,1));
	HashMap<Character, Integer> wordsMap = new HashMap<>();
	int lengthOfLongestSubstring(String s) {
		if (s.length() == 0) {
			return 0;
		}
		int start = 0;
		for (int i = 0; i < s.length(); i++) {
			char letter = s.charAt(i);
			if (wordsMap.containsKey(letter)) {
				start = Math.max(start,wordsMap.get(letter) + 1);
			}
			if (longest.get(1) - longest.get(0) < i - start + 1) {
				longest = new ArrayList<Integer>(Arrays.asList(start,i + 1));
			}
			wordsMap.put(letter,i);
		}
		return longest.get(1) - longest.get(0);
	}
}