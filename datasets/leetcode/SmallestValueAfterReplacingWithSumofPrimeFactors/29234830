class Solution {
	int getFirstPrimeFactor(int n) {
		if (isPrime(n)) {
			return n;
		}
		for (int i = 2; i < n; i++) {
			if (n % i == 0) {
				return i;
			}
		}
		return n;
	}
	int getPrimeFactorSum(int n) {
		int sum = 0;
		while (!isPrime(n)) {
			int m = getFirstPrimeFactor(n);
			n /= m;
			sum += m;
		}
		sum += n;
		return sum;
	}
	boolean isPrime(int n) {
		if (n == 2) {
			return true;
		}
		for (int i = 2; i < Math.sqrt(n) + 1; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int smallestValue(int n) {
		if (isPrime(n)) {
			return n;
		}
		int sum = getPrimeFactorSum(n);
		if (sum == n) {
			return n;
		}
		return smallestValue(sum);
	}
}