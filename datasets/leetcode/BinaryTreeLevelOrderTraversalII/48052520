class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> arrayList = new ArrayList<>();
		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		queue.add(root);
		if (root == null) {
			return arrayList;
		}
		int levelCount = 1;
		while (!queue.isEmpty()) {
			int levelSize = queue.size();
			List<Integer> currentLevelList = new ArrayList<>();
			for (int i = 0; i < levelSize; i++) {
				TreeNode tempNode = queue.remove();
				currentLevelList.add(tempNode.val);
				if (tempNode.left != null) {
					queue.add(tempNode.left);
				}
				if (tempNode.right != null) {
					queue.add(tempNode.right);
				}
			}
			levelCount += 1;
			arrayList.add(0,currentLevelList);
		}
		return arrayList;
	}
}