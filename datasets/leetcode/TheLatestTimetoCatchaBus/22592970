class Solution {
	int latestTimeCatchTheBus(int[] buses, int[] pass, int cap) {
		Set<Integer> set = new HashSet<>();
		Arrays.sort(buses);
		Arrays.sort(pass);
		int j = 0, c = 0, val = 0;
		boolean full = false;
		for (int i = 0; i < pass.length && j < buses.length; ) {
			if (pass[i] <= buses[j] && c < cap) {
				set.add(pass[i]);
				c++;
				if (j == buses.length - 1 && c == cap) {
					val = pass[i];
					full = true;
				}
				i++;
			} 
			else {
				j++;
				c = 0;
			}
		}
		val--;
		if (!full) {
			val = buses[buses.length - 1];
		}
		while (set.contains(val)) {
			val--;
		}
		return val;
	}
}