class Solution {
	long makeIntegerBeautiful(long n, int target) {
		long sum = sumofNumber(n);
		if (sum <= target) {
			return 0;
		} 
		else {
			long mul = 1;
			while (true) {
				long number = nearestNumber(n,mul);
				sum = sumofNumber(number);
				if (sum <= target) {
					return number - n;
				} 
				else {
					mul = mul * 10;
				}
			}
		}
	}
	long nearestNumber(long n, long m) {
		long rem;
		rem = n % (10 * m);
		n = n + ((10 * m) - rem);
		return n;
	}
	long sumofNumber(long number) {
		long digit, sum = 0;
		while (number > 0) {
			digit = number % 10;
			sum = sum + digit;
			number = number / 10;
		}
		return sum;
	}
}