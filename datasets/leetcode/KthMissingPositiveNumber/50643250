class Solution {
	int Ceil(int[] arr, int n, int x) {
		int i = 0;
		int j = n - 1;
		while (i < j) {
			int mid = (i + j) / 2;
			if (arr[mid] >= x) {
				j = mid;
			} 
			else {
				i = mid + 1;
			}
		}
		if (arr[j] < x) {
			return n;
		}
		return j;
	}
	int findKthPositive(int[] arr, int k) {
		int i = 1;
		int j = 2000;
		int n = arr.length;
		int g = -1;
		int mid = -1;
		int h = -1;
		while (i <= j) {
			mid = (i + j) / 2;
			h = Ceil(arr,n,mid);
			g = mid - h;
			if (g < k) {
				i = mid + 1;
			} 
			else if (g > k) {
				j = mid - 1;
			} 
			else {
				if (h != n && arr[h] == mid) {
					i = mid + 1;
				} 
				else {
					return mid;
				}
			}
		}
		return -1;
	}
}