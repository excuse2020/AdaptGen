class Solution {
	long maximumSumOfHeights(List<Integer> arr) {
		int n = arr.size();
		long max = -1;
		if (n == 1) {
			return arr.get(0);
		}
		for (int i = 0; i < n; i++) {
			long temp = arr.get(i) * 1L;
			long prev = (i - 1) >= 0 && arr.get(i) >= arr.get(i - 1) ? arr.get(i - 1) * 1L : arr.get(i) * 1L;
			if (i == 0) {
				prev = 0;
			}
			for (int j = i - 1; j >= 0; j--) {
				if (prev > arr.get(j)) {
					prev = arr.get(j);
				}
				temp += prev * 1L;
			}
			prev = (i + 1 < n && arr.get(i) > arr.get(i + 1)) ? arr.get(i + 1) * 1L : arr.get(i) * 1L;
			if (i == n - 1) {
				prev = 0;
			}
			for (int j = i + 1; j < n; j++) {
				if (prev > arr.get(j)) {
					prev = arr.get(j);
				}
				temp += prev * 1L;
			}
			max = Math.max(max,temp);
		}
		return max;
	}
}