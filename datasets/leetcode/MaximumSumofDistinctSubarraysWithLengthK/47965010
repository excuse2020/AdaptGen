class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int i = 0, j = 0;
		long maxSum = 0;
		Set<Integer> dup = new HashSet<>();
		long currentSum = 0;
		while (j < nums.length) {
			if (dup.contains(nums[j]) || j - i + 1 > k) {
				dup.remove(nums[i]);
				currentSum = currentSum - nums[i];
				i++;
			} 
			else {
				dup.add(nums[j]);
				currentSum += nums[j];
				if (j - i + 1 == k) {
					maxSum = Math.max(maxSum,currentSum);
				}
				j++;
			}
		}
		return maxSum;
	}
}