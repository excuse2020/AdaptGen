class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	void dfs(TreeNode root, int target, List<Integer> ls) {
		if (root == null) {
			return;
		}
		ls.add(root.val);
		if (target - root.val == 0 && root.left == null && root.right == null) {
			if (!ls.isEmpty()) {
				ans.add(new ArrayList<>(ls));
			}
		} 
		else {
			dfs(root.left,target - root.val,ls);
			dfs(root.right,target - root.val,ls);
		}
		ls.remove(ls.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		dfs(root,targetSum,new ArrayList<>());
		return ans;
	}
}