class Solution {
	String largestPalindromic(String num) {
		char c = num.toCharArray();
		int[] f = new int[10];
		StringBuilder l = new StringBuilder();
		StringBuilder r = new StringBuilder();
		String res;
		int g = 0;
		for (int i = 0; i < c.length; i++) {
			int x = Integer.parseInt("" + c[i]);
			f[x]++;
		}
		int ls = -1;
		for (int i = 9; i >= 0; i--) {
			if (f[i] % 2 == 1) {
				ls = i;
				break;
			}
		}
		for (int i = 9; i >= 0; i--) {
			if (f[i] >= 2) {
				int d = f[i] / 2;
				if (g == 0 && i == 0) {
					if (ls == -1) {
						ls = 0;
					}
					break;
				}
				for (int j = 0; j < d; j++) {
					g = 1;
					l.append("" + i);
					r = new StringBuilder("" + i);
				}
			}
		}
		if (ls > -1) {
			res = new String(new String(l) + ls);
		} 
		else {
			res = new String(new String(l) + new String(r));
		}
		return res;
	}
}