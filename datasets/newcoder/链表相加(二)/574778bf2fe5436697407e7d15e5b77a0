class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		Deque<Integer> s1 = new ArrayDeque<>();
		Deque<Integer> s2 = new ArrayDeque<>();
		pushStack(head1,s1);
		pushStack(head2,s2);
		int c = 0;
		ListNode r = null;
		while (!s1.isEmpty() || !s2.isEmpty()) {
			int a = !s1.isEmpty() ? s1.pop() : 0;
			int b = !s2.isEmpty() ? s2.pop() : 0;
			int sum = a + b;
			c = sum / 10;
			ListNode node = new ListNode(0);
			node.val = sum % 10;
			node.next = r;
			r = node;
		}
		if (c != 0) {
			ListNode node = new ListNode(0);
			node.val = c;
			node.next = r;
			r = node;
		}
		return r;
	}
	void pushStack(ListNode l, Deque<Integer> s) {
		ListNode curr = l;
		while (curr != null) {
			s.push(curr.val);
			curr = curr.next;
		}
	}
}