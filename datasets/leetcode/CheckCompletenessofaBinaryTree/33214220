class Solution {
	int count = 0;
	int value = 0;
	void checkNodes(TreeNode root) {
		if (root == null) {
			return;
		}
		count++;
		checkNodes(root.left);
		checkNodes(root.right);
	}
	boolean isCompleteTree(TreeNode root) {
		checkNodes(root);
		iterateNodes(root);
		return (count == value);
	}
	void iterateNodes(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList();
		queue.add(root);
		while (!queue.isEmpty()) {
			TreeNode temp = queue.poll();
			value++;
			if (temp.left == null) {
				return;
			}
			if (temp.right == null) {
				value++;
				return;
			}
			if (temp.left != null && temp.right != null) {
				queue.add(temp.left);
				queue.add(temp.right);
				value += 1;
			}
		}
	}
}