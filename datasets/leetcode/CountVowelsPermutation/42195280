class Solution {
	int countVowelPermutation(int n) {
		int[] count_Vowel = new int[5];
		int[] prev_Vowel = new int[5];
		int mod = 1000000007;
		int a = 0, e = 1, i = 2, o = 3, u = 4;
		for (int p = 0; p < 5; p++) {
			count_Vowel[p] = 1;
			prev_Vowel[p] = 1;
		}
		while (--n > 0) {
			count_Vowel[a] = ((prev_Vowel[e] + prev_Vowel[i]) % mod + prev_Vowel[u]) % mod;
			count_Vowel[e] = (prev_Vowel[a] + prev_Vowel[i]) % mod;
			count_Vowel[i] = (prev_Vowel[e] + prev_Vowel[o]) % mod;
			count_Vowel[o] = (prev_Vowel[i]) % mod;
			count_Vowel[u] = (prev_Vowel[i] + prev_Vowel[o]) % mod;
			for (int p = 0; p < 5; p++) {
				prev_Vowel[p] = count_Vowel[p];
			}
		}
		int sum = 0;
		for (int number: count_Vowel) {	
			sum = (sum + number) % mod;
		}
		return sum;
	}
}