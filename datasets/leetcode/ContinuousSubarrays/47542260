class Solution {
	long continuousSubarrays(int[] nums) {
		long count = 0l;
		int left = 0;
		TreeMap<Integer, Integer> treeMap = new TreeMap<>();
		for (int right = 0; right < nums.length; right++) {
			treeMap.put(nums[right],treeMap.getOrDefault(nums[right],0) + 1);
			while (left <= right && treeMap.lastKey() - treeMap.firstKey() > 2) {
				treeMap.put(nums[left],treeMap.get(nums[left]) - 1);
				if (treeMap.get(nums[left]) == 0) {
					treeMap.remove(nums[left]);
				}
				left++;
			}
			count += right - left + 1;
		}
		return count;
	}
}