class Solution {
	int maxProfit(int[] prices) {
		int n = prices.length;
		int[][][] dp = new int[n + 1][2][3];
		for (int i = 0; i < n; i++) {
			for (int buy = 0; buy <= 1; buy++) {
				dp[i][buy][0] = 0;
			}
		}
		for (int buy = 0; buy <= 1; buy++) {
			for (int cap = 0; cap <= 2; cap++) {
				dp[n][buy][cap] = 0;
			}
		}
		for (int i = n - 1; i >= 0; i--) {
			for (int buy = 0; buy < 2; buy++) {
				for (int cap = 1; cap < 3; cap++) {
					int profit = 0;
					if (buy == 1) {
						profit = Math.max(-prices[i] + dp[i + 1][0][cap],0 + dp[i + 1][1][cap]);
					} 
					else {
						profit = Math.max(prices[i] + dp[i + 1][1][cap - 1],0 + dp[i + 1][0][cap]);
					}
					dp[i][buy][cap] = profit;
				}
			}
		}
		return dp[0][1][2];
	}
}