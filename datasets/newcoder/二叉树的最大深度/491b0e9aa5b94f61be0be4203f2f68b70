class Solution {
	ArrayList<ArrayList<Integer>> levelOrder(TreeNode root) {
		ArrayList<ArrayList<Integer>> list = new ArrayList();
		if (root == null) {
			return list;
		}
		Queue<TreeNode> q = new ArrayDeque<TreeNode>();
		q.add(root);
		while (!q.isEmpty()) {
			ArrayList<Integer> temp = new ArrayList<Integer>();
			int n = q.size();
			for (int i = 0; i < n; i++) {
				TreeNode cur = q.poll();
				temp.add(cur.val);
				if (cur.left != null) {
					q.add(cur.left);
				}
				if (cur.right != null) {
					q.add(cur.right);
				}
			}
			list.add(temp);
		}
		return list;
	}
	int maxDepth(TreeNode root) {
		ArrayList<ArrayList<Integer>> list;
		if (root == null) {
			return 0;
		}
		list = levelOrder(root);
		int n = list.size();
		return n;
	}
}