class Solution {
	int pairSum(ListNode head) {
		int ptr = 0;
		int n = 0;
		ListNode temp = head;
		while (head != null) {
			n++;
			head = head.next;
		}
		head = temp;
		int arr = new int[n];
		while (head != null) {
			arr[ptr++] = head.val;
			head = head.next;
		}
		int max = Integer.MIN_VALUE;
		int sum = 0;
		int globemax = Integer.MIN_VALUE;
		for (int i = 0; i < n / 2; i++) {
			sum = arr[i] + arr[n - 1 - i];
			if (sum > max) {
				max = sum;
			}
		}
		return globemax = Math.max(max,globemax);
	}
}