class Solution {
	int c = 0;
	int distance(int[] nums, int i) {
		if (i < nums.length) {
			if (nums[i] == 0) {
				c += 1;
				distance(nums,i + 1);
			}
		}
		return c;
	}
	boolean kLengthApart(int[] nums, int k) {
		int check = 1;
		int icount = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 1) {
				icount++;
			}
		}
		int min = Integer.MAX_VALUE;
		if (icount <= 1) {
			min = nums.length;
		}
		for (int i = 0; i < nums.length; i++) {
			if (icount > 1) {
				if (nums[i] == 1) {
					check = distance(nums,i + 1);
					c = 0;
					icount--;
					if (min > check) {
						min = check;
					}
				}
			}
		}
		if (min >= k) {
			return true;
		}
		return false;
	}
}