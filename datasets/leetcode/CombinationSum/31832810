class Solution {
	void comb(int idx, int target, int[] arr, List<Integer> ds, List<List<Integer>> ans) {
		if (idx == arr.length) {
			if (target == 0) {
				ans.add(new ArrayList<>(ds));
			}
			return;
		}
		if (arr[idx] <= target) {
			ds.add(arr[idx]);
			comb(idx,target - arr[idx],arr,ds,ans);
			ds.remove(ds.size() - 1);
		}
		comb(idx + 1,target,arr,ds,ans);
	}
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		comb(0,target,candidates,new ArrayList<>(),ans);
		return ans;
	}
}