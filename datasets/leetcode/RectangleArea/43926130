class Solution {
	int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int area1 = (ax2 - ax1) * (ay2 - ay1);
		int area2 = (bx2 - bx1) * (by2 - by1);
		if (hasIntersection(ax1,ay1,ax2,ay2,bx1,by1,bx2,by2)) {
			int commArea = getCommArea(ax1,ay1,ax2,ay2,bx1,by1,bx2,by2);
			area1 -= commArea;
		}
		return area1 + area2;
	}
	int getCommArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int len = Math.min(ax2,bx2) - Math.max(ax1,bx1);
		int wid = Math.min(ay2,by2) - Math.max(ay1,by1);
		return len * wid;
	}
	boolean hasIntersection(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		if (ax2 < bx1 || bx2 < ax1 || ay1 > by2 || by1 > ay2) {
			return false;
		}
		return true;
	}
}