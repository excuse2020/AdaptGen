class Solution {
	Stack<Integer> st = new Stack<>();
	TreeNode increasingBST(TreeNode root) {
		if (root == null) {
			return null;
		}
		inorderTraversal(root);
		TreeNode result = new TreeNode(-1, null, null);
		TreeNode cur = result;
		while (!st.isEmpty()) {
			cur.right = new TreeNode(st.pop(), null, null);
			cur = cur.right;
		}
		return result.right;
	}
	void inorderTraversal(TreeNode root) {
		if (root == null) {
			return;
		}
		inorderTraversal(root.right);
		st.push(root.val);
		inorderTraversal(root.left);
	}
}