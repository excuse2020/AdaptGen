class Solution {
	List<List<Integer>> closestNodes(TreeNode root, List<Integer> queries) {
		TreeSet<Integer> set = new TreeSet<>();
		inOrder(root,set);
		List<List<Integer>> result = new ArrayList<>(queries.size());
		for (int i = 0; i < queries.size(); i++) {
			result.add(new ArrayList<>());
			int largest = -1;
			if (set.floor(queries.get(i)) != null) {
				largest = set.floor(queries.get(i));
			}
			int smallest = -1;
			if (set.ceiling(queries.get(i)) != null) {
				smallest = set.ceiling(queries.get(i));
			}
			result.get(result.size() - 1).add(largest);
			result.get(result.size() - 1).add(smallest);
		}
		return result;
	}
	void inOrder(TreeNode root, TreeSet set) {
		if (root == null) {
			return;
		}
		inOrder(root.left,set);
		set.add(root.val);
		inOrder(root.right,set);
		return;
	}
}