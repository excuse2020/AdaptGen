class Solution {
	int[] shuffle(int[] nums, int n) {
		int new_idx = 0;
		for (int i = 1; i < 2 * n - 1; i++) {
			int curr_idx = i;
			int curr_num = nums[curr_idx];
			if (nums[curr_idx] > 0) {
				while (true) {
					if (curr_idx < n) {
						new_idx = 2 * curr_idx;
					} 
					else {
						new_idx = 2 * (curr_idx - n) + 1;
					}
					if (nums[new_idx] < 0) {
						break;
					}
					int temp = nums[new_idx];
					nums[new_idx] = -curr_num;
					curr_num = temp;
					curr_idx = new_idx;
				}
			}
		}
		for (int i = 1; i < 2 * n - 1; i++) {
			if (nums[i] < 0) {
				nums[i] *= -1;
			}
		}
		return nums;
	}
}