class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null) {
			return null;
		}
		Stack<TreeNode> s = new Stack<TreeNode>();
		TreeNode head = null;
		TreeNode pre = null;
		boolean isFirst = true;
		while (pRootOfTree != null || !s.isEmpty()) {
			while (pRootOfTree != null) {
				s.push(pRootOfTree);
				pRootOfTree = pRootOfTree.left;
			}
			pRootOfTree = s.pop();
			if (isFirst) {
				head = pRootOfTree;
				pre = head;
				isFirst = false;
			} 
			else {
				pre.right = pRootOfTree;
				pRootOfTree.left = pre;
				pre = pRootOfTree;
			}
			pRootOfTree = pRootOfTree.right;
		}
		return head;
	}
}