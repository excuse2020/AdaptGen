class Solution {
	String solve(String s, String t) {
		if (s.equals("")) {
			return t;
		}
		if (t.equals("")) {
			return s;
		}
		char[] charS = s.toCharArray();
		char[] charT = t.toCharArray();
		int sLen = s.length();
		int tLen = t.length();
		int len = Math.min(sLen,tLen);
		StringBuilder sb = new StringBuilder();
		boolean flag = false;
		for (int i = 1; i <= len; i++) {
			int tempS = charS[sLen - i] - '0';
			int tempT = charT[tLen - i] - '0';
			int temp;
			if (flag) {
				temp = tempS + tempT;
			} 
			else {
				temp = tempS + tempT;
			}
			if (temp >= 10) {
				flag = true;
			} 
			else {
				flag = false;
			}
			sb.append(temp % 10);
		}
		if (sLen > len) {
			for (int i = sLen - len; i >= 0; i--) {
				int temp;
				if (flag) {
					temp = (charS[i] - '0') + 1;
				} 
				else {
					temp = (charS[i] - '0');
				}
				if (temp >= 10) {
					flag = true;
				} 
				else {
					flag = false;
				}
				sb.append(temp % 10);
			}
		}
		if (tLen > len) {
			for (int i = tLen - len; i >= 0; i--) {
				int temp;
				if (flag) {
					temp = (charT[i] - '0') + 1;
				} 
				else {
					temp = (charT[i] - '0');
				}
				if (temp >= 10) {
					flag = true;
				} 
				else {
					flag = false;
				}
				sb.append(temp % 10);
			}
		}
		if (flag) {
			sb.append("1");
		}
		return sb.reverse().toString();
	}
}