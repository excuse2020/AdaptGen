class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int n = nums.length;
		int preSum = 0;
		int contMax = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			preSum += nums[i];
			contMax = Math.max(contMax,preSum);
			if (preSum < 0) {
				preSum = 0;
			}
		}
		preSum = 0;
		int contMin = Integer.MAX_VALUE;
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			max = Math.max(max,nums[i]);
			preSum += nums[i];
			contMin = Math.min(contMin,preSum);
			if (preSum > 0) {
				preSum = 0;
			}
		}
		int sum = 0;
		for (int i: nums) {	
			sum += i;
		}
		return Math.max(contMax,(sum - contMin) == 0 ? max : sum - contMin);
	}
}