class Solution {
	TreeNode Mirror(TreeNode pRoot) {
		if (pRoot == null) {
			return null;
		}
		TreeNode ret = new TreeNode(pRoot.val);
		dfs(pRoot,ret);
		return ret;
	}
	void dfs(TreeNode node1, TreeNode node2) {
		if (node1 == null) {
			return;
		}
		if (node1.right != null) {
			node2.left = new TreeNode(node1.right.val);
		}
		if (node1.left != null) {
			node2.right = new TreeNode(node1.left.val);
		}
		dfs(node1.left,node2.right);
		dfs(node1.right,node2.left);
	}
}