class Solution {
	int[] avoidFlood(int[] rains) {
		int[] ans = new int[rains.length];
		HashMap<Integer, Integer> hm = new HashMap<>();
		Set<Integer> dry_days = new TreeSet<>();
		for (int i = 0; i < rains.length; i++) {
			if (rains[i] > 0) {
				if (!hm.containsKey(rains[i])) {
					ans[i] = -1;
					hm.put(rains[i],i);
				} 
				else {
					int index = hm.get(rains[i]);
					boolean found = false;
					int dryDay = 0;
					for (int ind: dry_days) {	
						if (ind < index) {
							continue;
						} 
						else {
							dryDay = ind;
							found = true;
							break;
						}
					}
					if (!found) {
						return new int[0];
					}
					dry_days.remove(dryDay);
					hm.put(rains[i],i);
					ans[i] = -1;
					ans[dryDay] = rains[i];
				}
			} 
			else {
				dry_days.add(i);
				ans[i] = 1;
			}
		}
		return ans;
	}
}