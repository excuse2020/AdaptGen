class Solution {
	int minimizeConcatenatedLength(String[] words) {
		int n = words.length;
		if (n == 1) {
			return words[0].length();
		}
		int[][][] dp = new int[n][26][26];
		for (int[][] ar: dp) {	
			for (int[] ele: ar) {	
				Arrays.fill(ele,-1);
			}
		}
		int ps;
	}
	int solve(int ind, int n, int ps, int pe, String[] words, int[][][] dp) {
		if (ind == n) {
			return 0;
		}
		if (dp[ind][ps][pe] != -1) {
			return dp[ind][ps][pe];
		}
		String curr = words[ind];
		int cs;
	}
}