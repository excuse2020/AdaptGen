class Solution {
	ListNode mergeSort(ListNode head1, ListNode head2) {
		ListNode head = new ListNode(-999);
		ListNode followHead = head;
		while (head1 != null && head2 != null) {
			if (head1.val > head2.val) {
				followHead.next = head2;
				head2 = head2.next;
			} 
			else {
				followHead.next = head1;
				head1 = head1.next;
			}
			followHead = followHead.next;
		}
		followHead.next = head1 == null ? head2 : head1;
		return head.next;
	}
	ListNode sortInList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode slow = head;
		ListNode fast = head.next;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode right = slow.next;
		slow.next = null;
		return mergeSort(sortInList(head),sortInList(right));
	}
}