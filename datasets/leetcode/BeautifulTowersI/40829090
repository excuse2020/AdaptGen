class Solution {
	long first(List<Integer> list, int m) {
		int a = list.get(m);
		long sum = 0;
		for (int i = m - 1; i >= 0; i--) {
			if (a >= list.get(i)) {
				sum += list.get(i);
				a = list.get(i);
			} 
			else {
				sum += a;
			}
		}
		return sum;
	}
	long last(List<Integer> list, int m) {
		int a = list.get(m);
		long sum = 0;
		for (int i = m + 1; i < list.size(); i++) {
			if (a >= list.get(i)) {
				sum += list.get(i);
				a = list.get(i);
			} 
			else {
				sum += a;
			}
		}
		return sum;
	}
	long maximumSumOfHeights(List<Integer> maxHeights) {
		long maxSum = 0;
		for (int i = 0; i < maxHeights.size(); i++) {
			long sum = maxHeights.get(i);
			long firstP = first(maxHeights,i);
			long lastP = last(maxHeights,i);
			sum += firstP + lastP;
			maxSum = Math.max(sum,maxSum);
		}
		return maxSum;
	}
}