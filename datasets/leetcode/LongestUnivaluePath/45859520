class Solution {
	int ans;
	int Path(TreeNode root) {
		if (root == null) {
			return -1;
		}
		int left = Path(root.left);
		int right = Path(root.right);
		if (left != -1 && right != -1) {
			if (root.val == root.left.val && root.val == root.right.val) {
				ans = Math.max(ans,left + right);
				return Math.max(left,right) + 1;
			}
			if (root.val == root.left.val) {
				ans = Math.max(ans,left + 1);
				return left + 1;
			}
			if (root.val == root.right.val) {
				ans = Math.max(ans,right + 1);
				return right + 1;
			}
			return 0;
		}
		if (left != -1 && root.val == root.left.val) {
			ans = Math.max(ans,left + 1);
			return left + 1;
		}
		if (right != -1 && root.val == root.right.val) {
			ans = Math.max(ans,right + 1);
			return right + 1;
		}
		return 0;
	}
	int longestUnivaluePath(TreeNode root) {
		ans = 0;
		Path(root);
		return ans;
	}
}