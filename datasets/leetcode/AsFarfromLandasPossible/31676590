class Solution {
	int maxDistance(int[][] grid) {
		int n = grid.length;
		int max = 101;
		int ans = 0;
		int dist = 0;
		int o = 0, z = 0;
		int ones = new int[n * n][2];
		int zeros = new int[n * n][2];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (grid[i][j] == 1) {
					ones[o][0] = i;
					ones[o++][1] = j;
				} 
				else {
					zeros[z][0] = i;
					zeros[z++][1] = j;
				}
			}
		}
		for (int i = 0; i < z; i++) {
			max = 10001;
			for (int j = 0; j < o; j++) {
				dist = Math.abs(zeros[i][0] - ones[j][0]) + Math.abs(zeros[i][1] - ones[j][1]);
				if (dist < max) {
					max = dist;
				}
			}
			if (max > ans) {
				ans = max;
			}
		}
		if (ans == 10001 || ans == 0) {
			return -1;
		}
		return ans;
	}
}