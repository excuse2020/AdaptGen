class Solution {
	ListNode swapLinkedPair(ListNode head) {
		if (null == head.next) {
			return head;
		}
		Queue<ListNode> q1 = new LinkedList<>();
		Queue<ListNode> q2 = new LinkedList<>();
		int index = 1;
		ListNode node = head;
		while (null != node) {
			if (index % 2 != 0) {
				q1.add(node);
			} 
			else {
				q2.add(node);
			}
			node = node.next;
			index++;
		}
		head = q2.poll();
		node = head;
		while (!q1.isEmpty() && !q2.isEmpty()) {
			node.next = q1.poll();
			node = node.next;
			node.next = q2.poll();
			node = node.next;
		}
		while (!q1.isEmpty()) {
			node.next = q1.poll();
			node = node.next;
		}
		node.next = null;
		return head;
	}
}