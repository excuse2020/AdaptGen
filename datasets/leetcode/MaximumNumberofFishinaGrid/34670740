class Solution {
	int findMaxFish(int[][] grid) {
		int fish = 0;
		for (int i = 0; i < grid.length; i++) {
			int vis = new int[grid.length][grid[0].length];
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] > 0) {
					fish = Math.max(fish,walk(grid,vis,i,j));
				}
			}
		}
		return fish;
	}
	int walk(int[][] grid, int[][] vis, int i, int j) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == 0 || vis[i][j] == -1) {
			return 0;
		} 
		else {
			vis[i][j] = -1;
			return grid[i][j] + walk(grid,vis,i - 1,j);
		}
	}
}