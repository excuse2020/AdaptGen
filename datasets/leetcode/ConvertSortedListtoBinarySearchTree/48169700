class Solution {
	TreeNode getTreeNode(int start, int n, List<Integer> list) {
		if (start > n) {
			return null;
		}
		if (start == n) {
			return new TreeNode(list.get(start));
		}
		int mid = (start + n) / 2;
		TreeNode node = new TreeNode(list.get(mid));
		node.left = getTreeNode(start,mid - 1,list);
		node.right = getTreeNode(mid + 1,n,list);
		return node;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> list = new ArrayList<>();
		if (head == null) {
			return null;
		}
		while (head != null) {
			list.add(head.val);
			head = head.next;
		}
		int n = list.size() - 1;
		int start = 0;
		return getTreeNode(start,n,list);
	}
}