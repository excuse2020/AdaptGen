class Solution {
	int size(ListNode head) {
		int c = 0;
		while (head != null) {
			c++;
			head = head.next;
		}
		return c;
	}
	TreeNode sortedListToBST(ListNode head) {
		ListNode l = head;
		int s = size(l);
		int a = new int[s];
		l = head;
		for (int i = 0; i < a.length; i++) {
			a[i] = l.val;
			l = l.next;
		}
		return tree(null,0,s - 1,a);
	}
	TreeNode tree(TreeNode root, int s, int e, int a) {
		if (s <= e) {
			TreeNode r = new TreeNode(a[s + (e - s) / 2]);
			root = r;
			root.left = tree(root.left,s,s + (e - s) / 2 - 1,a);
			root.right = tree(root.right,s + (e - s) / 2 + 1,e,a);
		}
		return root;
	}
}