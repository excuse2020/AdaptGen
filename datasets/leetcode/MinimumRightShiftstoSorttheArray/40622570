class Solution {
	boolean isSorted(int[] arr) {
		int n = arr.length;
		for (int i = 0; i < n - 1; i++) {
			if (arr[i] > arr[i + 1]) {
				return false;
			}
		}
		return true;
	}
	int minimumRightShifts(List<Integer> nums) {
		int min = Integer.MAX_VALUE;
		for (int num: nums) {	
			min = Math.min(min,num);
		}
		int ind = 0;
		for (int i = 0; i < nums.size(); i++) {
			if (nums.get(i) == min) {
				ind = i;
			}
		}
		int[] arr = new int[nums.size()];
		for (int i = 0; i < nums.size(); i++) {
			arr[(i + (nums.size() - ind)) % nums.size()] = nums.get(i);
		}
		return isSorted(arr) ? nums.size() - ind == nums.size() ? 0 : nums.size() - ind : -1;
	}
}