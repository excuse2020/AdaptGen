class Solution {
	boolean canIgnore(char[] pattern, int index) {
	}
	boolean isMatch(String s, String p) {
		int m = s.length(), n = p.length();
		return isMatch(s.toCharArray(),p.toCharArray(),0,0,new Boolean[m + 1][n]);
	}
	boolean isMatch(char[] s, char[] p, int sIndex, int pIndex, Boolean[][] memo) {
		if (sIndex == s.length && pIndex == p.length) {
			return true;
		}
		if (pIndex == p.length) {
			return false;
		}
		if (memo[sIndex][pIndex] != null) {
			return memo[sIndex][pIndex];
		}
		if (canIgnore(p,pIndex) && isMatch(s,p,sIndex,pIndex + 1,memo)) {
			return memo[sIndex][pIndex] = true;
		}
	}
}