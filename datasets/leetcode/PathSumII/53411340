class Solution {
	List<List<Integer>> result = new ArrayList<>();
	void helper(TreeNode root, int targetSum, List<Integer> path) {
		path.add(root.val);
		if (root.left == null && root.right == null && targetSum == root.val) {
			result.add(new ArrayList<>(path));
		} 
		else {
			if (root.left != null) {
				helper(root.left,targetSum - root.val,path);
			}
			if (root.right != null) {
				helper(root.right,targetSum - root.val,path);
			}
		}
		path.remove(path.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		if (root == null) {
			return result;
		}
		helper(root,targetSum,new ArrayList<>());
		return result;
	}
}