class Solution {
	int[] dp;
	int maxSumAfterPartitioning(int[] arr, int k) {
		dp = new int[arr.length];
		Arrays.fill(dp,-1);
		return util(arr,k,0);
	}
	int util(int[] arr, int k, int index) {
		if (index == arr.length) {
			return 0;
		}
		if (dp[index] != -1) {
			return dp[index];
		}
		int solution = 0;
		int currMax = 0;
		for (int i = 0; i < k; i++) {
			if (index + i >= arr.length) {
				break;
			}
			currMax = Math.max(currMax,arr[index + i]);
			solution = Math.max(solution,((i + 1) * currMax) + util(arr,k,index + i));
		}
		return dp[index] = solution;
	}
}