class Solution {
	long maximumTripletValue(int[] nums) {
		int n = nums.length;
		if (n < 3) {
			return 0;
		}
		int[] leftMax = new int[n];
		int[] rightMax = new int[n];
		leftMax[0] = nums[0];
		for (int i = 1; i < n; i++) {
			leftMax[i] = Math.max(leftMax[i - 1],nums[i]);
		}
		rightMax[n - 1] = nums[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			rightMax[i] = Math.max(rightMax[i + 1],nums[i]);
		}
		long maxValue = 0;
		for (int j = 1; j < n - 1; j++) {
			long currentValue = (long) (leftMax[j - 1] - nums[j]) * rightMax[j + 1];
			maxValue = Math.max(maxValue,currentValue);
		}
		return Math.max(maxValue,0);
	}
}