class Solution {
	int countPrimeSetBits(int left, int right) {
		int count = new int[right - left + 1];
		int c = 0;
		for (int i = 0, j = left; i < count.length && j <= right; i++, j++) {
			int sum = 0;
			int num = j;
			while (num > 0) {
				sum += num & 1;
				num >>= 1;
			}
			count[i] = sum;
		}
		for (int i = 0; i < count.length; i++) {
			if (isPrime(count[i])) {
				c++;
			}
		}
		return c;
	}
	boolean isPrime(int n) {
		if (n <= 1) {
			return false;
		}
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}