class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> queue = new ArrayList<>();
		dfs(root,queue);
		return construct(queue,0,queue.size() - 1);
	}
	TreeNode construct(List<Integer> queue, int i, int j) {
		if (i > j) {
			return null;
		}
		int mid = (i + j) / 2;
		TreeNode node = new TreeNode(queue.get(mid));
		node.left = construct(queue,i,mid - 1);
		node.right = construct(queue,mid + 1,j);
		return node;
	}
	void dfs(TreeNode root, List<Integer> queue) {
		if (root == null) {
			return;
		}
		dfs(root.left,queue);
		queue.add(root.val);
		dfs(root.right,queue);
	}
}