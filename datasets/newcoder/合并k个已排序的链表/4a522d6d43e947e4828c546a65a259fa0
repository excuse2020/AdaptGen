class Solution {
	ListNode Merge(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null) {
			return pHead2;
		}
		if (pHead2 == null) {
			return pHead1;
		}
		ListNode head = null;
		if (pHead1.val < pHead2.val) {
			head = pHead1;
			head.next = Merge(pHead1.next,pHead2);
		} 
		else {
			head = pHead2;
			head.next = Merge(pHead1,pHead2.next);
		}
		return head;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists.size() == 0) {
			return null;
		}
		if (lists.size() == 1) {
			return lists.get(0);
		}
		ListNode head = lists.get(0);
		for (int i = 1; i < lists.size(); i++) {
			head = Merge(head,lists.get(i));
		}
		return head;
	}
}