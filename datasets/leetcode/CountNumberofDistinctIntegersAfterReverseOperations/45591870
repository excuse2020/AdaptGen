class Solution {
	int countDistinctIntegers(int[] nums) {
		List<Integer> l1 = new ArrayList<Integer>();
		List<Integer> l1distinct = new ArrayList<Integer>();
		int i, rev = 0;
		for (i = 0; i < nums.length; i++) {
			l1.add(nums[i]);
		}
		for (i = 0; i < nums.length; i++) {
			rev = reverse(nums[i]);
			l1.add(rev);
		}
		l1distinct = l1.stream().distinct().collect(Collectors.toList());
		return l1distinct.size();
	}
	int reverse(int n) {
		int r = 0, s = 0;
		while (n > 0) {
			r = n % 10;
			s = s * 10 + r;
			n = n / 10;
		}
		return s;
	}
}