class Solution {
	int getLongestPalindrome(String A, int n) {
		if (A == null) {
			return 0;
		}
		if (A.length() <= 1) {
			return A.length();
		}
		char[] data = A.toCharArray();
		int right = 0, left = 0;
		boolean[][] dp = new boolean[data.length][data.length];
		for (int i = n - 2; i >= 0; i--) {
			dp[i][i] = true;
			for (int j = i + 1; j < data.length; j++) {
				if (data[i] == data[j] && ((j - i) < 3 || (i < n && dp[i + 1][j - 1]))) {
					dp[i][j] = true;
				}
				if (dp[i][j] && (right - left) < (j - i)) {
					left = i;
					right = j;
				}
			}
		}
		return right - left + 1;
	}
}