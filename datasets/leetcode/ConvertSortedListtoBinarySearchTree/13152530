class Solution {
	ListNode findMid(ListNode head, ListNode tail) {
		ListNode l1 = head, l2 = head;
		while (l2 != tail && l2.next != tail) {
			l1 = l1.next;
			l2 = l2.next.next;
		}
		return l1;
	}
	TreeNode listToBST(ListNode head, ListNode tail) {
		if (head == null || head == tail) {
			return null;
		}
		ListNode mid = findMid(head,tail);
		TreeNode root = new TreeNode(mid.val);
		root.left = listToBST(head,mid);
		root.right = listToBST(mid.next,tail);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		return listToBST(head,null);
	}
}