class Solution {
	TreeNode balanceBST(TreeNode root) {
		ArrayList<Integer> arr = new ArrayList<Integer>();
		inOrder(root,arr);
		TreeNode node = buildTree(arr,0,arr.size() - 1);
		return node;
	}
	TreeNode buildTree(ArrayList<Integer> arr, int l, int r) {
		if (l > r) {
			return null;
		}
		int mid = (l + r) / 2;
		TreeNode node = new TreeNode(arr.get(mid));
		node.left = buildTree(arr,l,mid - 1);
		node.right = buildTree(arr,mid + 1,r);
		return node;
	}
	void inOrder(TreeNode root, ArrayList<Integer> arr) {
		if (root == null) {
			return;
		}
		inOrder(root.left,arr);
		arr.add(root.val);
		inOrder(root.right,arr);
	}
}