class Solution {
	int[] left;
	int[] remove;
	int[] right;
	int traverse(TreeNode root, int level) {
		if (root == null) {
			return level - 1;
		}
		int leftVal = traverse(root.left,level + 1);
		int rightVal = traverse(root.right,level + 1);
		left[root.val] = leftVal;
		right[root.val] = rightVal;
		return Math.max(leftVal,rightVal);
	}
	void traverse1(TreeNode root, int level) {
		if (root == null) {
			return;
		}
		remove[root.val] = level;
		traverse1(root.left,Math.max(right[root.val],level));
		traverse1(root.right,Math.max(left[root.val],level));
	}
	int[] treeQueries(TreeNode root, int[] queries) {
		left = new int[100001];
		right = new int[100001];
		remove = new int[100001];
		traverse(root,0);
		traverse1(root,0);
		for (int i = 0; i < queries.length; i++) {
			queries[i] = remove[queries[i]];
		}
		return queries;
	}
}