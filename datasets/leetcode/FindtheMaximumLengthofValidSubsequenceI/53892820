class Solution {
	int maximumLength(int[] nums) {
		int max = 2;
		int evenCount = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0) {
				evenCount++;
			}
		}
		max = Math.max(max,evenCount >= 2 ? evenCount : 0);
		int oddCount = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 != 0) {
				oddCount++;
			}
		}
		max = Math.max(max,oddCount >= 2 ? oddCount : 0);
		int startEven = 0;
		int startOdd = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 != 0) {
				startOdd = i;
				break;
			}
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] % 2 == 0) {
				startEven = i;
				break;
			}
		}
		int startOddCount = 1;
		for (int i = startOdd; i < nums.length; i++) {
			if (startOddCount % 2 == 0) {
				if (nums[i] % 2 != 0) {
					startOddCount++;
				}
			} 
			else {
				if (nums[i] % 2 == 0) {
					startOddCount++;
				}
			}
		}
		int startEvenCount = 1;
		for (int i = startEven; i < nums.length; i++) {
			if (startEvenCount % 2 == 0) {
				if (nums[i] % 2 == 0) {
					startEvenCount++;
				}
			} 
			else {
				if (nums[i] % 2 != 0) {
					startEvenCount++;
				}
			}
		}
		max = Math.max(max,startOddCount >= 2 ? startOddCount : 0);
		max = Math.max(max,startEvenCount >= 2 ? startEvenCount : 0);
		return max;
	}
}