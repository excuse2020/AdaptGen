class Solution {
	int helper(String s, int idx, int idxT, String t, int memo) {
		if (idxT >= t.length()) {
			return 1;
		}
		if (idx >= s.length()) {
			return 0;
		}
		if (memo[idx][idxT] != -1) {
			return memo[idx][idxT];
		}
		int take = 0, noTake = 0;
		if (s.charAt(idx) == t.charAt(idxT)) {
			take = helper(s,idx + 1,idxT + 1,t,memo);
			noTake = helper(s,idx + 1,idxT,t,memo);
			return memo[idx][idxT] = noTake + take;
		}
		return memo[idx][idxT] = helper(s,idx + 1,idxT,t,memo);
	}
	int numDistinct(String s, String t) {
		int memo = new int[s.length() + 1][t.length() + 1];
		for (int[] m: memo) {	
			Arrays.fill(m,-1);
		}
		return helper(s,0,0,t,memo);
	}
}