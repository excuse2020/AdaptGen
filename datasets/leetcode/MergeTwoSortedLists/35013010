class Solution {
	ListNode mergeTwoLists(ListNode list1, ListNode list2) {
		if (list1 == null) {
			return list2;
		} 
		else if (list2 == null) {
			return list1;
		} 
		else if (list1 == null && list2 == null) {
			return null;
		}
		ListNode merged = new ListNode(0);
		ListNode dupli = merged;
		while (list1 != null && list2 != null) {
			if (list1.val <= list2.val) {
				ListNode temp = new ListNode(list1.val);
				merged.next = temp;
				list1 = list1.next;
				merged = merged.next;
			} 
			else {
				ListNode temp = new ListNode(list2.val);
				merged.next = temp;
				list2 = list2.next;
				merged = merged.next;
			}
		}
		while (list1 != null) {
			merged.next = list1;
			list1 = list1.next;
			merged = merged.next;
		}
		while (list2 != null) {
			merged.next = list2;
			list2 = list2.next;
			merged = merged.next;
		}
		merged.next = null;
		return dupli.next;
	}
}