class Solution {
	String trans(String s, int n) {
		char[] chrs = s.toCharArray();
		StringBuffer stringBuffer = new StringBuffer(n);
		StringBuffer tmpStringBuffer = new StringBuffer();
		Stack<String> stack = new Stack<>();
		int switchs = s.charAt(0) == ' ' ? 0 : 1;
		for (char chr: chrs) {	
			if (chr == ' ') {
				if (switchs == 1) {
					switchs = 0;
					stack.push(new String(tmpStringBuffer));
					tmpStringBuffer = new StringBuffer();
				}
				tmpStringBuffer.append(" ");
			} 
			else {
				if (switchs == 0) {
					switchs = 1;
					stack.push(new String(tmpStringBuffer));
					tmpStringBuffer = new StringBuffer();
				}
				if (chr >= 'A' && chr <= 'Z') {
					tmpStringBuffer.append((chr + "").toLowerCase());
				} 
				else if (chr >= 'a' && chr <= 'z') {
					tmpStringBuffer.append((chr + "").toUpperCase());
				}
			}
		}
		stack.push(new String(tmpStringBuffer));
		while (!stack.isEmpty()) {
			stringBuffer.append(stack.pop());
		}
		return new String(stringBuffer);
	}
}