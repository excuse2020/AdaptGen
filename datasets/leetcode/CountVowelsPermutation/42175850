class Solution {
	int countVowelPermutation(int n) {
		HashMap<Character, HashSet<Character>> possible = new HashMap<>();
		int[][] dp = new int[300][n];
		for (int ele: dp) {	
			Arrays.fill(ele,0);
		}
		HashSet<Character> fora = new HashSet<Character>();
	}
	int findit(int[][] dp, HashMap<Character, HashSet<Character>> possible, int n, char ele, int pos) {
		if (pos < n - 1) {
			if (dp[(int)ele][pos] == 0) {
				long count = 0;
				for (char etr: possible.get(ele)) {	
					count += findit(dp,possible,n,etr,pos + 1);
				}
				if (count > (1000000007)) {
					dp[(int)ele][pos] = (int) (count % (1000000007));
				} 
				else {
					dp[(int)ele][pos] = (int) count;
				}
			}
			return dp[(int)ele][pos];
		}
		return 1;
	}
}