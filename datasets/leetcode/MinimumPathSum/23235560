class Solution {
	int minPathSum(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		return minPathSum(0,0,n,m,grid);
	}
	int minPathSum(int i, int j, int n, int m, int[][] grid) {
		if (i >= n || j >= m) {
			return Integer.MAX_VALUE;
		}
		if (i == n - 1 && j == m - 1) {
			return grid[i][j];
		}
		return grid[i][j] + Math.min(minPathSum(i + 1,j,n,m,grid),minPathSum(i,j + 1,n,m,grid));
	}
}