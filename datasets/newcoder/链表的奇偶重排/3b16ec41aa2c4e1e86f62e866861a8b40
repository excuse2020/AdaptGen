class Solution {
	ListNode oddEvenList(ListNode head) {
		ListNode osNode = null;
		ListNode jsNode = head;
		ListNode temp = null;
		ListNode tempNext = null;
		List<Integer> jsList = new ArrayList<>();
		if (head != null && head.next != null) {
			osNode = head.next;
		} 
		else {
			return head;
		}
		while (jsNode != null) {
			jsList.add(jsNode.val);
			if (jsNode.next != null) {
				jsNode = jsNode.next.next;
			} 
			else {
				jsNode = null;
			}
		}
		ListNode osNodeTemp = osNode;
		while (osNodeTemp != null) {
			if (osNodeTemp.next != null) {
				osNodeTemp.next = osNodeTemp.next.next;
				osNodeTemp = osNodeTemp.next;
			} 
			else {
				osNodeTemp.next = null;
				break;
			}
		}
		for (int i = 0; i < jsList.size(); i++) {
			if (i == 0) {
				temp = new ListNode(jsList.get(i));
				tempNext = temp;
			} 
			else {
				tempNext.next = new ListNode(jsList.get(i));
				tempNext = tempNext.next;
			}
			if (i == jsList.size() - 1) {
				tempNext.next = osNode;
			}
		}
		return temp;
	}
}