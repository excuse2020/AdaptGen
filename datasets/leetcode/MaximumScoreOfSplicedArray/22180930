class Solution {
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int diff = new int[n];
		int wsum1 = 0, wsum2 = 0;
		for (int i = 0; i < n; i++) {
			diff[i] = nums1[i] - nums2[i];
			wsum1 += nums1[i];
			wsum2 += nums2[i];
		}
		int min = 0;
		int max = 0;
		int csum = 0;
		int csum2 = 0;
		for (int i = 0; i < n; i++) {
			csum += diff[i];
			csum2 += diff[i];
			if (csum <= 0) {
				min = Math.min(csum,min);
			} 
			else {
				csum = 0;
			}
			if (csum2 >= 0) {
				max = Math.max(max,csum2);
			} 
			else {
				csum2 = 0;
			}
		}
		return Math.max(wsum1 - min,wsum2 + max);
	}
}