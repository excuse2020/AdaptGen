class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		head1 = reverseList(head1);
		head2 = reverseList(head2);
		ListNode head = null;
		ListNode cur = null;
		int carry = 0;
		while (head1 != null || head2 != null || carry != 0) {
			int x = head1 == null ? 0 : head1.val;
			int y = head2 == null ? 0 : head2.val;
			int sum = x + y;
			carry = sum / 10;
			cur = new ListNode(sum % 10);
			cur.next = head;
			head = cur;
			if (head1 != null) {
				head1 = head1.next;
			}
			if (head2 != null) {
				head2 = head2.next;
			}
		}
		return cur;
	}
	ListNode reverseList(ListNode pHead) {
		ListNode head = null;
		ListNode cur = pHead;
		while (cur != null) {
			ListNode temp = cur.next;
			cur.next = head;
			head = cur;
			cur = temp;
		}
		return head;
	}
}