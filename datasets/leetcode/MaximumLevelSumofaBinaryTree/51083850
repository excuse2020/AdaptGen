class Solution {
	int maxLevelSum(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList<>();
		HashMap<Integer, Integer> map = new HashMap<>();
		int counter = 1;
		queue.offer(root);
		int maxSum = Integer.MIN_VALUE;
		while (!queue.isEmpty()) {
			int sum = 0;
			int size = queue.size();
			while (size > 0) {
				TreeNode curr = queue.poll();
				sum += curr.val;
				if (curr.left != null) {
					queue.offer(curr.left);
				}
				if (curr.right != null) {
					queue.offer(curr.right);
				}
				size--;
			}
			if (!map.containsKey(sum)) {
				map.put(sum,counter++);
			}
			maxSum = Math.max(maxSum,sum);
		}
		return map.get(maxSum);
	}
}