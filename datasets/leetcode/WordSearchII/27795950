class Solution {
	char HASH_TAG;
	Tree root = new Tree();
	void checkWord(List<String> res, int y, int x, char[][] board, Tree temp) {
		if (x >= board[0].length || x < 0 || y >= board.length || y < 0) {
			return;
		}
		char ch = board[y][x];
	}
	List<String> findWords(char[][] board, String[] words) {
		Tree temp = root;
		int i = word.length() - 1;
		int idx;
	}
	List<String> searchWord(char[][] board) {
		List<String> res = new ArrayList<>();
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length; j++) {
				Tree temp = root;
				checkWord(res,i,j,board,temp);
			}
		}
		return res;
	}
	class Tree {
		int idx;
		Tree parent;
		Tree[] val = new Tree[26];
		String word;
		boolean isEmpty() {
			for (int i = 0; i < 26; i++) {
				if (val[i] != null) {
					return false;
				}
			}
			return true;
		}
	}
}