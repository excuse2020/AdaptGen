class Solution {
	String LCS(String str1, String str2) {
		if (str1 == null || str2 == null || str1.equals("") || str2.equals("")) {
			return "-1";
		}
		char[] cstr1 = str1.toCharArray();
		char[] cstr2 = str2.toCharArray();
		int N1 = cstr1.length;
		int N2 = cstr2.length;
		int[][] dp = new int[N1][N2];
		int max = 0;
		int indexMax = 0;
		if (cstr1[0] == cstr2[0]) {
			dp[0][0] = 1;
			max = 1;
		} 
		else {
			dp[0][0] = -1;
		}
		for (int i = 1; i < N1; i++) {
			if (cstr1[i] == cstr2[0]) {
				dp[i][0] = 1;
			} 
			else {
				dp[i][0] = -1;
			}
		}
		for (int i = 1; i < N2; i++) {
			if (cstr2[i] == cstr1[0]) {
				dp[0][i] = 1;
				max = 1;
			} 
			else {
				dp[0][i] = -1;
			}
		}
		for (int i = 1; i < N1; i++) {
			for (int j = 1; j < N2; j++) {
				if (cstr1[i] == cstr2[j]) {
					dp[i][j] = (dp[i - 1][j - 1] == -1 ? 0 : dp[i - 1][j - 1]) + 1;
				} 
				else {
					dp[i][j] = -1;
				}
				if (dp[i][j] != -1) {
					if (dp[i][j] >= max) {
						max = dp[i][j];
						indexMax = i;
					}
				}
			}
		}
		if (max == 0) {
			return "-1";
		}
		return str1.substring(indexMax - max + 1,indexMax + 1);
	}
}