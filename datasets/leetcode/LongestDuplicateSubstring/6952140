class Solution {
	String longestDupSubstring(String S) {
		int lo = 1;
		int hi = S.length();
		while (lo != hi) {
			int mi = lo + (hi - lo) / 2;
			if (possible(S,mi) != -1) {
				lo = mi + 1;
			} 
			else {
				hi = mi;
			}
		}
		int start = possible(S,lo - 1);
		return start != -1 ? S.substring(start,start + lo - 1) : "";
	}
	int possible(String s, int len) {
		long hash = 0;
		int a = 26;
		int n = s.length();
		long mod = (long) Math.pow(2,32);
		int i = 0;
	}
}