class Solution {
	Boolean checkIfIso(String s, String t) {
		Map<Character, Character> char_map = new HashMap<>();
		Map<Character, Character> char_map2 = new HashMap<>();
		for (int i = 0; i < s.length(); i++) {
			char s1 = s.charAt(i);
			char t1 = t.charAt(i);
			if ((char_map.containsKey(s1) && char_map.get(s1) != t1) || (char_map2.containsKey(t1) && char_map2.get(t1) != s1)) {
				return false;
			}
			char_map.put(s1,t1);
			char_map2.put(t1,s1);
		}
		return true;
	}
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> allowedStrings = new ArrayList<String>();
		for (int i = 0; i < words.length; i++) {
			if (checkIfIso(words[i],pattern)) {
				allowedStrings.add(words[i]);
			}
		}
		return allowedStrings;
	}
}