class Solution {
	int pairSum(ListNode head) {
		ListNode prev = null;
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			prev = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode curr = slow;
		ListNode next = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		int maxTwinSum = Integer.MIN_VALUE;
		while (head != slow) {
			maxTwinSum = Math.max(maxTwinSum,head.val + prev.val);
			head = head.next;
			prev = prev.next;
		}
		return maxTwinSum;
	}
}