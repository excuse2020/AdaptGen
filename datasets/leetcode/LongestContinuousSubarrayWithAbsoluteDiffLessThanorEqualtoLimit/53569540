class Solution {
	int longestSubarray(int[] nums, int limit) {
		if (nums.length == 1) {
			return 1;
		}
		int min = nums[0] - limit;
		int max = nums[0] + limit;
		int left = 0, right = 1;
		int maxLength = -1;
		int currentLength = 1;
		while (right < nums.length) {
			if (nums[right] >= min && nums[right] <= max) {
				currentLength++;
				min = Math.max(min,nums[right] - limit);
				max = Math.min(max,nums[right] + limit);
			} 
			else {
				maxLength = Math.max(maxLength,currentLength);
				currentLength = 1;
				min = nums[right] - limit;
				max = nums[right] + limit;
				left = right - 1;
				while (left >= 0 && nums[left] >= min && nums[left] <= max) {
					currentLength++;
					min = Math.max(min,nums[left] - limit);
					max = Math.min(max,nums[left] + limit);
					left--;
				}
			}
			right++;
		}
		maxLength = Math.max(maxLength,currentLength);
		return maxLength;
	}
}