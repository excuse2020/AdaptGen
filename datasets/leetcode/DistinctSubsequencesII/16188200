class Solution {
	int distinctSubseqII(String s) {
		long mod = (long) Math.pow(10,9) + 7;
		long[] dp = new long[s.length() + 1];
		dp[0] = 1;
		Map<Character, Integer> map = new HashMap<>();
		for (int i = 1; i < dp.length; i++) {
			dp[i] = ((long) dp[i - 1] * 2) % mod;
			char c = s.charAt(i - 1);
			if (map.containsKey(c)) {
				int j = map.get(c);
				dp[i] = dp[i] - dp[j - 1];
			}
			map.put(c,i);
			if (dp[i] < 0) {
				dp[i] += mod;
			}
			dp[i] %= mod;
		}
		return (int) dp[s.length()] - 1;
	}
}