class Solution {
	Integer getMax(int[] num) {
		int max = Integer.MIN_VALUE;
		for (int i: num) {	
			if (i > max) {
				max = i;
			}
		}
		return max;
	}
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		int length = num.length;
		if (size <= 0) {
			return new ArrayList<>();
		}
		if (length == 0) {
			return new ArrayList<>();
		}
		if (length < size) {
			return new ArrayList<>();
		}
		if (length == size) {
			ArrayList<Integer> r = new ArrayList<>();
			r.add(getMax(num));
			return r;
		} 
		else {
			int time = length - size + 1;
			ArrayList<Integer> result = new ArrayList<>(time);
			int begin = 0;
			int end = size - 1;
			for (int i = 0; i < time; i++) {
				int[] temp = new int[size];
				int index = 0;
				for (int j = begin; j <= end; j++) {
					temp[index++] = num[j];
				}
				Integer max = getMax(temp);
				result.add(max);
				begin++;
				end++;
			}
			return result;
		}
	}
}