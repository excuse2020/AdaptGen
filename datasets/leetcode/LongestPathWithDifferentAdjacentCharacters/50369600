class Solution {
	int ans;
	List<Integer>[] g;
	String s;
	int dfs(int x) {
		int maxLen = 0;
		for (int y: g[x]) {	
			int len = dfs(y) + 1;
			if (s.charAt(x) != s.charAt(y)) {
				ans = Math.max(ans,len + maxLen);
				maxLen = Math.max(maxLen,len);
			}
		}
		return maxLen;
	}
	int longestPath(int[] parent, String s) {
		this.s = s;
		this.ans = 0;
		int n = parent.length;
		g = new ArrayList[n];
		Arrays.setAll(g,(e) -> {new ArrayList<>()});
		for (int i = 1; i < n; ++i) {
			g[parent[i]].add(i);
		}
		dfs(0);
		return ans + 1;
	}
}