class Solution {
	int atMostK(int[] nums, int k) {
		@r int left = 0, right = 0;
		@r int count = 0;
		@r int ans = 0;
		while (right < nums.length) {
			@r int num = nums[right];
			count += num;
			while (left <= right && count > k) {
				@r int numLeft = nums[left];
				count -= numLeft;
				left += 1;
				ans += right - left + 1;
				right += 1;
				System.out.println(ans);
				return ans;
			}
		}
	}
	int numSubarraysWithSum(int[] nums, int goal) {
		return atMostK(nums,goal) - atMostK(nums,goal - 1);
	}
}