class Solution {
	int countBeautifulPairs(int[] nums) {
		int countBeautifulPairs = 0;
		for (int i = 0; i < nums.length - 1; ++i) {
			for (int j = i + 1; j < nums.length; ++j) {
				int first = getFirstDigit(nums[i]);
				int last = getLastDigit(nums[j]);
				if (gcd(first,last) == 1) {
					++countBeautifulPairs;
				}
			}
		}
		return countBeautifulPairs;
	}
	int gcd(int a, int b) {
		if (b == 0) {
			return a;
		}
		return gcd(b,a % b);
	}
	int getFirstDigit(int n) {
		while (n >= 10) {
			n /= 10;
		}
		return n;
	}
	int getLastDigit(int n) {
		return n % 10;
	}
}