class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		if (size == 0 || num.length == 0) {
			return new ArrayList<>();
		}
		ArrayList<Integer> list = new ArrayList<>();
		Deque<Integer> dp = new LinkedList<>();
		for (int i = 0; i < num.length; i++) {
			while (!dp.isEmpty() && num[dp.getLast()] < num[i]) {
				dp.pollLast();
			}
			dp.offer(i);
			if (i - dp.getFirst() == size) {
				dp.pollFirst();
			}
			if (i - size >= -1) {
				list.add(num[dp.getFirst()]);
			}
		}
		return list;
	}
}