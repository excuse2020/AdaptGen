class Solution {
	TreeNode lca = null;
	int maxDepth = -1;
	int dfs(TreeNode root, int depth) {
		if (root == null) {
			return depth - 1;
		}
		int leftDepth = dfs(root.left,depth + 1);
		int rightDepth = dfs(root.right,depth + 1);
		maxDepth = Math.max(maxDepth,depth);
		if (leftDepth == maxDepth && rightDepth == maxDepth) {
			lca = root;
		}
		return Math.max(leftDepth,rightDepth);
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		if (root == null || root.left == root.right) {
			return root;
		}
		dfs(root,0);
		return lca;
	}
}