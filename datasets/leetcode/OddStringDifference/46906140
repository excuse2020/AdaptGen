class Solution {
	String oddString(String[] words) {
		Map<List<Integer>, Map<Integer, String>> hm = new HashMap<>();
		int len = words.length;
		for (int i = 0; i < len; i++) {
			String str = words[i];
			int strLen = str.length();
			List<Integer> arr = new ArrayList<>();
			for (int j = 0; j < strLen; j++) {
				if (j != 0) {
					int num = (str.charAt(j) - 96) - (str.charAt(j - 1) - 96);
					arr.add(num);
				}
			}
			if (hm.containsKey(arr)) {
				Map<Integer, String> sub = new HashMap<>();
				int num = hm.get(arr).entrySet().iterator().next().getKey();
				hm.remove(arr);
				sub.put(num + 1,str);
				hm.put(arr,sub);
			} 
			else {
				Map<Integer, String> sub1 = new HashMap<>();
				sub1.put(1,str);
				hm.put(arr,sub1);
			}
		}
		String res = "";
		for (Map.Entry<List<Integer>, Map<Integer, String>> entry: hm.entrySet()) {	
			Map<Integer, String> sub = entry.getValue();
			int num = sub.entrySet().iterator().next().getKey();
			if (num == 1) {
				res = sub.get(num);
				break;
			}
		}
		return res;
	}
}