class Solution {
	void inOrder(TreeNode root, Queue<Integer> que) {
		if (root == null) {
			return;
		}
		inOrder(root.left,que);
		que.add(root.val);
		inOrder(root.right,que);
	}
	TreeNode increasingBST(TreeNode root) {
		Queue<Integer> queue = new LinkedList<>();
		inOrder(root,queue);
		TreeNode newRoot = new TreeNode(-1);
		TreeNode curr = newRoot;
		while (!queue.isEmpty()) {
			curr.right = new TreeNode(queue.remove());
			curr = curr.right;
		}
		return newRoot.right;
	}
}