class Solution {
	int f(String s, String t, int i1, int i2, int[][] dp) {
		if (i2 == t.length()) {
			return 1;
		}
		if (i1 == s.length()) {
			return 0;
		}
		if (dp[i1 + 1][i2 + 1] != -1) {
			return dp[i1 + 1][i2 + 1];
		}
		if (s.charAt(i1) == t.charAt(i2)) {
			dp[i1 + 1][i2 + 1] = f(s,t,i1 + 1,i2,dp) + f(s,t,i1 + 1,i2 + 1,dp);
			return dp[i1 + 1][i2 + 1];
		}
		return dp[i1 + 1][i2 + 1] = f(s,t,i1 + 1,i2,dp);
	}
	int numDistinct(String s, String t) {
		int[][] dp = new int[s.length() + 1][t.length() + 1];
		for (int[] row: dp) {	
			Arrays.fill(row,-1);
		}
		return f(s,t,0,0,dp);
	}
}