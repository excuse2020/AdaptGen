class Solution {
	int detonate(int[][] b, int i, boolean[] detonated) {
		int sum = 0;
		int n = b.length;
		detonated[i] = true;
		for (int j = 0; j < n; j++) {
			if (j != i && !detonated[j]) {
				double d = distance(b[i],b[j]);
				if (d <= b[i][2]) {
					sum += 1 + detonate(b,j,detonated);
				}
			}
		}
		return sum;
	}
	double distance(int[] b1, int[] b2) {
		return Math.sqrt(Math.pow(b1[0] - b2[0],2) + Math.pow(b1[1] - b2[1],2));
	}
	int maximumDetonation(int[][] bombs) {
		int n = bombs.length;
		int max = 1;
		for (int i = 0; i < n; i++) {
			max = Math.max(max,1 + detonate(bombs,i,new boolean[n]));
		}
		return max;
	}
}