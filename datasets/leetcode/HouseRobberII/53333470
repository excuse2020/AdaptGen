class Solution {
	int rob(int[] nums) {
		int n = nums.length;
		int[] dp1 = new int[n];
		int[] dp2 = new int[n];
		if (n == 1) {
			return nums[0];
		}
		dp1[0] = nums[0];
		dp1[1] = Math.max(nums[0],nums[1]);
		dp2[0] = 0;
		dp2[1] = Math.max(0,nums[1]);
		int ans1 = rob(dp1,nums,-1);
		int ans2 = rob(dp2,nums,0);
		return Math.max(ans1,ans2);
	}
	int rob(int[] dp, int[] nums, int k) {
		int n = nums.length;
		for (int i = 2; i < n + k; i++) {
			dp[i] = Math.max(dp[i - 1],dp[i - 2] + nums[i]);
		}
		return dp[--n + k];
	}
}