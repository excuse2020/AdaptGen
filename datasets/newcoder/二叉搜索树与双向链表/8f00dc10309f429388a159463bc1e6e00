class Solution {
	TreeNode Convert(TreeNode pRootOfTree) {
		if (pRootOfTree == null || (pRootOfTree.left == null && pRootOfTree.right == null)) {
			return pRootOfTree;
		}
		TreeNode pre = null;
		LinkedList<TreeNode> st = new LinkedList<>();
		TreeNode temp = pRootOfTree;
		TreeNode ans = null;
		while (!st.isEmpty() || temp != null) {
			while (temp != null) {
				st.push(temp);
				temp = temp.left;
			}
			TreeNode n = st.poll();
			if (pre != null) {
				pre.right = n;
			} 
			else {
				ans = n;
			}
			n.left = pre;
			temp = n.right;
			pre = n;
		}
		return ans;
	}
}