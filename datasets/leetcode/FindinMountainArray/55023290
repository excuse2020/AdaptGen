class Solution {
	int find(int target, MountainArray arr, int s, int e, boolean isAsc) {
		while (s <= e) {
			int mid = s + (e - s) / 2;
			if (target == arr.get(mid)) {
				return mid;
			}
			if (isAsc) {
				if (target > arr.get(mid)) {
					s = mid + 1;
				} 
				else {
					e = mid - 1;
				}
			} 
			else {
				if (target > arr.get(mid)) {
					e = mid - 1;
				} 
				else {
					s = mid + 1;
				}
			}
		}
		return -1;
	}
	int findInMountainArray(int target, MountainArray mountainArr) {
		int peakIndex = peak(mountainArr);
		int firstHalf = find(target,mountainArr,0,peakIndex,true);
		int secondHalf = find(target,mountainArr,peakIndex + 1,mountainArr.length() - 1,false);
		return firstHalf != -1 ? firstHalf : secondHalf;
	}
	int peak(MountainArray arr) {
		int s = 0;
		int e = arr.length() - 1;
		while (s < e) {
			int mid = s + (e - s) / 2;
			if (arr.get(mid) > arr.get(mid + 1)) {
				e = mid;
			} 
			else {
				s = mid + 1;
			}
		}
		return s;
	}
}