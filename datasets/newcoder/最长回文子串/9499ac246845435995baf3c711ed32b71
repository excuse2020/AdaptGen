class Solution {
	int getLongestPalindrome(String A, int n) {
		if (n < 2) {
			return n;
		}
		boolean[][] flag = new boolean[n][n];
		int maxLen = 1;
		for (int i = 0; i < n; i++) {
			flag[i][i] = true;
		}
		for (int i = n - 1; i >= 0; i--) {
			for (int j = n - 1; j > i; j--) {
				if (i - j == 0 || A.charAt(i) != A.charAt(j)) {
					continue;
				}
				if (j - i < 2) {
					flag[i][j] = true;
				} 
				else {
					flag[i][j] = flag[i + 1][j - 1];
				}
				if (flag[i][j]) {
					maxLen = Math.max(maxLen,j - i + 1);
				}
			}
		}
		return maxLen;
	}
}