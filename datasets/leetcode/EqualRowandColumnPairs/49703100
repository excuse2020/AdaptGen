class Solution {
	String build(int[][] grid, int idx, boolean dir) {
		StringBuilder ans = new StringBuilder();
		int n = grid.length;
		if (dir) {
			for (int i = 0; i < n; i++) {
				ans.append("|");
				ans.append(grid[i][idx]);
			}
		} 
		else {
			for (int i = 0; i < n; i++) {
				ans.append("|");
				ans.append(grid[idx][i]);
			}
		}
		return ans.toString();
	}
	String[] buildCol(int[][] grid) {
		int n = grid.length;
		String[] ans = new String[n];
		for (int i = 0; i < n; i++) {
			ans[i] = build(grid,i,false);
		}
		return ans;
	}
	String[] buildRow(int[][] grid) {
		int n = grid[0].length;
		String[] ans = new String[n];
		for (int i = 0; i < n; i++) {
			ans[i] = build(grid,i,true);
		}
		return ans;
	}
	int equalPairs(int[][] grid) {
		String[] row = buildRow(grid);
		String[] coln = buildCol(grid);
		int c = 0;
		for (String r: row) {	
			for (String cc: coln) {	
				if (r.equals(cc)) {
					c++;
				}
			}
		}
		return c;
	}
}