class Solution {
	boolean partition(int[] nums) {
		int sum = 0;
		int max = 0;
		for (int num: nums) {	
			sum += num;
			max = Math.max(max,num);
		}
		if (sum % 2 == 1) {
			return false;
		}
		if (max > sum / 2) {
			return false;
		}
		int n = nums.length;
		boolean[][] dp = new boolean[n + 1][sum / 2 + 1];
		dp[0][0] = true;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= sum / 2; j++) {
				if (j >= nums[i]) {
					dp[i + 1][j] = dp[i][j] | dp[i][j - nums[i]];
				} 
				else {
					dp[i + 1][j] = dp[i][j];
				}
			}
		}
		return dp[n][sum / 2];
	}
}