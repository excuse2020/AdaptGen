class Solution {
	int out = Integer.MAX_VALUE;
	void dfs(String s, int start, List<String> list) {
		if (start >= s.length()) {
			out = Math.min(out,list.size());
			return;
		}
		for (int end = start; end < s.length(); end++) {
			String tmp = s.substring(start,end + 1);
			if (isBeautiful(tmp)) {
				list.add(tmp);
				dfs(s,end + 1,list);
				list.remove(list.size() - 1);
			}
		}
	}
	boolean isBeautiful(String s) {
	}
	int minimumBeautifulSubstrings(String s) {
		dfs(s,0,new ArrayList<String>());
		return out == Integer.MAX_VALUE ? -1 : out;
	}
}