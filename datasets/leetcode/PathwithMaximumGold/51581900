class Solution {
	int ans = 0;
	int getMaximumGold(int[][] grid) {
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				helper(grid,i,j,0);
			}
		}
		return ans;
	}
	void helper(int[][] grid, int r, int c, int max) {
		if (r == -1 || c == -1 || r == grid.length || c == grid[0].length || grid[r][c] == 0 || grid[r][c] == -1) {
			return;
		}
		int t = grid[r][c];
		if (max + t > ans) {
			ans = max + t;
		}
		grid[r][c] = -1;
		helper(grid,r,c + 1,max + t);
		helper(grid,r,c - 1,max + t);
		helper(grid,r + 1,c,max + t);
		helper(grid,r - 1,c,max + t);
		grid[r][c] = t;
	}
}