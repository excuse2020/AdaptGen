class Solution {
	int rangeSum(int[] nums, int n, int left, int right) {
		int mod = 1_000_000_007;
		PriorityQueue<int[]> pq = new PriorityQueue<>((A, B) -> {A[0] - B[0]});
		for (int i = 0; i < n; i++) {
			pq.offer(new int{nums[i], i});
		}
		left--;
		right--;
		int ans = 0;
		for (int i = 0; i <= right; i++) {
			int[] top = pq.poll();
			if (i >= left) {
				ans = (ans + top[0]) % mod;
			}
			if (top[1] < n - 1) {
				top[0] = (top[0] + nums[++top[1]]) % mod;
				pq.offer(top);
			}
		}
		return ans;
	}
}