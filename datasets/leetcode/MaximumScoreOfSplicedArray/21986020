class Solution {
	int getMinContiguousDiff(int[] nums1, int[] nums2) {
		int sum = 0, min = 0;
		for (int i = 0; i < nums1.length; i++) {
			if (sum <= 0) {
				int diff = nums2[i] - nums1[i];
				sum += diff;
				if (diff < 0) {
					min = Math.min(min,sum);
				}
				if (sum > 0) {
					sum = 0;
				}
			}
		}
		return min;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		int n = nums1.length;
		int t1 = 0, t2 = 0;
		for (int i = 0; i < n; i++) {
			t1 += nums1[i];
			t2 += nums2[i];
		}
		int min1 = getMinContiguousDiff(nums2,nums1);
		int min2 = getMinContiguousDiff(nums1,nums2);
		return Math.max(t1 - min1,t2 - min2);
	}
}