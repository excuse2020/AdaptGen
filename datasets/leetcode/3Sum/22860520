class Solution {
	List<List<Integer>> threeSum(int[] nums) {
		List<List<Integer>> res = new ArrayList();
		Arrays.sort(nums);
		for (int i = nums.length - 1; i >= 0; i--) {
			if (i != nums.length - 1 && nums[i] == nums[i + 1]) {
				continue;
			}
			List<List<Integer>> lst = twoSum(nums,i);
			res.addAll(lst);
		}
		return res;
	}
	List<List<Integer>> twoSum(int[] nums, int idx) {
		List<List<Integer>> l = new ArrayList();
		int s = 0;
		int e = idx - 1;
		while (s < e) {
			if (nums[s] + nums[e] == -nums[idx]) {
				List<Integer> l1 = new ArrayList();
				l1.add(nums[s]);
				l1.add(nums[e]);
				l1.add(nums[idx]);
				l.add(l1);
				s++;
				e--;
				while (s + 1 < idx && nums[s] == nums[s - 1]) {
					s++;
				}
				while (e - 1 >= 0 && nums[e] == nums[e + 1]) {
					e--;
				}
			} 
			else if (nums[s] + nums[e] < -nums[idx]) {
				s++;
			} 
			else {
				e--;
			}
		}
		return l;
	}
}