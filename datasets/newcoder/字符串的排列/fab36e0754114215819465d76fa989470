class Solution {
	char[] arry;
	int length = 0;
	HashMap<String, Integer> list = new HashMap<>();
	ArrayList<String> Permutation(String str) {
		arry = str.toCharArray();
		length = str.length();
		int k = 0;
		ArrayList<Character> arrycopy = new ArrayList<Character>();
		for (char a: arry) {	
			arrycopy.add(a);
		}
		collect(arrycopy,k);
		HashSet hs = new HashSet(list.keySet());
		ArrayList<String> res = new ArrayList<>(hs);
		return res;
	}
	void collect(ArrayList<Character> arrytemp, int k) {
		if (k == length) {
			String s = new String(arry);
			if (!list.containsKey(s)) {
				list.put(s,1);
			}
		} 
		else {
			for (int i = 0; i < arrytemp.size(); i++) {
				arry[k] = arrytemp.get(i);
				ArrayList<Character> arrytemp2 = new ArrayList<>(arrytemp);
				arrytemp2.remove(i);
				collect(arrytemp2,k + 1);
			}
		}
	}
}