class Solution {
	int count = 0;
	int minOperations(int n) {
		ArrayList<Integer> list = new ArrayList<>();
		int prod = 1;
		for (int i = 0; i < 18; i++) {
			list.add(prod);
			prod = prod * 2;
		}
		count = 0;
		while (n != 0) {
			n = solve(list,n);
		}
		return count;
	}
	int solve(ArrayList<Integer> list, int n) {
		int minDiff = Integer.MAX_VALUE;
		int value = Integer.MAX_VALUE;
		for (int i = 0; i < list.size(); i++) {
			value = Math.abs(list.get(i) - n);
			if (value < minDiff) {
				minDiff = value;
			}
		}
		count++;
		return minDiff;
	}
}