class Solution {
	int maxC(int[][] grid, int c) {
		int max = 0;
		for (int i = 0; i < grid.length; i++) {
			if (max < grid[i][c]) {
				max = grid[i][c];
			}
		}
		return max;
	}
	int maxR(int[][] grid, int r) {
		int max = 0;
		for (int i = 0; i < grid[r].length; i++) {
			if (max < grid[r][i]) {
				max = grid[r][i];
			}
		}
		return max;
	}
	int projectionArea(int[][] grid) {
		int ans = 0;
		for (int i = 0; i < grid.length; i++) {
			ans += maxC(grid,i);
		}
		for (int i = 0; i < grid[0].length; i++) {
			ans += maxR(grid,i);
		}
		for (int r = 0; r < grid.length; r++) {
			for (int c = 0; c < grid[0].length; c++) {
				if (grid[r][c] > 0) {
					ans++;
				}
			}
		}
		return ans;
	}
}