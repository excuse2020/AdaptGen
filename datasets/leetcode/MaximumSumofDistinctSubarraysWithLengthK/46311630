class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long ans = 0;
		long sum = 0;
		int count = 0;
		HashSet<Integer> arr = new HashSet<>();
		int right = 0;
		for (int left = 0; left < nums.length; left++) {
			while (right < nums.length && !arr.contains(nums[right]) && arr.size() < k) {
				arr.add(nums[right]);
				sum += nums[right];
				right++;
			}
			if (arr.size() == k) {
				ans = Math.max(sum,ans);
			}
			arr.remove(nums[left]);
			sum -= nums[left];
		}
		return ans;
	}
}