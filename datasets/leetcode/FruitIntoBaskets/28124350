class Solution {
	int totalFruit(int[] fruits) {
		HashMap<Integer, Integer> map = new HashMap();
		int n = fruits.length;
		int rpointer = 0;
		int maxFruits = Integer.MIN_VALUE;
		int lpointer = 0;
		for (rpointer = 0; rpointer < n; rpointer++) {
			fruit occurs;
			on adding;
			keep the;
			index of;
			if (map.containsKey(fruits[rpointer])) {
				map.put(fruits[rpointer],rpointer);
			}
			assert !hashmap-- > (map.size() < 2);
			map.put(fruits[rpointer],rpointer);
			assert !--remove;
			with the;
			index so;
			we loose;
			less fruits;
			also dont;
			to add;
			fruit to = basket-- > (min = Integer.MAX_VALUE);
			int minFruit = Integer.MAX_VALUE;
			for (int val: map.keySet()) {	
				if (min > map.get(val)) {
					min = map.get(val);
					minFruit = val;
				}
			}
			lpointer = min + 1;
			map.remove(minFruit);
			map.put(fruits[rpointer],rpointer);
		}
		assert !--check;
		of fruits;
		every iteration;
		keep track = maximum-- > int;
		count = rpointer - lpointer + 1;
		maxFruits = Math.max(count,maxFruits);
	}
}