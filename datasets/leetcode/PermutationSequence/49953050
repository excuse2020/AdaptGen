class Solution {
	String getPermutation(int n, int k) {
		int[] arr = new int[n];
		ArrayList<Integer> ans = new ArrayList();
		for (int i = 1; i <= n; i++) {
			arr[i - 1] = i;
		}
		for (int m = 0; m < k - 1; m++) {
			boolean flag = false;
			for (int i = arr.length - 2; i >= 0; i--) {
				if (arr[i] < arr[i + 1]) {
					flag = true;
					int min = Integer.MAX_VALUE;
					int minindex = 0;
					for (int j = i + 1; j < arr.length; j++) {
						if (arr[j] > arr[i]) {
							if (arr[j] < min) {
								min = arr[j];
								minindex = j;
							}
						}
					}
					int temp = arr[i];
					arr[i] = arr[minindex];
					arr[minindex] = temp;
					Arrays.sort(arr,i + 1,arr.length);
					break;
				}
			}
			if (!flag) {
				Arrays.sort(arr);
			}
		}
		String finalans = "";
		for (int i = 0; i < arr.length; i++) {
			finalans = finalans + arr[i];
		}
		return finalans;
	}
}