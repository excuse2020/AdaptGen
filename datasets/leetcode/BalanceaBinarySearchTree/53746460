class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> nums = new ArrayList<>();
		inOrder(root,nums);
		return buildBST(nums,0,nums.size() - 1);
	}
	TreeNode buildBST(List<Integer> nums, int left, int right) {
		if (left > right) {
			return null;
		}
		int mid = left + (right - left) / 2;
		TreeNode root = new TreeNode(nums.get(mid));
		root.left = buildBST(nums,left,mid - 1);
		root.right = buildBST(nums,mid + 1,right);
		return root;
	}
	void inOrder(TreeNode node, List<Integer> nums) {
		if (node == null) {
			return;
		}
		inOrder(node.left,nums);
		nums.add(node.val);
		inOrder(node.right,nums);
	}
}