class Solution {
	boolean checkPossibility(int[] nums) {
		int n = nums.length;
		int smallCount = 0;
		int prev = 0;
		int current = 1;
		return process(nums,prev,current,smallCount);
	}
	boolean process(int[] arr, int prev, int current, int smallCount) {
		while (current < arr.length) {
			if (arr[current] < arr[prev]) {
				if (smallCount == 1) {
					return false;
				}
				int[] prevArr = new int[arr.length];
				int[] curArr = new int[arr.length];
				for (int i = 0; i < arr.length; i++) {
					prevArr[i] = arr[i];
					curArr[i] = arr[i];
				}
				prevArr[prev] = arr[current];
				curArr[current] = arr[prev];
				return process(prevArr,0,1,1) || process(curArr,0,1,1);
			}
			prev += 1;
			current = prev + 1;
		}
		return true;
	}
}