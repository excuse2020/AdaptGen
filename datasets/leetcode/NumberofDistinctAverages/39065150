class Solution {
	int distinctAverages(int[] nums) {
		Queue<Integer> minQueue = new PriorityQueue();
		Queue<Integer> maxQueue = new PriorityQueue(Collections.reverseOrder());
		Set<Float> s = new HashSet();
		for (int i = 0; i < nums.length; i++) {
			minQueue.add(nums[i]);
			maxQueue.add(nums[i]);
		}
		while (true) {
			if (minQueue.size() == 0) {
				break;
			}
			int num1 = minQueue.remove();
			int num2 = maxQueue.remove();
			s.add((float) (num1 + num2) / 2);
		}
		return s.size();
	}
}