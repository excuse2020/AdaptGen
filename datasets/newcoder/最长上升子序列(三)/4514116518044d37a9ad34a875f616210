class Solution {
	int[] LIS(int[] arr) {
		if (arr == null) {
			return arr;
		}
		int[] max = new int[arr.length + 1];
		int[] len = new int[arr.length];
		int maxLen = 0;
		for (int i = 0; i < arr.length; i++) {
			if (i == 0) {
				len[i] = 1;
				max[len[i]] = arr[i];
				maxLen = 1;
				continue;
			}
			if (arr[i] > max[maxLen]) {
				len[i] = maxLen + 1;
				max[len[i]] = arr[i];
				maxLen = len[i];
			} 
			else {
				int low = 1;
				int high = maxLen;
				int p = 1;
				while (low <= high) {
					int mid = (low + high) / 2;
					if (max[mid] >= arr[i]) {
						p = mid;
						high = mid - 1;
					} 
					else {
						low = mid + 1;
					}
				}
				len[i] = p;
				max[p] = arr[i];
			}
		}
		int[] res = new int[maxLen];
		for (int i = arr.length - 1; i >= 0; i--) {
			if (len[i] == maxLen && maxLen > 0) {
				res[maxLen - 1] = arr[i];
				maxLen--;
			}
		}
		return res;
	}
}