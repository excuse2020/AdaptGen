class Solution {
	void dfs(TreeNode root, int targetSum, List<Integer> current, List<List<Integer>> result) {
		if (root == null) {
			return;
		}
		current.add(root.val);
		targetSum -= root.val;
		if (root.left == null && root.right == null && targetSum == 0) {
			result.add(new ArrayList<>(current));
		}
		dfs(root.left,targetSum,current,result);
		dfs(root.right,targetSum,current,result);
		current.remove(current.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> result = new ArrayList<>();
		dfs(root,targetSum,new ArrayList<>(),result);
		return result;
	}
}