class Solution {
	int max = -1;
	int alternatingSubarray(int[] nums) {
		for (int i = 0; i < nums.length - 1; i++) {
			if (nums[i] - nums[i + 1] == -1) {
				dfs(i + 1,nums,2,nums[i] - nums[i + 1]);
			}
		}
		return max;
	}
	void dfs(int i, int nums, int step, int d) {
		max = Math.max(max,step);
		if (i >= nums.length - 1) {
			max = Math.max(max,step);
			return;
		}
		int diff = nums[i] - nums[i + 1];
		if (diff == d || diff != -1 && diff != 1) {
			return;
		}
		dfs(i + 1,nums,step + 1,diff);
	}
}