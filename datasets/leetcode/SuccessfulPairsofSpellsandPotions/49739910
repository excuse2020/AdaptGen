class Solution {
	int search(int[] po, long success, int sp) {
		int left = 0, right = po.length - 1;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			long pd = (long) sp * po[mid];
			if (pd >= success) {
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return po.length - left;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		Arrays.sort(potions);
		int lenPo = potions.length;
		for (int i = 0; i < spells.length; i++) {
			spells[i] = search(potions,success,spells[i]);
		}
		return spells;
	}
}