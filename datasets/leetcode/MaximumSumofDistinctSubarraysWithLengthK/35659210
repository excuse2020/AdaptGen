class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		int s_index = 0;
		long max_sum = 0;
		long sum = 0;
		int count = 0;
		HashSet<Integer> set = new HashSet<>();
		for (int i = 0; i < nums.length; ) {
			while (count < k && i < nums.length) {
				if (set.contains(nums[i])) {
					break;
				}
				set.add(nums[i]);
				sum += nums[i];
				count++;
				i++;
			}
			if (set.size() == k) {
				max_sum = Math.max(max_sum,sum);
			}
			set.remove(nums[s_index]);
			sum -= nums[s_index];
			s_index++;
			count--;
		}
		return max_sum;
	}
}