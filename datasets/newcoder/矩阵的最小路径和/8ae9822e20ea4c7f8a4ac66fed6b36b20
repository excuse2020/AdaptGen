class Solution {
	int minPathSum(int[][] matrix) {
		if (matrix == null || matrix.length == 0) {
			return 0;
		}
		int n = matrix.length, m = matrix[0].length;
		int[][] dp = new int[n][m];
		dp[0][0] = matrix[0][0];
		for (int i = 1; i < n; i++) {
			dp[i][0] = dp[i - 1][0] + matrix[i][0];
		}
		for (int j = 1; j < m; j++) {
			dp[0][j] = dp[0][j - 1] + matrix[0][j];
		}
		for (int i = 1; i < n; i++) {
			for (int j = 1; j < m; j++) {
				dp[i][j] = Math.min(dp[i - 1][j],dp[i][j - 1]) + matrix[i][j];
			}
		}
		return dp[n - 1][m - 1];
	}
}