class Solution {
	int NumberOf1(int n) {
		if (0 == n) {
			return 0;
		}
		int rs = 0;
		int abs = Math.abs(n);
		if (n > 0) {
			while (abs != 0) {
				if (abs % 2 == 1) {
					rs++;
				}
				abs /= 2;
			}
		} 
		else {
			StringBuffer sb = new StringBuffer("");
			while (abs != 0) {
				sb.append(abs % 2 == 0 ? 1 : 0);
				abs /= 2;
			}
			int len = sb.length();
			for (int i = 0; i < 32 - len; i++) {
				sb.append(1);
			}
			sb.reverse();
			String tmpStr = "00000000000000000000000000000001";
			int carryBit = 0;
			for (int i = sb.length() - 1; i > -1; i--) {
				int tmpValue = Integer.valueOf(sb.charAt(i) + "") + Integer.valueOf(tmpStr.charAt(i) + "");
				rs += (tmpValue % 2 == 1 ? 1 : 0);
				carryBit = tmpValue / 2;
			}
			if (carryBit != 0) {
				rs++;
			}
		}
		return rs;
	}
}