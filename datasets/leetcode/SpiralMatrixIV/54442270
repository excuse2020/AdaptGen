class Solution {
	int[][] spiralMatrix(int n, int m, ListNode head) {
		int ans = new int[n][m];
		for (int i = 0; i < n; i++) {
			Arrays.fill(ans[i],-1);
		}
		int sr = 0;
		int sc = 0;
		int er = n - 1;
		int ec = m - 1;
		while (head != null) {
			for (int j = sc; j <= ec; j++) {
				ans[sr][j] = head.val;
				head = head.next;
				if (head == null) {
					break;
				}
			}
			if (head == null) {
				break;
			}
			sr++;
			for (int i = sr; i <= er; i++) {
				ans[i][ec] = head.val;
				head = head.next;
				if (head == null) {
					break;
				}
			}
			if (head == null) {
				break;
			}
			ec--;
			for (int j = ec; j >= sc; j--) {
				ans[er][j] = head.val;
				head = head.next;
				if (head == null) {
					break;
				}
			}
			if (head == null) {
				break;
			}
			er--;
			for (int i = er; i >= sr; i--) {
				ans[i][sc] = head.val;
				head = head.next;
				if (head == null) {
					break;
				}
			}
			if (head == null) {
				break;
			}
			sc++;
		}
		return ans;
	}
}