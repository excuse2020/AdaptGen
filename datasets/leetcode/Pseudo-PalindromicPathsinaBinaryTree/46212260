class Solution {
	int helper(TreeNode node, HashSet<Integer> set) {
		if (node == null) {
			return 0;
		}
		if (set.contains(node.val)) {
			set.remove(node.val);
		} 
		else {
			set.add(node.val);
		}
		if (node.left == null && node.right == null) {
			if (set.size() <= 1) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		return helper(node.left,(HashSet<Integer>) set.clone()) + helper(node.right,(HashSet<Integer>) set.clone());
	}
	int pseudoPalindromicPaths(TreeNode root) {
		HashSet<Integer> seen = new HashSet<>();
		return helper(root,seen);
	}
}