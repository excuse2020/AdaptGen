class Solution {
	PriorityQueue<Integer> max = new PriorityQueue<>();
	PriorityQueue<Integer> min = new PriorityQueue<>((o1, o2) -> {o2.compareTo(o1)});
	Double GetMedian() {
		if (min.size() > max.size()) {
			return (double) min.peek();
		} 
		else {
			return (double) (min.peek() + max.peek()) / 2;
		}
	}
	void Insert(Integer num) {
		min.offer(num);
		max.offer(min.poll());
		if (min.size() < max.size()) {
			min.offer(max.poll());
		}
	}
}