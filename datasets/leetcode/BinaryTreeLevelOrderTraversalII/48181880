class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> result = new ArrayList<>();
		if (root == null) {
			return result;
		}
		Queue<TreeNode> q1 = new ArrayDeque<>();
		q1.add(root);
		while (!q1.isEmpty()) {
			int levelsize = q1.size();
			List<Integer> currentlevel = new ArrayList<>(levelsize);
			for (int i = 0; i < levelsize; i++) {
				TreeNode current = q1.remove();
				currentlevel.add(current.val);
				if (current.left != null) {
					q1.add(current.left);
				}
				if (current.right != null) {
					q1.add(current.right);
				}
			}
			result.add(currentlevel);
		}
		List<List<Integer>> answer = new ArrayList<>();
		for (int i = result.size() - 1; i >= 0; i--) {
			answer.add(result.get(i));
		}
		return answer;
	}
}