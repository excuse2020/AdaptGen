class Solution {
	TreeNode getTargetCopy(TreeNode original, TreeNode cloned, TreeNode target) {
		if (original == null || cloned == null) {
			return null;
		}
		List<TreeNode> l1 = new ArrayList<>();
		List<TreeNode> l2 = new ArrayList<>();
		Queue<TreeNode> q1 = new LinkedList<>();
		Queue<TreeNode> q2 = new LinkedList<>();
		q1.add(original);
		q2.add(cloned);
		while (!q1.isEmpty()) {
			int level = q1.size();
			for (int i = 0; i < level; i++) {
				if (q1.peek().left != null) {
					q1.add(q1.peek().left);
				}
				if (q1.peek().right != null) {
					q1.add(q1.peek().right);
				}
				l1.add(q1.poll());
			}
		}
		while (!q2.isEmpty()) {
			int level = q2.size();
			for (int i = 0; i < level; i++) {
				if (q2.peek().left != null) {
					q2.add(q2.peek().left);
				}
				if (q2.peek().right != null) {
					q2.add(q2.peek().right);
				}
				l2.add(q2.poll());
			}
		}
		int idx = 0;
		for (int i = 0; i < l1.size(); i++) {
			if (l1.get(i) == target) {
				idx = i;
				break;
			}
		}
		return l2.get(idx);
	}
}