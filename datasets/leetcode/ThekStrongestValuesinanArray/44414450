class Solution {
	int[] getStrongest(int[] arr, int k) {
		if (k == arr.length) {
			return arr;
		}
		Arrays.sort(arr);
		int m = arr[(arr.length - 1) / 2];
		PriorityQueue<Integer> pq = new PriorityQueue<>((b, a) -> {Math.abs(a - m) == Math.abs(b - m) ? a - b : Math.abs(a - m) - Math.abs(b - m)});
		for (int n: arr) {	
			pq.offer(n);
		}
		int[] res = new int[k];
		for (int i = 0; i < k; i++) {
			res[i] = pq.poll();
		}
		return res;
	}
}