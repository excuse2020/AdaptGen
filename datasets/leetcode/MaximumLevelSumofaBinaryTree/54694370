class Solution {
	int maxLevelSum(TreeNode root) {
		if (root == null) {
			return 0;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		int maxSum = Integer.MIN_VALUE;
		int level = 0;
		int currLevel = 0;
		while (!q.isEmpty()) {
			int n = q.size();
			int currSum = 0;
			currLevel++;
			for (int i = 0; i < n; i++) {
				TreeNode node = q.poll();
				currSum = currSum + node.val;
				if (node.left != null) {
					q.add(node.left);
				}
				if (node.right != null) {
					q.add(node.right);
				}
			}
			if (currSum > maxSum) {
				maxSum = currSum;
				level = currLevel;
			}
		}
		return level;
	}
}