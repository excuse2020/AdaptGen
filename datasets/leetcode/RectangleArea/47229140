class Solution {
	int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		long area1 = Math.abs(ax1 - ax2) * Math.abs(ay1 - ay2);
		long area2 = Math.abs(bx1 - bx2) * Math.abs(by1 - by2);
		boolean x = (bx1 >= ax1 && bx1 <= ax2) || (bx2 >= ax1 && bx2 <= ax2);
		boolean y = (by1 >= ay1 && by1 <= ay2) || (by2 >= ay1 && by2 <= ay2);
		boolean x2 = (ax1 >= bx1 && ax1 <= bx2) || (ax2 >= bx1 && ax2 <= bx2);
		boolean y2 = (ay1 >= by1 && ay1 <= by2) || (ay2 >= by1 && ay2 <= by2);
		boolean inherit = bx1 <= ax1 && by1 <= ay1 && bx2 >= ax2 && by2 >= ay2;
		boolean x_overlap = x || x2;
		boolean y_overlap = y || y2;
		if ((!x_overlap || !y_overlap) && !inherit) {
			return (int) (area1 + area2);
		}
		ax1 = Math.max(ax1,bx1);
		long breadth = Math.min(Math.abs(ax1 - ax2),Math.abs(ax1 - bx2));
		ay1 = Math.max(ay1,by1);
		long height = Math.min(Math.abs(ay1 - ay2),Math.abs(ay1 - by2));
		long area = breadth * height;
		return (int) (area1 + area2 - area);
	}
}