class Solution {
	int binarySearch(int start, int end, MountainArray mountainArr, int target, boolean isAsc) {
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (mountainArr.get(mid) == target) {
				return mid;
			}
			if (isAsc) {
				if (mountainArr.get(mid) > target) {
					end = mid - 1;
				} 
				else {
					start = mid + 1;
				}
			} 
			else {
				if (mountainArr.get(mid) > target) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			}
		}
		return -1;
	}
	int findInMountainArray(int target, MountainArray mountainArr) {
		int result = -1;
		int peak = peakFind(mountainArr);
		if (mountainArr.get(peak) == target) {
			return peak;
		}
		result = binarySearch(0,peak - 1,mountainArr,target,true);
		if (result == -1) {
			result = binarySearch(peak + 1,mountainArr.length() - 1,mountainArr,target,false);
		}
		return result;
	}
	int peakFind(MountainArray mountainArr) {
		int start = 0;
		int end = mountainArr.length() - 1;
		while (start < end) {
			int mid = start + (end - start) / 2;
			if (mountainArr.get(mid) > mountainArr.get(mid + 1)) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return start;
	}
}