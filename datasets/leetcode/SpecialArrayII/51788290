class Solution {
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		TreeSet<Integer> st = new TreeSet<>();
		for (int i = 1; i < nums.length; i++) {
			int t1 = nums[i] % 2;
			int t2 = nums[i - 1] % 2;
			if (t1 == t2) {
				st.add(i - 1);
			}
		}
		boolean[] ans = new boolean[queries.length];
		for (int i = 0; i < queries.length; i++) {
			int start = queries[i][0];
			int end = queries[i][1];
			if (start == end) {
				ans[i] = true;
				continue;
			}
			Integer cc = st.ceiling(start);
			Integer ff = st.floor(end);
			if (cc != null && end > cc) {
				ans[i] = false;
				continue;
			}
			if (ff != null && start < ff && ff != end) {
				ans[i] = false;
				continue;
			}
			ans[i] = true;
		}
		return ans;
	}
}