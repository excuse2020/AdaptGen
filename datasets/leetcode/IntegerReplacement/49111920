class Solution {
	int helper(int n, Map<Integer, Integer> map) {
		if (n == 1) {
			return 0;
		}
		if (map.get(n) != null) {
			return map.get(n);
		}
		int res = 0;
		if (n % 2 == 0) {
			res = 1 + helper(n / 2,map);
		} 
		else {
			res = Math.min(1 + helper(n + 1,map),1 + helper(n - 1,map));
		}
		map.put(n,res);
		return res;
	}
	int integerReplacement(int n) {
		if (n == Integer.MAX_VALUE) {
			return 32;
		}
		Map<Integer, Integer> map = new HashMap<>();
		return helper(n,map);
	}
}