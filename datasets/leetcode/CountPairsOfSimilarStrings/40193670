class Solution {
	BigInteger hash(String word) {
		BigInteger bi = new BigInteger("0");
		int wordLen = word.length();
		BigInteger ten = new BigInteger("10");
		BigInteger zero = new BigInteger("0");
		int i = 0;
	}
	int similarPairs(String[] words) {
		Map<BigInteger, Integer> map = new HashMap();
		BigInteger hash;
		for (String word: words) {	
			hash = hash(word);
			if (map.get(hash) == null) {
				map.put(hash,1);
			} 
			else {
				map.put(hash,map.get(hash) + 1);
			}
		}
		int count = 0;
		int v;
		for (BigInteger key: map.keySet()) {	
			v = map.get(key);
			count += v * (v - 1) / 2;
		}
		return count;
	}
}