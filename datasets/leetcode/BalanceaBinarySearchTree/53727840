class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		traverse(root,list);
		return makeTree(0,list.size() - 1,list);
	}
	TreeNode makeTree(int start, int end, List<Integer> list) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		return new TreeNode(list.get(mid), makeTree(start,mid - 1,list), makeTree(mid + 1,end,list));
	}
	void traverse(TreeNode node, List<Integer> list) {
		if (node == null) {
			return;
		}
		traverse(node.left,list);
		list.add(node.val);
		traverse(node.right,list);
	}
}