class Solution {
	HashMap<String, Integer> mp;
	int solve(int destStair, int currStair, int jump, int canJumpBack) {
		if (currStair > destStair + 1) {
			return 0;
		}
		int ways = 0;
		String key = currStair + "_";
		if (mp.containsKey(key)) {
			return mp.get(key);
		}
		if (currStair == destStair) {
			ways += 1;
		}
		if (canJumpBack == 1) {
			ways += solve(destStair,currStair - 1,jump,0);
		}
		ways += solve(destStair,currStair + (int) Math.pow(2,jump),jump + 1,1);
		mp.put(key,ways);
		return ways;
	}
	int waysToReachStair(int k) {
		mp = new HashMap<>();
		return solve(k,1,0,1);
	}
}