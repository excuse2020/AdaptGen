class Solution {
	int fillCups(int[] amount) {
		PriorityQueue<Integer> p = new PriorityQueue<>(Collections.reverseOrder());
		p.add(amount[0]);
		p.add(amount[1]);
		p.add(amount[2]);
		int count = 0;
		while (!p.isEmpty()) {
			if (p.size() == 1) {
				break;
			}
			int h = p.poll() - 1;
			int l = p.poll() - 1;
			if (h >= 0 || l >= 0) {
				count++;
			}
			if (h <= 0 && l <= 0) {
				continue;
			}
			if (h <= 0) {
				p.add(l);
				continue;
			}
			if (l <= 0) {
				p.add(h);
				continue;
			}
			p.add(h);
			p.add(l);
		}
		if (p.size() == 1) {
			count = count + p.poll();
		}
		return count;
	}
}