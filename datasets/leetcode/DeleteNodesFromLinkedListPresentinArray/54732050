class Solution {
	ListNode newHead;
	ListNode prev;
	HashSet<Integer> set;
	ListNode modifiedList(int[] nums, ListNode head) {
		set = new HashSet<>();
		for (int i = 0; i < nums.length; i++) {
			set.add(nums[i]);
		}
		newHead = null;
		prev = null;
		traversal(head);
		return newHead;
	}
	void traversal(ListNode node) {
		if (node == null) {
			return;
		}
		if (set.contains(node.val)) {
			if (prev != null) {
				prev.next = node.next;
			}
		} 
		else {
			if (newHead == null) {
				newHead = node;
			}
			prev = node;
		}
		node = node.next;
		traversal(node);
	}
}