class Solution {
	int findBits(int n) {
		int count = 0;
		while (n > 0) {
			count++;
			n -= (n & -n);
		}
		return count;
	}
	void insertionSort(int[] arr) {
		for (int i = 1; i < arr.length; i++) {
			for (int j = i; j > 0; j--) {
				int firstBit = findBits(arr[j]);
				int secondBit = findBits(arr[j - 1]);
				if (firstBit < secondBit) {
					swap(arr,j,j - 1);
				} 
				else if (firstBit == secondBit) {
					if (arr[j] < arr[j - 1]) {
						swap(arr,j,j - 1);
					}
				} 
				else {
					break;
				}
			}
		}
	}
	int[] sortByBits(int[] arr) {
		insertionSort(arr);
		return arr;
	}
	void swap(int[] arr, int a, int b) {
		int temp = arr[a];
		arr[a] = arr[b];
		arr[b] = temp;
	}
}