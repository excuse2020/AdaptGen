class Solution {
	void dfs(int[][] adj, int[] visited, int node) {
		if (visited[node] == 1) {
			return;
		}
		visited[node] = 1;
		int[] arr = adj[node];
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == 1) {
				dfs(adj,visited,i);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int len = isConnected.length;
		int ans = 0;
		int[] visited = new int[len];
		for (int i = 0; i < len; i++) {
			if (visited[i] == 0) {
				dfs(isConnected,visited,i);
				ans++;
			}
		}
		return ans;
	}
}