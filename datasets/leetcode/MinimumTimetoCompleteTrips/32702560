class Solution {
	long minimumTime(int[] time, int totalTrips) {
		long left = 1;
		long min = time[0];
		for (int a: time) {	
			min = Math.min(min,a);
		}
		long right = totalTrips * min;
		while (left < right) {
			long mid = left + (right - left) / 2;
			long trips = minimumTrips(time,mid);
			if (trips < totalTrips) {
				left = mid + 1;
			} 
			else {
				right = mid;
			}
		}
		return left;
	}
	long minimumTrips(int[] time, long timing) {
		long trips = 0;
		for (int a: time) {	
			trips = trips + (timing / a);
		}
		return trips;
	}
}