class Solution {
	StringBuilder helper(int[] cost, int target) {
		if (target == 0) {
			return new StringBuilder("0");
		}
		if (target < 0) {
			return new StringBuilder("-1");
		}
		StringBuilder str = new StringBuilder();
		str.append("-1");
		for (int i = cost.length - 1; i >= 0; i--) {
			StringBuilder num = helper(cost,target - cost[i]).append(String.valueOf(i + 1));
			if (Long.parseLong(str.toString()) < Long.parseLong(num.toString())) {
				str = num;
			}
		}
		return str;
	}
	String largestNumber(int[] cost, int target) {
		String res = helper(cost,target).toString();
		long ans = Long.parseLong(res);
		if (ans < 0) {
			return "0";
		}
		return String.valueOf(ans);
	}
}