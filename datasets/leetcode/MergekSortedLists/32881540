class Solution {
	ListNode mergeKLists(ListNode[] lists) {
		PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>(new ListNodeComparator());
		for (ListNode x: lists) {	
			if (x != null) {
				pq.add(x);
			}
		}
		ListNode head = null, temp = null;
		while (!pq.isEmpty()) {
			ListNode x = pq.remove();
			if (x.next != null) {
				pq.add(x.next);
			}
			x.next = null;
			if (head == null) {
				head = x;
				temp = head;
			} 
			else {
				temp.next = x;
				temp = temp.next;
			}
		}
		return head;
	}
}
class ListNodeComparator {
	int compare(ListNode x, ListNode y) {
		if (x.val > y.val) {
			return 1;
		} 
		else if (x.val < y.val) {
			return -1;
		} 
		else {
			return 0;
		}
	}
}