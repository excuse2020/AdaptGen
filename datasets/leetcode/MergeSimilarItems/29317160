class Solution {
	List<List<Integer>> mergeSimilarItems(int[][] items1, int[][] items2) {
		HashMap<Integer, Integer> mp = new HashMap<>();
		for (int i = 0; i < items1.length; i++) {
			if (!mp.containsKey(items1[i][0])) {
				mp.put(items1[i][0],items1[i][1]);
			} 
			else {
				mp.put(items1[i][0],mp.get(items1[i][0]) + items1[i][1]);
			}
		}
		for (int i = 0; i < items2.length; i++) {
			if (!mp.containsKey(items2[i][0])) {
				mp.put(items2[i][0],items2[i][1]);
			} 
			else {
				mp.put(items2[i][0],mp.get(items2[i][0]) + items2[i][1]);
			}
		}
		List<List<Integer>> arr = new ArrayList<>();
		TreeMap<Integer, Integer> tm = new TreeMap<>(mp);
		Iterator itr = tm.keySet().iterator();
		while (itr.hasNext()) {
			ArrayList<Integer> temp = new ArrayList<>();
			int get = (int) itr.next();
			temp.add(get);
			temp.add(mp.get(get));
			arr.add(temp);
		}
		return arr;
	}
}