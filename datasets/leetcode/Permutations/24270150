class Solution {
	void permutations(List<List<Integer>> list, int[] nums, int start) {
		if (start == nums.length) {
			List<Integer> temp = new ArrayList<>();
			for (int i = 0; i < nums.length; i++) {
				temp.add(nums[i]);
			}
			list.add(temp);
			return;
		}
		for (int i = start; i < nums.length; i++) {
			swap(nums,start,i);
			permutations(list,nums,start + 1);
			swap(nums,start,i);
		}
	}
	List<List<Integer>> permute(int[] nums) {
		List<List<Integer>> list = new ArrayList<>();
		permutations(list,nums,0);
		return list;
	}
	void swap(int[] nums, int start, int i) {
		int temp = nums[i];
		nums[i] = nums[start];
		nums[start] = temp;
	}
}