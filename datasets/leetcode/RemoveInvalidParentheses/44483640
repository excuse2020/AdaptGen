class Solution {
	boolean isValid(String strr) {
		int count = 0;
	}
	List<String> removeInvalidParentheses(String s) {
		Queue<String> queue = new LinkedList<>();
		ArrayList<String> res = new ArrayList<>();
		HashSet<String> sett = new HashSet<>();
		queue.add(s);
		boolean flag = true;
		sett.add(s);
		while (!queue.isEmpty() && flag) {
			int size = queue.size();
			for (int i = 0; i < size; i++) {
				String curr = queue.poll();
				if (isValid(curr)) {
					res.add(curr);
					flag = false;
				} 
				else {
					for (int j = 0; j < curr.length(); j++) {
						String strr = curr.substring(0,j) + curr.substring(j + 1);
						if (!sett.contains(strr)) {
							queue.add(strr);
							sett.add(strr);
						}
					}
				}
			}
		}
		return res;
	}
}