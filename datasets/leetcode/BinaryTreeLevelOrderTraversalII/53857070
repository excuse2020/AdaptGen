class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		q.add(null);
		List<Integer> ls = new ArrayList<>();
		while (!q.isEmpty()) {
			TreeNode currNode = q.poll();
			if (currNode == null) {
				ans.add(0,new ArrayList<>(ls));
				ls.clear();
				if (q.isEmpty()) {
					break;
				} 
				else {
					q.add(null);
				}
			} 
			else {
				ls.add(currNode.val);
				if (currNode.left != null) {
					q.add(currNode.left);
				}
				if (currNode.right != null) {
					q.add(currNode.right);
				}
			}
		}
		return ans;
	}
}