class Solution {
	boolean check(int[] arr, int k, int m) {
		if (arr[arr.length - 1] - arr[0] < m) {
			return false;
		}
		int cnt = 1;
		int pre = arr[0];
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] - pre >= m) {
				pre = arr[i];
				cnt++;
			}
		}
		return cnt >= k;
	}
	int maximumTastiness(int[] arr, int k) {
		Arrays.sort(arr);
		int n = arr.length;
		int s = 0;
		int e = arr[n - 1] - arr[0];
		while (e - s > 1) {
			int m = (s + e) / 2;
			if (check(arr,k,m)) {
				s = m;
			} 
			else {
				e = m - 1;
			}
		}
		if (check(arr,k,e)) {
			return e;
		}
		return s;
	}
}