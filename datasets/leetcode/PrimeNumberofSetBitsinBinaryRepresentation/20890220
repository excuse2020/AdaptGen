class Solution {
	int countPrimeSetBits(int left, int right) {
		int cnt = 0;
		for (int i = left; i <= right; i++) {
			if (primeSetBits(i)) {
				cnt++;
			}
		}
		return cnt;
	}
	int countSetBits(int num) {
		int count = 0;
		while (num != 0) {
			int rmsbm = rMSBM(num);
			num = num - rmsbm;
			count++;
		}
		return count;
	}
	boolean isPrime(int num) {
		if (num <= 1) {
			return false;
		}
		for (int i = 2; (i * i) <= num; i++) {
			if ((num % i) == 0) {
				return false;
			}
		}
		return true;
	}
	boolean primeSetBits(int num) {
		int cntSetBits = countSetBits(num);
		return isPrime(cntSetBits);
	}
	int rMSBM(int num) {
		int rmsbm = num & twosCompliment(num);
		return rmsbm;
	}
	int twosCompliment(int num) {
		return -num;
	}
}