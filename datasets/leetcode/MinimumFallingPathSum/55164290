class Solution {
	int minFallingPathSum(int[][] matrix) {
		int dp = new int[matrix.length][matrix.length];
		for (int row = 0; row < matrix.length; row++) {
			for (int col = 0; col < matrix.length; col++) {
				if (row == 0) {
					dp[row][col] = matrix[row][col];
				} 
				else if (col == 0) {
					dp[row][col] = Math.min(dp[row - 1][col],dp[row - 1][col + 1]) + matrix[row][col];
				} 
				else if (col == matrix.length - 1) {
					dp[row][col] = Math.min(dp[row - 1][col],dp[row - 1][col - 1]) + matrix[row][col];
				} 
				else {
					dp[row][col] = Math.min(dp[row - 1][col],Math.min(dp[row - 1][col - 1],dp[row - 1][col + 1])) + matrix[row][col];
				}
			}
		}
		int ans = Integer.MAX_VALUE;
		for (int i = 0; i < matrix.length; i++) {
			ans = Math.min(ans,dp[matrix.length - 1][i]);
		}
		return ans;
	}
}