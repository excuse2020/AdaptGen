class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int i = 0;
		int j = 0;
		int[] combArr = new int[nums1.length + nums2.length];
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i] > nums2[j]) {
				combArr[i + j] = nums2[j];
				j++;
			} 
			else if (nums1[i] < nums2[j]) {
				combArr[i + j] = nums1[i];
				i++;
			} 
			else {
				combArr[i + j] = nums2[j];
				combArr[i + j + 1] = nums1[i];
				i++;
				j++;
			}
		}
		while (i < nums1.length) {
			combArr[i + j] = nums1[i];
			i++;
		}
		while (j < nums2.length) {
			combArr[i + j] = nums2[j];
			j++;
		}
		if (combArr.length == 1) {
			return (double) combArr[0];
		}
		int medianIndex = (int) Math.floor((nums1.length - 1 + nums2.length - 1) / 2);
		if ((nums1.length + nums2.length) % 2 == 0) {
			return ((double) (combArr[medianIndex] + combArr[medianIndex + 1]) / 2.0);
		} 
		else {
			return (double) (combArr[medianIndex + 1]);
		}
	}
}