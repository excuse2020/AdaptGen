class Solution {
	Map<Integer, Integer> getMap(int[] tasks, HashMap<Integer, Integer> map) {
		for (int i = 0; i < tasks.length; i++) {
			int rounds = 1;
			if (!map.containsKey(tasks[i])) {
				map.put(tasks[i],rounds);
			} 
			else {
				int temp = map.get(tasks[i]);
				temp++;
				map.put(tasks[i],temp);
			}
		}
		return map;
	}
	int minimumRounds(int[] tasks) {
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		getMap(tasks,map);
		int rounds = 0;
		for (Map.Entry<Integer, Integer> itr: map.entrySet()) {	
			int num = itr.getValue();
			if (num == 1) {
				return -1;
			}
			while (num > 0) {
				if (num == 2 || num == 4) {
					num -= 2;
				} 
				else {
					num -= 3;
				}
				rounds++;
			}
		}
		return rounds;
	}
}