class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		List<List<Integer>> list = new ArrayList<>();
		if (target < 0 && nums[0] > 0) {
			return list;
		}
		Arrays.sort(nums);
		int b = 0, c = 0, d = 0;
		for (int a = 0; a < nums.length - 3; a++) {
			if (a > 0 && nums[a] == nums[a - 1]) {
				continue;
			}
			for (b = a + 1; b < nums.length - 2; b++) {
				d = nums.length - 1;
				c = b + 1;
				if (b > a + 1 && nums[b] == nums[b - 1]) {
					continue;
				}
				while (c < d) {
					int sum = nums[a] + nums[b];
					if (sum == target) {
						list.add(Arrays.asList(nums[a],nums[b],nums[c],nums[d]));
						c++;
						d--;
						while (c < d && nums[c] == nums[c - 1]) {
							c++;
						}
						while (d > c && nums[d] == nums[d + 1]) {
							d--;
						}
					} 
					else if (sum > target) {
						d--;
					} 
					else {
						c++;
					}
				}
			}
		}
		return list;
	}
}