class Solution {
	void generatePermutations(int index, int[] nums, List<String> list, int n) {
		if (index == n) {
			StringBuilder sb = new StringBuilder();
			for (int num: nums) {	
				sb.append(num);
			}
			list.add(sb.toString());
			return;
		}
		for (int i = index; i < n; i++) {
			swap(nums,i,index);
			generatePermutations(index + 1,nums,list,n);
			swap(nums,i,index);
		}
	}
	String getPermutation(int n, int k) {
		int[] nums = new int[n];
		for (int i = 1; i <= n; i++) {
			nums[i - 1] = i;
		}
		List<String> list = new ArrayList<>();
		generatePermutations(0,nums,list,n);
		Collections.sort(list);
		return list.get(k - 1);
	}
	void swap(int[] nums, int i, int j) {
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}