class Solution {
	int[] productQueries(int n, int[][] queries) {
		List<Integer> power = new ArrayList<>();
		while (n > 0) {
			int div = (int) Math.floor((Math.log(n) / Math.log(2)));
			int next = (int) Math.pow(2,div);
			power.add(next);
			n -= next;
		}
		Collections.reverse(power);
		int[] ans = new int[queries.length];
		int idx = 0;
		for (int i = 0; i < queries.length; i++) {
			long answer = 1;
			for (int j = queries[i][0]; j <= queries[i][1]; j++) {
				answer = (answer * power.get(j)) % (long) (Math.pow(10,9) + 7);
			}
			ans[idx] = (int) answer;
			idx++;
		}
		return ans;
	}
}