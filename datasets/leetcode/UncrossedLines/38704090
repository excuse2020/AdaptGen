class Solution {
	Integer dp = null;
	int dfs(int i, int j, int[] n1, int[] n2) {
		if (n1.length == i || n2.length == j) {
			return 0;
		}
		if (dp[i][j] != null) {
			return dp[i][j];
		}
		int ans = 0;
		if (n1[i] == n2[j]) {
			dp[i][j] = 1 + dfs(i + 1,j + 1,n1,n2);
		} 
		else {
			dp[i][j] = Math.max(dfs(i + 1,j,n1,n2),dfs(i,j + 1,n1,n2));
		}
		return dp[i][j];
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		dp = new Integer[nums1.length][nums2.length];
		return dfs(0,0,nums1,nums2);
	}
}