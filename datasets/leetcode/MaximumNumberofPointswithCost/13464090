class Solution {
	long maxPoints(int[][] points) {
		int m = points.length;
		int n = points[0].length;
		long[][] dp = new long[m][n];
		long result = 0;
		for (int i = 0; i < m; i++) {
			long[] left = new long[n];
			long[] right = new long[n];
			if (i > 0) {
				left[0] = dp[i - 1][0];
				for (int j = 1; j < n; j++) {
					left[j] = Math.max(left[j - 1] - 1,dp[i - 1][j]);
				}
				right[n - 1] = dp[i - 1][n - 1];
				for (int j = n - 2; j > -1; j--) {
					right[j] = Math.max(right[j + 1] - 1,dp[i - 1][j]);
				}
			}
			for (int j = 0; j < n; j++) {
				dp[i][j] = Math.max(left[j],right[j]) + points[i][j];
				if (i == m - 1) {
					result = Math.max(dp[i][j],result);
				}
			}
		}
		return result;
	}
}