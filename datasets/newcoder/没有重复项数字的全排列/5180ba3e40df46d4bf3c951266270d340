class Solution {
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		Arrays.sort(num);
		ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
		recursion(res,num,0);
		return res;
	}
	void recursion(ArrayList<ArrayList<Integer>> res, int[] num, int x) {
		if (x == num.length - 1) {
			ArrayList<Integer> temp = new ArrayList<>();
			for (int i = 0; i < num.length; i++) {
				temp.add(num[i]);
			}
			res.add(temp);
		}
		for (int i = x; i < num.length; i++) {
			swap(num,i,x);
			recursion(res,num,x + 1);
			swap(num,i,x);
		}
	}
	void swap(int[] num, int i, int j) {
		int temp = num[i];
		num[i] = num[j];
		num[j] = temp;
	}
}