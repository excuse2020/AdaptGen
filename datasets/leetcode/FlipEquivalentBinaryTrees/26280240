class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		if ((root1.left != null && root2.right != null && root1.left.val == root2.right.val) || (root2.left != null && root1.right != null && root2.left.val == root1.right.val)) {
			TreeNode temp = root1.left;
			root1.left = root1.right;
			root1.right = temp;
		}
		return (flipEquiv(root1.left,root2.left) && flipEquiv(root1.right,root2.right));
	}
}