class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		long maxHoriLen = 0;
		long maxVertiLen = 0;
		int prev = 0;
		for (int i = 0; i < horizontalCuts.length; i++) {
			int len = horizontalCuts[i] - prev;
			prev = horizontalCuts[i];
			if (len > maxHoriLen) {
				maxHoriLen = len;
			}
		}
		maxHoriLen = Math.max(h - prev,maxHoriLen);
		prev = 0;
		for (int i = 0; i < verticalCuts.length; i++) {
			int len = verticalCuts[i] - prev;
			prev = verticalCuts[i];
			if (len > maxVertiLen) {
				maxVertiLen = len;
			}
		}
		maxVertiLen = Math.max(w - prev,maxVertiLen);
		int ans = (int) (((maxHoriLen * maxVertiLen) % 1000000007));
		return ans;
	}
}