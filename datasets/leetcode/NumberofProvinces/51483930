class Solution {
	void bfs(int[][] matrix, int[] vis, int i, int n) {
		Queue<Integer> q = new LinkedList<>();
		q.add(i);
		while (!q.isEmpty()) {
			int k = q.remove();
			for (int j = 0; j < n; j++) {
				if (j != k && matrix[k][j] == 1 && vis[j] == 0) {
					q.add(j);
					vis[j] = 1;
				}
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		int[] vis = new int[n];
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (vis[i] == 0) {
				count++;
				bfs(isConnected,vis,i,n);
			}
		}
		return count;
	}
}