class Solution {
	TreeNode build(int[] preOrder, int[] inOrder, int preStart, int inStart, int inEnd) {
		if (inEnd < inStart) {
			return null;
		}
		int rootVal = preOrder[preStart];
		TreeNode root = new TreeNode(rootVal);
		int index = 0;
		for (int i = inStart; i <= inEnd; i++) {
			if (inOrder[i] == rootVal) {
				index = i;
				break;
			}
		}
		int len = index - inStart;
		root.left = build(preOrder,inOrder,preStart + 1,inStart,index - 1);
		root.right = build(preOrder,inOrder,preStart + len,index + 1,inEnd);
		return root;
	}
	TreeNode reConstructBinaryTree(int[] preOrder, int[] vinOrder) {
		return build(preOrder,vinOrder,0,0,vinOrder.length - 1);
	}
}