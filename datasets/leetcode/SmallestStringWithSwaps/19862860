class Solution {
	int[] parent;
	int find(int a) {
		while (a != parent[a]) {
			parent[a] = parent[parent[a]];
			a = parent[a];
		}
		return a;
	}
	String smallestStringWithSwaps(String s, List<List<Integer>> pairs) {
		int n = s.length();
		parent = new int[n];
		for (int i = 0; i < n; i++) {
			parent[i] = i;
		}
		for (List<Integer> p: pairs) {	
			union(p.get(0),p.get(1));
		}
		int[][] d = new int[n][26];
		int[] groupChars = new int[n];
		int i = 0;
		int gr = find(i);
	}
	void union(int a, int b) {
		a = find(a);
		b = find(b);
		if (a == b) {
			return;
		}
		parent[a] = b;
	}
}