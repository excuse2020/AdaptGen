class Solution {
	int longestSubsequence(int[] arr, int difference) {
		int n = arr.length;
		int[] dp = new int[n];
		Arrays.fill(dp,-1);
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < arr.length; i++) {
			max = Math.max(max,solve(i,arr,difference,dp));
		}
		return max;
	}
	int solve(int i, int[] arr, int diff, int[] dp) {
		if (i == arr.length - 1) {
			return 1;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		for (int x = i + 1; x < arr.length; x++) {
			if (arr[x] - arr[i] == diff) {
				return dp[i] = 1 + solve(x,arr,diff,dp);
			}
		}
		return dp[i] = 1;
	}
}