class Solution {
	long taskSchedulerII(int[] tasks, int space) {
		int n = tasks.length;
		if (n == 0) {
			return 0;
		}
		long[] arr = new long[n];
		HashMap<Integer, Integer> hm = new HashMap<>();
		hm.put(tasks[0],0);
		arr[0] = 1;
		for (int i = 1; i < n; i++) {
			if (hm.containsKey(tasks[i])) {
				int prevIndex = hm.get(tasks[i]);
				if ((arr[i - 1] - arr[prevIndex]) >= space) {
					arr[i] = arr[i - 1] + 1;
					hm.put(tasks[i],i);
				} 
				else {
					arr[i] = arr[i - 1] + 1 - (arr[i - 1] - arr[prevIndex]);
					hm.put(tasks[i],i);
				}
			} 
			else {
				arr[i] = arr[i - 1] + 1;
				hm.put(tasks[i],i);
			}
		}
		return arr[n - 1];
	}
}