class Solution {
	int[][] differenceOfDistinctValues(int[][] grid) {
		int rows = grid.length;
		int cols = grid[0].length;
		int ans = new int[rows][cols];
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < cols; j++) {
				int topLeft = 0, bottomRight = 0;
				int k = i;
				int l = j;
				Map<Integer, Integer> map = new HashMap<>();
				while ((i - 1) >= 0 && (i - 1) < rows && (j - 1) >= 0 && (j - 1) < cols) {
					i--;
					j--;
					map.put(grid[i][j],map.getOrDefault(grid[i][j],0) + 1);
				}
				i = k;
				j = l;
				Map<Integer, Integer> map2 = new HashMap<>();
				while ((i + 1) >= 0 && (i + 1) < rows && (j + 1) >= 0 && (j + 1) < cols) {
					i++;
					j++;
					map2.put(grid[i][j],map2.getOrDefault(grid[i][j],0) + 1);
				}
				i = k;
				j = l;
				ans[i][j] = Math.abs(map.size() - map2.size());
			}
		}
		return ans;
	}
}