class Solution {
	List<List<Integer>> list = new ArrayList<List<Integer>>();
	void go(List<TreeNode> lis) {
		List<Integer> arl = new ArrayList<Integer>();
		List<TreeNode> li = new ArrayList<TreeNode>();
		for (TreeNode node: lis) {	
			if (node.left != null) {
				li.add(node.left);
			}
			if (node.right != null) {
				li.add(node.right);
			}
			arl.add(node.val);
		}
		if (li.size() > 0) {
			go(li);
		}
		list.add(arl);
	}
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		if (root == null) {
			return list;
		}
		List<TreeNode> lis = new ArrayList<TreeNode>();
		lis.add(root);
		go(lis);
		return list;
	}
}