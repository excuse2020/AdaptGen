class Solution {
	int lenLongestFibSubseq(int[] arr) {
		int n = arr.length;
		if (arr == null || n == 0) {
			return 0;
		}
		HashMap<Integer, Integer> map = new HashMap<>();
		int[][] dp = new int[n][n];
		for (int i = 0; i < arr.length; i++) {
			map.put(arr[i],i);
			for (int j = i + 1; j < n; j++) {
				dp[i][j] = 2;
			}
		}
		int res = 0;
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j < n; j++) {
				int k = arr[j] + arr[i];
				if (map.containsKey(k)) {
					int idx = map.get(k);
					dp[j][idx] = dp[i][j] + 1;
					res = Math.max(res,dp[j][idx]);
				}
			}
		}
		return res;
	}
}