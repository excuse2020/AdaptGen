class Solution {
	String robotWithString(String s) {
		Character[] ch = new Character[s.length()];
		int n = s.length();
		ch[n - 1] = s.charAt(n - 1);
		for (int i = n - 2; i >= 0; i--) {
			ch[i] = (s.charAt(i) > ch[i + 1]) ? ch[i + 1] : s.charAt(i);
		}
		int i = 0;
		StringBuilder sb = new StringBuilder();
		Stack<Character> st = new Stack();
		while (i < n) {
			char c = s.charAt(i);
			while (!st.isEmpty() && st.peek() <= ch[i]) {
				sb.append(st.pop());
			}
			st.push(c);
			i++;
		}
		while (!st.isEmpty()) {
			sb.append(st.pop());
		}
		return sb.toString();
	}
}