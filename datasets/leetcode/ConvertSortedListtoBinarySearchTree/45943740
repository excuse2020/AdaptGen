class Solution {
	TreeNode add(ListNode head, ListNode tail) {
		if (head == tail) {
			return null;
		}
		ListNode mid = findMid(head,tail);
		TreeNode root = new TreeNode(mid.val);
		root.left = add(head,mid);
		root.right = add(mid.next,tail);
		return root;
	}
	ListNode findMid(ListNode head, ListNode tail) {
		ListNode slow = head;
		ListNode fast = head;
		while (fast != tail && fast.next != tail) {
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		return add(head,null);
	}
}