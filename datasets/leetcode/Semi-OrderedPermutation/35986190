class Solution {
	int semiOrderedPermutation(int[] nums) {
		int n = nums.length;
		int first = 1;
		int last = n;
		if (nums[0] == first && nums[n - 1] == last) {
			return 0;
		}
		int idxofFirst = -1;
		int idxofLast = -1;
		for (int i = 0; i < n; i++) {
			if (nums[i] == 1) {
				idxofFirst = i;
			}
			if (nums[i] == n) {
				idxofLast = i;
			}
		}
		if (idxofFirst < idxofLast) {
			return idxofFirst + (n - 1) - idxofLast;
		} 
		else {
			return idxofFirst + (n - 1) - idxofLast - 1;
		}
	}
}