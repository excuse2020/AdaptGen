class Solution {
	ListNode midNode(ListNode head) {
		ListNode slow = head, fast = head, prev = null;
		while (fast != null) {
			fast = fast.next;
			if (fast != null) {
				prev = slow;
				fast = fast.next;
				slow = slow.next;
			}
		}
		if (prev != null) {
			prev.next = null;
		}
		return slow;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode midNode = midNode(head);
		TreeNode root = new TreeNode(midNode.val);
		if (head == midNode) {
			return root;
		}
		root.left = sortedListToBST(head);
		root.right = sortedListToBST(midNode.next);
		return root;
	}
}