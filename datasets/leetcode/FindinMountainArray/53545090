class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int peakIdx = peakFinder(mountainArr);
		int ans = -1;
		ans = search(mountainArr,target,0,peakIdx);
		if (ans == -1) {
			ans = search(mountainArr,target,peakIdx,mountainArr.length() - 1);
		}
		return ans;
	}
	int peakFinder(MountainArray arr) {
		int start = 0;
		int end = arr.length() - 1;
		while (start < end) {
			int mid = start + (end - start) / 2;
			if (arr.get(mid) > arr.get(mid + 1)) {
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return start;
	}
	int search(MountainArray arr, int target, int start, int end) {
		boolean isAsc = arr.get(start) < arr.get(end);
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (arr.get(mid) == target) {
				return mid;
			}
			if (isAsc) {
				if (target > arr.get(mid)) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			} 
			else {
				if (target < arr.get(mid)) {
					start = mid + 1;
				} 
				else {
					end = mid - 1;
				}
			}
		}
		return -1;
	}
}