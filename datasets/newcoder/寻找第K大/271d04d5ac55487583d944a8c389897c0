class Solution {
	int ans;
	int findKth(int[] a, int n, int K) {
		quick(a,0,n - 1,K);
		return ans;
	}
	void quick(int[] a, int l, int r, int K) {
		if (l > r) {
			return;
		}
		int i = l, j = r, key = l;
		while (i < j) {
			while (i < j && a[j] >= a[l]) {
				j--;
			}
			while (i < j && a[i] <= a[l]) {
				i++;
			}
			swap(a,i,j);
		}
		swap(a,i,l);
		if (i == a.length - K) {
			ans = a[i];
			return;
		}
		if (i >= a.length - K) {
			quick(a,l,i - 1,K);
		} 
		else {
			quick(a,i + 1,r,K);
		}
	}
	void swap(int[] a, int i, int j) {
		int t = a[i];
		a[i] = a[j];
		a[j] = t;
	}
}