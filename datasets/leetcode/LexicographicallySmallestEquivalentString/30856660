class Solution {
	int normalizer;
	int find(int x, int[] parent) {
		if (parent[x] == x) {
			return x;
		}
		return parent[x] = find(parent[x],parent);
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		int[] parents = new int[26];
		for (int i = 0; i < 26; i++) {
			parents[i] = i;
		}
		int n = s1.length();
		for (int i = 0; i < n; i++) {
			int x = s1.charAt(i) - normalizer;
			int y = s2.charAt(i) - normalizer;
			union(x,y,parents);
		}
		String ans = "";
		for (char i: baseStr.toCharArray()) {	
			ans += (char) (normalizer + find(i - normalizer,parents));
		}
		return ans;
	}
	void union(int x, int y, int[] parent) {
		int xp = find(x,parent);
		int yp = find(y,parent);
		if (xp == yp) {
			return;
		}
		if (yp < xp) {
			parent[xp] = yp;
		} 
		else {
			parent[yp] = xp;
		}
	}
}