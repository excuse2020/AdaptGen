class Solution {
	int getGcd(int val1, int val2) {
		if (val1 == 0) {
			return val2;
		}
		return getGcd(val2 % val1,val1);
	}
	int minOperations(int[] arr) {
		int onesCount = 0, n = arr.length, min = Integer.MAX_VALUE;
		for (int i = 0; i < n; i++) {
			if (arr[i] == 1) {
				onesCount++;
			}
		}
		if (onesCount != 0) {
			return n - onesCount;
		}
		for (int i = 0; i < n; i++) {
			int gcd = arr[i];
			for (int j = i + 1; j < n; j++) {
				gcd = getGcd(arr[j],gcd);
				if (gcd == 1) {
					min = Math.min(min,j - i);
					break;
				}
			}
		}
		if (min == Integer.MAX_VALUE) {
			return -1;
		}
		return n + min - 1;
	}
}