class Solution {
	void flatten(TreeNode root) {
		if (root != null) {
			ArrayList<TreeNode> al1 = new ArrayList<>();
			ArrayList<TreeNode> al2 = new ArrayList<>();
			preOrder(root.left,al1);
			preOrder(root.right,al2);
			int i = 0;
			while (i < al1.size()) {
				root.left = null;
				root.right = al1.get(i);
				root = root.right;
				i++;
			}
			i = 0;
			while (i < al2.size()) {
				root.left = null;
				root.right = al2.get(i);
				root = root.right;
				i++;
			}
		}
	}
	void preOrder(TreeNode root, ArrayList<TreeNode> al) {
		if (root == null) {
			return;
		}
		al.add(root);
		preOrder(root.left,al);
		preOrder(root.right,al);
	}
}