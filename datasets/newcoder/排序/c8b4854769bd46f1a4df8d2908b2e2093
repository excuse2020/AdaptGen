class Solution {
	int[] MySort(int[] arr) {
		mergeSort(arr,0,arr.length - 1);
		return arr;
	}
	void merge(int[] arr, int left, int mid, int right) {
		int[] temp = new int[right - left + 1];
		int l1 = left, l2 = mid + 1, i = 0;
		while (l1 <= mid && l2 <= right) {
			if (arr[l1] < arr[l2]) {
				temp[i++] = arr[l1++];
			} 
			else {
				temp[i++] = arr[l2++];
			}
		}
		while (l1 <= mid) {
			temp[i++] = arr[l1++];
		}
		while (l2 <= right) {
			temp[i++] = arr[l2++];
		}
		for (int j = 0; j < i; j++) {
			arr[left + j] = temp[j];
		}
	}
	void mergeSort(int[] arr, int left, int right) {
		if (left >= right) {
			return;
		}
		int mid = left + (right - left) / 2;
		mergeSort(arr,left,mid);
		mergeSort(arr,mid + 1,right);
		merge(arr,left,mid,right);
	}
}