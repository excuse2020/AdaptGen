class Solution {
	List<List<Integer>> allPaths = new ArrayList<>();
	List<Integer> singlePath = new ArrayList<>();
	void helper(TreeNode root, int target) {
		if (root == null) {
			return;
		}
		singlePath.add(root.val);
		if (root.left == null && root.right == null && target == root.val) {
			allPaths.add(new ArrayList<>(singlePath));
		}
		helper(root.left,target - root.val);
		helper(root.right,target - root.val);
		singlePath.remove(singlePath.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode root, int target) {
		if (root == null) {
			return allPaths;
		}
		helper(root,target);
		return allPaths;
	}
}