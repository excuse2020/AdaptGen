class Solution {
	void merge(int[] arr, int s, int e) {
		if (s >= e) {
			return;
		}
		int m = (s + e) / 2;
		merge(arr,s,m);
		merge(arr,m + 1,e);
		mergeArrays(arr,s,m,e);
	}
	void mergeArrays(int[] arr, int s, int m, int e) {
		int[] out = new int[e - s + 1];
		int i = s;
		int j = m + 1;
		int k = 0;
		while (i <= m && j <= e) {
			if (arr[i] <= arr[j]) {
				out[k++] = arr[i++];
			} 
			else {
				out[k++] = arr[j++];
			}
		}
		while (i <= m) {
			out[k++] = arr[i++];
		}
		while (j <= e) {
			out[k++] = arr[j++];
		}
		for (int l = 0; l < out.length; l++) {
			arr[s + l] = out[l];
		}
	}
	int[] sortArray(int[] nums) {
		merge(nums,0,nums.length - 1);
		return nums;
	}
}