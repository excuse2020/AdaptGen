class Solution {
	int countDistant(int[][] grid, int i, int j, int inc) {
		Set<Integer> set = new HashSet<>();
		for (; i < grid.length && i >= 0 && j < grid[0].length && j >= 0; i += inc) {
			set.add(grid[i][j]);
			j += inc;
		}
		return set.size();
	}
	int[][] differenceOfDistinctValues(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		int[][] res = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				int bR = countDistant(grid,i + 1,j + 1,1);
				int tL = countDistant(grid,i - 1,j - 1,-1);
				res[i][j] = Math.abs(bR - tL);
			}
		}
		return res;
	}
}