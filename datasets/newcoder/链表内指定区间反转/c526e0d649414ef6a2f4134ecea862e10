class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		List<Integer> list = new ArrayList<>();
		ListNode cur = head;
		while (cur != null) {
			list.add(cur.val);
			cur = cur.next;
		}
		reverseListBetween(list,m,n);
		ListNode res = new ListNode(list.get(0));
		ListNode resCur = res;
		for (int i = 1; i < list.size(); i++) {
			resCur.next = new ListNode(list.get(i));
			resCur = resCur.next;
		}
		return res;
	}
	void reverseListBetween(List<Integer> list, int m, int n) {
		for (int i = m - 1; i < (m + n) / 2; i++) {
			int temp = list.get(i);
			list.set(i,list.get(m + n - i - 2));
			list.set(m + n - i - 2,temp);
		}
	}
}