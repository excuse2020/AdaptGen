class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		int r1l = (root1.left == null ? -1 : root1.left.val);
		int r2l = (root2.left == null ? -1 : root2.left.val);
		if (r1l != r2l) {
			TreeNode temp = root2.left;
			root2.left = root2.right;
			root2.right = temp;
		}
		return flipEquiv(root1.left,root2.left) && flipEquiv(root1.right,root2.right);
	}
}