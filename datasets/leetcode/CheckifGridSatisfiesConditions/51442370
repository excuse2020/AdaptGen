class Solution {
	boolean satisfiesConditions(int[][] grid) {
		int n = grid.length;
		int m = grid[0].length;
		if (m == 1 && n == 1) {
			return true;
		} 
		else if (m == 1) {
			for (int i = n - 1; i >= 0; i--) {
				if (i + 1 < n) {
					if (grid[i][0] != grid[i + 1][0]) {
						return false;
					}
				}
			}
		} 
		else if (n == 1) {
			for (int j = m - 1; j >= 0; j--) {
				if (j + 1 < m) {
					if (grid[0][j] == grid[0][j + 1]) {
						return false;
					}
				}
			}
		} 
		else {
			for (int i = n - 1; i >= 0; i--) {
				for (int j = m - 1; j >= 0; j--) {
					if (i + 1 < n) {
						if (grid[i][j] != grid[i + 1][j]) {
							return false;
						}
					}
					if (j + 1 < m) {
						if (grid[i][j] == grid[i][j + 1]) {
							return false;
						}
					}
				}
			}
		}
		return true;
	}
}