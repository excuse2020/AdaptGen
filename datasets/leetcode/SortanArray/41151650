class Solution {
	int[] merge(int[] arr1, int[] arr2) {
		int idx1 = 0;
		int idx2 = 0;
		int idx3 = 0;
		int[] ans = new int[arr1.length + arr2.length];
		while (idx1 < arr1.length && idx2 < arr2.length) {
			if (arr1[idx1] <= arr2[idx2]) {
				ans[idx3] = arr1[idx1];
				idx3++;
				idx1++;
			} 
			else {
				ans[idx3] = arr2[idx2];
				idx3++;
				idx2++;
			}
		}
		while (idx1 < arr1.length) {
			ans[idx3] = arr1[idx1];
			idx1++;
			idx3++;
		}
		while (idx2 < arr2.length) {
			ans[idx3] = arr2[idx2];
			idx2++;
			idx3++;
		}
		return ans;
	}
	int[] sort(int[] arr, int s, int e) {
		if (s == e) {
			int[] ans = new int[1];
			ans[0] = arr[s];
			return ans;
		}
		int mid = (s + e) / 2;
		int[] sp1 = sort(arr,s,mid);
		int[] sp2 = sort(arr,mid + 1,e);
		return merge(sp1,sp2);
	}
	int[] sortArray(int[] nums) {
		int[] a = sort(nums,0,nums.length - 1);
		return a;
	}
}