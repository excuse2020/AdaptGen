class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int m = nums1.length, n = nums2.length;
		int p1 = 0, p2 = 0, i = 0;
		int[] ans = new int[m + n];
		if (m != 0 && n != 0) {
			while (p1 < m && p2 < n) {
				if (nums1[p1] > nums2[p2]) {
					ans[i++] = nums2[p2++];
				} 
				else {
					ans[i++] = nums1[p1++];
				}
			}
			while (p1 < m) {
				ans[i++] = nums1[p1++];
			}
			while (p2 < n) {
				ans[i++] = nums2[p2++];
			}
		} 
		else if (m == 0) {
			for (int ele: nums2) {	
				ans[i++] = ele;
			}
		} 
		else {
			for (int ele: nums1) {	
				ans[i++] = ele;
			}
		}
		int mid = (ans.length - 1) / 2;
		if (ans.length % 2 == 1) {
			return ans[mid];
		}
		return (double) (ans[mid] + ans[mid + 1]) / 2;
	}
}