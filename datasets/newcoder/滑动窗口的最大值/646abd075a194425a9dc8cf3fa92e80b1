class Solution {
	PriorityQueue<Integer> heap = new PriorityQueue<>((a, b) -> {b.compareTo(a)});
	ArrayList<Integer> maxInWindows(int[] a, int size) {
		ArrayList<Integer> ret = new ArrayList<>();
		if (a == null || size > a.length || size == 0) {
			return ret;
		}
		for (int i = 0, j = size - 1; j < a.length; ++i, ++j) {
			if (i == 0) {
				for (int k = i; k <= j; ++k) {
					heap.offer(a[k]);
				}
			} 
			else {
				heap.remove(a[i - 1]);
				heap.offer(a[j]);
			}
			int max = heap.peek();
			ret.add(max);
		}
		return ret;
	}
}