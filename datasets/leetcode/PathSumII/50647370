class Solution {
	List<List<Integer>> result = new ArrayList<>();
	int target;
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<Integer> list = new ArrayList<>();
		target = targetSum;
		if (root != null) {
			traverse(root,0,list);
		}
		return result;
	}
	void traverse(TreeNode node, int sum, List<Integer> list) {
		list.add(node.val);
		int newSum = sum + node.val;
		if (newSum == target && node.left == null & node.right == null) {
			result.add(new ArrayList(list));
		} 
		else {
			if (node.left != null) {
				traverse(node.left,newSum,list);
			}
			if (node.right != null) {
				traverse(node.right,newSum,list);
			}
		}
		list.remove(list.size() - 1);
	}
}