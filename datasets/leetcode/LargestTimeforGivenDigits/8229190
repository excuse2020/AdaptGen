class Solution {
	boolean isPossible = false;
	String max;
	boolean[] vis;
	boolean check(String ans) {
		char[] r = ans.toCharArray();
	}
	void dfs(int s, int[] A, String ans) {
		if (ans.length() == 4 && check(ans)) {
			int num1 = Integer.parseInt(ans), num2 = Integer.parseInt(max);
			isPossible = true;
			if (num1 > num2) {
				max = ans;
			}
		} 
		else {
			vis[s] = true;
			for (int i = 0; i < 4; i++) {
				if (!vis[i]) {
					dfs(i,A,ans + A[i]);
				}
			}
			vis[s] = false;
		}
	}
	String largestTimeFromDigits(int[] A) {
		vis = new boolean[4];
		max = "0000";
		for (int i = 0; i < 4; i++) {
			dfs(i,A,A[i] + "");
		}
		if (max.equals("0000") && !isPossible) {
			return "";
		}
		return max.substring(0,2) + ":";
	}
}