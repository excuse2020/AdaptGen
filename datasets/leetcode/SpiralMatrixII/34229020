class Solution {
	int[][] generateMatrix(int n) {
		int t = new int[n][n];
		int i = 0;
		int j = 0;
		int r = 1;
		int l = 0;
		int u = 0;
		int d = 0;
		int v = 1;
		while (v <= n * n) {
			if (r == 1) {
				if (j == n - 1) {
					t[i][j] = v;
					v++;
					d = 1;
					r = 0;
					i++;
				} 
				else if (t[i][j] == 0) {
					t[i][j] = v;
					v++;
					if (t[i][j + 1] != 0) {
						d = 1;
						r = 0;
						i++;
					} 
					else {
						j++;
					}
				}
			} 
			else if (d == 1) {
				if (i == n - 1) {
					t[i][j] = v;
					v++;
					l = 1;
					d = 0;
					j--;
				} 
				else if (t[i][j] == 0) {
					t[i][j] = v;
					v++;
					if (t[i + 1][j] != 0) {
						l = 1;
						d = 0;
						j--;
					} 
					else {
						i++;
					}
				}
			} 
			else if (l == 1) {
				if (j == 0) {
					t[i][j] = v;
					v++;
					i--;
					u = 1;
					l = 0;
				} 
				else if (t[i][j] == 0) {
					t[i][j] = v;
					v++;
					if (t[i][j - 1] != 0) {
						u = 1;
						l = 0;
						i--;
					} 
					else {
						j--;
					}
				}
			} 
			else if (u == 1) {
				if (t[i][j] == 0) {
					t[i][j] = v;
					v++;
					if (t[i - 1][j] != 0) {
						r = 1;
						u = 0;
						j++;
					} 
					else {
						i--;
					}
				}
			}
		}
		return t;
	}
}