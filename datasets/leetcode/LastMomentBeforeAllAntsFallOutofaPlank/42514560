class Solution {
	int getLastMoment(int n, int[] left, int[] right) {
		int l = left.length;
		int r = right.length;
		int lr = 10000, ll = 0;
		int least;
		int k = 0;
		if (l == 0 && r == 0) {
			return 0;
		} 
		else if (l == 0 && r != 0) {
			for (int i = 0; i < r; i++) {
				if (lr > right[i]) {
					lr = right[i];
				}
			}
			least = lr;
		} 
		else if (l != 0 && r == 0) {
			for (int i = 0; i < l; i++) {
				if (ll < left[i]) {
					ll = left[i];
				}
			}
			least = n - ll;
		} 
		else {
			for (int i = 0; i < r; i++) {
				if (lr > right[i]) {
					lr = right[i];
				}
			}
			for (int i = 0; i < l; i++) {
				if (ll < left[i]) {
					ll = left[i];
				}
			}
			if (lr < (n - ll)) {
				least = lr;
			} 
			else {
				least = n - ll;
			}
		}
		while (k <= n) {
			if (least >= n) {
				break;
			}
			least++;
			k++;
		}
		return least >= n ? k : 0;
	}
}