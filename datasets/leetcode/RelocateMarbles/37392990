class Solution {
	List<Integer> relocateMarbles(int[] nums, int[] moveFrom, int[] moveTo) {
		int n = moveFrom.length;
		Map<Integer, Integer> map = new TreeMap<>();
		for (int num: nums) {	
			map.put(num,map.getOrDefault(num,0) + 1);
		}
		for (int i = 0; i < n; i++) {
			int val1 = 0;
			if (map.get(moveFrom[i]) != null) {
				val1 = map.get(moveFrom[i]);
			}
			map.put(moveFrom[i],0);
			int val2 = 0;
			if (map.get(moveTo[i]) != null) {
				val2 = map.get(moveTo[i]);
			}
			map.put(moveTo[i],val2 + val1);
		}
		List<Integer> ans = new ArrayList<>();
		for (Integer key: map.keySet()) {	
			if (map.get(key) != null && map.get(key) > 0) {
				ans.add(key);
			}
		}
		return ans;
	}
}