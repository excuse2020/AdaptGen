class Solution {
	int countPrimeSetBits(int left, int right) {
		return (countPrimeSetBitsInBinary(left,right));
	}
	int countPrimeSetBitsInBinary(int left, int right) {
		int counter = 0;
		for (int i = left; i <= right; i++) {
			int n = countSetBits(i);
			boolean isPrime = isCountBitPrime(n);
			if (isPrime) {
				counter++;
			}
		}
		return counter;
	}
	int countSetBits(int n) {
		int setbits = 0;
		while (n != 0) {
			if ((n & 1) == 1) {
				setbits++;
			}
			n >>= 1;
		}
		return setbits;
	}
	boolean isCountBitPrime(int n) {
		if (n <= 1) {
			return false;
		}
		for (int i = 2; i < n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}