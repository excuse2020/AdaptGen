class Solution {
	int fn(int[][] dp, int i, int j, int[][] m) {
		if (i == 0 && j == 0) {
			return m[0][0] ^ 1;
		}
		if (i < 0 || j < 0) {
			return 0;
		}
		if (m[i][j] == 1) {
			return dp[i][j] = 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		return dp[i][j] = fn(dp,i - 1,j,m) + fn(dp,i,j - 1,m);
	}
	int uniquePathsWithObstacles(int[][] m) {
		int[][] dp = new int[m.length][m[0].length];
		for (int i = 0; i < dp.length; i++) {
			Arrays.fill(dp[i],-1);
		}
		return fn(dp,m.length - 1,m[0].length - 1,m);
	}
}