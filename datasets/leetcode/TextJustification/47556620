class Solution {
	List<String> fullJustify(String[] words, int maxWidth) {
		List<String> res = new ArrayList<>();
		StringBuilder curr = new StringBuilder(words[0]);
		int currWidth = curr.length();
		for (int i = 1; i < words.length; i++) {
			if (curr.length() + words[i].length() <= maxWidth) {
				currWidth += words[i].length();
				curr.append(" " + words[i]);
			} 
			else {
				res.add(helper(curr.toString(),maxWidth,currWidth));
				currWidth = words[i].length();
				curr.setLength(0);
				curr.append(words[i]);
			}
		}
		curr.append(" ".repeat(maxWidth - curr.length()));
		res.add(curr.toString());
		return res;
	}
	String helper(String words, int maxWidth, int width) {
		int spaceNum = words.length() - width;
		if (spaceNum == 0) {
			return words + " ".repeat(maxWidth - words.length());
		}
		int num = (maxWidth - width) / spaceNum;
		int mod = (maxWidth - width) % spaceNum;
		StringBuilder res = new StringBuilder("");
	}
}