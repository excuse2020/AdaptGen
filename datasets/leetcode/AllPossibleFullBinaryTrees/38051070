class Solution {
	List<TreeNode> allPossibleFBT(int n) {
		if ((n + 1) % 2 != 0) {
			return new ArrayList<>();
		}
		return helper(n);
	}
	List<TreeNode> helper(int n) {
		if (n == 1) {
			return new ArrayList<>(Arrays.asList(new TreeNode(0)));
		}
		List<TreeNode> ans = new ArrayList<>();
		for (int i = 1; i <= n - 2; i += 2) {
			var left = helper(i);
			var right = helper(n - 1);
			for (var l: left) {	
				for (var r: right) {	
					ans.add(new TreeNode(0, l, r));
				}
			}
		}
		return ans;
	}
}