class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (m == n) {
			return head;
		}
		ListNode root = new ListNode(-1);
		root.next = head;
		ListNode leftPre = root;
		ListNode left = null;
		ListNode rightNext = null;
		for (int i = 1; i <= n; i++) {
			if (i == m - 1) {
				leftPre = head;
			}
			if (i == m) {
				left = head;
			}
			if (i == n) {
				rightNext = head.next;
			}
			head = head.next;
		}
		ListNode pre = null;
		ListNode next = null;
		while (left != rightNext) {
			next = left.next;
			left.next = pre;
			pre = left;
			left = next;
		}
		leftPre.next.next = rightNext;
		leftPre.next = pre;
		return root.next;
	}
}