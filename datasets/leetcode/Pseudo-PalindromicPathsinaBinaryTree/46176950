class Solution {
	int[] freq;
	int paths;
	void dfs(TreeNode root) {
		freq[root.val]++;
		if (root.left != null) {
			dfs(root.left);
		}
		if (root.right != null) {
			dfs(root.right);
		}
		if (root.left == null && root.right == null) {
			if (isPseudoPalindromic()) {
				paths++;
			}
		}
		freq[root.val]--;
	}
	boolean isPseudoPalindromic() {
		int odd = 0;
		for (int i = 1; i < 10; i++) {
			if (freq[i] % 2 != 0) {
				odd++;
			}
			if (odd == 2) {
				return false;
			}
		}
		return true;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		paths = 0;
		freq = new int[10];
		dfs(root);
		return paths;
	}
}