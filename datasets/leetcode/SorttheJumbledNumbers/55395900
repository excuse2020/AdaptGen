class Solution {
	int helper(int a, int[] mapping) {
		int ret = 0, start = 1;
		while (a >= 0) {
			int rem = mapping[a % 10];
			a = a / 10;
			ret += start * rem;
			start = start * 10;
			if (a == 0) {
				break;
			}
		}
		return ret;
	}
	int[] sortJumbled(int[] mapping, int[] nums) {
		Integer[] temp = new Integer[nums.length];
		for (int i = 0; i < nums.length; i++) {
			temp[i] = nums[i];
		}
		sorting_method2(temp,mapping);
		int[] ret = new int[temp.length];
		for (int i = 0; i < ret.length; i++) {
			ret[i] = temp[i];
		}
		return ret;
	}
	void sorting_method1(Integer[] temp, int[] mapping) {
		Arrays.sort(temp,new Comparator<>());
	}
	void sorting_method2(Integer[] temp, int[] mapping) {
		Arrays.sort(temp,new Comparator<>());
	}
}