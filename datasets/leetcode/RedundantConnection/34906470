class Solution {
	int find(int[] parent, int x) {
		if (parent[x] == x) {
			return x;
		}
		parent[x] = find(parent,parent[x]);
		return parent[x];
	}
	int[] findRedundantConnection(int[][] edges) {
		int[] parent = new int[edges.length + 1];
		int[] ans = new int[2];
		for (int i = 0; i < parent.length; i++) {
			parent[i] = i;
		}
		for (int[] edge: edges) {	
			if (find(parent,edge[0]) == find(parent,edge[1])) {
				ans = edge;
			} 
			else {
				union(parent,edge[0],edge[1]);
			}
		}
		return ans;
	}
	void union(int[] parent, int x, int y) {
		parent[find(parent,y)] = find(parent,x);
	}
}