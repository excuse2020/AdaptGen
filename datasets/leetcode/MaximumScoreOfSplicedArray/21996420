class Solution {
	long kadane(long arr) {
		long sum = 0l, max = 0l;
		for (int i = 0; i < arr.length; i++) {
			sum += arr[i];
			if (sum < arr[i]) {
				sum = arr[i];
			}
			max = Math.max(max,sum);
		}
		return max;
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		long temp1 = new long[nums1.length];
		long sum1 = 0l;
		long temp2 = new long[nums2.length];
		long sum2 = 0l;
		for (int i = 0; i < nums1.length; i++) {
			sum1 += nums1[i];
			temp1[i] = nums2[i] - nums1[i] + 0l;
		}
		for (int i = 0; i < nums1.length; i++) {
			sum2 += nums2[i];
			temp2[i] = nums1[i] - nums2[i] + 0l;
		}
		long k1 = kadane(temp1);
		long k2 = kadane(temp2);
		return (int) Math.max(sum1 + k1,sum2 + k2);
	}
}