class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[] ar = new int[m * n];
		for (int i = 0; i < m * n; i++) {
			if (head != null) {
				ar[i] = head.val;
				head = head.next;
			} 
			else {
				ar[i] = -1;
			}
		}
		int mr = 0;
		int mc = 0;
		int xr = m - 1;
		int xc = n - 1;
		int[][] arr = new int[m][n];
		int val = 0;
		int tn = m * n;
		int count = 0;
		while (count != tn) {
			if (count < tn) {
				for (int i = mc; i <= xc; i++) {
					arr[mr][i] = ar[val];
					val++;
					count++;
				}
				mr++;
			}
			if (count < tn) {
				for (int i = mr; i <= xr; i++) {
					arr[i][xc] = ar[val];
					val++;
					count++;
				}
				xc--;
			}
			if (count < tn) {
				for (int i = xc; i >= mc; i--) {
					arr[xr][i] = ar[val];
					val++;
					count++;
				}
				xr--;
			}
			if (count < tn) {
				for (int i = xr; i >= mr; i--) {
					arr[i][mc] = ar[val];
					val++;
					count++;
				}
				mc++;
			}
		}
		return arr;
	}
}