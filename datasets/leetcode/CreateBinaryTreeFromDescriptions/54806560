class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		Map<Integer, TreeNode> map = new HashMap();
		for (int i = 0; i < descriptions.length; i++) {
			int child = descriptions[i][1];
			map.put(child,new TreeNode(child, null, null));
		}
		TreeNode root = null;
		for (int i = 0; i < descriptions.length; i++) {
			int parent = descriptions[i][0];
			int child = descriptions[i][1];
			boolean isLeftChild = descriptions[i][2] == 1;
			TreeNode childNode = map.getOrDefault(child,null);
			TreeNode parentNode = map.getOrDefault(parent,null);
			if (parentNode == null) {
				parentNode = new TreeNode(parent, null, null);
				root = parentNode;
				map.put(parent,parentNode);
			}
			if (isLeftChild) {
				parentNode.left = childNode;
			} 
			else {
				parentNode.right = childNode;
			}
		}
		return root;
	}
}