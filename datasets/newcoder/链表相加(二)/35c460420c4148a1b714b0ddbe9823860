class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode rHead1 = resever(head1);
		ListNode rHead2 = resever(head2);
		int init = 0;
		ListNode root = new ListNode(-1);
		ListNode cur = root;
		while (rHead1 != null || rHead2 != null || init != 0) {
			int val1 = rHead1 == null ? 0 : rHead1.val;
			int val2 = rHead2 == null ? 0 : rHead2.val;
			int sum = init + val1;
			init = sum / 10;
			ListNode node = new ListNode(sum % 10);
			cur.next = node;
			cur = cur.next;
			if (rHead1 != null) {
				rHead1 = rHead1.next;
			}
			if (rHead2 != null) {
				rHead2 = rHead2.next;
			}
		}
		return resever(root.next);
	}
	ListNode resever(ListNode head) {
		ListNode pre = null;
		ListNode next = null;
		while (head != null) {
			next = head.next;
			head.next = pre;
			pre = head;
			head = next;
		}
		return pre;
	}
}