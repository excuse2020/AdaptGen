class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return false;
		}
		if (root1 == null) {
			return false;
		}
		if (root2 == null) {
			return false;
		}
		if (root1.val == root2.val) {
			if (SameTree(root1.left,root2.left) && SameTree(root1.right,root2.right)) {
				return true;
			}
		}
		if (HasSubtree(root1.left,root2)) {
			return true;
		}
		if (HasSubtree(root1.right,root2)) {
			return true;
		}
		return false;
	}
	boolean SameTree(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null) {
			return false;
		}
		if (root2 == null) {
			return true;
		}
		if (root1.val == root2.val) {
			return SameTree(root1.left,root2.left) && SameTree(root1.right,root2.right);
		} 
		else {
			return false;
		}
	}
}