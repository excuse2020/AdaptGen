class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		if (head == null || m == 0 || n == 0) {
			return new int[m][n];
		}
		int[][] result = new int[m][n];
		for (int[] row: result) {	
			Arrays.fill(row,-1);
		}
		ListNode current = head;
		int top = 0, left = 0, right = n - 1, bottom = m - 1;
		while (current != null) {
			for (int i = left; i <= right && current != null; i++) {
				result[top][i] = current.val;
				current = current.next;
			}
			top++;
			for (int i = top; i <= bottom && current != null; i++) {
				result[i][right] = current.val;
				current = current.next;
			}
			right--;
			for (int i = right; i >= left && current != null; i--) {
				result[bottom][i] = current.val;
				current = current.next;
			}
			bottom--;
			for (int i = bottom; i >= top && current != null; i--) {
				result[i][left] = current.val;
				current = current.next;
			}
			left++;
		}
		return result;
	}
}