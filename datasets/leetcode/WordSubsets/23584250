class Solution {
	List<String> wordSubsets(String[] words1, String[] words2) {
		HashMap<Character, Integer> map1 = new HashMap<>();
		for (String word: words2) {	
			HashMap<Character, Integer> base = new HashMap<>();
			for (int i = 0; i < word.length(); i++) {
				char ch = word.charAt(i);
				base.put(ch,base.getOrDefault(ch,0) + 1);
			}
			for (char ch: base.keySet()) {	
				if (map1.containsKey(ch) == true) {
					int v1 = map1.get(ch);
					int v2 = base.get(ch);
					int max = Math.max(v1,v2);
					map1.put(ch,max);
				} 
				else {
					map1.put(ch,base.get(ch));
				}
			}
		}
		List<String> res = new ArrayList<>();
		for (String word: words1) {	
			HashMap<Character, Integer> map2 = new HashMap<>();
			for (int i = 0; i < word.length(); i++) {
				char ch = word.charAt(i);
				if (map1.containsKey(ch) == true) {
					map2.put(ch,map2.getOrDefault(ch,0) + 1);
				}
			}
			boolean flag = true;
			for (char ch: map1.keySet()) {	
				if (map2.containsKey(ch) == false) {
					flag = false;
					break;
				} 
				else {
					int v1 = map1.get(ch);
					int v2 = map2.get(ch);
					if (v2 < v1) {
						flag = false;
						break;
					}
				}
			}
			if (flag == true) {
				res.add(word);
			}
		}
		return res;
	}
}