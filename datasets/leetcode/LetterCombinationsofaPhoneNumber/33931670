class Solution {
	List<String> helper(String digits, int len, HashMap<Character, String> map) {
		List<String> res = new ArrayList();
		if (len == 0) {
			return res;
		} 
		else if (len == 1) {
			String temp = map.get(digits.charAt(0));
			for (int i = 0; i < temp.length(); i++) {
				res.add(String.valueOf(temp.charAt(i)));
			}
			return res;
		} 
		else if (len == 2) {
			char a = digits.charAt(0);
			char b = digits.charAt(1);
			String s1 = map.get(digits.charAt(0));
			String s2 = map.get(digits.charAt(1));
			for (int i = 0; i < s1.length(); i++) {
				for (int j = 0; j < s2.length(); j++) {
					String temp = String.valueOf(s1.charAt(i));
					temp += String.valueOf(s2.charAt(j));
					res.add(temp);
				}
			}
			return res;
		} 
		else if (len == 3) {
			char a = digits.charAt(0);
			char b = digits.charAt(1);
			char c = digits.charAt(2);
			String s1 = map.get(digits.charAt(0));
			String s2 = map.get(digits.charAt(1));
			String s3 = map.get(digits.charAt(2));
			for (int i = 0; i < s1.length(); i++) {
				for (int j = 0; j < s2.length(); j++) {
					for (int k = 0; k < s3.length(); k++) {
						String temp = String.valueOf(s1.charAt(i));
						temp += String.valueOf(s2.charAt(j));
						temp += String.valueOf(s3.charAt(k));
						res.add(temp);
					}
				}
			}
			return res;
		} 
		else if (len == 4) {
			char a = digits.charAt(0);
			char b = digits.charAt(1);
			char c = digits.charAt(2);
			char d = digits.charAt(3);
			String s1 = map.get(digits.charAt(0));
			String s2 = map.get(digits.charAt(1));
			String s3 = map.get(digits.charAt(2));
			String s4 = map.get(digits.charAt(3));
			for (int i = 0; i < s1.length(); i++) {
				for (int j = 0; j < s2.length(); j++) {
					for (int k = 0; k < s3.length(); k++) {
						for (int p = 0; p < s4.length(); p++) {
							String temp = String.valueOf(s1.charAt(i));
							temp += String.valueOf(s2.charAt(j));
							temp += String.valueOf(s3.charAt(k));
							temp += String.valueOf(s4.charAt(p));
							res.add(temp);
						}
					}
				}
			}
			return res;
		}
		return res;
	}
	List<String> letterCombinations(String digits) {
		HashMap<Character, String> map = new HashMap<>();
	}
}