class Solution {
	TreeNode process(int[] num, int start, int end) {
		if (start > end) {
			return null;
		}
		if (start == end) {
			return new TreeNode(num[start]);
		}
		int mid = start + ((end - start) >> 1);
		TreeNode node = new TreeNode(num[mid]);
		TreeNode leftNode = process(num,start,mid - 1);
		TreeNode rightNode = process(num,mid + 1,end);
		node.left = leftNode;
		node.right = rightNode;
		return node;
	}
	TreeNode sortedArrayToBST(int[] num) {
		if (0 == num.length) {
			return null;
		}
		if (1 == num.length) {
			return new TreeNode(num[0]);
		}
		return process(num,0,num.length - 1);
	}
}