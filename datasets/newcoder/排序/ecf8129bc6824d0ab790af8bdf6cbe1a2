class Solution {
	int[] MySort(int[] arr) {
		quickSort(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] nums, int left, int right) {
		int pivot = nums[left];
		int i = left, j = right;
		while (i < j) {
			while (nums[j] >= pivot && j > i) {
				j--;
			}
			while (nums[i] <= pivot && i < j) {
				i++;
			}
			if (i < j) {
				swap(nums,i,j);
			}
		}
		swap(nums,left,i);
		return j;
	}
	void quickSort(int[] nums, int left, int right) {
		if (left > right) {
			return;
		}
		int position = partition(nums,left,right);
		quickSort(nums,left,position - 1);
		quickSort(nums,position + 1,right);
	}
	void swap(int[] nums, int i, int j) {
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}