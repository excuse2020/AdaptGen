class Solution {
	TreeNode hell(int start, int end, List<ListNode> list) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(list.get(mid).val);
		root.left = hell(start,mid - 1,list);
		root.right = hell(mid + 1,end,list);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<ListNode> res = new ArrayList<>();
		while (head != null) {
			res.add(head);
			head = head.next;
		}
		return hell(0,res.size() - 1,res);
	}
}