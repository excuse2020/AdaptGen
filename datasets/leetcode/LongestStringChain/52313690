class Solution {
	int longestStrChain(String[] words) {
		Arrays.sort(words,(a, b) -> {a.length() - b.length()});
		Map<String, Integer> mp = new LinkedHashMap<>();
		for (int i = 0; i < words.length; i++) {
			mp.put(words[i],i);
		}
		int dp = new int[words.length], ans = 1;
		for (int i = 0; i < words.length; i++) {
			dp[i] = 1;
			if (words[i].length() == 1) {
				continue;
			}
			for (int j = 0; j < words[i].length(); j++) {
				String s = "";
				if (j < words[i].length() - 1) {
					s = words[i].substring(j + 1,words[i].length());
				}
				if (j > 0) {
					s = words[i].substring(0,j) + s;
				}
				if (mp.containsKey(s)) {
					dp[i] = Math.max(dp[i],1 + dp[mp.get(s)]);
				}
			}
			ans = Math.max(dp[i],ans);
		}
		return ans;
	}
}