class Solution {
	int minFallingPathSum(int[][] matrix) {
		int n = matrix.length;
		if (n == 1) {
			return matrix[0][0];
		}
		int[][] tab = new int[n][n];
		for (int i = 0; i < n; i++) {
			tab[n - 1][i] = matrix[n - 1][i];
		}
		for (int row = n - 2; row >= 0; row--) {
			for (int col = 0; col < n; col++) {
				if (col == 0) {
					tab[row][col] = matrix[row][col] + Math.min(tab[row + 1][col],tab[row + 1][col + 1]);
				} 
				else if (col == n - 1) {
					tab[row][col] = matrix[row][col] + Math.min(tab[row + 1][col - 1],tab[row + 1][col]);
				} 
				else {
					tab[row][col] = matrix[row][col] + Math.min(Math.min(tab[row + 1][col + 1],tab[row + 1][col - 1]),tab[row + 1][col]);
				}
			}
		}
		Arrays.sort(tab[0]);
		return tab[0][0];
	}
}