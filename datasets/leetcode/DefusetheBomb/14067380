class Solution {
	int[] decrypt(int[] code, int k) {
		int[] sum = new int[code.length];
		sum[0] = code[0];
		for (int i = 1; i < code.length; i++) {
			sum[i] = code[i] + sum[i - 1];
		}
		for (int i = 0; i < code.length; i++) {
			if (k > 0) {
				int diff = code.length - (i + 1);
				if (diff >= k) {
					code[i] = sum[i + k] - sum[i];
				} 
				else {
					code[i] = sum[code.length - 1] - sum[i];
					code[i] += sum[(k - diff) - 1];
				}
			} 
			else if (k < 0) {
				int diff = (code.length + i) - code.length;
				if (diff >= Math.abs(k)) {
					if (diff == Math.abs(k)) {
						code[i] = sum[diff - 1];
					} 
					else {
						code[i] = sum[diff - 1] - sum[(diff + k) - 1];
					}
				} 
				else {
					if (i != 0) {
						code[i] = sum[diff - 1];
						code[i] += sum[code.length - 1] - sum[(code.length - 1) - (Math.abs(k) - diff)];
					} 
					else {
						code[i] = sum[code.length - 1] - sum[code.length - 1 + k];
					}
				}
			} 
			else {
				code[i] = 0;
			}
		}
		return code;
	}
}