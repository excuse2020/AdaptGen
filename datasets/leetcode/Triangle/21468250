class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		int n = triangle.size();
		Integer[][] dp = new Integer[n][n];
		int lvl = 0;
		int idx = 0;
		return minimumTotalUtil(triangle,dp,lvl,idx);
	}
	int minimumTotalUtil(List<List<Integer>> triangle, Integer[][] dp, int lvl, int i) {
		if (lvl == triangle.size() - 1) {
			return triangle.get(lvl).get(i);
		}
		if (dp[lvl][i] != null) {
			return dp[lvl][i];
		}
		int res = triangle.get(lvl).get(i);
		res += Math.min(minimumTotalUtil(triangle,dp,lvl + 1,i),minimumTotalUtil(triangle,dp,lvl + 1,i + 1));
		dp[lvl][i] = res;
		return res;
	}
}