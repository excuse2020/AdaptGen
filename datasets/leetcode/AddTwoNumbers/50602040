class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		ListNode fres = new ListNode();
		ListNode fres1 = null;
		if (l1 == null) {
			return l2;
		}
		if (l2 == null) {
			return l1;
		}
		if (l1 == null || l2 == null) {
			return fres;
		}
		int previous = 0;
		boolean flag = true;
		while (l1 != null && l2 != null) {
			int current = (l1.val + l2.val) % 10;
			previous = (l1.val + l2.val) / 10;
			ListNode tempNode = new ListNode(current);
			if (flag) {
				fres = tempNode;
				fres1 = fres;
				flag = false;
			} 
			else {
				fres.next = tempNode;
				fres = tempNode;
			}
			l1 = l1.next;
			l2 = l2.next;
		}
		while (l1 != null) {
			int current = (l1.val + previous) % 10;
			previous = (l1.val + previous) / 10;
			ListNode tempNode = new ListNode(current);
			fres.next = tempNode;
			fres = tempNode;
			l1 = l1.next;
		}
		while (l2 != null) {
			int current = (l2.val + previous) % 10;
			previous = (l2.val + previous) / 10;
			ListNode tempNode = new ListNode(current);
			fres.next = tempNode;
			fres = tempNode;
			l2 = l2.next;
		}
		if (previous != 0) {
			ListNode tempNode = new ListNode(previous);
			fres.next = tempNode;
		}
		return fres1;
	}
}