class Solution {
	int findTargetSumWays(int[] nums, int target) {
		if (nums.length == 0) {
			return 0;
		}
		int sum = 0;
		for (int num: nums) {	
			sum += num;
		}
		int temp = sum - target;
		if (temp < 0 || temp % 2 != 0) {
			return 0;
		}
		int newtarget = temp / 2;
		int[][] dp = new int[nums.length + 1][newtarget + 1];
		dp[0][0] = 1;
		for (int i = 1; i <= nums.length; i++) {
			int num = nums[i - 1];
			for (int j = 0; j <= newtarget; j++) {
				if (j < num) {
					dp[i][j] = dp[i - 1][j];
				} 
				else {
					dp[i][j] = dp[i - 1][j] + dp[i - 1][j - num];
				}
			}
		}
		return dp[nums.length][newtarget];
	}
}