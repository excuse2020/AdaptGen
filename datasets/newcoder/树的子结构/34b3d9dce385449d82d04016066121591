class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root2 == null || root1 == null) {
			return false;
		}
		if (root1.val == root2.val && judge(root1,root2)) {
			return true;
		} 
		else {
			return HasSubtree(root1.left,root2) || HasSubtree(root1.right,root2);
		}
	}
	boolean judge(TreeNode root1, TreeNode root2) {
		if (root2 == null) {
			return true;
		}
		if (root1 == null) {
			return false;
		}
		if (root1.val == root2.val) {
			return judge(root1.left,root2.left) && judge(root1.right,root2.right);
		} 
		else {
			return false;
		}
	}
}