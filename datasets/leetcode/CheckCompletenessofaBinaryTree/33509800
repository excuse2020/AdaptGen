class Solution {
	int[] c = new int[8];
	int[] d = new int[8];
	boolean check(TreeNode node, int lv) {
		d[lv]++;
		if (node == null) {
			return true;
		}
		if (lv >= 7) {
			return false;
		}
		c[lv]++;
		if (d[lv] > c[lv]) {
			return false;
		}
		if (node.left == null && node.right != null) {
			return false;
		}
		if (!check(node.left,lv + 1) || !check(node.right,lv + 1)) {
			return false;
		}
		return true;
	}
	boolean isCompleteTree(TreeNode root) {
		if (!check(root,0)) {
			return false;
		}
		for (int i = 0; i < 7; i++) {
			if (c[i] < 1 << i && c[i + 1] > 0) {
				return false;
			}
		}
		return true;
	}
}