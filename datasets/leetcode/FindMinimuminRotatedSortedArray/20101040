class Solution {
	int findMin(int[] nums) {
		int pivot = findPivot(nums,0,nums.length - 1);
		return pivot == -1 ? nums[0] : nums[pivot + 1];
	}
	int findPivot(int[] nums, int left, int right) {
		if (left > right) {
			return -1;
		}
		int mid = (left + right) / 2;
		if (mid < right && nums[mid] > nums[mid + 1]) {
			return mid;
		} 
		else if (mid > left && nums[mid - 1] > nums[mid]) {
			return mid - 1;
		}
		if (nums[left] > nums[mid]) {
			return findPivot(nums,left,mid - 1);
		} 
		else {
			return findPivot(nums,mid + 1,right);
		}
	}
}