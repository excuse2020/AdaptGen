class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		long res = 0;
		int len = queries.length;
		Set<Integer> rows = new HashSet<>();
		Set<Integer> cols = new HashSet<>();
		for (int i = len - 1; i >= 0; i--) {
			int[] q = queries[i];
			int type = q[0], idx = q[1];
			long v = q[2];
			if (type == 1) {
				if (cols.contains(idx)) {
					continue;
				}
				int k = n - rows.size();
				res += k * v;
				cols.add(idx);
			} 
			else {
				if (rows.contains(idx)) {
					continue;
				}
				int k = n - cols.size();
				res += k * v;
				rows.add(idx);
			}
			if (rows.size() == n && cols.size() == n) {
				break;
			}
		}
		return res;
	}
}