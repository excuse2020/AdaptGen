class Solution {
	int[] queryResults(int limit, int[][] queries) {
		Map<Integer, Integer> map = new HashMap<>();
		Map<Integer, Integer> color = new HashMap<>();
		int[] res = new int[queries.length];
		for (int i = 0; i < queries.length; i++) {
			if (map.containsKey(queries[i][0])) {
				if (color.get(map.get(queries[i][0])) == 1) {
					color.remove(map.get(queries[i][0]));
				} 
				else {
					color.put(map.get(queries[i][0]),color.get(map.get(queries[i][0])) - 1);
				}
				map.put(queries[i][0],queries[i][1]);
				if (!color.containsKey(queries[i][1])) {
					color.put(queries[i][1],1);
				} 
				else {
					color.put(queries[i][1],color.get(queries[i][1]) + 1);
				}
			} 
			else {
				map.put(queries[i][0],queries[i][1]);
				if (!color.containsKey(queries[i][1])) {
					color.put(queries[i][1],1);
				} 
				else {
					color.put(queries[i][1],color.get(queries[i][1]) + 1);
				}
			}
			res[i] = color.size();
		}
		return res;
	}
}