class Solution {
	int[][] spiralMatrix(int M, int N, ListNode head) {
		int[] arr = new int[M * N];
		for (int i = 0; i < arr.length; i++) {
			if (head != null) {
				arr[i] = head.val;
				head = head.next;
			} 
			else {
				arr[i] = -1;
			}
		}
		if (arr == null) {
			return null;
		}
		int[][] mat = new int[M][N];
		int top = 0, bottom = M - 1;
		int left = 0, right = N - 1;
		int index = 0;
		while (true) {
			if (left > right) {
				break;
			}
			for (int i = left; i <= right; i++) {
				mat[top][i] = arr[index++];
			}
			top++;
			if (top > bottom) {
				break;
			}
			for (int i = top; i <= bottom; i++) {
				mat[i][right] = arr[index++];
			}
			right--;
			if (left > right) {
				break;
			}
			for (int i = right; i >= left; i--) {
				mat[bottom][i] = arr[index++];
			}
			bottom--;
			if (top > bottom) {
				break;
			}
			for (int i = bottom; i >= top; i--) {
				mat[i][left] = arr[index++];
			}
			left++;
		}
		return mat;
	}
}