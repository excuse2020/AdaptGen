class Solution {
	boolean isPalindrome(ListNode head) {
		if (head == null) {
			return true;
		}
		int count = 0;
		ListNode current = head;
		while (current != null) {
			count++;
			current = current.next;
		}
		if (count % 2 == 0) {
			ListNode temp = head;
			int count1 = 0;
			while (count1 < count / 2) {
				temp = temp.next;
				count1++;
			}
			ListNode prev = null;
			while (temp != null) {
				ListNode now = temp.next;
				temp.next = prev;
				prev = temp;
				temp = now;
			}
			current = head;
			while (prev != null) {
				if (prev.val != current.val) {
					return false;
				}
				prev = prev.next;
				current = current.next;
			}
			return true;
		} 
		else {
			ListNode temp = head;
			int count1 = 0;
			while (count1 < count / 2) {
				temp = temp.next;
				count1++;
			}
			temp = temp.next;
			ListNode prev = null;
			while (temp != null) {
				ListNode now = temp.next;
				temp.next = prev;
				prev = temp;
				temp = now;
			}
			current = head;
			while (prev != null) {
				if (prev.val != current.val) {
					return false;
				}
				prev = prev.next;
				current = current.next;
			}
			return true;
		}
	}
}