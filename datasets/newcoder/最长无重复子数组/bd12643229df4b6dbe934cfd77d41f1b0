class Solution {
	int maxLength(int[] arr) {
		if (arr.length == 0) {
			return 0;
		}
		if (arr.length == 1) {
			return 1;
		}
		ArrayList<Integer> curlist = new ArrayList<>();
		ArrayList<Integer> maxlist = new ArrayList<>();
		curlist.add(arr[0]);
		maxlist.add(arr[0]);
		for (int i = 1; i < arr.length; i++) {
			if (curlist.contains(arr[i])) {
				Iterator<Integer> it = curlist.iterator();
				while (it.hasNext()) {
					if (it.next() == arr[i]) {
						it.remove();
						break;
					} 
					else {
						it.remove();
					}
				}
			}
			curlist.add(arr[i]);
			if (maxlist.size() < curlist.size()) {
				maxlist.clear();
				maxlist.addAll(curlist);
			}
		}
		return maxlist.size();
	}
}