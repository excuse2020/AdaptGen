class Solution {
	void calculate(int x, int y, int[][] ans, int[][] grid) {
		Set<Integer> topSet = new HashSet<>();
		Set<Integer> bottomSet = new HashSet<>();
		int i = x;
		int j = y;
		while (--i >= 0 && --j >= 0) {
			topSet.add(grid[i][j]);
		}
		i = x;
		j = y;
		while (++i <= grid.length - 1 && ++j <= grid[i].length - 1) {
			bottomSet.add(grid[i][j]);
		}
		ans[x][y] = Math.abs(bottomSet.size() - topSet.size());
	}
	int[][] differenceOfDistinctValues(int[][] grid) {
		int[][] ans = new int[grid.length][grid[0].length];
		for (int i = 0; i < grid.length; ++i) {
			for (int j = 0; j < grid[i].length; ++j) {
				calculate(i,j,ans,grid);
			}
		}
		return ans;
	}
}