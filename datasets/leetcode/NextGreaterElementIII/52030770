class Solution {
	int nextGreaterElement(int n) {
		int[] nums = new int[(int) Math.ceil(Math.log10(n))];
		if (n == 10) {
			return -1;
		}
		int j = nums.length - 1;
		if (j < 0) {
			return -1;
		}
		while (n > 0) {
			nums[j--] = n % 10;
			n = n / 10;
		}
		j = nums.length - 2;
		while (j >= 0 && nums[j] >= nums[j + 1]) {
			j--;
		}
		if (j >= 0) {
			int i = nums.length - 1;
			while (i > j && nums[i] <= nums[j]) {
				i--;
			}
			int temp = nums[j];
			nums[j] = nums[i];
			nums[i] = temp;
		} 
		else {
			return -1;
		}
		reverse(nums,j + 1);
		long ans = 0;
		for (int dig: nums) {	
			ans = (long) (ans * 10) + dig;
		}
		if (ans < Integer.MIN_VALUE || ans > Integer.MAX_VALUE) {
			return -1;
		}
		return (int) ans;
	}
	void reverse(int[] nums, int start) {
		int end = nums.length - 1;
		while (start < end) {
			int temp = nums[start];
			nums[start] = nums[end];
			nums[end] = temp;
			start++;
			end--;
		}
	}
}