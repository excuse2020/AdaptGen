class Solution {
	boolean hasPath(char[][] matrix, String word) {
		if (word.length() == 0) {
			return true;
		}
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (helper(matrix,i,j,word)) {
					return true;
				}
			}
		}
		return false;
	}
	boolean helper(char[][] matrix, int i, int j, String word) {
		if (word.length() == 0) {
			return true;
		}
		if (i < 0 || j < 0 || i >= matrix.length || j >= matrix[0].length) {
			return false;
		}
		if (word.charAt(0) == matrix[i][j]) {
			char tmp = matrix[i][j];
			matrix[i][j] = '.';
			boolean res = helper(matrix,i - 1,j,word.substring(1,word.length())) || helper(matrix,i + 1,j,word.substring(1,word.length()));
			matrix[i][j] = tmp;
			return res;
		} 
		else {
			return false;
		}
	}
}