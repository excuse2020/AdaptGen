class Solution {
	int binaryOne(int num) {
		int count = 0;
		while (num > 0) {
			if ((num & 1) == 1) {
				count++;
			}
			num = num >> 1;
		}
		return count;
	}
	boolean checkPrime(int num) {
		if (num == 1) {
			return false;
		}
		if (num == 2) {
			return true;
		}
		for (int i = 2; i < num; i++) {
			if (num % i == 0) {
				return false;
			}
		}
		return true;
	}
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			int temp = binaryOne(i);
			if (checkPrime(temp)) {
				count++;
			}
		}
		return count;
	}
}