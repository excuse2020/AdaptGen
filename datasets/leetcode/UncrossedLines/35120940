class Solution {
	int helper(int nums1, int i, int nums2, int j, int dp) {
		if (i < 0 || j < 0) {
			return 0;
		}
		if (dp[i][j] != -1) {
			return dp[i][j];
		}
		if (nums1[i] == nums2[j]) {
			return 1 + helper(nums1,i - 1,nums2,j - 1,dp);
		}
		return dp[i][j] = Math.max(helper(nums1,i - 1,nums2,j,dp),helper(nums1,i,nums2,j - 1,dp));
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		int dp = new int[nums1.length][nums2.length];
		for (int[] num: dp) {	
			Arrays.fill(num,-1);
		}
		return helper(nums1,nums1.length - 1,nums2,nums2.length - 1,dp);
	}
}