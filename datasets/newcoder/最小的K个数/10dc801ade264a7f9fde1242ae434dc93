class Solution {
	int k;
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int _k) {
		k = _k;
		int n = input.length;
		ArrayList<Integer> ans = new ArrayList<>();
		if (k == 0) {
			return ans;
		}
		qsort(input,0,n - 1);
		for (int i = 0; i < k; i++) {
			ans.add(input[i]);
		}
		return ans;
	}
	void qsort(int[] arr, int l, int r) {
		if (l >= r) {
			return;
		}
		int i = l, j = r;
		int ridx = new Random().nextInt(r - l + 1) + l;
		swap(arr,ridx,l);
		int x = arr[l];
		while (i < j) {
			while (i < j && arr[j] >= x) {
				j--;
			}
			while (i < j && arr[i] <= x) {
				i++;
			}
			swap(arr,i,j);
		}
		swap(arr,i,l);
		if (i > k) {
			qsort(arr,l,i - 1);
		}
		if (i < k) {
			qsort(arr,i + 1,r);
		}
	}
	void swap(int[] arr, int l, int r) {
		int tmp = arr[l];
		arr[l] = arr[r];
		arr[r] = tmp;
	}
}