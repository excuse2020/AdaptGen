class Solution {
	void Leaf(TreeNode root1, ArrayList<TreeNode> arr1) {
		if (root1.left == null && root1.right == null) {
			arr1.add(root1);
			return;
		}
		if (root1.left != null) {
			Leaf(root1.left,arr1);
		}
		if (root1.right != null) {
			Leaf(root1.right,arr1);
		}
	}
	boolean isSimilar(ArrayList<TreeNode> arr1, ArrayList<TreeNode> arr2) {
		if (arr1.size() != arr2.size()) {
			return false;
		}
		while (!arr1.isEmpty() && !arr2.isEmpty()) {
			TreeNode a1 = arr1.remove(arr1.size() - 1);
			TreeNode a2 = arr2.remove(arr2.size() - 1);
			if (a1.val != a2.val) {
				return false;
			}
		}
		return true;
	}
	boolean leafSimilar(TreeNode root1, TreeNode root2) {
		ArrayList<TreeNode> arr1 = new ArrayList<>();
		ArrayList<TreeNode> arr2 = new ArrayList<>();
		Leaf(root1,arr1);
		Leaf(root2,arr2);
		return isSimilar(arr1,arr2);
	}
}