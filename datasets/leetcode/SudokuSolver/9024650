class Solution {
	Map<Integer, Set<Integer>> boxs = new HashMap();
	Map<Integer, Set<Integer>> cols = new HashMap();
	Map<Integer, Set<Integer>> rows = new HashMap();
	void StoreInitialValues(char[][] board) {
		for (int i = 0; i < board.length; i++) {
			rows.put(i,new HashSet());
			cols.put(i,new HashSet());
			boxs.put(i,new HashSet());
		}
		int i = 0;
		int j = 0;
	}
	boolean checkBoardValidity(char[][] board, Map<Integer, Set<Integer>> rows, Map<Integer, Set<Integer>> cols, Map<Integer, Set<Integer>> boxs) {
		int i = 0;
		int j = 0;
	}
	void solveSudoku(char[][] board) {
		if (board == null || board.length == 0) {
			return;
		}
		StoreInitialValues(board);
		checkBoardValidity(board,rows,cols,boxs);
	}
}