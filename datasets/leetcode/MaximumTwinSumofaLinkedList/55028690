class Solution {
	int pairSum(ListNode head) {
		if (head == null) {
			return 0;
		}
		int max = 0;
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null && fast.next.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		slow.next = reverse(slow.next);
		ListNode start = head;
		while (slow.next != null) {
			max = Math.max(start.val + slow.next.val,max);
			start = start.next;
			slow = slow.next;
		}
		return max;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		ListNode cur = head;
		ListNode next = head;
		while (next != null) {
			next = cur.next;
			cur.next = prev;
			prev = cur;
			cur = next;
		}
		return prev;
	}
}