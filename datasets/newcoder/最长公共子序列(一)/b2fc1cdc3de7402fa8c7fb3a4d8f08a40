class Solution {
	int LCS(String text1, String text2) {
		char[] maxStr = text1.length() >= text2.length() ? text1.toCharArray() : text2.toCharArray();
		char[] minStr = text1.length() < text2.length() ? text1.toCharArray() : text2.toCharArray();
		int N = maxStr.length;
		int M = minStr.length;
		int[][] dp = new int[2][M + 1];
		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <= M; j++) {
				if (maxStr[i - 1] == minStr[j - 1]) {
					dp[i % 2][j] = dp[(i + 1) % 2][j - 1] + 1;
				} 
				else {
					dp[i % 2][j] = Math.max(dp[(i + 1) % 2][j],dp[i % 2][j - 1]);
				}
			}
		}
		return dp[N % 2][M];
	}
}