class Solution {
	void dfs(int[][] isConnected, boolean[] visited, int i) {
		if (visited[i]) {
			return;
		}
		visited[i] = true;
		for (int j = 0; j < isConnected.length; j++) {
			if (!visited[j] && isConnected[i][j] == 1) {
				dfs(isConnected,visited,j);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int len = isConnected.length;
		int count = 0;
		boolean[] visited = new boolean[len];
		for (int i = 0; i < len; i++) {
			if (!visited[i]) {
				count++;
				dfs(isConnected,visited,i);
			}
		}
		return count;
	}
}