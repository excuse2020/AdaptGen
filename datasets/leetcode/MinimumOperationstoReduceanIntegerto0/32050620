class Solution {
	int minOperations(int n) {
		int ans = 0;
		int[] v = new int[1000000];
		Queue<Integer> q = new LinkedList<>();
		q.offer(0);
		while (true) {
			int s = q.size();
			for (int i = 0; i < s; i++) {
				int x = q.poll();
				if (x == n) {
					return v[x];
				}
				for (int j = 0; j < 30; j++) {
					int t = x + (1 << j);
					if (t < v.length && v[t] == 0) {
						v[t] = v[x] + 1;
						q.offer(t);
					}
					t = x - (1 << j);
					if (t > 0 && v[t] == 0) {
						v[t] = v[x] + 1;
						q.offer(t);
					}
				}
			}
		}
	}
}