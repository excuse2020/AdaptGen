class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		boolean flag1 = res(root1,root2);
		boolean flag2 = HasSubtree(root1.left,root2);
		boolean flag3 = HasSubtree(root1.right,root2);
		return flag1 || flag2;
	}
	boolean res(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 != null) {
			return false;
		}
		if (root1 == null || root2 == null) {
			return true;
		}
		if (root1.val != root2.val) {
			return false;
		}
		return res(root1.left,root2.left) && res(root1.right,root2.right);
	}
}