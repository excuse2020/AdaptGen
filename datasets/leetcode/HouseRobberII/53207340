class Solution {
	int house(int[] nums, int s, int e) {
		int n = nums.length;
		int[] dp = new int[n];
		dp[s] = nums[s];
		dp[s + 1] = Math.max(nums[s],nums[s + 1]);
		for (int i = s + 2; i <= e; i++) {
			dp[i] = Math.max(dp[i - 2] + nums[i],dp[i - 1]);
		}
		return dp[e];
	}
	int rob(int[] nums) {
		if (nums.length == 0) {
			return 0;
		}
		if (nums.length == 1) {
			return nums[0];
		} 
		else if (nums.length == 2) {
			return Math.max(nums[0],nums[1]);
		} 
		else {
			int n = nums.length;
			int o1 = house(nums,0,n - 2);
			int o2 = house(nums,1,n - 1);
			return Math.max(o1,o2);
		}
	}
}