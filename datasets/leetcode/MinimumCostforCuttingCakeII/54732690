class Solution {
	long minimumCost(int m, int n, int[] hCut, int[] vCut) {
		Arrays.sort(hCut);
		Arrays.sort(vCut);
		int k = vCut.length - 1;
		int j = hCut.length - 1;
		long rowSlices = 1;
		long colSlices = 1;
		long cost = 0;
		while (j >= 0 && k >= 0) {
			if (hCut[j] >= vCut[k]) {
				cost += (colSlices * hCut[j]);
				rowSlices++;
				j--;
			} 
			else {
				cost += (rowSlices * vCut[k]);
				k--;
				colSlices++;
			}
		}
		while (j >= 0) {
			cost += (colSlices * hCut[j]);
			j--;
		}
		while (k >= 0) {
			cost += (rowSlices * vCut[k]);
			k--;
		}
		return cost;
	}
}