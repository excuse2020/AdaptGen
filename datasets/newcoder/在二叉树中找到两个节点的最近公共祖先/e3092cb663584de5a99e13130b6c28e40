class Solution {
	TreeNode helper(TreeNode root, TreeNode p, TreeNode q) {
		if (root == null || root.val == p.val || root.val == q.val) {
			return root;
		}
		TreeNode left = helper(root.left,p,q);
		TreeNode right = helper(root.right,p,q);
		if (left == null && right == null) {
			return null;
		}
		if (right == null) {
			return left;
		}
		if (left == null) {
			return right;
		}
		return root;
	}
	int lowestCommonAncestor(TreeNode root, int o1, int o2) {
		TreeNode p = new TreeNode(o1);
		TreeNode q = new TreeNode(o2);
		TreeNode res = helper(root,p,q);
		return res.val;
	}
}