class Solution {
	int getPointFromReport(String report, Set<String> pos, Set<String> neg) {
		int points = 0;
		for (String r: report.split(" ")) {	
			if (pos.contains(r)) {
				points += 3;
			} 
			else if (neg.contains(r)) {
				points -= 1;
			}
		}
		return points;
	}
	List<Integer> topStudents(String[] positive_feedback, String[] negative_feedback, String[] reports, int[] student_id, int k) {
		int n = student_id.length;
		Set<String> pos = new HashSet();
		for (String fd: positive_feedback) {	
			pos.add(fd);
		}
		Set<String> neg = new HashSet();
		for (String fd: negative_feedback) {	
			neg.add(fd);
		}
		PriorityQueue<int[]> pq = new PriorityQueue(new Comp());
		for (int i = 0; i < n; i++) {
			int points = getPointFromReport(reports[i],pos,neg);
			int id = student_id[i];
			pq.add(new int{id, points});
		}
		List<Integer> ans = new ArrayList();
		while (k-- > 0) {
			ans.add(pq.remove()[0]);
		}
		return ans;
	}
}
class Comp {
	int compare(int[] a1, int[] a2) {
		if (a1[1] != a2[1]) {
			return a2[1] - a1[1];
		}
		return a1[0] - a2[0];
	}
}