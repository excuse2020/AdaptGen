class Solution {
	long countBadPairs(int[] nums) {
		int n = nums.length;
		for (int i = 0; i < n; ++i) {
			nums[i] = nums[i] - i;
		}
		Map<Integer, Long> map = new HashMap<>();
		long totalPairs = (long) n * ((long) n - 1) / 2;
		long goodPairs = 0;
		for (int i = 0; i < n; ++i) {
			if (map.containsKey(nums[i])) {
				goodPairs += map.get(nums[i]);
			}
			map.put(nums[i],map.getOrDefault(nums[i],0L) + 1);
		}
		return totalPairs - goodPairs;
	}
}