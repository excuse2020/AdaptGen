class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		Map<String, List<Integer>> map = new HashMap();
		for (int i = 0; i < words.length; i++) {
			if (!map.containsKey(words[i])) {
				map.put(words[i],new ArrayList<Integer>());
			}
			List<Integer> values = map.get(words[i]);
			values.add(i);
			map.put(words[i],values);
		}
		if (!map.containsKey(target)) {
			return -1;
		}
		List<Integer> indexes = map.get(target);
		System.out.println(indexes);
		int diff = Integer.MAX_VALUE;
		int dist_from_start = 0, dist_from_end = 0;
		int i = 0;
		dist_from_start = Math.abs(startIndex - indexes.get(i));
		if (startIndex > indexes.get(i)) {
			dist_from_end = Math.abs(0 - indexes.get(0)) + Math.abs(startIndex - words.length);
		} 
		else {
			dist_from_end = Math.abs(0 - startIndex) + Math.abs(indexes.get(i) - words.length);
		}
		diff = Math.min(dist_from_start,Math.min(dist_from_end,diff)) * Bold;
	}
}