class Solution {
	int minCost(int n, int[] cuts) {
		List<Integer> cutList = new ArrayList<>();
		for (int cut: cuts) {	
			cutList.add(cut);
		}
		cutList.add(0);
		cutList.add(n);
		Collections.sort(cutList);
		int c = cuts.length;
		int[][] dp = new int[c + 2][c + 2];
		for (int[] row: dp) {	
			Arrays.fill(row,0);
		}
		for (int i = c; i >= 1; i--) {
			for (int j = 1; j <= c; j++) {
				if (i > j) {
					continue;
				}
				int mini = Integer.MAX_VALUE;
				for (int ind = i; ind <= j; ind++) {
					int cost = cutList.get(j + 1) - cutList.get(i - 1) + dp[i][ind - 1] + dp[ind + 1][j];
					mini = Math.min(mini,cost);
				}
				dp[i][j] = mini;
			}
		}
		return dp[1][c];
	}
}