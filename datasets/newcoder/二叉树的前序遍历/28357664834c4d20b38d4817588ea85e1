class Solution {
	List<Integer> pre = new ArrayList<>();
	void dfs(TreeNode root) {
		if (root == null) {
			return;
		}
		TreeNode node = root;
		LinkedList<TreeNode> s = new LinkedList<>();
		while (!s.isEmpty() || node != null) {
			if (node != null) {
				s.push(node);
				pre.add(node.val);
				node = node.left;
			} 
			else {
				node = s.pop();
				node = node.right;
			}
		}
	}
	int[] preorderTraversal(TreeNode root) {
		dfs(root);
		return pre.stream().mapToInt().toArray();
	}
}