class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		boolean exist = false;
		ArrayList<Integer> distance = new ArrayList<Integer>();
		int n = words.length;
		if (words[startIndex].equals(target)) {
			distance.add(0);
		}
		for (int i = startIndex, o = 0; o < words.length; i++) {
			int next = (i + 1) % n;
			o++;
			if (words[next].equals(target)) {
				exist = true;
				distance.add(o);
			}
		}
		for (int i = startIndex, o = 0; o != words.length - 1; i = (i - 1 + n) % n) {
			int next = (i - 1 + n) % n;
			o++;
			if (words[next].equals(target)) {
				distance.add(o);
				exist = true;
			}
		}
		int result = 0;
		if (distance.size() > 0) {
			result = distance.get(0);
		}
		for (int num: distance) {	
			if (num <= result) {
				result = num;
			}
		}
		if (exist) {
			return result;
		} 
		else {
			return -1;
		}
	}
}