class Solution {
	int semiOrderedPermutation(int[] nums) {
		int n = nums.length;
		int cnt = 0;
		boolean f = false;
		while (f == false) {
			for (int i = 0; i < n; i++) {
				if (nums[i] == n & i != (n - 1)) {
					int temp = nums[i];
					nums[i] = nums[i + 1];
					nums[i + 1] = temp;
					cnt++;
				}
				if (nums[i] == 1 && i != 0) {
					int temp = nums[i - 1];
					nums[i - 1] = nums[i];
					nums[i] = temp;
					cnt++;
				}
			}
			if (nums[0] == 1 && nums[n - 1] == n) {
				f = true;
			}
		}
		return cnt;
	}
}