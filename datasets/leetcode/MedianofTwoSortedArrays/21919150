class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int m = nums1.length;
		int n = nums2.length;
		int[] res = new int[m + n];
		int i = 0;
		int j = 0;
		int k = 0;
		while (i <= m - 1 && j <= n - 1) {
			if (nums1[i] <= nums2[j]) {
				res[k] = nums1[i];
				i++;
				k++;
			} 
			else {
				res[k] = nums2[j];
				j++;
				k++;
			}
		}
		while (i <= m - 1) {
			res[k] = nums1[i];
			i++;
			k++;
		}
		while (j <= n - 1) {
			res[k] = nums2[j];
			j++;
			k++;
		}
		double median = 0;
		for (int z = 0; z <= k - 1; z++) {
			if (k % 2 != 0) {
				median = res[(k - 1) / 2];
			} 
			else {
				median = (double) (res[k / 2] + res[(k / 2) - 1]) / 2;
			}
		}
		return median;
	}
}