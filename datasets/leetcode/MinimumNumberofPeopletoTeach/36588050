class Solution {
	boolean findTheElement(int[] array1, int n) {
		for (int i: array1) {	
			if (i == n) {
				return true;
			}
		}
		return false;
	}
	int minimumTeachings(int n, int[][] languages, int[][] friendships) {
		int[][] teach = new int[n][languages.length];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < languages.length; j++) {
				teach[i][j] = 0;
			}
		}
		for (int i = 0; i < friendships.length; i++) {
			boolean flag = false;
			for (int l = 0; l < languages[friendships[i][0] - 1].length; l++) {
				if (findTheElement(languages[friendships[i][1] - 1],languages[friendships[i][0] - 1][l])) {
					flag = true;
					break;
				} 
				else {
					flag = false;
				}
			}
			if (!flag) {
				for (int j = 1; j <= n; j++) {
					for (int k: friendships[i]) {	
						if (teach[j - 1][k - 1] == 0) {
							if (!findTheElement(languages[k - 1],j)) {
								teach[j - 1][k - 1] = 1;
							}
						}
					}
				}
			}
		}
		int min = languages.length;
		for (int[] i: teach) {	
			int sum = 0;
			for (int j: i) {	
				sum += j;
			}
			if (sum < min) {
				min = sum;
			}
		}
		return min;
	}
}