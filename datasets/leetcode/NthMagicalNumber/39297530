class Solution {
	int nthMagicalNumber(int n, int a, int b) {
		long mod = (long) (1e9 + 7);
		long A = a, B = b;
		long left = Math.min(a,b);
		long right = (long) n * Math.min(a,b);
		while (B > 0) {
			long tmp = A;
			A = B;
			B = tmp % B;
		}
		long lcm = (a * b) / A;
		while (left < right) {
			long m = left + (right - left) / 2;
			if ((m / a + m / b - m / lcm) < n) {
				left = m + 1;
			} 
			else {
				right = m;
			}
		}
		return (int) (left % mod);
	}
}