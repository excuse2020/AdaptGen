class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		int maxCol = 0;
		for (List<Integer> list: nums) {	
			maxCol = Math.max(maxCol,list.size());
		}
		int numOfDiagonals = nums.size() + maxCol - 1;
		List<Integer>[] diagonals = new List[numOfDiagonals];
		List<Integer> listResult = new ArrayList<>();
		for (int i = 0; i < diagonals.length; i++) {
			diagonals[i] = new ArrayList<>();
		}
		for (int i = 0; i < nums.size(); i++) {
			for (int j = 0; j < nums.get(i).size(); j++) {
				int diagonal = i + j;
				diagonals[diagonal].add(nums.get(i).get(j));
			}
		}
		for (int i = 0; i < diagonals.length; i++) {
			List<Integer> currDiagonal = diagonals[i];
			Collections.reverse(currDiagonal);
			listResult.addAll(currDiagonal);
		}
		int idx = 0;
		int[] arrResult = new int[listResult.size()];
		for (Integer num: listResult) {	
			arrResult[idx++] = num;
		}
		return arrResult;
	}
}