class Solution {
	int[] maxSlidingWindow(int[] nums, int k) {
		int[] result = new int[nums.length - k + 1];
		int index = 0;
		Deque<Integer> stack = new ArrayDeque<>();
		for (int i = 0; i < nums.length; i++) {
			int cur = nums[i];
			while (!stack.isEmpty() && nums[stack.peekLast()] < cur) {
				stack.pollLast();
			}
			while (!stack.isEmpty() && stack.peekFirst() + k <= i) {
				stack.pollFirst();
			}
			stack.offerLast(i);
			if (i - 0 + 1 >= k) {
				result[index++] = nums[stack.peekFirst()];
			}
		}
		return result;
	}
}