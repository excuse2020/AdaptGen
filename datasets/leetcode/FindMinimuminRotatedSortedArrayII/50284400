class Solution {
	int findMin(int[] nums) {
		int mid = (0 + nums.length - 1) / 2;
		return getMin(0,nums.length - 1,nums[mid],nums);
	}
	int getMin(int low, int high, int x, int[] nums) {
		if (low > high) {
			return x;
		}
		int mid = (low + high) / 2;
		int left = x;
		int right = x;
		if (nums[mid] <= x) {
			x = nums[mid];
			left = getMin(low,mid - 1,x,nums);
			right = getMin(mid + 1,high,x,nums);
		} 
		else {
			if (nums[low] <= x) {
				x = nums[low];
				left = getMin(low,mid - 1,x,nums);
			}
			if (nums[high] <= x) {
				x = nums[high];
				right = getMin(mid + 1,high,x,nums);
			}
		}
		return Math.min(x,Math.min(left,right));
	}
}