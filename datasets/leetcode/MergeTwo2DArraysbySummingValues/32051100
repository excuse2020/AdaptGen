class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		int n1 = nums1.length;
		int m1 = nums1.length;
		int n2 = nums2.length;
		int m2 = nums2.length;
		TreeMap<Integer, Integer> map = new TreeMap<>();
		for (int i = 0; i < n1; i++) {
			if (map.containsKey(nums1[i][0]) == true) {
				map.put(nums1[i][0],map.get(nums1[i][0]) + nums1[i][1]);
			} 
			else {
				map.put(nums1[i][0],nums1[i][1]);
			}
		}
		for (int i = 0; i < n2; i++) {
			if (map.containsKey(nums2[i][0]) == true) {
				map.put(nums2[i][0],map.get(nums2[i][0]) + nums2[i][1]);
			} 
			else {
				map.put(nums2[i][0],nums2[i][1]);
			}
		}
		int ans = new int[map.size()][2];
		int c = 0;
		for (Map.Entry<Integer, Integer> mapElement: map.entrySet()) {	
			ans[c][0] = mapElement.getKey();
			ans[c][1] = (mapElement.getValue());
			c++;
		}
		return ans;
	}
}