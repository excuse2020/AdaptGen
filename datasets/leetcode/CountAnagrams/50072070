class Solution {
	int mod = (int) (Math.pow(10,9) + 7);
	long binaryExpo(long a, long n) {
		if (n == 0) {
			return 1;
		}
		long partialAns = binaryExpo(a,n / 2);
		partialAns = mul(partialAns,partialAns);
		if (n % 2 == 0) {
			return partialAns;
		}
		return mul(partialAns,a);
	}
	int[] calculateFactorial(int n) {
		int[] fact = new int[n + 1];
		fact[0] = fact[1] = 1;
		for (int i = 2; i <= n; i++) {
			fact[i] = (int) mul(i,fact[i - 1]);
		}
		return fact;
	}
	int countAnagrams(String s) {
		int n = s.length();
		int[] fact = calculateFactorial(n);
		long result = 1;
		String[] strArr = s.split(" ");
		int[] freq = new int[26];
	}
	long mul(long a, long b) {
		return ((a % mod) * (b % mod)) % mod;
	}
}