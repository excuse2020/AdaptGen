class Solution {
	int binarySearch(int arr, int target) {
		int low = 0;
		int high = arr.length;
		while (low < high) {
			int mid = (low + high) / 2;
			if (target < arr[mid]) {
				high = mid;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int[] fullBloomFlowers(int[][] flowers, int[] people) {
		int n = flowers.length;
		int start = new int[n];
		int end = new int[n];
		for (int i = 0; i < n; i++) {
			start[i] = flowers[i][0];
			end[i] = flowers[i][1] + 1;
		}
		Arrays.sort(start);
		Arrays.sort(end);
		int ans = new int[people.length];
		int s, e;
		for (int i = 0; i < people.length; i++) {
			e = binarySearch(end,people[i]);
			s = binarySearch(start,people[i]);
			ans[i] = s - e;
		}
		return ans;
	}
}