class Solution {
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int n = price.length;
		int start = 1, end = price[n - 1] - price[0], mid = 0;
		while (start <= end) {
			mid = (start + end) / 2;
			if (minDifference(price,mid,k)) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return end;
	}
	boolean minDifference(int[] price, int diff, int k) {
		int last = price[0], cntCandy = 1;
		for (int i = 1; i < price.length; i++) {
			if ((price[i] - last) >= diff) {
				cntCandy++;
				last = price[i];
			}
			if (cntCandy == k) {
				return true;
			}
		}
		return false;
	}
}