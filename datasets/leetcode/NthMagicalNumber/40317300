class Solution {
	long gcd(long a, long b) {
		while (b != 0) {
			long temp = b;
			b = a % b;
			a = temp;
		}
		return a;
	}
	int nthMagicalNumber(int n, int a, int b) {
		long MOD = 1_000_000_007;
		long low = Math.min(a,b);
		long high = (long) n * Math.min(a,b);
		long lcm = (long) a * b / gcd(a,b);
		while (low < high) {
			long mid = low + (high - low) / 2;
			long magicalNum = (mid / a) + (mid / b) - (mid / lcm);
			if (magicalNum < n) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return (int) (low % MOD);
	}
}