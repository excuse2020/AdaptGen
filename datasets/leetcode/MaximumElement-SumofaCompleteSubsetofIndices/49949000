class Solution {
	long maximumSum(List<Integer> nums) {
		Map<Integer, Long> oddPowerResidue = new HashMap<>();
		long maxEleSum = 0;
		for (int indx = 0; indx < nums.size(); indx++) {
			int indxVal = indx + 1;
			for (int num = 2; num * num <= indxVal; num++) {
				while (indxVal % (num * num) == 0) {
					indxVal /= num * num;
				}
			}
			oddPowerResidue.put(indxVal,oddPowerResidue.getOrDefault(indxVal,0L) + nums.get(indx));
			maxEleSum = Math.max(maxEleSum,oddPowerResidue.get(indxVal));
		}
		return maxEleSum;
	}
}