class Solution {
	int getPossibleDeletions(int freq) {
		while (freq >= 3) {
			freq = (freq / 3) + (freq % 3);
		}
		return freq;
	}
	int minimumLength(String s) {
		HashMap<Character, Integer> freqMap = new HashMap<>();
		for (char c: s.toCharArray()) {	
			freqMap.put(c,freqMap.getOrDefault(c,0) + 1);
		}
		int countStrings = 0;
		for (Character key: freqMap.keySet()) {	
			int freq = freqMap.get(key);
			if (freq < 3) {
				countStrings += freq;
				continue;
			}
			int nofOfDeletionsPossible = getPossibleDeletions(freq);
			countStrings += nofOfDeletionsPossible;
		}
		return countStrings;
	}
}