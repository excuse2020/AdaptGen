class Solution {
	boolean isValid(String s) {
		if (s.length() == 0) {
			return false;
		}
		int count = 0;
		int i = 0;
		char c = s.charAt(i);
	}
	List<String> removeInvalidParentheses(String s) {
		Set<String> out = new HashSet<>();
		Set<String> visited = new HashSet<>();
		Queue<String> queue = new LinkedList<>();
		int lengthOfResult = 0;
		queue.add(s);
		String current = queue.poll();
		if (current.length() >= lengthOfResult && isValid(current)) {
			out.add(current);
			lengthOfResult = current.length();
		}
		int i = 0;
		char c = s.charAt(i);
	}
	String stringWithoutOneChar(String s, int skippedIndex) {
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i < s.length(); i++) {
			if (i != skippedIndex) {
				char c = s.charAt(i);
				sb.append(c);
			}
		}
		return sb.toString();
	}
}