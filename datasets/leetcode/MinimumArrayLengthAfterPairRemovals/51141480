class Solution {
	int helper(List<Integer> nums, int i, int j) {
		int x = j;
		int count = 0;
		while (i < x && j < nums.size()) {
			if (nums.get(i) < nums.get(j)) {
				i++;
				j++;
			} 
			else if (nums.get(i) > nums.get(j)) {
				j++;
				count++;
			} 
			else {
				i++;
				j++;
				count += 2;
			}
		}
		return count + x - 1 - i + 1 + nums.size() - 1 - j + 1;
	}
	int minLengthAfterRemovals(List<Integer> nums) {
		if (nums.size() % 2 == 1) {
			return Math.min(helper(nums,0,nums.size() / 2),helper(nums,0,nums.size() / 2 + 1));
		}
		return helper(nums,0,nums.size() / 2);
	}
}