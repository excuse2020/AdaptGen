class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int recount1 = 1;
		boolean check = true;
		int height1 = 0;
		int r1 = red;
		int b1 = blue;
		while (red >= 0 && blue >= 0) {
			if (check) {
				if (red >= recount1) {
					red = red - recount1;
					height1++;
					recount1++;
					check = false;
				} 
				else {
					break;
				}
			} 
			else {
				if (blue >= recount1) {
					height1++;
					blue = blue - recount1;
					recount1++;
					check = true;
				} 
				else {
					break;
				}
			}
		}
		int recount2 = 1;
		int height2 = 0;
		boolean check1 = true;
		while (r1 >= 0 && b1 >= 0) {
			if (check1) {
				if (b1 >= recount2) {
					b1 = b1 - recount2;
					height2++;
					recount2++;
					check1 = false;
				} 
				else {
					break;
				}
			} 
			else {
				if (r1 >= recount2) {
					height2++;
					r1 = r1 - recount2;
					recount2++;
					check1 = true;
				} 
				else {
					break;
				}
			}
		}
		return Math.max(height2,height1);
	}
}