class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		HashSet<List<Integer>> set = new HashSet<>();
		helper(set,k,n,new HashSet<>());
		return new ArrayList<>(set);
	}
	void helper(HashSet<List<Integer>> set, int elem, int rem, HashSet<Integer> runningSet) {
		if (elem == 0) {
			if (rem == 0) {
				set.add(new ArrayList<>(runningSet));
				return;
			} 
			else {
				return;
			}
		}
		if (rem < 0) {
			return;
		}
		for (int i = 1; i <= 9; i++) {
			if (!runningSet.contains(i)) {
				runningSet.add(i);
				helper(set,elem - 1,rem - i,runningSet);
				runningSet.remove(i);
			}
		}
	}
}