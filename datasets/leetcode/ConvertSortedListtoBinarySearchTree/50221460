class Solution {
	TreeNode helper(List<Integer> values, int left, int right) {
		if (left > right) {
			return null;
		}
		int middle = (left + right) / 2;
		TreeNode root = new TreeNode(values.get(middle));
		root.left = helper(values,left,middle - 1);
		root.right = helper(values,middle + 1,right);
		return root;
	}
	List<Integer> obtainAllValuesFromListNode(ListNode head) {
		List<Integer> values = new LinkedList<>();
		ListNode tail = head;
		while (tail != null) {
			values.add(tail.val);
			tail = tail.next;
		}
		return values;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> values = obtainAllValuesFromListNode(head);
		return helper(values,0,values.size() - 1);
	}
}