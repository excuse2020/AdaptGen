class Solution {
	long fun(List<Integer> maxHeights, int maxIdx) {
		long ans = 0;
		int n = maxHeights.size();
		int val = maxHeights.get(maxIdx);
		for (int i = maxIdx - 1; i >= 0; i--) {
			if (maxHeights.get(i) < val) {
				ans += maxHeights.get(i);
				val = maxHeights.get(i);
			} 
			else {
				ans += val;
			}
		}
		val = maxHeights.get(maxIdx);
		for (int i = maxIdx; i < n; i++) {
			if (maxHeights.get(i) < val) {
				ans += maxHeights.get(i);
				val = maxHeights.get(i);
			} 
			else {
				ans += val;
			}
		}
		return ans;
	}
	long maximumSumOfHeights(List<Integer> maxHeights) {
		ArrayList<Integer> list = new ArrayList<>();
		int n = maxHeights.size();
		for (int i = 0; i < n; i++) {
			list.add(i);
		}
		long ans = 0;
		for (int i = 0; i < list.size(); i++) {
			ans = Math.max(ans,fun(maxHeights,list.get(i)));
		}
		return ans;
	}
}