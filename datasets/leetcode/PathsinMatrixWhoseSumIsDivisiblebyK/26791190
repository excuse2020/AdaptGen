class Solution {
	int numberOfPaths(int[][] grid, int k) {
		int m = grid.length, n = grid[0].length, mod = 1000000007;
		long[][][] dp = new long[m][n][k];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 && j == 0) {
					dp[i][j][grid[i][j] % k] = 1;
					continue;
				}
				for (int p = 0; p < k; p++) {
					if (i == 0) {
						dp[i][j][(p + grid[i][j]) % k] = dp[i][j - 1][p];
					} 
					else if (j == 0) {
						dp[i][j][(p + grid[i][j]) % k] = dp[i - 1][j][p];
					} 
					else {
						dp[i][j][(p + grid[i][j]) % k] = (dp[i - 1][j][p] + dp[i][j - 1][p]) % mod;
					}
				}
			}
		}
		return (int) dp[m - 1][n - 1][0];
	}
}