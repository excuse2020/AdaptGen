class Solution {
	String orderlyQueue(String s, int k) {
		if (k > 1) {
			PriorityQueue<Character> pq = new PriorityQueue<>();
			for (int i = 0; i < s.length(); i++) {
				pq.offer(s.charAt(i));
			}
			StringBuilder sb = new StringBuilder();
			while (!pq.isEmpty()) {
				sb.append(pq.poll());
			}
			return sb.toString();
		} 
		else {
			StringBuilder sb = new StringBuilder();
			PriorityQueue<String> pq = new PriorityQueue<>();
			pq.offer(s);
			String temp = s;
			for (int i = 0; i < s.length(); i++) {
				sb.append(temp,1,temp.length()).append(temp,0,1);
				temp = sb.toString();
				pq.offer(temp);
				sb.setLength(0);
			}
			return pq.poll();
		}
	}
}