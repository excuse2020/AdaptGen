class Solution {
	List<List<Integer>> res = new ArrayList<>();
	void helper(int[] nums, int i) {
		var seen = new HashSet<Integer>();
		for (int j = i + 1; j < nums.length; j++) {
			int comp = -nums[i] - nums[j];
			if (seen.contains(comp)) {
				res.add(Arrays.asList(nums[i],nums[j],comp));
				while (j + 1 < nums.length && nums[j] == nums[j + 1]) {
					j++;
				}
			}
			seen.add(nums[j]);
		}
	}
	List<List<Integer>> threeSum(int[] nums) {
		Arrays.sort(nums);
		for (int i = 0; i < nums.length && nums[i] <= 0; i++) {
			if (i == 0 || nums[i - 1] != nums[i]) {
				helper(nums,i);
			}
		}
		return res;
	}
}