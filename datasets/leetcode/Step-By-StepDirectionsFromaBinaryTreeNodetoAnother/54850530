class Solution {
	TreeNode LCA(TreeNode root, int p, int q) {
		if (root == null) {
			return null;
		}
		if (root.val == p || root.val == q) {
			return root;
		}
		TreeNode left = LCA(root.left,p,q);
		TreeNode right = LCA(root.right,p,q);
		if (left != null && right != null) {
			return root;
		}
		return left == null ? right : left;
	}
	boolean findPath(TreeNode root, int target, StringBuilder path) {
		if (root == null) {
			return false;
		}
		if (root.val == target) {
			return true;
		}
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		TreeNode lca = LCA(root,startValue,destValue);
		StringBuilder lcaToSource = new StringBuilder();
		StringBuilder lcaToDest = new StringBuilder();
		findPath(lca,startValue,lcaToSource);
		findPath(lca,destValue,lcaToDest);
		StringBuilder ans = new StringBuilder();
		int i = 0;
	}
}