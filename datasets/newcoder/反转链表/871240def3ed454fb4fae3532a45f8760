class Solution {
	ListNode ReverseList(ListNode head) {
		if (head == null) {
			return null;
		}
		int count = 0;
		Stack<ListNode> stack = new Stack<>();
		while (head != null) {
			ListNode tmpNode = new ListNode(head.val);
			stack.push(tmpNode);
			count++;
			if (head.next != null) {
				head = head.next;
			} 
			else {
				break;
			}
		}
		head = stack.pop();
		ListNode headResult = new ListNode(count);
		headResult = head;
		while (!stack.isEmpty()) {
			ListNode tmpHeadPop = stack.pop();
			head.next = tmpHeadPop;
			head = tmpHeadPop;
		}
		return headResult;
	}
}