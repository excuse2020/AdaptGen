class Solution {
	TreeNode createBinaryTree(int[][] nums) {
		HashMap<Integer, TreeNode> mp = new HashMap<>();
		int sum = 0;
		for (int i = 0; i < nums.length; i++) {
			TreeNode node = null;
			if (!mp.containsKey(nums[i][0])) {
				node = new TreeNode(nums[i][0]);
				mp.put(nums[i][0],node);
				sum += nums[i][0];
			} 
			else {
				node = mp.get(nums[i][0]);
			}
			TreeNode child = null;
			if (mp.containsKey(nums[i][1])) {
				child = mp.get(nums[i][1]);
			} 
			else {
				child = new TreeNode(nums[i][1]);
				sum += nums[i][1];
			}
			if (nums[i][2] == 1) {
				node.left = child;
			} 
			else {
				node.right = child;
			}
			mp.put(nums[i][1],child);
		}
		for (int i = 0; i < nums.length; i++) {
			sum -= nums[i][1];
		}
		return mp.get(sum);
	}
}