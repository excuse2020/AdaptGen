class Solution {
	boolean hasCycle(ListNode head) {
		if (head == null) {
			return false;
		}
		ListNode fast = new ListNode(-1), low = new ListNode(-1);
		fast.next = head;
		low.next = head;
		while (fast != null && low != null) {
			if (low.next != null) {
				low = low.next;
			}
			if (fast.next != null) {
				fast = fast.next.next;
			} 
			else {
				break;
			}
			if (fast == low) {
				return true;
			}
		}
		return false;
	}
}