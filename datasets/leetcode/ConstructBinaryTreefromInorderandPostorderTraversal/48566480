class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		int n = inorder.length;
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < n; i++) {
			map.put(inorder[i],i);
		}
		return func(postorder,map,n - 1,0,n - 1);
	}
	TreeNode func(int[] postorder, HashMap<Integer, Integer> map, int rootIndex, int left, int right) {
		if (rootIndex < 0 || left > right) {
			return null;
		}
		TreeNode root = new TreeNode(postorder[rootIndex]);
		int mid = map.get(postorder[rootIndex]);
		root.left = func(postorder,map,rootIndex - (right - mid),left,mid - 1);
		root.right = func(postorder,map,rootIndex - 1,mid + 1,right);
		return root;
	}
}