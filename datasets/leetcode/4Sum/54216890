class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		List<List<Integer>> Nlist = new ArrayList<>();
		Arrays.sort(nums);
		int ptr1 = 0, ptr2 = nums.length;
		for (int i = 0; i < nums.length; i++) {
			if (i > 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			for (int j = i + 1; j < nums.length; j++) {
				if (j > i + 1 && nums[j] == nums[j - 1]) {
					continue;
				}
				ptr1 = j + 1;
				ptr2 = nums.length - 1;
				while (ptr1 < ptr2) {
					long sum = nums[i] + nums[j];
					sum += nums[ptr1] + nums[ptr2];
					if (sum == target) {
						ArrayList<Integer> list = new ArrayList<>();
						list.add(nums[i]);
						list.add(nums[j]);
						list.add(nums[ptr1]);
						list.add(nums[ptr2]);
						Nlist.add(list);
						ptr1++;
						ptr2--;
						while (ptr1 < ptr2 && nums[ptr1] == nums[ptr1 - 1]) {
							ptr1++;
						}
						while (ptr1 < ptr2 && nums[ptr2] == nums[ptr2 + 1]) {
							ptr2--;
						}
					} 
					else if (sum < target) {
						ptr1++;
					} 
					else {
						ptr2--;
					}
				}
			}
		}
		return Nlist;
	}
}