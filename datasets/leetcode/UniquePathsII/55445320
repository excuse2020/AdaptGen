class Solution {
	int uniquePathsWithObstacles(int[][] obstacleGrid) {
		int m = obstacleGrid.length;
		int n = obstacleGrid[0].length;
		if (obstacleGrid[0][0] == 1) {
			return 0;
		}
		int dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 && j == 0) {
					dp[i][j] = 1;
				} 
				else if (obstacleGrid[i][j] == 1) {
					dp[i][j] = 0;
				} 
				else {
					int down = 0, right = 0;
					if (i > 0) {
						down = dp[i - 1][j];
					}
					if (j > 0) {
						right = dp[i][j - 1];
					}
					dp[i][j] = down + right;
				}
			}
		}
		return dp[m - 1][n - 1];
	}
}