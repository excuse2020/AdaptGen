class Solution {
	int getMax(int[] a, int[] b) {
		int[][] d = new int[a.length][3];
		d[0][0] = a[0];
		d[0][1] = b[0];
		d[0][2] = b[0];
		int i = 0;
		for (i = 1; i < a.length; i++) {
			d[i][0] = a[i] + d[i - 1][0];
			d[i][1] = b[i] + Math.max(d[i - 1][0],d[i - 1][1]);
			d[i][2] = Math.max(d[i - 1][1],d[i - 1][2]) + a[i];
		}
		return Math.max(d[i - 1][2],Math.max(d[i - 1][0],d[i - 1][1]));
	}
	int maximumsSplicedArray(int[] nums1, int[] nums2) {
		return Math.max(getMax(nums1,nums2),getMax(nums2,nums1));
	}
}