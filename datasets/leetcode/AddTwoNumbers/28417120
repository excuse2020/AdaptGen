class Solution {
	ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		ListNode temp1;
		ListNode temp2;
		ListNode temp3;
		ListNode head = null;
		temp1 = l1;
		temp2 = l2;
		int carry = 0;
		while (temp1 != null && temp2 != null) {
			ListNode node;
			int sum = temp1.val + temp2.val;
			if ((sum + carry) / 10 == 0) {
				node = new ListNode(sum + carry, head);
				carry = 0;
			} 
			else {
				node = new ListNode((sum + carry) % 10, head);
				carry = 1;
			}
			head = node;
			temp1 = temp1.next;
			temp2 = temp2.next;
		}
		while (temp1 != null) {
			ListNode node = head;
			if ((temp1.val + carry) / 10 == 0) {
				node = new ListNode(temp1.val + carry, head);
				carry = 0;
			} 
			else {
				node = new ListNode((temp1.val + carry) % 10, head);
				carry = 1;
			}
			head = node;
			temp1 = temp1.next;
		}
		while (temp2 != null) {
			ListNode node = head;
			if ((temp2.val + carry) / 10 == 0) {
				node = new ListNode(temp2.val + carry, head);
				carry = 0;
			} 
			else {
				node = new ListNode((temp2.val + carry) % 10, head);
				carry = 1;
			}
			head = node;
			temp2 = temp2.next;
		}
		if (carry == 1) {
			ListNode node = new ListNode(carry, head);
			head = node;
		}
		temp1 = null;
		temp2 = head;
		temp3 = null;
		while (temp2 != null) {
			temp3 = temp2.next;
			temp2.next = temp1;
			temp1 = temp2;
			temp2 = temp3;
		}
		head = temp1;
		return head;
	}
}