class Solution {
	List<List<Integer>> getSkyline(int[][] buildings) {
		Map<Integer, Integer> map = new TreeMap<>();
		Map<Integer, Integer> newMap = new TreeMap<>();
		int max = 0;
		for (int i = 0; i < buildings.length; i++) {
			map.put(buildings[i][0],buildings[i][2]);
			map.put(buildings[i][1],0);
		}
		for (Map.Entry<Integer, Integer> me: map.entrySet()) {	
			max = me.getValue();
			for (int i = 0; i < buildings.length; i++) {
				if (buildings[i][0] > me.getKey()) {
					break;
				}
				if (buildings[i][1] > me.getKey()) {
					if (max < buildings[i][2]) {
						max = buildings[i][2];
					}
				}
			}
			newMap.put(me.getKey(),max);
		}
		List<Integer> list = new ArrayList<>();
		List<List<Integer>> result = new ArrayList<>();
		int prev = 0;
		for (Map.Entry<Integer, Integer> me: newMap.entrySet()) {	
			list = new ArrayList<Integer>();
			if (me.getValue() != prev) {
				prev = me.getValue();
				list.add(me.getKey());
				list.add(me.getValue());
			} 
			else {
				continue;
			}
			result.add(list);
		}
		return result;
	}
}