class Solution {
	int semiOrderedPermutation(int[] nums) {
		int n = nums.length;
		int ans = 0;
		int max = Integer.MIN_VALUE;
		int min = Integer.MAX_VALUE;
		int maxPos = -1;
		int minPos = -1;
		for (int i = 0; i < n; i++) {
			if (nums[i] < min) {
				min = nums[i];
				minPos = i;
			}
		}
		for (int i = minPos; i > 0; i--) {
			ans++;
			int temp = nums[i];
			nums[i] = nums[i - 1];
			nums[i - 1] = temp;
		}
		for (int i = 0; i < n; i++) {
			if (nums[i] >= max) {
				max = nums[i];
				maxPos = i;
			}
		}
		for (int i = maxPos; i < n - 1; i++) {
			ans++;
			int temp = nums[i];
			nums[i] = nums[i + 1];
			nums[i + 1] = temp;
		}
		return ans;
	}
}