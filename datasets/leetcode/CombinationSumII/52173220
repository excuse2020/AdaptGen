class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> list = new ArrayList<>();
		solve(candidates,target,0,0,list,ans);
		return ans;
	}
	void solve(int[] arr, int k, int i, int sum, List<Integer> list, List<List<Integer>> ans) {
		if (sum == k) {
			ans.add(new ArrayList<>(list));
			return;
		}
		if (sum > k) {
			return;
		}
		int prev = -1;
		for (int j = i; j < arr.length; j++) {
			if (prev == arr[j]) {
				continue;
			}
			list.add(arr[j]);
			solve(arr,k,j + 1,sum + arr[j],list,ans);
			list.remove(list.size() - 1);
			prev = arr[j];
		}
	}
}