class Solution {
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		TreeSet<Integer> set = new TreeSet<>();
		for (int i = 0; i < nums.length - 1; i++) {
			boolean isEven1 = nums[i] % 2 == 0;
			boolean isEven2 = nums[i + 1] % 2 == 0;
			if ((isEven1 && isEven2) || (!isEven1 && !isEven2)) {
				set.add(i);
			}
		}
		int len = queries.length;
		boolean[] ans = new boolean[len];
		for (int i = 0; i < len; i++) {
			int s = queries[i][0];
			int e = queries[i][1];
			if (s - e == 0) {
				ans[i] = true;
				continue;
			}
			Integer ceil = set.ceiling(s);
			if (ceil != null && ceil >= s && ceil < e) {
				ans[i] = false;
			} 
			else {
				ans[i] = true;
			}
		}
		return ans;
	}
}