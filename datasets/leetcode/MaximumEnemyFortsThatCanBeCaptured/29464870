class Solution {
	int captureForts(int[] forts) {
		return Math.max(captureFromLeft(forts),captureFromRight(forts));
	}
	int captureFromLeft(int[] f) {
		int ans = 0;
		int n = f.length;
		for (int i = 0; i < n; i++) {
			if (f[i] == 1) {
				for (int j = i + 1; j < n; j++) {
					if (f[j] == 1) {
						break;
					}
					if (f[j] == -1) {
						ans = Math.max(j - i,ans);
						break;
					}
				}
			}
		}
		return ans;
	}
	int captureFromRight(int[] f) {
		int ans = 0;
		int n = f.length;
		for (int i = n - 1; i >= 0; i--) {
			if (f[i] == 1) {
				for (int j = i - 1; j >= 0; j--) {
					if (f[j] == 1) {
						break;
					}
					if (f[j] == -1) {
						ans = Math.max(i - j,ans);
						break;
					}
				}
			}
		}
		return ans;
	}
}