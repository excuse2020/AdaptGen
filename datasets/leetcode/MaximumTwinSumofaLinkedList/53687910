class Solution {
	int pairSum(ListNode head) {
		ListNode jump1 = head;
		ListNode jump2 = head.next;
		while (true) {
			jump1 = jump1.next;
			if (jump2.next == null) {
				break;
			}
			jump2 = jump2.next.next;
		}
		ListNode nextHalf = jump1;
		nextHalf = reverse(nextHalf);
		int sum = 0;
		while (nextHalf != null) {
			sum = Math.max(sum,nextHalf.val + head.val);
			nextHalf = nextHalf.next;
			head = head.next;
		}
		return sum;
	}
	ListNode reverse(ListNode head) {
		ListNode prev = null;
		while (head != null) {
			ListNode nxt = head.next;
			head.next = prev;
			prev = head;
			head = nxt;
		}
		return prev;
	}
}