class Solution {
	int longestSubarray(int[] nums, int limit) {
		int maxDiff = 0;
		int start = 0;
		PriorityQueue<Integer> max = new PriorityQueue<>((a, b) -> {b - a});
		PriorityQueue<Integer> min = new PriorityQueue<>((a, b) -> {a - b});
		for (int end = 0; end < nums.length; end++) {
			max.add(nums[end]);
			min.add(nums[end]);
			while (max.peek() - min.peek() > limit) {
				max.remove(nums[start]);
				min.remove(nums[start]);
				start++;
			}
			maxDiff = Math.max(maxDiff,end - start + 1);
		}
		return maxDiff;
	}
}