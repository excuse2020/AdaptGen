class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] mat = new int[m][n];
		int count = 0;
		int lb = 0, rb = n - 1, tb = 0, bb = m - 1;
		while (count < n * m) {
			for (int i = lb; i <= rb; i++) {
				if (head != null) {
					mat[tb][i] = head.val;
					head = head.next;
				} 
				else {
					mat[tb][i] = -1;
				}
				count++;
			}
			for (int i = tb + 1; i <= bb; i++) {
				if (head != null) {
					mat[i][rb] = head.val;
					head = head.next;
				} 
				else {
					mat[i][rb] = -1;
				}
				count++;
			}
			if (tb != bb) {
				for (int i = rb - 1; i >= lb; i--) {
					if (head != null) {
						mat[bb][i] = head.val;
						head = head.next;
					} 
					else {
						mat[bb][i] = -1;
					}
					count++;
				}
			}
			if (rb != lb) {
				for (int i = bb - 1; i > tb; i--) {
					if (head != null) {
						mat[i][lb] = head.val;
						head = head.next;
					} 
					else {
						mat[i][lb] = -1;
					}
					count++;
				}
			}
			lb++;
			rb--;
			tb++;
			bb--;
		}
		return mat;
	}
}