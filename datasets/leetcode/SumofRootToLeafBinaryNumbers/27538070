class Solution {
	void dfs(TreeNode node, List<String> list, StringBuilder sb) {
		if (node == null) {
			return;
		}
		sb.append(node.val);
		if (node.left == null && node.right == null) {
			list.add(sb.toString());
			sb.deleteCharAt(sb.length() - 1);
			return;
		}
		this.dfs(node.left,list,sb);
		this.dfs(node.right,list,sb);
		sb.deleteCharAt(sb.length() - 1);
	}
	int sumRootToLeaf(TreeNode root) {
		List<String> list = new ArrayList<>();
		this.dfs(root,list,new StringBuilder());
		int result = 0;
		for (String s: list) {	
			result += this.toInt(s);
		}
		return result;
	}
	int toInt(String s) {
		int pow = 1;
		int result = 0;
		int i = s.length() - 1;
	}
}