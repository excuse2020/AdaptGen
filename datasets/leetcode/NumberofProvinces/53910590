class Solution {
	void dfs(int node, boolean[] visited, int[][] connected) {
		visited[node] = true;
		for (int i = 0; i < connected.length; i++) {
			if (!visited[i] && connected[i][node] == 1) {
				dfs(i,visited,connected);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		boolean[] visited = new boolean[n];
		int result = 0;
		for (int i = 0; i < n; i++) {
			if (!visited[i]) {
				dfs(i,visited,isConnected);
				result++;
			}
		}
		return result;
	}
}