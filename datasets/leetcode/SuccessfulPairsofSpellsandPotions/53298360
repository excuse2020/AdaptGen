class Solution {
	boolean canFormSuccessfulPair(int spell, int potion, long success) {
		return (long) spell * potion >= success;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int n = spells.length;
		int m = potions.length;
		int[] result = new int[n];
		Arrays.sort(potions);
		for (int i = 0; i < n; ++i) {
			int left = 0;
			int right = m - 1;
			while (left <= right) {
				int mid = left + (right - left) / 2;
				if (canFormSuccessfulPair(spells[i],potions[mid],success)) {
					right = mid - 1;
				} 
				else {
					left = mid + 1;
				}
			}
			result[i] = m - left;
		}
		return result;
	}
}