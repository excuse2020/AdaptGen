class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		int count = 1;
		ListNode oddNode = new ListNode(0);
		ListNode oddFollow = oddNode;
		ListNode evenNode = new ListNode(0);
		ListNode evenFollow = evenNode;
		while (head != null) {
			if ((count % 2) == 1) {
				oddFollow.next = head;
				oddFollow = oddFollow.next;
			} 
			else {
				evenFollow.next = head;
				evenFollow = evenFollow.next;
			}
			head = head.next;
			count++;
		}
		evenFollow.next = null;
		oddFollow.next = evenNode.next;
		return oddNode.next;
	}
}