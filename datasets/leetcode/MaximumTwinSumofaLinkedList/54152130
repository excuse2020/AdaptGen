class Solution {
	int pairSum(ListNode head) {
		if (head == null || head.next == null) {
			return 0;
		}
		ListNode slow = head;
		ListNode fast = head;
		while (fast != null && fast.next != null) {
			slow = slow.next;
			fast = fast.next.next;
		}
		ListNode secondHalf = reverseList(slow);
		ListNode firstHalf = head;
		int maxSum = 0;
		while (secondHalf != null) {
			maxSum = Math.max(maxSum,firstHalf.val + secondHalf.val);
			firstHalf = firstHalf.next;
			secondHalf = secondHalf.next;
		}
		return maxSum;
	}
	ListNode reverseList(ListNode head) {
		ListNode prev = null;
		while (head != null) {
			ListNode next = head.next;
			head.next = prev;
			prev = head;
			head = next;
		}
		return prev;
	}
}