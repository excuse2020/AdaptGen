class Solution {
	boolean isPossible(int mid, int maxOp, int[] nums) {
		int op = 0;
		for (int val: nums) {	
			op += (val - 1) / mid;
			if (op > maxOp) {
				return false;
			}
		}
		return true;
	}
	int minimumSize(int[] nums, int maxOperations) {
		int high = 0;
		for (int i: nums) {	
			high = Math.max(high,i);
		}
		int low = 1;
		int ans = 0;
		while (low <= high) {
			int mid = high + (low - high) / 2;
			if (isPossible(mid,maxOperations,nums)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}