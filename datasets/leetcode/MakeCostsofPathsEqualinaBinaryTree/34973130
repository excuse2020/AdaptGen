class Solution {
	int find(int i, int[] cost, int[] incre, int n) {
		if (i >= n) {
			return 0;
		}
		int leftCost = find((2 * i) + 1,cost,incre,n);
		int rightCost = find((2 * i) + 2,cost,incre,n);
		incre[0] += Math.abs(leftCost - rightCost);
		return cost[i] + Math.max(leftCost,rightCost);
	}
	int minIncrements(int n, int[] cost) {
		int[] incre = new int[1];
		find(0,cost,incre,n);
		return incre[0];
	}
}