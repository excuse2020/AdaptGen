class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> result = new ArrayList<List<Integer>>();
		if (root == null) {
			return result;
		}
		pathSumHelper(root,targetSum,new ArrayList<Integer>(),result);
		return result;
	}
	void pathSumHelper(TreeNode root, int targetSum, List<Integer> curr, List<List<Integer>> result) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			if (root.val == targetSum) {
				curr.add(root.val);
				result.add(new ArrayList<>(curr));
				curr.remove(curr.size() - 1);
			}
			return;
		}
		curr.add(root.val);
		pathSumHelper(root.left,targetSum - root.val,curr,result);
		pathSumHelper(root.right,targetSum - root.val,curr,result);
		curr.remove(curr.size() - 1);
	}
}