class Solution {
	void dfs(int[][] isConnected, boolean[] visited, int node) {
		if (visited[node]) {
			return;
		}
		visited[node] = true;
		for (int i = 0; i < isConnected[node].length; i++) {
			if (isConnected[node][i] == 1) {
				dfs(isConnected,visited,i);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int n = isConnected.length;
		boolean[] visited = new boolean[n];
		int res = 0;
		for (int i = 0; i < n; i++) {
			if (!visited[i]) {
				res++;
				dfs(isConnected,visited,i);
			}
		}
		return res;
	}
}