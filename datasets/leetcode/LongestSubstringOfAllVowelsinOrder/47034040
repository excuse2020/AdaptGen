class Solution {
	int longestBeautifulSubstring(String word) {
		char[] chars = word.toCharArray();
		int currLength = 1;
		int vowelsCount = 1;
		int maxLength = 0;
		for (int i = 1; i < chars.length; i++) {
			if (chars[i] == chars[i - 1]) {
				currLength++;
			} 
			else if (chars[i] > chars[i - 1]) {
				currLength++;
				vowelsCount++;
			} 
			else {
				vowelsCount = 1;
				currLength = 1;
			}
			if (vowelsCount == 5) {
				maxLength = Math.max(currLength,maxLength);
			}
		}
		return maxLength;
	}
}