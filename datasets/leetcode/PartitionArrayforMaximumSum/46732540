class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int[] helper = new int[arr.length + 1];
		for (int i = 0; i < arr.length; i++) {
			int start = (i - k + 1 < 0) ? 0 : i - k + 1;
			int max = 0, currMax = 0;
			for (int j = i; j >= start; j--) {
				currMax = Math.max(currMax,arr[j]);
				max = Math.max(max,helper[j] + ((i - j + 1) * currMax));
			}
			helper[i + 1] = max;
		}
		return helper[helper.length - 1];
	}
}