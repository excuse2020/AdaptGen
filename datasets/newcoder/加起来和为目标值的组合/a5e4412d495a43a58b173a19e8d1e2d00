class Solution {
	ArrayList<ArrayList<Integer>> combinationCount(int target, int[] nums) {
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		if (target == 0) {
			return new ArrayList<>(ans);
		}
		process(nums,target,0,ans,new LinkedList<>());
		return new ArrayList<>(ans);
	}
	void process(int[] candidates, int target, int start, ArrayList<ArrayList<Integer>> ans, LinkedList<Integer> list) {
		if (target == 0) {
			ans.add(new ArrayList<>(list));
			return;
		}
		for (int i = start; i < candidates.length; i++) {
			if (target >= candidates[i]) {
				target -= candidates[i];
				list.add(candidates[i]);
				process(candidates,target,i,ans,list);
				target += candidates[i];
				list.removeLast();
			}
		}
	}
}