class Solution {
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		ListNode newNode = new ListNode(-1);
		for (int i = 0; i < lists.size(); i++) {
			newNode.next = mergerList(lists.get(i),newNode.next);
		}
		return newNode.next;
	}
	ListNode mergerList(ListNode node1, ListNode node2) {
		if (node1 == null) {
			return node2;
		}
		if (node2 == null) {
			return node1;
		}
		ListNode node = new ListNode(-1);
		ListNode tail = node;
		while (node1 != null && node2 != null) {
			if (node1.val > node2.val) {
				tail.next = node2;
				node2 = node2.next;
			} 
			else {
				tail.next = node1;
				node1 = node1.next;
			}
			tail = tail.next;
		}
		if (node1 == null) {
			tail.next = node2;
		}
		if (node2 == null) {
			tail.next = node1;
		}
		return node.next;
	}
}