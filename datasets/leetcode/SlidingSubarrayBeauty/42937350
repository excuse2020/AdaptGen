class Solution {
	int[] getSubarrayBeauty(int[] nums, int k, int x) {
		int n = nums.length;
		int ans = new int[n - k + 1];
		int j = 0;
		int gen = new int[101];
		int st = 0;
		int en = k - 1;
		for (int i = st; i <= en; i++) {
			if (nums[i] < 0) {
				gen[nums[i] + 50]++;
			}
		}
		int r = 0;
		boolean flag = false;
		for (int i = 0; i < 50; i++) {
			r += gen[i];
			if (r >= x) {
				ans[j++] = i - 50;
				flag = true;
				break;
			}
		}
		if (!flag) {
			ans[j++] = 0;
		}
		while (en + 1 < n) {
			if (nums[st] < 0) {
				gen[nums[st] + 50]--;
			}
			st++;
			en++;
			if (nums[en] < 0) {
				gen[nums[en] + 50]++;
			}
			flag = false;
			r = 0;
			for (int i = 0; i < 50; i++) {
				r += gen[i];
				if (r >= x) {
					ans[j++] = i - 50;
					flag = true;
					break;
				}
			}
			if (!flag) {
				ans[j++] = 0;
			}
		}
		return ans;
	}
}