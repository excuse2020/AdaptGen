class Solution {
	int bS(int[] a, int k) {
		Arrays.sort(a);
		int l = 0;
		int ans = 0;
		int h = a[a.length - 1];
		while (l <= h) {
			int mid = l + (h - l) / 2;
			if (iIP(a,mid,k)) {
				ans = mid;
				l = mid + 1;
			} 
			else {
				h = mid - 1;
			}
		}
		return ans;
	}
	boolean iIP(int[] a, int mid, int k) {
		int s = a[0], c = 1;
		for (int i = 1; i < a.length; i++) {
			if (a[i] - s >= mid) {
				c++;
				s = a[i];
			}
			if (c >= k) {
				return true;
			}
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		return bS(price,k);
	}
}