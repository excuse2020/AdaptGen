class Solution {
	int helper(int l, int r, String s, int[][] dp) {
		if (l == r) {
			return 1;
		}
		if (l > r) {
			return 0;
		}
		if (dp[l][r] != -1) {
			return dp[l][r];
		}
		int i = l + 1;
		while (i <= r && s.charAt(i) == s.charAt(l)) {
			i++;
		}
		if (i == r + 1) {
			return 1;
		}
		int ans = 1 + helper(i,r,s,dp);
		int ansss = Integer.MAX_VALUE;
		int count = 0;
		for (int j = i; j <= r; j++) {
			if (s.charAt(j) == s.charAt(l)) {
				count = helper(i,j - 1,s,dp) + helper(j,r,s,dp);
				ansss = Math.min(count,ansss);
			}
		}
		return dp[l][r] = Math.min(ansss,ans);
	}
	int strangePrinter(String s) {
		int dp = new int[s.length() + 1][s.length() + 1];
		for (int d: dp) {	
			Arrays.fill(d,-1);
		}
		return helper(0,s.length() - 1,s,dp);
	}
}