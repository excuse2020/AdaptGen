class Solution {
	int GetNumberOfK(int[] array, int k) {
		if (array == null || array.length <= 0) {
			return 0;
		}
		int firstK = getFirstK(array,0,array.length - 1,k);
		int lastK = getLastK(array,0,array.length - 1,k);
		if (firstK > -1 && lastK > -1) {
			return lastK - firstK + 1;
		}
		return 0;
	}
	int getFirstK(int[] arr, int start, int end, int k) {
		if (start > end) {
			return -1;
		}
		int mid = (start + end) / 2;
		if (arr[mid] == k) {
			if (mid == 0 || arr[mid - 1] != k) {
				return mid;
			} 
			else {
				end = mid - 1;
			}
		} 
		else if (arr[mid] < k) {
			start = mid + 1;
		} 
		else {
			end = mid - 1;
		}
		return getFirstK(arr,start,end,k);
	}
	int getLastK(int[] arr, int start, int end, int k) {
		if (start > end) {
			return -1;
		}
		int mid = (start + end) / 2;
		if (arr[mid] == k) {
			if (mid == arr.length - 1 || arr[mid + 1] != k) {
				return mid;
			} 
			else {
				start = mid + 1;
			}
		} 
		else if (arr[mid] < k) {
			start = mid + 1;
		} 
		else {
			end = mid - 1;
		}
		return getLastK(arr,start,end,k);
	}
}