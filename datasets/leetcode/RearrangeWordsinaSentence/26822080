class Solution {
	String arrangeWords(String text) {
		String[] texts = text.split(" ");
		HashMap<Integer, List<String>> map = new HashMap<>();
		TreeSet<Integer> set = new TreeSet<>();
		int n = texts.length;
		for (int i = 0; i < n; i++) {
			int m = texts[i].length();
			map.putIfAbsent(m,new ArrayList<>());
			map.get(m).add(texts[i]);
			set.add(m);
		}
		StringBuilder ans = new StringBuilder("");
		boolean b = false;
		for (Object i: set.toArray()) {	
			int j = (int) i;
			for (String a: map.get(j)) {	
				a = a.toLowerCase();
				if (!b) {
					ans.append((char) (a.charAt(0) - 32) + a.substring(1));
					b = true;
				} 
				else {
					ans.append(a);
				}
				ans.append(" ");
			}
		}
		return String.valueOf(ans).trim();
	}
}