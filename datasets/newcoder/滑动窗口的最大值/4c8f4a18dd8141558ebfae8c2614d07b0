class Solution {
	ArrayList<Integer> maxInWindows(int[] num, int size) {
		ArrayList<Integer> list = new ArrayList<>();
		if (size > num.length || size <= 0) {
			return list;
		}
		PriorityQueue<Integer> max_heap = new PriorityQueue<Integer>(new Comparator<Integer>());
		for (int i = 0, j = size; j <= num.length; i++, j++) {
			for (int m = i; m < j; m++) {
				max_heap.offer(num[m]);
			}
			list.add(max_heap.peek());
			max_heap.clear();
		}
		return list;
	}
}