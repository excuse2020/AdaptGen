class Solution {
	int[] dp;
	int help(int[] s, int i) {
		if (i >= s.length) {
			return 0;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		int ans = Integer.MIN_VALUE;
		ans = Math.max(ans,s[i] - help(s,i + 1));
		if (i + 1 < s.length) {
			ans = Math.max(ans,s[i] + s[i + 1] - help(s,i + 2));
		}
		if (i + 2 < s.length) {
			ans = Math.max(ans,s[i] + s[i + 1] - help(s,i + 3));
		}
		dp[i] = ans;
		return dp[i];
	}
	String stoneGameIII(int[] stoneValue) {
		dp = new int[stoneValue.length];
		Arrays.fill(dp,-1);
		int alice = help(stoneValue,0);
		return alice > 0 ? "Alice" : (alice == 0) ? "Tie" : "Bob";
	}
}