class Solution {
	List<List<Integer>> permute(int[] nums) {
		List<Integer> l1 = new ArrayList<>();
		List<List<Integer>> l = new ArrayList<>();
		boolean[] freq = new boolean[nums.length];
		solve(nums,l1,l,freq);
		return l;
	}
	void solve(int[] nums, List<Integer> l1, List<List<Integer>> l, boolean[] freq) {
		if (l1.size() == nums.length) {
			l.add(new ArrayList<>(l1));
			return;
		}
		for (int i = 0; i < nums.length; i++) {
			if (!freq[i]) {
				freq[i] = true;
				l1.add(nums[i]);
				solve(nums,l1,l,freq);
				l1.remove(l1.size() - 1);
				freq[i] = false;
			}
		}
	}
}