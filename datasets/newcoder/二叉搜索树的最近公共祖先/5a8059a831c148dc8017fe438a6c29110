class Solution {
	ArrayList<Integer> getPath(TreeNode root, int target) {
		ArrayList<Integer> path = new ArrayList<>();
		TreeNode node = root;
		while (node.val != target) {
			path.add(node.val);
			if (target < node.val) {
				node = node.left;
			} 
			else {
				node = node.right;
			}
		}
		path.add(node.val);
		return path;
	}
	int lowestCommonAncestor(TreeNode root, int p, int q) {
		ArrayList<Integer> pathP = getPath(root,p);
		ArrayList<Integer> pathQ = getPath(root,q);
		int res = 0;
		for (int i = 0; i < pathP.size() && i < pathQ.size(); ++i) {
			int x = pathP.get(i);
			int y = pathQ.get(i);
			if (x == y) {
				res = pathP.get(i);
			} 
			else {
				break;
			}
		}
		return res;
	}
}