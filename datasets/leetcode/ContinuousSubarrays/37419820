class Solution {
	long continuousSubarrays(int[] nums) {
		TreeMap<Integer, Integer> tree = new TreeMap<>();
		int st = 0;
		long ans = 0;
		for (int i = 0; i < nums.length; i++) {
			tree.put(nums[i],tree.getOrDefault(nums[i],0) + 1);
			while (Math.abs(tree.lastKey() - tree.firstKey()) > 2) {
				tree.put(nums[st],tree.get(nums[st]) - 1);
				if (tree.get(nums[st]) == 0) {
					tree.remove(nums[st]);
				}
				st++;
			}
			ans += (i - st + 1);
		}
		return ans;
	}
}