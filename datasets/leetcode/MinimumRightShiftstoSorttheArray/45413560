class Solution {
	boolean isDistorted(List<Integer> arr) {
		int check = 0;
		for (int i = 0; i < arr.size() - 1; i++) {
			if (arr.get(i) > arr.get(i + 1)) {
				check++;
			}
		}
		if (check > 1) {
			return true;
		}
		return false;
	}
	boolean isSorted(List<Integer> arr) {
		for (int i = 0; i < arr.size() - 1; i++) {
			if (arr.get(i) > arr.get(i + 1)) {
				return false;
			}
		}
		return true;
	}
	int minimumRightShifts(List<Integer> nums) {
		if (isSorted(nums) == true) {
			return 0;
		}
		if (nums.get(nums.size() - 1) > nums.get(0)) {
			return -1;
		}
		if (isDistorted(nums) == true) {
			return -1;
		}
		int maxi = Integer.MIN_VALUE;
		for (int i = 0; i < nums.size(); i++) {
			maxi = Math.max(maxi,nums.get(i));
		}
		for (int i = 0; i < nums.size(); i++) {
			if (nums.get(i) == maxi) {
				return nums.size() - i;
			}
		}
		return -1;
	}
}