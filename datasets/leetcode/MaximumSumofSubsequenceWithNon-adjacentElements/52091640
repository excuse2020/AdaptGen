class Solution {
	int maximumSumSubsequence(int[] nums, int[][] queries) {
		int[] dp = new int[nums.length];
		int ans = 0;
		for (int i = 0; i < queries.length; ++i) {
			int[] query = queries[i];
			nums[query[0]] = query[1];
			int start = 1;
			if (i != 0) {
				start = query[0];
			}
			dp[0] = Math.max(0,nums[0]);
			for (int j = start; j < nums.length; j++) {
				if (j == 0) {
					continue;
				}
				dp[j] = Math.max(nums[j],dp[j - 1]);
				if (j > 1) {
					dp[j] = Math.max(dp[j],nums[j] + dp[j - 2]);
				}
			}
			ans = (ans + dp[nums.length - 1]) % 1000000007;
		}
		return ans;
	}
}