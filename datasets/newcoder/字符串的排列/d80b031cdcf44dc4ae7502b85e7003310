class Solution {
	Set res = new TreeSet();
	ArrayList Permutation(String str) {
		char[] c = str.toCharArray();
		StringBuilder sb = new StringBuilder();
		boolean[] used = new boolean[str.length()];
		helper(c,sb,used);
		return new ArrayList(res);
	}
	void helper(char[] c, StringBuilder track, boolean[] used) {
		if (track.length() == c.length) {
			res.add(track.toString());
			return;
		}
		for (int i = 0; i < c.length; i++) {
			if (used[i]) {
				continue;
			}
			track.append(c[i]);
			used[i] = true;
			helper(c,track,used);
			used[i] = false;
			track.deleteCharAt(track.length() - 1);
		}
	}
}