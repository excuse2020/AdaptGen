class Solution {
	int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
		int n = capacity.length;
		PriorityQueue<Integer> differences = new PriorityQueue<>();
		for (int i = 0; i < n; i++) {
			int d = capacity[i] - rocks[i];
			differences.add(d);
		}
		int output = 0;
		while (!differences.isEmpty() && additionalRocks >= 0) {
			int currD = differences.poll();
			if (additionalRocks - currD >= 0) {
				additionalRocks -= currD;
				output++;
			} 
			else {
				break;
			}
		}
		return output;
	}
}