class Solution {
	int[] ans;
	int empty = 0;
	LinkedList<Integer> list = new LinkedList<>();
	Map<Integer, Integer> map = new HashMap<>();
	int[] avoidFlood(int[] rains) {
		ans = new int[rains.length];
		for (int i = 0; i < rains.length; i++) {
			if (rains[i] > 0) {
				ans[i] = -1;
				if (map.getOrDefault(rains[i],-1) > -1) {
					Iterator<Integer> it = list.iterator();
					boolean found = false;
					while (it.hasNext()) {
						int ind = it.next();
						if (ind > map.get(rains[i])) {
							ans[ind] = rains[i];
							map.put(rains[i],i);
							it.remove();
							found = true;
							break;
						}
					}
					if (!found) {
						return new int[0];
					}
				} 
				else {
					map.put(rains[i],i);
				}
			} 
			else if (rains[i] == 0) {
				ans[i] = 1;
				list.add(i);
			}
		}
		return ans;
	}
}