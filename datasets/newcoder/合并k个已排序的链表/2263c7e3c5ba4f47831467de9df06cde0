class Solution {
	void countList(ListNode listNode, ArrayList<Integer> data) {
		while (listNode != null) {
			data.add(listNode.val);
			listNode = listNode.next;
		}
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists.isEmpty()) {
			return null;
		}
		ArrayList<Integer> data = new ArrayList<>();
		for (ListNode listNode: lists) {	
			countList(listNode,data);
		}
		if (data.size() < 1) {
			return null;
		}
		Integer[] datas = data.toArray(new Integer[data.size()]);
		Arrays.sort(datas);
		ListNode result = new ListNode(datas[0]);
		ListNode preNode = null;
		for (int i = 1; i < datas.length; i++) {
			ListNode temp = new ListNode(datas[i]);
			if (i == 1) {
				result.next = temp;
				preNode = temp;
			} 
			else {
				preNode.next = temp;
				preNode = temp;
			}
		}
		return result;
	}
}