class Solution {
	int minPathSum(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		int[][] mem = new int[m][n];
		if (m == 1 && n == 1) {
			return grid[0][0];
		}
		return recur(grid,0,0,mem);
	}
	int recur(int[][] grid, int i, int j, int[][] mem) {
		if (i == grid.length - 1 && j == grid[0].length - 1) {
			return grid[i][j];
		}
		if (i > grid.length - 1 || j > grid[0].length - 1) {
			return Integer.MAX_VALUE;
		}
		if (mem[i][j] != 0) {
			return mem[i][j];
		}
		mem[i][j] = grid[i][j] + Math.min(recur(grid,i + 1,j,mem),recur(grid,i,j + 1,mem));
		return mem[i][j];
	}
}