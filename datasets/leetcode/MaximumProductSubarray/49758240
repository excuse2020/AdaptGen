class Solution {
	int maxProduct(int[] nums) {
		int n = nums.length;
		int leftProd = Integer.MIN_VALUE;
		int rightProd = Integer.MIN_VALUE;
		int prod = 1;
		List<Integer> list = new ArrayList();
		for (int i = 0; i < n; i++) {
			prod = prod * nums[i];
			if (prod > leftProd) {
				list.add(i);
			}
			leftProd = Math.max(prod,leftProd);
			if (prod == 0) {
				prod = 1;
				list.clear();
			}
		}
		prod = 1;
		for (int i = n - 1; i >= 0; i--) {
			prod = prod * nums[i];
			rightProd = Math.max(prod,rightProd);
			if (prod == 0) {
				prod = 1;
			}
		}
		return Math.max(leftProd,rightProd);
	}
}