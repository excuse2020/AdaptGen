class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode dummy = new ListNode(0);
		dummy.next = head;
		ListNode pre = dummy, suc = dummy;
		for (int i = 1; i < m; i++) {
			pre = pre.next;
		}
		for (int i = 1; i <= n + 1; i++) {
			suc = suc.next;
		}
		ListNode temp = pre.next;
		ListNode listHead = reverseList(temp,n - m);
		ListNode listTail = listHead;
		for (int i = 1; i <= n - m; i++) {
			listTail = listTail.next;
		}
		pre.next = listHead;
		listTail.next = suc;
		return dummy.next;
	}
	ListNode reverseList(ListNode head, int n) {
		ListNode pre = null;
		ListNode cur = head;
		for (int i = 0; i < n; i++) {
			ListNode temp = cur.next;
			cur.next = pre;
			pre = cur;
			cur = temp;
		}
		cur.next = pre;
		return cur;
	}
}