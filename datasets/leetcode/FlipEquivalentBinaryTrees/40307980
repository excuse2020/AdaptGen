class Solution {
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		} 
		else if (root1 == null || root2 == null) {
			return false;
		}
		return flipEquiv_(root1,root2);
	}
	boolean flipEquiv_(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		boolean ans1 = true, ans2 = true;
		ans1 = flipEquiv_(root1.left,root2.left) && flipEquiv_(root1.right,root2.right);
		ans2 = flipEquiv_(root1.left,root2.right) && flipEquiv_(root1.right,root2.left);
		return ans1 || ans2;
	}
}