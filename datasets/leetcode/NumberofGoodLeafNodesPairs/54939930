class Solution {
	int count = 0;
	List<Integer> Distance(TreeNode root, int distance) {
		if (root == null) {
			return new ArrayList<Integer>();
		} 
		else if (root.left == null & root.right == null) {
			List<Integer> sublist = new ArrayList<>();
			sublist.add(1);
			return sublist;
		}
		List<Integer> l1 = Distance(root.left,distance);
		List<Integer> l2 = Distance(root.right,distance);
		for (int i = 0; i < l1.size(); i++) {
			for (int j = 0; j < l2.size(); j++) {
				if (l1.get(i) + l2.get(j) <= distance) {
					count++;
				}
			}
		}
		List<Integer> listed = new ArrayList<>();
		for (int val: l1) {	
			listed.add(val + 1);
		}
		for (int val: l2) {	
			listed.add(val + 1);
		}
		return listed;
	}
	int countPairs(TreeNode root, int distance) {
		Distance(root,distance);
		return count;
	}
}