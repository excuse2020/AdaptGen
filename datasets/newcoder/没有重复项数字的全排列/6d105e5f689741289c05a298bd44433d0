class Solution {
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		Arrays.sort(num);
		ArrayList<ArrayList<Integer>> ret = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> tmp = new ArrayList<Integer>();
		boolean[] isUsed = new boolean[num.length];
		sortSele(ret,tmp,isUsed,num);
		return ret;
	}
	void sortSele(ArrayList<ArrayList<Integer>> ret, ArrayList<Integer> tmp, boolean[] isUsed, int[] num) {
		if (tmp.size() == num.length) {
			ret.add(new ArrayList<Integer>(tmp));
			return;
		}
		for (int i = 0; i < num.length; i++) {
			if (!isUsed[i]) {
				isUsed[i] = true;
				tmp.add(num[i]);
				sortSele(ret,tmp,isUsed,num);
				isUsed[i] = false;
				tmp.remove(tmp.size() - 1);
			}
		}
	}
}