class Solution {
	boolean canPartition(int[] nums, int mid) {
		if (mid < nums[0]) {
			return false;
		}
		long diff = 0;
		for (int num: nums) {	
			diff += mid - num;
			if (diff < 0) {
				return false;
			}
		}
		return true;
	}
	int minimizeArrayValue(int[] nums) {
		int max = 0, min = Integer.MAX_VALUE, n = nums.length;
		for (int num: nums) {	
			max = Math.max(num,max);
			min = Math.min(num,min);
		}
		while (min < max) {
			int mid = min + (max - min) / 2;
			if (canPartition(nums,mid)) {
				max = mid;
			} 
			else {
				min = mid + 1;
			}
		}
		return min;
	}
}