class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long result = 0;
		int i = 0;
		long sum = 0;
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int j = 0; j < nums.length; j++) {
			sum += nums[j];
			if (map.containsKey(nums[j])) {
				while (nums[i] != nums[j]) {
					sum -= nums[i];
					map.remove(nums[i]);
					i++;
				}
				sum -= nums[i];
				i++;
			}
			map.put(nums[j],j);
			int len = j - i + 1;
			if (len < k) {
				continue;
			}
			result = Math.max(sum,result);
			sum -= nums[i];
			map.remove(nums[i]);
			i++;
		}
		return result;
	}
}