class Solution {
	int maxSum(int[] nums1, int[] nums2) {
		int i = 0;
		int j = 0;
		long res = 0;
		long count1 = 0;
		long count2 = 0;
		while (i < nums1.length && j < nums2.length) {
			if (nums1[i] == nums2[j]) {
				res += Math.max(count1,count2);
				res += nums1[i];
				count1 = 0;
				count2 = 0;
				i++;
				j++;
			} 
			else if (nums1[i] < nums2[j]) {
				if (i == nums1.length - 1) {
					break;
				}
				count1 += nums1[i];
				i++;
			} 
			else {
				if (j == nums2.length - 1) {
					break;
				}
				count2 += nums2[j];
				j++;
			}
		}
		while (i < nums1.length || j < nums2.length) {
			while (i < nums1.length) {
				count1 += nums1[i++];
			}
			while (j < nums2.length) {
				count2 += nums2[j++];
			}
			res += Math.max(count1,count2);
		}
		long mod = (long) 1e9 + 7;
		return (int) (res % mod);
	}
}