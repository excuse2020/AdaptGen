class Solution {
	List<int[]> res;
	void dfs(TreeNode root, List list1, List list2, List list3) {
		if (root == null) {
			return;
		}
		list1.add(root.val);
		dfs(root.left,list1,list2,list3);
		list2.add(root.val);
		dfs(root.right,list1,list2,list3);
		list3.add(root.val);
	}
	int[][] threeOrders(TreeNode root) {
		res = new ArrayList();
		List<Integer> list1 = new ArrayList(), list2 = new ArrayList(), list3 = new ArrayList();
		dfs(root,list1,list2,list3);
		int[] s1 = list1.stream().mapToInt().toArray();
		res.add(s1);
		res.add(list2.stream().mapToInt().toArray());
		res.add(list3.stream().mapToInt().toArray());
		return res.toArray(new int[res.size()]);
	}
}