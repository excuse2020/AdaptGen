class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		long horMax = horizontalCuts[0], verMax = verticalCuts[0];
		for (int i = 1; i < horizontalCuts.length; i++) {
			int diff = horizontalCuts[i] - horizontalCuts[i - 1];
			if (diff > horMax) {
				horMax = diff;
			}
		}
		long lastDiff = h - horizontalCuts[horizontalCuts.length - 1];
		if (lastDiff > horMax) {
			horMax = lastDiff;
		}
		for (int i = 1; i < verticalCuts.length; i++) {
			int diff = verticalCuts[i] - verticalCuts[i - 1];
			if (diff > verMax) {
				verMax = diff;
			}
		}
		long lastVerDiff = w - verticalCuts[verticalCuts.length - 1];
		if (lastVerDiff > verMax) {
			verMax = lastVerDiff;
		}
		return (int) ((horMax * verMax) % (1_000_000_007));
	}
}