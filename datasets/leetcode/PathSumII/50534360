class Solution {
	List<List<Integer>> ans;
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		ans = new ArrayList<>();
		if (root == null) {
			return ans;
		}
		List<Integer> temp = new ArrayList<>();
		solve(root,0,targetSum,temp);
		return ans;
	}
	void solve(TreeNode root, int currSum, int targetSum, List<Integer> temp) {
		if (root == null) {
			return;
		}
		temp.add(root.val);
		if (root.left == null && root.right == null && currSum + root.val == targetSum) {
			ans.add(new ArrayList<>(temp));
		} 
		else {
			solve(root.left,currSum + root.val,targetSum,temp);
			solve(root.right,currSum + root.val,targetSum,temp);
		}
		temp.remove(temp.size() - 1);
	}
}