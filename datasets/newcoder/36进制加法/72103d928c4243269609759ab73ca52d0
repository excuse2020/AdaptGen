class Solution {
	int RADIX = 36;
	String thirtysixAdd(String A, String B) {
		String digits = "0123456789abcdefghijklmnopqrstuvwxyz";
		HashMap<Character, Integer> charNumMap = new HashMap<>();
		HashMap<Integer, Character> numCharMap = new HashMap<>();
		for (int i = 0; i < RADIX; i++) {
			charNumMap.put(digits.charAt(i),i);
			numCharMap.put(i,digits.charAt(i));
		}
		int lenA = A.length();
		int lenB = B.length();
		int carry = 0;
		int sum;
		int digit, digitA, digitB;
		StringBuilder sb = new StringBuilder();
		for (int i = lenA - 1, j = lenB - 1; i >= 0 || j >= 0 || carry > 0; i--, j--) {
			digitA = (i >= 0) ? charNumMap.get(A.charAt(i)) : 0;
			digitB = (j >= 0) ? charNumMap.get(B.charAt(j)) : 0;
			sum = digitA + digitB;
			digit = sum % RADIX;
			carry = sum / RADIX;
			sb.append(numCharMap.get(digit));
		}
		return sb.reverse().toString();
	}
}