class Solution {
	boolean isValidRange(char[][] board, int rowStart, int rowEnd, int colStart, int colEnd) {
		boolean[] numUsed = new boolean[10];
		int row = rowStart;
		int col = colStart;
	}
	boolean isValidSudoku(char[][] board) {
		for (int row = 0; row <= 8; row++) {
			if (!isValidRange(board,row,row,0,8)) {
				return false;
			}
		}
		for (int col = 0; col <= 8; col++) {
			if (!isValidRange(board,0,8,col,col)) {
				return false;
			}
		}
		for (int i = 0; i <= 2; i++) {
			for (int j = 0; j <= 2; j++) {
				if (!isValidRange(board,i * 3,i * 3 + 2,j * 3,j * 3 + 2)) {
					return false;
				}
			}
		}
		return true;
	}
}