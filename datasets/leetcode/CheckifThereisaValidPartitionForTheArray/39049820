class Solution {
	int n;
	boolean solve(int i, int[] nums, Boolean[] dp) {
		if (i >= n) {
			return true;
		}
		boolean result = false;
		if (dp[i] != null) {
			return dp[i];
		}
		if ((i + 1 < n) && (nums[i] == nums[i + 1])) {
			result |= solve(i + 2,nums,dp);
		}
		if ((i + 2 < n) && (nums[i] == nums[i + 1] && nums[i] == nums[i + 2])) {
			result |= solve(i + 3,nums,dp);
		}
		if ((i + 2 < n) && (nums[i + 1] - nums[i] == 1)) {
			result |= solve(i + 3,nums,dp);
		}
		return dp[i] = result;
	}
	boolean validPartition(int[] nums) {
		n = nums.length;
		return solve(0,nums,new Boolean[n]);
	}
}