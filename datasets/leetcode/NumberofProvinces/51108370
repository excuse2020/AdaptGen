class Solution {
	void dfs(int n, int[] vis, int[][] arr) {
		vis[n] = 1;
		int[] nthArr = arr[n - 1];
		for (int i = 0; i < nthArr.length; i++) {
			if (nthArr[i] == 1 && vis[i + 1] == 0) {
				dfs(i + 1,vis,arr);
			}
		}
	}
	int findCircleNum(int[][] isConnected) {
		int[] vis = new int[isConnected.length + 1];
		int count = 0;
		for (int j = 1; j < vis.length; j++) {
			if (vis[j] == 0) {
				count++;
				dfs(j,vis,isConnected);
			}
		}
		return count;
	}
}