class Solution {
	int max = 0;
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		validate(root);
		return max;
	}
	int validate(TreeNode node) {
		if (node == null) {
			return 0;
		}
		int l = validate(node.left);
		int r = validate(node.right);
		int lmax = 0;
		int rmax = 0;
		if (node.left != null && node.val == node.left.val) {
			lmax = lmax + l;
		}
		if (node.right != null && node.val == node.right.val) {
			rmax = rmax + r;
		}
		max = Math.max(max,lmax + rmax);
		return Math.max(lmax,rmax);
	}
}