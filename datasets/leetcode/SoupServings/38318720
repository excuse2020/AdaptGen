class Solution {
	HashMap<String, Double> store;
	double dfs(int A, int B) {
		if (A <= 0 && B <= 0) {
			return 0.5;
		}
		if (B <= 0) {
			return 0.0;
		}
		if (A <= 0) {
			return 1.0;
		}
		String key = A + "|";
		if (store.containsKey(key)) {
			return store.get(key);
		}
		double dfs_result = 0.25 * (dfs(A - 100,B) + dfs(A - 75,B - 25));
		store.put(key,dfs_result);
		return dfs_result;
	}
	double soupServings(int n) {
		if (n >= 5000) {
			return 1.0;
		}
		this.store = new HashMap<>();
		return dfs(n,n);
	}
}