class Solution {
	String gcdOfStrings(String str1, String str2) {
		StringBuilder result = new StringBuilder();
		StringBuilder resulty = new StringBuilder();
		if (str1.length() > str2.length()) {
			for (int i = 0; i < str2.length(); i++) {
				if (((str1.length() % str2.substring(i,str2.length()).length()) == 0) && ((str2.length() % str2.substring(i,str2.length()).length()) == 0)) {
					int x = str1.length() / (str2.substring(i,str2.length()).length());
					int y = str2.length() / (str2.substring(i,str2.length()).length());
					while (x > 0) {
						result.append(str2.substring(i,str2.length()));
						x--;
					}
					while (y > 0) {
						resulty.append(str2.substring(i,str2.length()));
						y--;
					}
					if ((result.toString().equals(str1.substring(0,str1.length()))) && (resulty.toString().equals(str2.substring(0,str2.length())))) {
						result.setLength(0);
						result.append(str2.substring(i,str2.length()));
						break;
					} 
					else {
						result.setLength(0);
					}
				}
			}
		} 
		else {
			for (int i = 0; i < str1.length(); i++) {
				if (((str2.length() % str1.substring(i,str1.length()).length()) == 0) && ((str1.length() % str1.substring(i,str1.length()).length()) == 0)) {
					int x = str2.length() / (str1.substring(i,str1.length()).length());
					int y = str1.length() / (str1.substring(i,str1.length()).length());
					while (x > 0) {
						result.append(str1.substring(i,str1.length()));
						x--;
					}
					while (y > 0) {
						resulty.append(str1.substring(i,str1.length()));
						y--;
					}
					if ((result.toString().equals(str2.substring(0,str2.length()))) && (resulty.toString().equals(str1.substring(0,str1.length())))) {
						result.setLength(0);
						result.append(str1.substring(i,str1.length()));
						break;
					} 
					else {
						result.setLength(0);
					}
				}
			}
		}
		return result.toString();
	}
}