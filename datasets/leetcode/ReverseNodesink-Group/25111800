class Solution {
	void reverse(ListNode s, ListNode e) {
		ListNode prev = null, curr = s, n = s.next;
		while (prev != e) {
			curr.next = prev;
			prev = curr;
			curr = n;
			if (n != null) {
				n = n.next;
			}
		}
	}
	ListNode reverseKGroup(ListNode head, int k) {
		if (head == null || head.next == null || k == 1) {
			return head;
		}
		ListNode dummy = new ListNode(-1);
		dummy.next = head;
		ListNode beforeStart = dummy;
		ListNode end = head;
		int i = 0;
		while (end != null) {
			i++;
			if (i % k == 0) {
				ListNode start = beforeStart.next, temp = end.next;
				reverse(start,end);
				beforeStart.next = end;
				start.next = temp;
				beforeStart = start;
				end = temp;
			} 
			else {
				end = end.next;
			}
		}
		return dummy.next;
	}
}