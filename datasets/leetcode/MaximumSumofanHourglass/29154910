class Solution {
	int maxSum(int[][] grid) {
		int m = grid.length;
		int n = grid[0].length;
		int[][] presum = new int[m][n];
		for (int i = 0; i < m; i++) {
			int sum = 0;
			for (int j = 0; j < n; j++) {
				sum += grid[i][j];
				presum[i][j] = sum;
			}
		}
		int ans = Integer.MIN_VALUE;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if ((i + 2) >= m || (j + 2) >= n) {
					continue;
				}
				int sum = presum[i][j + 2] + presum[i + 1][j + 2] - grid[i + 1][j] - grid[i + 1][j + 2];
				if (j != 0) {
					for (int x = i; x <= i + 2; x++) {
						sum -= presum[x][j - 1];
					}
				}
				ans = Math.max(ans,sum);
			}
		}
		return ans;
	}
}