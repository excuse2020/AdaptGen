class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		Set<Integer> rows = new HashSet<>();
		Set<Integer> cols = new HashSet<>();
		long sum = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			long currSum = 0;
			if (queries[i][0] == 0) {
				int row = queries[i][1];
				if (rows.contains(row)) {
					continue;
				}
				rows.add(queries[i][1]);
				int count = n - cols.size();
				currSum = (long) queries[i][2] * count;
			} 
			else {
				int col = queries[i][1];
				if (cols.contains(col)) {
					continue;
				}
				cols.add(queries[i][1]);
				int count = n - rows.size();
				currSum = (long) queries[i][2] * count;
			}
			sum += currSum;
		}
		return sum;
	}
}