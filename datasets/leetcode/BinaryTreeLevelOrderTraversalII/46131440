class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> ans = new ArrayList<>();
		Queue<TreeNode> queue = new LinkedList<>();
		if (root == null) {
			return ans;
		}
		queue.add(root);
		while (!queue.isEmpty()) {
			int len = queue.size();
			List<Integer> help = new ArrayList<>();
			for (int i = 0; i < len; i++) {
				if (queue.peek().left != null) {
					queue.add(queue.peek().left);
				}
				if (queue.peek().right != null) {
					queue.add(queue.peek().right);
				}
				help.add(queue.poll().val);
			}
			ans.add(help);
		}
		Collections.reverse(ans);
		return ans;
	}
}