class Solution {
	int[] MySort(int[] arr) {
		quickSort(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] list, int l, int r) {
		int first = list[l];
		while (l < r) {
			while (l < r && list[r] >= first) {
				r--;
			}
			swap(list,l,r);
			while (l < r && list[l] <= first) {
				l++;
			}
			swap(list,l,r);
		}
		return l;
	}
	void quickSort(int[] list, int l, int r) {
		if (l < r) {
			int point = partition(list,l,r);
			quickSort(list,l,point - 1);
			quickSort(list,point + 1,r);
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}