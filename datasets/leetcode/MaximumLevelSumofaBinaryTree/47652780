class Solution {
	void dfs(TreeNode node, int level, List<Integer> levelSumList) {
		if (node == null) {
			return;
		}
		if (levelSumList.size() == level) {
			levelSumList.add(node.val);
		} 
		else {
			levelSumList.set(level,levelSumList.get(level) + node.val);
		}
		dfs(node.left,level + 1,levelSumList);
		dfs(node.right,level + 1,levelSumList);
	}
	int maxLevelSum(TreeNode root) {
		if (root == null) {
			return 0;
		}
		List<Integer> levelSumList = new ArrayList<Integer>();
		dfs(root,0,levelSumList);
		int maxLevel = 0;
		int maxLevelSum = Integer.MIN_VALUE;
		for (int i = 0; i < levelSumList.size(); i++) {
			if (levelSumList.get(i) > maxLevelSum) {
				maxLevel = i;
				maxLevelSum = levelSumList.get(i);
			}
		}
		return maxLevel + 1;
	}
}