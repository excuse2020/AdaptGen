class Solution {
	int numDistinct(String s, String t) {
		int dp = new int[s.length() + 1][t.length() + 1];
		for (int i = 0; i <= s.length(); i++) {
			for (int j = 0; j <= t.length(); j++) {
				dp[i][j] = -1;
			}
		}
		return numdist(s,t,s.length(),t.length(),dp);
	}
	int numdist(String s, String t, int n, int m, int dp) {
		if (m <= 0) {
			return 1;
		}
		if (n <= 0) {
			return 0;
		}
		if (dp[n][m] != -1) {
			return dp[n][m];
		}
		if (s.charAt(n - 1) == t.charAt(m - 1)) {
			dp[n][m] = numdist(s,t,n - 1,m - 1,dp) + numdist(s,t,n - 1,m,dp);
		} 
		else {
			dp[n][m] = numdist(s,t,n - 1,m,dp);
		}
		return dp[n][m];
	}
}