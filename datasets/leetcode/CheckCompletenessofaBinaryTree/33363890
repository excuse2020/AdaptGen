class Solution {
	boolean isCompleteTree(TreeNode root) {
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		boolean set = false;
		while (!q.isEmpty()) {
			ArrayList<TreeNode> ar = new ArrayList<>();
			while (!q.isEmpty()) {
				ar.add(q.remove());
			}
			for (int i = 0; i < ar.size(); i++) {
				TreeNode node = ar.get(i);
				if (node == null) {
					if (i + 1 < ar.size() && ar.get(i + 1) != null) {
						return false;
					}
					continue;
				}
				if (set) {
					return false;
				}
				if (node.left != null) {
					q.add(node.left);
				} 
				else {
					q.add(null);
				}
				if (node.right != null) {
					q.add(node.right);
				} 
				else {
					q.add(null);
				}
			}
			if (ar.get(ar.size() - 1) == null) {
				set = true;
			}
		}
		return true;
	}
}