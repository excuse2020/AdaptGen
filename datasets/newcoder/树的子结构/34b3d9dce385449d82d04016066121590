class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root1 == null || root2 == null) {
			return false;
		}
		return JudgeNode(root1,root2) || JudgeNode(root1.left,root2);
	}
	boolean JudgeNode(TreeNode Node1, TreeNode Node2) {
		if (Node2 == null) {
			return true;
		}
		if (Node1 == null) {
			return false;
		}
		if (Node1.val == Node2.val) {
			return JudgeNode(Node1.left,Node2.left) && JudgeNode(Node1.right,Node2.right);
		} 
		else {
			return false;
		}
	}
}