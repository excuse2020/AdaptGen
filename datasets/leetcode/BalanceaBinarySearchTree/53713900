class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> inorder = new ArrayList<>();
		getinorder(root,inorder);
		root = createBST(inorder,0,inorder.size() - 1);
		return root;
	}
	TreeNode createBST(List<Integer> inorder, int si, int ei) {
		if (si > ei) {
			return null;
		}
		int mid = (si + ei) / 2;
		TreeNode root = new TreeNode(inorder.get(mid));
		root.left = createBST(inorder,si,mid - 1);
		root.right = createBST(inorder,mid + 1,ei);
		return root;
	}
	void getinorder(TreeNode root, List<Integer> inorder) {
		if (root == null) {
			return;
		}
		getinorder(root.left,inorder);
		inorder.add(root.val);
		getinorder(root.right,inorder);
	}
}