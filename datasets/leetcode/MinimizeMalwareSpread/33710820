class Solution {
	int minMalwareSpread(int[][] graph, int[] initial) {
		Arrays.sort(initial);
		boolean[] hasMultipleInitial = new boolean[graph.length];
		Set<Integer> initialSet = new HashSet<Integer>(initial.length);
		int size = 0, result = initial[0];
		for (int i: initial) {	
			initialSet.add(i);
		}
		for (int i = 0; i < initial.length; i++) {
			if (hasMultipleInitial[initial[i]]) {
				continue;
			}
			int count = 1;
			Queue<Integer> q = new ArrayDeque<Integer>();
			q.offer(initial[i]);
			while (!q.isEmpty()) {
				int cur = q.poll();
				for (int j = 0; j < graph.length; j++) {
					if (graph[cur][j] != 1 || cur == j) {
						continue;
					}
					if (initialSet.contains(j)) {
						hasMultipleInitial[initial[i]] = true;
						hasMultipleInitial[j] = true;
					}
					q.offer(j);
					graph[cur][j] = -1;
					graph[j][cur] = -1;
					count++;
				}
			}
			if (count > size && !hasMultipleInitial[initial[i]]) {
				size = count;
				result = initial[i];
			}
		}
		return result;
	}
}