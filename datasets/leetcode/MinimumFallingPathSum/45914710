class Solution {
	int check(int[][] matrix, int i, int j) {
		if (i < 0 || j < 0 || i >= matrix.length || j >= matrix.length) {
			return 999999;
		}
		if (i == matrix.length - 1) {
			return matrix[i][j];
		}
		int down = matrix[i][j] + check(matrix,i + 1,j);
		int left = matrix[i][j] + check(matrix,i + 1,j - 1);
		int right = matrix[i][j] + check(matrix,i + 1,j + 1);
		return Math.min(Math.min(down,left),right);
	}
	int minFallingPathSum(int[][] matrix) {
		int ans = Integer.MAX_VALUE;
		for (int j = 0; j < matrix.length; j++) {
			ans = Math.min(ans,check(matrix,0,j));
		}
		return ans;
	}
}