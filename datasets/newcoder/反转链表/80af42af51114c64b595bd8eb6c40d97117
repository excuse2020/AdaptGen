class Solution {
	ArrayList<ArrayList<Integer>> sumList;
	void dfs(int[] arr, int k, int start, ArrayList<Integer> list) {
		if (k == 0) {
			sumList.add(new ArrayList<>(list));
		} 
		else {
			for (int i = start; i < arr.length; i++) {
				list.add(arr[i]);
				dfs(arr,k - 1,i + 1,list);
				list.remove(list.size() - 1);
			}
		}
	}
	ArrayList<ArrayList<Integer>> subsets(int[] S) {
		sumList = new ArrayList<>();
		Arrays.sort(S);
		for (int i = 0; i <= S.length; i++) {
			dfs(S,i,0,new ArrayList<>());
		}
		return sumList;
	}
}