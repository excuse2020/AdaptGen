class Solution {
	int findMaxCuts(int[] arr, int val) {
		int length = arr.length;
		Arrays.sort(arr);
		int max = arr[0];
		if (length == 1) {
			return (val - arr[0]) > arr[0] ? (val - arr[0]) : arr[0];
		}
		for (int i = 0; i < length - 1; i++) {
			if ((arr[i + 1] - arr[i]) > max) {
				max = arr[i + 1] - arr[i];
			}
			if (i + 1 == (length - 1) && (val - arr[i + 1]) > max) {
				max = val - arr[i + 1];
			}
		}
		return max;
	}
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		long maxHorizantal = findMaxCuts(horizontalCuts,h);
		long maxVertical = findMaxCuts(verticalCuts,w);
		return (int) (((maxHorizantal) * (maxVertical)) % 1000000007);
	}
}