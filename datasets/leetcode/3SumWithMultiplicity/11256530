class Solution {
	int MOD = 1_000_000_007;
	int threeSumMulti(int[] arr, int target) {
		long tupleCount = 0;
		long[] counts = new long[101];
		for (int num: arr) {	
			counts[num]++;
		}
		for (int x = 0; x <= 100; x++) {
			for (int y = x + 1; y <= 100; y++) {
				int z = target - x;
				if (z > y && z <= 100) {
					tupleCount += (counts[x] * counts[y]);
					tupleCount %= MOD;
				}
			}
		}
		for (int x = 0; x <= 100; x++) {
			int z = target - 2 * x;
			if (z > x && z <= 100) {
				tupleCount += ((counts[x] * (counts[x] - 1) / 2) * counts[z]);
				tupleCount %= MOD;
			}
		}
		for (int x = 0; x <= 100; x++) {
			int yz = target - x;
			if (yz % 2 == 0) {
				int y = yz / 2;
				if (y > x && y <= 100) {
					tupleCount += (counts[x] * (counts[y] * (counts[y] - 1) / 2));
					tupleCount %= MOD;
				}
			}
		}
		if (target % 3 == 0) {
			int x = target / 3;
			tupleCount += (counts[x] * (counts[x] - 1)) / 6;
			tupleCount %= MOD;
		}
		return (int) tupleCount;
	}
}