class Solution {
	boolean isPrime(int n) {
		if (n <= 1) {
			return false;
		}
		if (n == 2 || n == 3) {
			return true;
		}
		if (n % 2 == 0 || n % 3 == 0) {
			return false;
		}
		for (int i = 5; i <= Math.sqrt(n); i = i + 6) {
			if (n % i == 0 || n % (i + 2) == 0) {
				return false;
			}
		}
		return true;
	}
	int smallestValue(int n) {
		int ans = n;
		while (!isPrime(n)) {
			int x = sumOfPrimes(n);
			if (ans == x) {
				break;
			}
			ans = Math.min(ans,x);
			n = x;
		}
		return ans;
	}
	int sumOfPrimes(int n) {
		int sum = 0;
		while (n % 2 == 0) {
			n /= 2;
			sum += 2;
		}
		for (int i = 3; i <= Math.sqrt(n); i += 2) {
			while (n % i == 0) {
				n /= i;
				sum += i;
			}
		}
		if (n > 2) {
			sum += n;
		}
		return sum;
	}
}