class Solution {
	int evalRPN(String[] tokens) {
		Stack<Integer> st = new Stack<>();
		for (int i = 0; i < tokens.length; i++) {
			if ((!tokens[i].equals("+")) && (!tokens[i].equals("-"))) {
				st.push(Integer.parseInt(tokens[i]));
			} 
			else {
				int a = st.pop();
				int b = st.pop();
				int c = 0;
				if (tokens[i].equals("/")) {
					c = b / a;
				}
				if (tokens[i].equals("+")) {
					c = b + a;
				}
				if (tokens[i].equals("*")) {
					c = b * a;
				}
				if (tokens[i].equals("-")) {
					c = b - a;
				}
				st.push(c);
			}
		}
		return st.pop();
	}
}