class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null) {
			return null;
		}
		ListNode odd = null;
		ListNode even = null;
		ListNode oddNext = null;
		ListNode evenNext = null;
		ListNode next = null;
		int pos = 1;
		while (head != null) {
			if (pos % 2 == 0) {
				if (even == null) {
					even = head;
					evenNext = head;
				} 
				else {
					evenNext.next = head;
					evenNext = evenNext.next;
				}
			} 
			else {
				if (odd == null) {
					odd = head;
					oddNext = head;
				} 
				else {
					oddNext.next = head;
					oddNext = oddNext.next;
				}
			}
			next = head.next;
			head.next = null;
			head = next;
			pos++;
		}
		if (oddNext != null) {
			oddNext.next = even;
			return odd;
		} 
		else {
			return even;
		}
	}
}