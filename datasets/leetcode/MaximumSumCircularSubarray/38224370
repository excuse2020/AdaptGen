class Solution {
	int maxSubarraySumCircular(int[] nums) {
		int max1 = Integer.MIN_VALUE;
		int sum = 0;
		int t = 0;
		for (int i = 0; i < nums.length; i++) {
			t = t + nums[i];
			sum = sum + nums[i];
			if (sum > max1) {
				max1 = sum;
			}
			if (sum < 0) {
				sum = 0;
			}
		}
		int max2 = Integer.MIN_VALUE;
		int sum2 = 0;
		for (int i = 0; i < nums.length; i++) {
			nums[i] = (-1) * nums[i];
		}
		for (int i = 0; i < nums.length; i++) {
			sum2 = sum2 + nums[i];
			if (sum2 > max2) {
				max2 = sum2;
			}
			if (sum2 < 0) {
				sum2 = 0;
			}
		}
		int r = t - ((-1) * max2);
		if (max1 > r || r == 0) {
			return max1;
		} 
		else {
			return r;
		}
	}
}