class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		int n = candidates.length;
		Arrays.sort(candidates);
		List<List<Integer>> ans = new ArrayList<>();
		rec(candidates,0,n,target,new ArrayList<>(),ans);
		return ans;
	}
	void rec(int candidates, int idx, int n, int target, List<Integer> l, List<List<Integer>> ans) {
		if (target == 0) {
			ans.add(new ArrayList<>(l));
			return;
		}
		for (int i = idx; i < n; i++) {
			if (i > idx && candidates[i - 1] == candidates[i]) {
				continue;
			}
			if (target < candidates[i]) {
				break;
			}
			l.add(candidates[i]);
			rec(candidates,i + 1,n,target - candidates[i],l,ans);
			l.remove(l.size() - 1);
		}
	}
}