class Solution {
	int maxProfit(int[] prices) {
		int n = prices.length;
		int[][] dp = new int[n + 1][5];
		for (int i = 0; i <= n; i++) {
			dp[i][4] = 0;
		}
		for (int j = 0; j <= 4; j++) {
			dp[n][j] = 0;
		}
		for (int ind = n - 1; ind >= 0; ind--) {
			for (int tran = 3; tran >= 0; tran--) {
				if (tran % 2 == 0) {
					dp[ind][tran] = Math.max(-prices[ind] + dp[ind + 1][tran + 1],dp[ind + 1][tran]);
				}
				if (tran % 2 == 1) {
					dp[ind][tran] = Math.max(prices[ind] + dp[ind + 1][tran + 1],dp[ind + 1][tran]);
				}
			}
		}
		return dp[0][0];
	}
}