class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int dp = new int[arr.length];
		for (int i = 0; i < arr.length; i++) {
			int max = arr[i];
			for (int j = 1; j <= k && i - j + 1 >= 0; j++) {
				max = Math.max(max,arr[i - j + 1]);
				int currval = j * max;
				if (i - j >= 0) {
					currval = dp[i - j] + (j * max);
				}
				dp[i] = Math.max(dp[i],currval);
			}
		}
		return dp[arr.length - 1];
	}
}