class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		HashMap<Integer, Integer> hm = new HashMap<>();
		int[][] mat = new int[grid.length][grid.length];
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				int row = -1;
				int col = -1;
				int a = grid[i][j];
				int b = grid[i][j];
				for (int k = 0; k < grid.length; k++) {
					if (a < grid[i][k]) {
						row = grid[i][k];
						a = row;
					}
					if (b < grid[k][j]) {
						col = grid[k][j];
						b = col;
					}
				}
				if (row == -1 || col == -1) {
					mat[i][j] = grid[i][j];
					continue;
				}
				mat[i][j] = Math.min(row,col);
			}
		}
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				sum += (mat[i][j] - grid[i][j]);
			}
		}
		return sum;
	}
}