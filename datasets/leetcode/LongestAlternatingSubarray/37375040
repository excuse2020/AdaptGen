class Solution {
	int alternatingSubarray(int[] nums) {
		boolean flag = true;
		int ans = 0;
		boolean isOne = true;
		int len = 0;
		for (int i = 1; i < nums.length; i++) {
			int prev = nums[i - 1];
			int curr = nums[i];
			if (flag == true) {
				if (curr - prev == 1) {
					isOne = false;
					flag = false;
					len = 2;
				} 
				else {
					len = 0;
				}
			} 
			else {
				int diff = curr - prev;
				if (isOne == true && diff == 1 || isOne == false && diff == -1) {
					flag = false;
					isOne = !isOne;
					len += 1;
				} 
				else {
					if (diff == 1) {
						ans = Math.max(ans,len);
						flag = false;
						len = 2;
						isOne = false;
					} 
					else {
						flag = true;
						ans = Math.max(ans,len);
						len = 0;
					}
				}
			}
		}
		ans = Math.max(ans,len);
		if (ans == 0) {
			ans = -1;
		}
		return ans;
	}
}