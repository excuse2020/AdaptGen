class Solution {
	HashMap<String, Integer> map;
	int minXORSumHelper(int nums1, int idx, int nums2, int mask) {
		if (idx == nums1.length) {
			return 0;
		}
		String key = idx + "#";
		if (map.get(key) != null) {
			return map.get(key);
		}
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < nums2.length; i++) {
			if ((mask & (1 << i)) == 0) {
				int curr = (nums1[idx] ^ nums2[i]) + minXORSumHelper(nums1,idx + 1,nums2,mask | (1 << i));
				min = Math.min(curr,min);
			}
		}
		map.put(key,min);
		return min;
	}
	int minimumXORSum(int[] nums1, int[] nums2) {
		map = new HashMap();
		return minXORSumHelper(nums1,0,nums2,0);
	}
}