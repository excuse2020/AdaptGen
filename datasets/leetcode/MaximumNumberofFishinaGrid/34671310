class Solution {
	int m = 0;
	void dfs(int[][] g, int r, int c, int a, int b) {
		if (r < 0 || c < 0 || r >= a || c >= b || g[r][c] == 0) {
			return;
		}
		m += g[r][c];
		g[r][c] = 0;
		dfs(g,r + 1,c,a,b);
		dfs(g,r - 1,c,a,b);
		dfs(g,r,c + 1,a,b);
		dfs(g,r,c - 1,a,b);
	}
	int findMaxFish(int[][] grid) {
		int r = grid.length, c = grid[0].length, out = 0;
		for (int i = 0; i < r; i++) {
			for (int j = 0; j < c; j++) {
				dfs(grid,i,j,r,c);
				out = Math.max(out,m);
				m = 0;
			}
		}
		return out;
	}
}