class Solution {
	ArrayList<ArrayList<Integer>> res2 = new ArrayList<ArrayList<Integer>>();
	void backTrack(int[] num, LinkedList<Integer> list) {
		if (list.size() == num.length) {
			res2.add(new ArrayList<>(list));
			return;
		}
		for (int i = 0; i < num.length; i++) {
			if (list.contains(num[i])) {
				continue;
			}
			list.add(num[i]);
			backTrack(num,list);
			list.removeLast();
		}
	}
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		LinkedList<Integer> list = new LinkedList<>();
		backTrack(num,list);
		return this.res2;
	}
}