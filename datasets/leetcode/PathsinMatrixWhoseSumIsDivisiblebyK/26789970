class Solution {
	int mod = 1_000_000_007;
	int rows, cols;
	long f(int r, int c, int sum, int k, int[][] g) {
		if (r == rows || c == cols) {
			return 0;
		}
		sum += g[r][c];
		int rem = sum % k;
		if (r == rows - 1 && c == cols - 1) {
			return (rem == 0) ? 1 : 0;
		}
		return (f(r + 1,c,sum,k,g) + f(r,c + 1,sum,k,g)) % mod;
	}
	int numberOfPaths(int[][] grid, int k) {
		this.rows = grid.length;
		this.cols = grid[0].length;
		return (int) (f(0,0,0,k,grid) % mod);
	}
}