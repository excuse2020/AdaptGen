class Solution {
	int minEatingSpeed(int[] piles, int h) {
		int left = 1;
		int right = Arrays.stream(piles).max().getAsInt();
		while (left <= right) {
			int mid = left + (right - left) / 2;
			long hours = 0;
			for (int pile: piles) {	
				hours += (long) Math.ceil((double) pile / mid);
			}
			if (hours <= h) {
				right = mid - 1;
			} 
			else {
				left = mid + 1;
			}
		}
		return left;
	}
}