class Solution {
	List<String> res = new ArrayList<String>();
	boolean isValid(String s) {
		int count = 0;
	}
	List<String> removeInvalidParentheses(String s) {
		return usingBFS(s);
	}
	List<String> usingBFS(String s) {
		List<String> result = new ArrayList<>();
		if (s == null) {
			return result;
		}
		Queue<String> queue = new LinkedList<>();
		Set<String> visited = new HashSet<>();
		queue.offer(s);
		visited.add(s);
		boolean found = false;
		String current = queue.poll();
		if (isValid(current)) {
			result.add(current);
			found = true;
		}
		if (found) {
			continue;
		}
		int i = 0;
	}
}