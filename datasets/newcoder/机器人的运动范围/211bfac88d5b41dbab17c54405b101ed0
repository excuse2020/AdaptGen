class Solution {
	int sum;
	int cal(int x, int y) {
		int result = 0;
		while (x != 0) {
			result = result + x % 10;
			x = x / 10;
		}
		while (y != 0) {
			result = result + y % 10;
			y = y / 10;
		}
		return result;
	}
	int movingCount(int threshold, int rows, int cols) {
		sum = 0;
		boolean[][] vis = new boolean[rows][cols];
		solve(0,0,threshold,rows,cols,vis);
		return sum;
	}
	void solve(int x, int y, int threshold, int rows, int cols, boolean[][] vis) {
		if (x < 0 || x > rows - 1 || y < 0 || y > cols - 1 || vis[x][y] || (cal(x,y) > threshold)) {
			return;
		}
		vis[x][y] = true;
		sum++;
		solve(x + 1,y,threshold,rows,cols,vis);
		solve(x - 1,y,threshold,rows,cols,vis);
		solve(x,y + 1,threshold,rows,cols,vis);
		solve(x,y - 1,threshold,rows,cols,vis);
	}
}