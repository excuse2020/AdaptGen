class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		if (head1 == null) {
			return head2;
		}
		if (head2 == null) {
			return head1;
		}
		ListNode newHead1 = reverse(head1);
		ListNode newHead2 = reverse(head2);
		int jin = 0, yushu = 0;
		ListNode tmp = new ListNode(-1);
		ListNode head = tmp;
		while (newHead1 != null || newHead2 != null) {
			int value1 = newHead1 == null ? 0 : newHead1.val;
			int value2 = newHead2 == null ? 0 : newHead2.val;
			yushu = (value1 + value2) % 10;
			jin = (value1 + value2) / 10;
			tmp.next = new ListNode(yushu);
			tmp = tmp.next;
			if (newHead1 != null) {
				newHead1 = newHead1.next;
			}
			if (newHead2 != null) {
				newHead2 = newHead2.next;
			}
		}
		if (jin != 0) {
			tmp.next = new ListNode(jin);
		}
		return reverse(head.next);
	}
	ListNode reverse(ListNode head) {
		ListNode pre = null, cur = head, nxt = head;
		while (cur != null) {
			nxt = cur.next;
			cur.next = pre;
			pre = cur;
			cur = nxt;
		}
		return pre;
	}
}