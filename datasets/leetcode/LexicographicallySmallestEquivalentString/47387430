class Solution {
	char find(Map<Character, Character> parent, char a) {
		while (parent.get(a) != a) {
			parent.put(a,parent.get(parent.get(a)));
			a = parent.get(a);
		}
		return a;
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		Map<Character, Character> parent = new HashMap();
		char c;
	}
	void union(Map<Character, Character> parent, char a, char b) {
		char root1 = find(parent,a);
		char root2 = find(parent,b);
		if (root1 == root2) {
			return;
		}
		char newRoot = (char) Math.min(root1,root2);
		parent.put(root1,newRoot);
		parent.put(root2,newRoot);
	}
}