class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int seenColCount = 0;
		int seenRowCount = 0;
		long sum = 0;
		boolean[] rowSeen = new boolean[n];
		boolean[] colSeen = new boolean[n];
		for (int i = queries.length - 1; i >= 0; i--) {
			int type = queries[i][0];
			int index = queries[i][1];
			int value = queries[i][2];
			if (type == 0 && !rowSeen[index]) {
				seenRowCount++;
				rowSeen[index] = true;
				sum += (n - seenColCount) * value;
			} 
			else if (type == 1 && !colSeen[index]) {
				seenColCount++;
				colSeen[index] = true;
				sum += (n - seenRowCount) * value;
			}
		}
		return sum;
	}
}