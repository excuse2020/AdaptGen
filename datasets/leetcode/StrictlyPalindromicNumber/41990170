class Solution {
	boolean check(int r, int j) {
		ArrayList<Integer> s2 = new ArrayList<>();
		while (j > 0) {
			int rem = j % r;
			j = j / r;
			s2.add(rem);
		}
		int left = 0;
		int right = s2.size() - 1;
		while (left < right) {
			if (s2.get(left) == s2.get(right)) {
				left++;
				right--;
			} 
			else {
				return false;
			}
		}
		return true;
	}
	boolean isStrictlyPalindromic(int n) {
		ArrayList<Integer> s1 = new ArrayList<>();
		int s = n - 2;
		for (int i = 2; i <= s; i++) {
			s1.add(i);
		}
		for (int i = 0; i < s1.size(); i++) {
			if (check(s1.get(i),n)) {
				continue;
			} 
			else {
				return false;
			}
		}
		return true;
	}
}