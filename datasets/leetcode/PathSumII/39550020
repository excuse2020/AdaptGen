class Solution {
	void helper(TreeNode root, int targetSum, List<List<Integer>> ans, List<Integer> l) {
		if (root == null) {
			return;
		}
		l.add(root.val);
		if (root.left == null && root.right == null && targetSum == root.val) {
			ans.add(l);
			return;
		}
		helper(root.left,targetSum - root.val,ans,new ArrayList<>(l));
		helper(root.right,targetSum - root.val,ans,new ArrayList<>(l));
	}
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<>();
		helper(root,targetSum,ans,new ArrayList<>());
		return new ArrayList<>(ans);
	}
}