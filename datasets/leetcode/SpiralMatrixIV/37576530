class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] matrix = new int[m][n];
		int top = 0, bottom = m - 1, left = 0, right = n - 1;
		int index = 0;
		while (top <= bottom && left <= right) {
			for (int i = left; i <= right; i++) {
				if (head != null) {
					matrix[top][i] = head.val;
					head = head.next;
				} 
				else {
					matrix[top][i] = -1;
				}
			}
			top++;
			for (int i = top; i <= bottom; i++) {
				if (head != null) {
					matrix[i][right] = head.val;
					head = head.next;
				} 
				else {
					matrix[i][right] = -1;
				}
			}
			right--;
			if (top <= bottom) {
				for (int i = right; i >= left; i--) {
					if (head != null) {
						matrix[bottom][i] = head.val;
						head = head.next;
					} 
					else {
						matrix[bottom][i] = -1;
					}
				}
				bottom--;
			}
			if (left <= right) {
				for (int i = bottom; i >= top; i--) {
					if (head != null) {
						matrix[i][left] = head.val;
						head = head.next;
					} 
					else {
						matrix[i][left] = -1;
					}
				}
				left++;
			}
		}
		return matrix;
	}
}