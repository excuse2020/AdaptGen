class Solution {
	int findPoint(int[] potions, int n, long target) {
		int low = 0, high = potions.length - 1;
		int mid = 0;
		while (low <= high) {
			mid = low + (high - low) / 2;
			long product = (long) n * potions[mid];
			if (product >= target) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int[] ans = new int[spells.length];
		Arrays.sort(potions);
		for (int i = 0; i < spells.length; i++) {
			int index = findPoint(potions,spells[i],success);
			ans[i] = potions.length - index;
		}
		return ans;
	}
}