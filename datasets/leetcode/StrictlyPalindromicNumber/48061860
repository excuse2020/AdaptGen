class Solution {
	String findRemainder(int copy, int base) {
		return String.valueOf((copy % base));
	}
	boolean isPalindrome(String string) {
		if (string.length() == 1) {
			return true;
		}
		int left = 0;
		int right = string.length() - 1;
		while (left < right) {
			if (string.charAt(left++) != string.charAt(right--)) {
				return false;
			}
		}
		return true;
	}
	boolean isStrictlyPalindromic(int n) {
		for (int base = 2; base < n - 1; base++) {
			int copy = n;
			StringBuilder stringBuilder = new StringBuilder();
			while (copy >= 1) {
				stringBuilder.append(findRemainder(copy,base));
				copy = copy / base;
			}
			if (!isPalindrome(stringBuilder.toString())) {
				return false;
			}
		}
		return true;
	}
}