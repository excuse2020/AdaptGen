class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int len = 0;
		for (int i = 0; i < nums.length; i++) {
			for (int j = i; j < nums.length; j++) {
				if (solve(nums,i,j,threshold)) {
					len = Math.max(len,j - i + 1);
				}
			}
		}
		return len;
	}
	boolean solve(int[] nums, int l, int r, int thresh) {
		if (nums[l] % 2 != 0) {
			return false;
		}
		for (int i = l; i < r; i++) {
			if (nums[i] > thresh) {
				return false;
			}
			if (nums[i] % 2 == nums[i + 1] % 2) {
				return false;
			}
		}
		if (nums[r] > thresh) {
			return false;
		}
		return true;
	}
}