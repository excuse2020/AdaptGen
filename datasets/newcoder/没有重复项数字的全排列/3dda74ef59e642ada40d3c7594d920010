class Solution {
	ArrayList<ArrayList<Integer>> permute(int[] num) {
		ArrayList<ArrayList<Integer>> ret = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> temp = new ArrayList<Integer>();
		recursion(num,ret,temp);
		return ret;
	}
	void recursion(int[] num, ArrayList<ArrayList<Integer>> ret, ArrayList<Integer> temp) {
		if (temp.size() == num.length) {
			ret.add(new ArrayList<Integer>(temp));
		}
		for (int i = 0; i < num.length; i++) {
			if (temp.contains(num[i])) {
				continue;
			}
			temp.add(num[i]);
			recursion(num,ret,temp);
			temp.remove(temp.size() - 1);
		}
	}
}