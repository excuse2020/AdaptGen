class Solution {
	long maximumOr(int[] nums, int k) {
		int n = nums.length;
		long[] pre = new long[n + 1];
		long[] suff = new long[n + 1];
		long res = 0, pow = 1;
		for (int i = 0; i < k; i++) {
			pow *= 2;
		}
		pre[0] = 0;
		for (int i = 0; i < n; i++) {
			pre[i + 1] = pre[i] | nums[i];
		}
		suff[n] = 0;
		for (int i = n - 1; i >= 0; i--) {
			suff[i] = suff[i + 1] | nums[i];
		}
		res = 0;
		for (int i = 0; i < n; i++) {
			res = Math.max(res,pre[i] | (nums[i] * pow | suff[i + 1]));
		}
		return res;
	}
}