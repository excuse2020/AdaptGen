class Solution {
	boolean isCompleteTree(TreeNode root) {
		if (root == null) {
			return true;
		}
		if (maxDepth(root.left) < maxDepth(root.right)) {
			return false;
		}
		if (maxDepth(root.left) - maxDepth(root.right) > 1) {
			return false;
		}
		if (root.left != null && root.right != null) {
			if (maxDepth(root.left.right) < maxDepth(root.right.right)) {
				return false;
			}
		}
		if (root.left == null && root.right != null) {
			return false;
		}
		boolean l = isCompleteTree(root.left);
		boolean r = isCompleteTree(root.right);
		if (l == true && r == true) {
			return true;
		}
		return false;
	}
	int maxDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		return 1 + Math.max(maxDepth(root.left),maxDepth(root.right));
	}
}