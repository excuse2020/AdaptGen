class Solution {
	int[] countSubTrees(int n, int[][] edges, String labels) {
		List<Integer>[] adj = new List[n];
		for (int i = 0; i < n; i++) {
			adj[i] = new ArrayList<>();
		}
		for (int i = 0; i < edges.length; i++) {
			adj[edges[i][0]].add(edges[i][1]);
			adj[edges[i][1]].add(edges[i][0]);
		}
		int[] visited = new int[n];
		int[] res = new int[n];
		dfs(0,adj,visited,res,labels);
		return res;
	}
	int[] dfs(int node, List<Integer>[] adj, int[] visited, int[] res, String labels) {
		visited[node] = 1;
		int[] cnt = new int[26];
	}
}