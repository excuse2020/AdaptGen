class Solution {
	Queue<Integer> queue = new LinkedList<>();
	TreeNode increasingBST(TreeNode root) {
		traverseTree(root);
		TreeNode resNode = null;
		TreeNode res = null;
		while (!queue.isEmpty()) {
			if (resNode == null) {
				resNode = new TreeNode(queue.remove());
				resNode.left = resNode.right = null;
				res = resNode;
			}
			if (!queue.isEmpty()) {
				resNode.right = new TreeNode(queue.remove());
				resNode = resNode.right;
			}
		}
		return res;
	}
	void traverseTree(TreeNode root) {
		if (root == null) {
			return;
		}
		traverseTree(root.left);
		queue.add(root.val);
		traverseTree(root.right);
	}
}