class Solution {
	boolean isCompleteTree(TreeNode root) {
		Queue<TreeNode> qu = new LinkedList<>();
		boolean flag1 = true;
		boolean flag2 = true;
		qu.offer(root);
		while (!qu.isEmpty()) {
			TreeNode top = qu.poll();
			if (flag1 && flag2) {
				if (top.left != null) {
					qu.offer(top.left);
					if (top.right != null) {
						qu.offer(top.right);
					} 
					else {
						flag2 = false;
					}
				} 
				else {
					flag1 = false;
					if (top.right != null) {
						return false;
					}
				}
			} 
			else {
				if (top.left != null || top.right != null) {
					return false;
				}
			}
		}
		return true;
	}
}