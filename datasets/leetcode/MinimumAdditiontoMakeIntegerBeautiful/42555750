class Solution {
	long digitSum(long n) {
		int sum = 0;
		while (n > 0) {
			sum += n % 10;
			n = n / 10;
		}
		return sum;
	}
	long getDigitMod(long n, int pos) {
		int count = 0;
		long mod = 0l;
		while (n > 0 && count <= pos) {
			mod = n % 10;
			n = n / 10;
			count++;
		}
		return mod;
	}
	long makeIntegerBeautiful(long n, int target) {
		long m = n;
		int pos = 0;
		long k = 1l;
		while (digitSum(m) > target) {
			long offset = (10 - getDigitMod(m,pos)) * k;
			k = k * 10;
			pos++;
			m += offset;
		}
		return m - n;
	}
}