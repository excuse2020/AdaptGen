class Solution {
	int maxArea(int h, int w, int[] hc, int[] vc) {
		Arrays.sort(hc);
		Arrays.sort(vc);
		int n = hc.length;
		int m = vc.length;
		int maxh = Integer.MIN_VALUE;
		int maxv = Integer.MIN_VALUE;
		for (int i = 0; i < n; i++) {
			if (i == 0) {
				maxh = i == (n - 1) ? Math.max(maxh,Math.max(hc[i] - 0,h - hc[i])) : Math.max(maxh,hc[i] - 0);
			} 
			else if (i == n - 1) {
				maxh = Math.max(maxh,Math.max(hc[i] - hc[i - 1],h - hc[i]));
			} 
			else if (i < n) {
				maxh = Math.max(maxh,hc[i] - hc[i - 1]);
			}
		}
		for (int i = 0; i < m; i++) {
			if (i == 0) {
				maxv = i == (m - 1) ? Math.max(maxv,Math.max(vc[i] - 0,w - vc[i])) : Math.max(maxv,vc[i] - 0);
			} 
			else if (i == m - 1) {
				maxv = Math.max(maxv,Math.max(vc[i] - vc[i - 1],w - vc[i]));
			} 
			else if (i < m) {
				maxv = Math.max(maxv,vc[i] - vc[i - 1]);
			}
		}
		return (int) ((long) maxh * maxv % 1000000007);
	}
}