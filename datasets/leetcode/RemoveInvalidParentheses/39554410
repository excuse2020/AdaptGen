class Solution {
	Integer getMin(String s) {
		Stack<Character> st = new Stack<>();
		int i = 0;
		char ch = s.charAt(i);
	}
	List<String> removeInvalidParentheses(String s) {
		HashSet<String> set = new HashSet<String>();
		List<String> ans = new ArrayList<String>();
		int mra = getMin(s);
		solve(s,mra,ans,set);
		return ans;
	}
	void solve(String s, int mra, List<String> ans, HashSet<String> set) {
		if (set.contains(s)) {
			return;
		}
		set.add(s);
		if (mra == 0) {
			if (getMin(s) != 0) {
				return;
			}
			ans.add(s);
			return;
		}
		for (int i = 0; i < s.length(); i++) {
			String left = s.substring(0,i);
			String right = s.substring(i + 1);
			solve(left + right,mra - 1,ans,set);
		}
	}
}