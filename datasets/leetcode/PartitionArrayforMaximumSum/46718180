class Solution {
	int maxSumAfterPartitioning(int[] arr, int m) {
		int n = arr.length;
		int[] dp = new int[n + 1];
		Arrays.fill(dp,0);
		for (int i = n - 1; i >= 0; i--) {
			int currMax = 0;
			int j = Math.min(n,i + m);
			for (int k = i; k < j; k++) {
				currMax = Math.max(currMax,arr[k]);
				dp[i] = Math.max(dp[i],dp[k + 1] + currMax * (k - i + 1));
			}
		}
		return dp[0];
	}
}