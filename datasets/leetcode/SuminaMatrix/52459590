class Solution {
	int matrixSum(int[][] nums) {
		int m = nums.length;
		int n = nums[0].length;
		int score = 0;
		int min = Integer.MAX_VALUE;
		int t = 0;
		for (int j = 0; j < n; j++) {
			if (min >= nums[m - 1][j]) {
				min = nums[m - 1][j];
				t = j;
			}
		}
		while (nums[m - 1][t] != -1) {
			ArrayList<Integer> list = new ArrayList<>();
			for (int i = 0; i < m; i++) {
				int max = -1;
				int c = -1;
				for (int j = 0; j < n; j++) {
					if (nums[i][j] != -1 && max < nums[i][j]) {
						max = nums[i][j];
						c = j;
					}
				}
				if (c != -1) {
					nums[i][c] = -1;
					list.add(max);
				} 
				else {
					break;
				}
				if (list.size() == m) {
					int maxF = -1;
					for (int k = 0; k < m; k++) {
						maxF = Math.max(maxF,list.get(k));
					}
					score = score + maxF;
				}
			}
		}
		return score;
	}
}