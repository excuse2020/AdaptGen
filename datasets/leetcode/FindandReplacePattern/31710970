class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		Map<Character, Character> m = new HashMap<>();
		Map<Character, Character> m1 = new HashMap<>();
		List<String> l = new ArrayList<>();
		int flag;
		Character p, w;
		boolean pIsPresent;
		for (int i = 0; i < words.length; i++) {
			flag = 1;
			for (int j = 0; j < pattern.length(); j++) {
				p = pattern.charAt(j);
				w = words[i].charAt(j);
				pIsPresent = m.containsKey(p);
				if ((!pIsPresent && m1.containsKey(w)) || (pIsPresent && m.get(p) != w)) {
					flag = 0;
					break;
				} 
				else {
					m.put(p,w);
					m1.put(w,p);
				}
			}
			if (flag == 1) {
				l.add(words[i]);
			}
			m.clear();
			m1.clear();
		}
		return l;
	}
}