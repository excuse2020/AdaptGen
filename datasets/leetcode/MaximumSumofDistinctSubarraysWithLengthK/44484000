class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long max = 0;
		Set<Integer> set = new HashSet<>();
		int start = 0;
		long currSum = 0;
		for (int i = 0; i < nums.length; i++) {
			if (set.contains(nums[i])) {
				while (nums[start] != nums[i]) {
					set.remove(nums[start]);
					currSum -= nums[start];
					start++;
				}
				currSum -= nums[start];
				start++;
			}
			currSum += nums[i];
			set.add(nums[i]);
			if (i - start + 1 == k) {
				max = Math.max(max,currSum);
				set.remove(nums[start]);
				currSum -= nums[start];
				start++;
			}
		}
		return max;
	}
}