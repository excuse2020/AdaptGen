class Solution {
	boolean canReorderDoubled(int[] arr) {
		HashMap<Integer, Integer> map = new HashMap<>();
		Arrays.sort(arr);
		int pos = 0;
		while (pos < arr.length && arr[pos] < 0) {
			pos++;
		}
		System.out.println(pos);
		for (int i = pos; i < arr.length; i++) {
			if (arr[i] % 2 != 0) {
				map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
			} 
			else {
				if (map.containsKey(arr[i] / 2)) {
					if (map.get(arr[i] / 2) == 1) {
						map.remove(arr[i] / 2);
					} 
					else {
						map.put(arr[i] / 2,map.get(arr[i] / 2) - 1);
					}
				} 
				else {
					map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
				}
			}
		}
		for (int i = pos - 1; i >= 0; i--) {
			if (arr[i] % 2 != 0) {
				map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
			} 
			else {
				if (map.containsKey(arr[i] / 2)) {
					if (map.get(arr[i] / 2) == 1) {
						map.remove(arr[i] / 2);
					} 
					else {
						map.put(arr[i] / 2,map.get(arr[i] / 2) - 1);
					}
				} 
				else {
					map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
				}
			}
		}
		return map.size() == 0;
	}
}