class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		combinations(candidates,target,ans,0,new ArrayList<>());
		return ans;
	}
	void combinations(int[] candidates, int target, List<List<Integer>> ans, int idx, List<Integer> list) {
		if (idx == candidates.length) {
			if (target == 0) {
				ans.add(new ArrayList<>(list));
				return;
			}
			return;
		}
		if (candidates[idx] <= target) {
			list.add(candidates[idx]);
			combinations(candidates,target - candidates[idx],ans,idx,list);
			list.remove(list.size() - 1);
		}
		combinations(candidates,target,ans,idx + 1,list);
	}
}