class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] maxR = new int[grid.length];
		int[] maxC = new int[grid[0].length];
		for (int i = 0; i < grid.length; i++) {
			int max = 0;
			for (int j = 0; j < grid[i].length; j++) {
				if (grid[i][j] > max) {
					max = grid[i][j];
				}
			}
			maxR[i] = max;
		}
		for (int i = 0; i < grid[0].length; i++) {
			int max = 0;
			for (int j = 0; j < grid.length; j++) {
				if (max < grid[j][i]) {
					max = grid[j][i];
				}
			}
			maxC[i] = max;
		}
		int res = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				int maxLimit = Math.min(maxR[i],maxC[j]);
				res += maxLimit - grid[i][j];
				grid[i][j] = maxLimit;
			}
		}
		return res;
	}
}