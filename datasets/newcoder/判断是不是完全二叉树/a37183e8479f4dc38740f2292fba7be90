class Solution {
	boolean isCompleteTree(TreeNode root) {
		Queue<TreeNode> queue = new ArrayDeque<TreeNode>();
		if (root == null) {
			return true;
		}
		queue.offer(root);
		while (!queue.isEmpty()) {
			int len = queue.size();
			for (int i = 0; i < len; i++) {
				TreeNode node = queue.poll();
				if (node.left != null) {
					queue.offer(node.left);
				} 
				else {
					if (node.right != null) {
						return false;
					}
					TreeNode temp = queue.poll();
					if (temp != null) {
						if (temp.left != null || temp.right != null) {
							return false;
						}
					} 
					else {
						return true;
					}
				}
				if (node.right != null) {
					queue.offer(node.right);
				} 
				else {
					TreeNode temp = queue.poll();
					if (temp.left != null || temp.right != null) {
						return false;
					} 
					else {
						return true;
					}
				}
			}
		}
		return true;
	}
}