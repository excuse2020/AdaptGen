class Solution {
	int[][] memo;
	int dp(int k, int n) {
		if (k == 1) {
			return n;
		}
		if (n == 0) {
			return 0;
		}
		if (memo[k][n] != -1) {
			return memo[k][n];
		}
		int res = Integer.MAX_VALUE;
		for (int i = 1; i <= n; i++) {
			res = Math.min(res,Math.max(dp(k - 1,i - 1),dp(k,n - i)) + 1);
		}
		memo[k][n] = res;
		return res;
	}
	int solve(int n, int k) {
		memo = new int[k + 1][n + 1];
		for (int[] m: memo) {	
			Arrays.fill(m,-1);
		}
		return dp(k,n);
	}
}