class Solution {
	ArrayList<String> getSolution(int n) {
		return new ArrayList<String>(solve(n,0,2));
	}
	String idxToStr(int idx) {
		if (idx == 0) {
			return "left";
		}
		if (idx == 1) {
			return "mid";
		}
		return "right";
	}
	String move(int x, int y) {
		return String.format("move from %s to %s",idxToStr(x),idxToStr(y));
	}
	LinkedList<String> solve(int n, int x, int y) {
		LinkedList<String> ret;
		if (n == 1) {
			ret = new LinkedList<>();
			ret.addLast(move(x,y));
			return ret;
		}
		ret = solve(n - 1,x,3 - x);
		ret.addLast(move(x,y));
		ret.addAll(solve(n - 1,3 - x,y));
		return ret;
	}
}