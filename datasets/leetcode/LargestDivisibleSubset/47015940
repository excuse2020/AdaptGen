class Solution {
	List<Integer> largestDivisibleSubset(int[] nums) {
		Arrays.sort(nums);
		int[] dp = new int[nums.length];
		int[] count = new int[nums.length];
		int ans = 0, max = 1;
		for (int i = 0; i < nums.length; i++) {
			dp[i] = i;
			count[i] = 1;
			for (int j = i - 1; j >= 0; j--) {
				if (nums[i] % nums[j] == 0 && count[i] < count[j] + 1) {
					dp[i] = j;
					count[i] = count[j] + 1;
					if (count[i] > max) {
						ans = i;
						max = count[i];
					}
				}
			}
		}
		List<Integer> list = new ArrayList();
		for (int i = 0; i < max; i++) {
			list.add(nums[ans]);
			ans = dp[ans];
		}
		return list;
	}
}