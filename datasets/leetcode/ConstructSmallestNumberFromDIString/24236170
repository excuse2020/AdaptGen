class Solution {
	String smallest_lex_res;
	void dfs(HashSet<Integer> hset, String temp, List<String> res, String pattern, int index, int lastnum) {
		if (index >= pattern.length()) {
			if (temp.length() == pattern.length() + 1) {
				if (smallest_lex_res == null || smallest_lex_res.compareTo(temp) > 0) {
					smallest_lex_res = temp;
				}
			}
			return;
		}
		int i = 1;
	}
	String smallestNumber(String pattern) {
		HashSet<Integer> hset = new HashSet<>();
		List<String> res = new ArrayList<>();
		for (int i = 1; i <= 9; i++) {
			hset.add(i);
			dfs(hset,"" + i,res,pattern,0,i);
			hset.remove(i);
			if (smallest_lex_res != null) {
				break;
			}
		}
		return smallest_lex_res;
	}
}