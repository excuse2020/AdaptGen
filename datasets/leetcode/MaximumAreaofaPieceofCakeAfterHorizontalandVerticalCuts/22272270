class Solution {
	int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
		int res = 0, mod = 1000000007;
		Arrays.sort(horizontalCuts);
		Arrays.sort(verticalCuts);
		int n = horizontalCuts.length;
		int m = verticalCuts.length;
		long diff1 = 0, diff2 = 0;
		long max1 = 0, max2 = 0;
		diff1 = horizontalCuts[0] - 0;
		max1 = Math.max(diff1,max1);
		diff2 = verticalCuts[0] - 0;
		max2 = Math.max(diff2,max2);
		diff1 = h - horizontalCuts[n - 1];
		max1 = Math.max(max1,diff1);
		diff2 = w - verticalCuts[m - 1];
		max2 = Math.max(max2,diff2);
		for (int i = 0; i < horizontalCuts.length - 1; i++) {
			diff1 = horizontalCuts[i + 1] - horizontalCuts[i];
			max1 = Math.max(max1,diff1);
		}
		for (int i = 0; i < verticalCuts.length - 1; i++) {
			diff2 = verticalCuts[i + 1] - verticalCuts[i];
			max2 = Math.max(max2,diff2);
		}
		res = (int) ((max1 % mod) * (max2 % mod) % mod);
		return res;
	}
}