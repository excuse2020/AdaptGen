class Solution {
	boolean find(TreeNode root, int val, StringBuilder sb) {
		if (root.val == val) {
			return true;
		}
		if (root.left != null && find(root.left,val,sb)) {
			sb.append("L");
		} 
		else if (root.right != null && find(root.right,val,sb)) {
			sb.append("R");
		}
		return sb.length() > 0;
	}
	String getDirections(TreeNode root, int startValue, int destValue) {
		StringBuilder a = new StringBuilder();
		StringBuilder b = new StringBuilder();
		find(root,startValue,a);
		find(root,destValue,b);
		int i = 0, maxl = Math.min(a.length(),b.length());
		while (i < maxl && a.charAt(a.length() - i) == b.charAt(b.length() - i)) {
			++i;
		}
		return "U".repeat(a.length() - i) + b.reverse().toString().substring(i);
	}
}