class Solution {
	int getMaxLines(int i, int j, int[] nums1, int[] nums2, Integer[][] memo) {
		if (i == nums1.length || j == nums2.length) {
			return 0;
		}
		if (memo[i][j] != null) {
			return memo[i][j];
		}
		int maxLines = Integer.MIN_VALUE;
		for (int index = j; index < nums2.length; index++) {
			if (nums1[i] == nums2[index]) {
				int count = getMaxLines(i + 1,index + 1,nums1,nums2,memo);
				if (count != -1) {
					maxLines = Math.max(maxLines,count + 1);
				}
				break;
			}
		}
		int count = getMaxLines(i + 1,j,nums1,nums2,memo);
		if (count != -1) {
			maxLines = Math.max(maxLines,count);
		}
		memo[i][j] = maxLines == Integer.MAX_VALUE ? -1 : maxLines;
		return memo[i][j];
	}
	int maxUncrossedLines(int[] nums1, int[] nums2) {
		Integer[][] memo = new Integer[nums1.length][nums2.length];
		return getMaxLines(0,0,nums1,nums2,memo);
	}
}