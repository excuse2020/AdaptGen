class Solution {
	boolean check(HashMap<Character, Integer> hm2, HashMap<Character, Integer> hm1) {
		for (Map.Entry<Character, Integer> e: hm2.entrySet()) {	
			char ch = e.getKey();
			int val = hm1.containsKey(ch) ? hm1.get(ch) : 0;
			if (Math.abs(e.getValue() - val) > 3) {
				return false;
			}
		}
		return true;
	}
	boolean checkAlmostEquivalent(String word1, String word2) {
		HashMap<Character, Integer> hm1 = new HashMap<>();
		HashMap<Character, Integer> hm2 = new HashMap<>();
		frequecyMap(word1,hm1);
		frequecyMap(word2,hm2);
		return check(hm1,hm2) && check(hm2,hm1);
	}
	void frequecyMap(String word1, HashMap<Character, Integer> hm1) {
		for (int i = 0; i < word1.length(); i++) {
			char ch = word1.charAt(i);
			if (hm1.containsKey(ch)) {
				hm1.put(ch,hm1.get(ch) + 1);
			} 
			else {
				hm1.put(ch,1);
			}
		}
	}
}