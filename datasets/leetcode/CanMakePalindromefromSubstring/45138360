class Solution {
	List<Boolean> canMakePaliQueries(String s, int[][] queries) {
		List<Boolean> sol = new ArrayList<>();
		for (int[] query: queries) {	
			boolean palindrome = false;
			int chances = 0;
			HashSet<Character> uniques = new HashSet<>();
			int[] letters = new int[26];
			if (query[1] == query[2]) {
				sol.add(true);
				continue;
			}
			for (int i = query[0]; i <= query[1]; ++i) {
				chances += Math.pow(-1,letters[s.charAt(i) % 26] + 2);
				++letters[s.charAt(i) % 26];
			}
			palindrome = (chances - (query[2] * 2) <= 0 + (query[1] - query[0] + 1) % 2);
			sol.add(palindrome);
		}
		return sol;
	}
}