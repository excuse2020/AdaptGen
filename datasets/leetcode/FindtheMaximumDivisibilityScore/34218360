class Solution {
	int maxDivScore(int[] nums, int[] divisors) {
		int n = nums.length;
		int m = divisors.length;
		List<List<Integer>> bucket = new ArrayList<>(n + 1);
		for (int i = 0; i <= n; i++) {
			bucket.add(new ArrayList<>());
		}
		for (int i = 0; i < divisors.length; i++) {
			int count = 0;
			for (int j: nums) {	
				if (j % divisors[i] == 0) {
					count++;
				}
			}
			bucket.get(count).add(divisors[i]);
		}
		for (int i = n; i >= 0; i--) {
			if (bucket.get(i).size() == 1) {
				return bucket.get(i).get(0);
			} 
			else if (bucket.get(i).size() > 1) {
				int min = Integer.MAX_VALUE;
				for (int e: bucket.get(i)) {	
					min = Math.min(e,min);
				}
				return min;
			}
		}
		return 1;
	}
}