class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long ans = 0;
		int l = 0;
		Set<Integer> elements = new HashSet<>();
		long subSum = 0;
		for (int r = 0; r < nums.length; r++) {
			int curr = nums[r];
			while ((r - l == k || elements.contains(curr)) && l <= r) {
				int left = nums[l];
				elements.remove(left);
				subSum -= left;
				l++;
			}
			elements.add(curr);
			subSum += curr;
			if (r - l + 1 == k) {
				ans = Math.max(ans,subSum);
			}
		}
		return ans;
	}
}