class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int i = 0;
		int currentCount = 0;
		int maxCount = 0;
		while (i < nums.length) {
			if (currentCount == 0) {
				if (nums[i] % 2 != 0 || nums[i] > threshold) {
					currentCount = 0;
				} 
				else {
					currentCount++;
				}
			} 
			else {
				if (nums[i] > threshold) {
					currentCount = 0;
				} 
				else {
					if ((nums[i - 1] % 2 == 0 && nums[i] % 2 != 0) || (nums[i - 1] % 2 != 0 && nums[i] % 2 == 0)) {
						currentCount++;
					} 
					else {
						if (nums[i] % 2 == 0) {
							currentCount = 1;
						} 
						else {
							currentCount = 0;
						}
					}
				}
			}
			i++;
			maxCount = Math.max(currentCount,maxCount);
		}
		return maxCount;
	}
}