class Solution {
	List<List<Integer>> pathSum(TreeNode root, int targetSum) {
		List<List<Integer>> ans = new ArrayList<List<Integer>>();
		List<Integer> path = new ArrayList<>();
		int sum = 0;
		solve(root,targetSum,sum,path,ans);
		return ans;
	}
	void solve(TreeNode root, int targetSum, int sum, List<Integer> path, List<List<Integer>> ans) {
		if (root == null) {
			return;
		}
		if (root.left == null && root.right == null) {
			sum += root.val;
			if (sum == targetSum) {
				path.add(root.val);
				ans.add(new ArrayList<>(path));
				path.remove(path.size() - 1);
			}
			return;
		}
		path.add(root.val);
		sum += root.val;
		solve(root.left,targetSum,sum,path,ans);
		solve(root.right,targetSum,sum,path,ans);
		path.remove(path.size() - 1);
	}
}