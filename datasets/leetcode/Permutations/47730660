class Solution {
	List<List<Integer>> f(int[] arr, List<Integer> tempAns, List<List<Integer>> ans, boolean[] check) {
		if (tempAns.size() == arr.length) {
			ans.add(new ArrayList<>(tempAns));
			return ans;
		}
		for (int i = 0; i < arr.length; i++) {
			if (!check[i]) {
				tempAns.add(arr[i]);
				check[i] = true;
				f(arr,tempAns,ans,check);
				tempAns.remove(tempAns.size() - 1);
				check[i] = false;
			}
		}
		return ans;
	}
	List<List<Integer>> permute(int[] arr) {
		List<List<Integer>> ans = new ArrayList<>();
		List<Integer> tempAns = new ArrayList<>();
		boolean[] check = new boolean[arr.length];
		return f(arr,tempAns,ans,check);
	}
}