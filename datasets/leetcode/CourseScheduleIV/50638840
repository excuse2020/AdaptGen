class Solution {
	List<Boolean> checkIfPrerequisite(int numCourses, int[][] prerequisites, int[][] queries) {
		int[][] graph = new int[numCourses][numCourses];
		int max = Integer.MAX_VALUE / 2;
		for (int[] row: graph) {	
			Arrays.fill(row,max);
		}
		for (int[] edge: prerequisites) {	
			graph[edge[0]][edge[1]] = 1;
		}
		for (int k = 0; k < numCourses; ++k) {
			for (int i = 0; i < numCourses; ++i) {
				for (int j = 0; j < numCourses; ++j) {
					graph[i][j] = Math.min(graph[i][j],graph[i][k] + graph[k][j]);
				}
			}
		}
		List<Boolean> result = new ArrayList<>();
		for (int[] query: queries) {	
			result.add(graph[query[0]][query[1]] != max);
		}
		return result;
	}
}