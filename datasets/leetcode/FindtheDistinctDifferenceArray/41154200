class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int[] pref = new int[nums.length];
		int[] suff = new int[nums.length];
		int[] diff = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			HashSet<Integer> hpref = new HashSet<>();
			HashSet<Integer> hsuff = new HashSet<>();
			for (int j = 0; j <= i; j++) {
				if (hpref.contains(nums[j])) {
				} 
				else {
					hpref.add(nums[j]);
					pref[i]++;
				}
			}
			for (int j = nums.length - 1; j > i; j--) {
				if (hsuff.contains(nums[j])) {
				} 
				else {
					hsuff.add(nums[j]);
					suff[i]++;
				}
			}
			diff[i] = pref[i] - suff[i];
		}
		return diff;
	}
}