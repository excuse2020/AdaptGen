class Solution {
	ListNode addInList(ListNode head1, ListNode head2) {
		ListNode result = null;
		int up = 0;
		List<Integer> list1 = new ArrayList<Integer>();
		List<Integer> list2 = new ArrayList<Integer>();
		List<Integer> list3 = new ArrayList<Integer>();
		while (head1 != null) {
			list1.add(head1.val);
			head1 = head1.next;
		}
		while (head2 != null) {
			list2.add(head2.val);
			head2 = head2.next;
		}
		int maxLength = Math.max(list1.size(),list2.size());
		for (int i = 1; i <= maxLength; i++) {
			int flag1 = list1.size() - i;
			int flag2 = list2.size() - i;
			int val1 = flag1 < 0 ? 0 : list1.get(flag1);
			int val2 = flag2 < 0 ? 0 : list2.get(flag2);
			int current = val1 + val2;
			up = current / 10;
			list3.add(current % 10);
		}
		if (up > 0) {
			list3.add(up);
		}
		if (list3.isEmpty()) {
			return result;
		}
		result = new ListNode(list3.get(list3.size() - 1));
		ListNode s = result;
		for (int i = list3.size() - 2; i >= 0; i--) {
			s.next = new ListNode(list3.get(i));
			s = s.next;
		}
		return result;
	}
}