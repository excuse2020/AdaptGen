class Solution {
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int n = spells.length;
		int m = potions.length;
		Arrays.sort(potions);
		int[] ans = new int[n];
		for (int i = 0; i < n; i++) {
			int spell = spells[i];
			int left = 0;
			int right = potions.length - 1;
			while (left <= right) {
				int mid = left + (right - left) / 2;
				long currSuccess = (long) spell * potions[mid];
				if (currSuccess >= success) {
					ans[i] += (right - mid) + 1;
					right = mid - 1;
				} 
				else if (currSuccess < success) {
					left = mid + 1;
				}
			}
		}
		return ans;
	}
}