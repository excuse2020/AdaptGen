class Solution {
	int earliestFullBloom(int[] plantTime, int[] growTime) {
		int n = plantTime.length;
		int grownTimeIndex = 0;
		int plantingTimeIndex = 1;
		int[][] time = new int[n][2];
		for (int i = 0; i < n; i++) {
			time[i][grownTimeIndex] = growTime[i];
			time[i][plantingTimeIndex] = plantTime[i];
		}
		Arrays.sort(time,(a, b) -> {b[0] - a[0]});
		int bloomDay = 0;
		int currPlantTime = 0;
		for (int j = 0; j < n; j++) {
			int ans = currPlantTime + time[j][plantingTimeIndex];
			bloomDay = Math.max(bloomDay,ans);
			currPlantTime += time[j][plantingTimeIndex];
		}
		return bloomDay;
	}
}