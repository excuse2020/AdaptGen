class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long max = 0;
		int i = 0;
		int j = 0;
		long sum = 0;
		Map<Integer, Integer> map = new HashMap<>();
		while (j < nums.length) {
			sum += nums[j];
			if (!map.containsKey(nums[j])) {
				map.put(nums[j],0);
			}
			map.put(nums[j],map.get(nums[j]) + 1);
			if (j - i + 1 < k) {
				j++;
			} 
			else {
				if (map.size() == k && sum > max) {
					max = sum;
				}
				sum -= nums[i];
				map.put(nums[i],map.get(nums[i]) - 1);
				if (map.get(nums[i]) == 0) {
					map.remove(nums[i]);
				}
				i++;
				j++;
			}
		}
		return max;
	}
}