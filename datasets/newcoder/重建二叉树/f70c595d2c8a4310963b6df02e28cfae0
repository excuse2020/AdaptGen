class Solution {
	TreeNode reConstructBinaryTree(int[] pre, int[] vin) {
		if (pre.length == 0) {
			return null;
		}
		return reConstructBinaryTree(pre,0,pre.length - 1,vin,0,vin.length - 1);
	}
	TreeNode reConstructBinaryTree(int[] pre, int left1, int right1, int[] vin, int left2, int right2) {
		if (left1 > right1) {
			return null;
		}
		TreeNode root = new TreeNode(pre[left1]);
		if (left1 == right1) {
			return root;
		}
		int rootIndex = left2;
		int rootVal = pre[left1];
		for (; rootIndex <= right2; rootIndex++) {
			if (vin[rootIndex] == rootVal) {
				break;
			}
		}
		int len1 = rootIndex - left2;
		root.left = reConstructBinaryTree(pre,left1 + 1,left1 + len1,vin,left2,rootIndex - 1);
		root.right = reConstructBinaryTree(pre,left1 + len1,right1,vin,rootIndex + 1,right2);
		return root;
	}
}