class Solution {
	int countPrimeSetBits(int left, int right) {
		int count = 0;
		for (int i = left; i <= right; i++) {
			count += function(i,0);
		}
		return count;
	}
	int function(int n, int count) {
		if (n == 0) {
			return (prime(count,2)) ? 1 : 0;
		}
		if ((n & 1) == 1) {
			count++;
		}
		return function(n >>> 1,count);
	}
	boolean prime(int n, int i) {
		if (n == 1) {
			return false;
		}
		if (i * i > n || n == 2) {
			return true;
		}
		if (n % i == 0 || n < 2) {
			return false;
		}
		return prime(n,i + 1);
	}
}