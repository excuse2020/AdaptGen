class Solution {
	List<List<Integer>> fourSum(int[] nums, int target) {
		Arrays.sort(nums);
		int i, j, x, y;
		List<List<Integer>> li = new ArrayList<>();
		long sum = 0;
		int n = nums.length;
		for (i = 0; i < n - 3; i++) {
			for (j = i + 1; j < n - 2; j++) {
				x = j + 1;
				y = n - 1;
				while (x < y) {
					sum = (long) nums[i] + (long) nums[j];
					if (sum < target) {
						x++;
					} 
					else if (sum > target) {
						y--;
					}
					if (sum == target) {
						List<Integer> li2 = new ArrayList<>();
						li2.add(nums[i]);
						li2.add(nums[j]);
						li2.add(nums[x]);
						li2.add(nums[y]);
						li.add(li2);
						while (x < y && nums[x] == nums[x + 1]) {
							x++;
						}
						while (y > x && nums[y] == nums[y - 1]) {
							y--;
						}
						x++;
						y--;
					}
				}
				while (j < n - 2 && nums[j] == nums[j + 1]) {
					j++;
				}
			}
			while (i < n - 3 && nums[i] == nums[i + 1]) {
				i++;
			}
		}
		return li;
	}
}