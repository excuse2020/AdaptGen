class Solution {
	ListNode merge(ListNode pHead1, ListNode pHead2) {
		ListNode cur = new ListNode(-1);
		ListNode root = cur;
		while (pHead1 != null || pHead2 != null) {
			if (pHead1 == null) {
				cur.next = pHead2;
				break;
			}
			if (pHead2 == null) {
				cur.next = pHead1;
				break;
			}
			int val1 = pHead1.val;
			int val2 = pHead2.val;
			if (val1 > val2) {
				cur.next = pHead2;
				pHead2 = pHead2.next;
			} 
			else {
				cur.next = pHead1;
				pHead1 = pHead1.next;
			}
			cur = cur.next;
		}
		return root.next;
	}
	ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists == null || lists.size() == 0) {
			return null;
		}
		if (lists.size() == 1) {
			return lists.get(0);
		}
		ListNode n1 = lists.get(0);
		for (int i = 1; i < lists.size(); i++) {
			n1 = merge(n1,lists.get(i));
		}
		return n1;
	}
}