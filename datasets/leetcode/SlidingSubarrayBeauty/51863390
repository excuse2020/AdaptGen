class Solution {
	int get(int[] tree, int x) {
		int i = 1;
		while (i < 64) {
			if (tree[2 * i] >= x) {
				i = 2 * i;
			} 
			else {
				x -= tree[2 * i];
				i = 2 * i + 1;
			}
		}
		return i - 114;
	}
	int[] getSubarrayBeauty(int[] n, int k, int x) {
		int[] a = new int[n.length - k + 1];
		int[] tree = new int[128];
		for (int i = 0; i < k - 1; i++) {
			tree[Math.min(n[i],0) + 114]++;
		}
		for (int i = 63; i > 0; i--) {
			tree[i] = tree[2 * i] + tree[2 * i + 1];
		}
		for (int z = 0; z < a.length; z++) {
			update(tree,Math.min(n[z + k - 1],0),1);
			a[z] = get(tree,x);
			update(tree,Math.min(n[z],0),-1);
		}
		return a;
	}
	void update(int[] tree, int i, int v) {
		i += 114;
		for (; i > 0; i >>= 1) {
			tree[i] += v;
		}
	}
}