class Solution {
	int[] MySort(int[] arr) {
		quickSort(arr,0,arr.length - 1);
		return arr;
	}
	int partition(int[] list, int left, int right) {
		int first = list[left];
		while (left < right) {
			while (left < right && list[right] >= first) {
				right--;
			}
			swap(list,left,right);
			while (left < right && list[left] <= first) {
				left++;
			}
			swap(list,left,right);
		}
		return left;
	}
	void quickSort(int[] list, int left, int right) {
		if (left < right) {
			int point = partition(list,left,right);
			quickSort(list,left,point - 1);
			quickSort(list,point + 1,right);
		}
	}
	void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}