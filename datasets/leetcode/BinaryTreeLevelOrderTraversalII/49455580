class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> mainList = new ArrayList<>();
		if (root == null) {
			return mainList;
		}
		Queue<TreeNode> qu = new LinkedList<>();
		qu.offer(root);
		while (!qu.isEmpty()) {
			List<Integer> list = new ArrayList<>();
			int size = qu.size();
			while (size-- > 0) {
				TreeNode curr = qu.poll();
				list.add(curr.val);
				if (curr.left != null) {
					qu.offer(curr.left);
				}
				if (curr.right != null) {
					qu.offer(curr.right);
				}
			}
			mainList.add(list);
		}
		Collections.reverse(mainList);
		return mainList;
	}
}