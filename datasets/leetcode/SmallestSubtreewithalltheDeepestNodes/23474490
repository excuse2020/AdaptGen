class Solution {
	int deepest;
	TreeNode lca;
	int helper(TreeNode root, int depth) {
		deepest = Math.max(deepest,depth);
		if (root == null) {
			return depth;
		}
		int left = helper(root.left,depth + 1);
		int right = helper(root.right,depth + 1);
		if (left == deepest && right == deepest) {
			lca = root;
		}
		depth = Math.max(left,right);
		return depth;
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		deepest = 0;
		lca = null;
		helper(root,0);
		return lca;
	}
}