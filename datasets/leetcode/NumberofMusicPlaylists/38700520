class Solution {
	long[][] dp;
	int k;
	int kMod = 1_000_000_007;
	int n;
	int numMusicPlaylists(int n, int goal, int k) {
		this.n = n;
		this.k = k;
		dp = new long[goal + 1][n + 1];
		Arrays.stream(dp).forEach((row) -> {Arrays.fill(row,-1)});
		return (int) playlists(goal,n);
	}
	long playlists(int i, int j) {
		if (i == 0) {
			return j == 0 ? 1 : 0;
		}
		if (j == 0) {
			return 0;
		}
		if (dp[i][j] >= 0) {
			return dp[i][j];
		}
		dp[i][j] = playlists(i - 1,j - 1) * (n - (j - 1));
		dp[i][j] += playlists(i - 1,j) * Math.max(0,j - k);
		return dp[i][j] %= kMod;
	}
}