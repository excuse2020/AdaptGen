class Solution {
	Integer ans = 0;
	boolean[][] isVisited;
	void solution2(int x, int y, int m, int n, int pre, int[][] matrix, int length) {
		if (x < 0 || x >= m || y < 0 || y >= n || isVisited[x][y] || matrix[x][y] <= pre) {
			ans = Math.max(ans,length);
			return;
		} 
		else {
			isVisited[x][y] = true;
			solution2(x - 1,y,m,n,matrix[x][y],matrix,length + 1);
			solution2(x + 1,y,m,n,matrix[x][y],matrix,length + 1);
			solution2(x,y - 1,m,n,matrix[x][y],matrix,length + 1);
			solution2(x,y + 1,m,n,matrix[x][y],matrix,length + 1);
			isVisited[x][y] = false;
		}
	}
	int solve(int[][] matrix) {
		int m = matrix.length;
		int n = matrix[0].length;
		isVisited = new boolean[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				solution2(i,j,m,n,-1,matrix,0);
			}
		}
		return ans;
	}
}