class Solution {
	ListNode modifiedList(int[] nums, ListNode head) {
		int count = 0;
		ListNode current = head;
		while (current != null) {
			count++;
			current = current.next;
		}
		current = head;
		int[] result = new int[count];
		int k = 0;
		while (current != null) {
			result[k++] = current.val;
			current = current.next;
		}
		List<Integer> list = new ArrayList<>();
		HashMap<Integer, Integer> hm = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			if (!hm.containsKey(nums[i])) {
				hm.put(nums[i],1);
			}
		}
		for (int i = 0; i < count; i++) {
			if (!hm.containsKey(result[i])) {
				list.add(result[i]);
			}
		}
		ListNode dummy = new ListNode(0);
		ListNode newnode = dummy;
		int size = list.size();
		int value = 0;
		while (value < size) {
			ListNode newlist = new ListNode(list.get(value));
			newnode.next = newlist;
			newnode = newlist;
			value++;
		}
		return dummy.next;
	}
}