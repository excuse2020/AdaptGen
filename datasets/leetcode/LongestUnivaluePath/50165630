class Solution {
	int max = 0;
	int helper(TreeNode node, int parentval) {
		if (node == null) {
			return 0;
		}
		if (node.val == parentval) {
			int left = helper(node.left,parentval);
			int right = helper(node.right,parentval);
			max = Math.max(left + right,max);
			return Math.max(left,right) + 1;
		}
		int left = helper(node.left,node.val);
		int right = helper(node.right,node.val);
		max = Math.max(left + right,max);
		return 0;
	}
	int longestUnivaluePath(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int total = helper(root.left,root.val) + helper(root.right,root.val);
		return Math.max(total,max);
	}
}