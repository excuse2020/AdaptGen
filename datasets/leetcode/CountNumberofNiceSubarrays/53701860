class Solution {
	int atMost(int[] nums, int k) {
		int left = 0, sum = 0;
		int right = 0;
		int maxlen = 0, count = 0;
		if (k < 0) {
			return 0;
		}
		while (right < nums.length) {
			sum += ((nums[right]) % 2);
			while (sum > k) {
				sum -= ((nums[left]) % 2);
				left++;
			}
			count = count + (right - left + 1);
			right++;
		}
		return count;
	}
	int numberOfSubarrays(int[] nums, int k) {
		return atMost(nums,k) - atMost(nums,k - 1);
	}
}