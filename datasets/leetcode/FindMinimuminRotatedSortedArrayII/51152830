class Solution {
	int findMin(int[] nums) {
		int pivot = pivot(nums);
		if (pivot < nums.length - 1) {
			return nums[pivot + 1];
		}
		return nums[0];
	}
	int pivot(int[] arr) {
		int l = 0;
		int h = arr.length - 1;
		while (l <= h) {
			int mid = l + (h - l) / 2;
			if (mid < h && arr[mid] > arr[mid + 1]) {
				return mid;
			}
			if (mid > l && arr[mid] < arr[mid - 1]) {
				return mid - 1;
			}
			if (arr[l] == arr[mid] && arr[mid] == arr[h]) {
				if (l < h && arr[l] > arr[l + 1]) {
					return l;
				}
				l++;
				if (h > l && arr[h] < arr[h - 1]) {
					return h - 1;
				}
				h--;
			} 
			else if (arr[l] < arr[mid] || (arr[l] == arr[mid] && arr[mid] > arr[h])) {
				l = mid + 1;
			} 
			else {
				h = mid - 1;
			}
		}
		return -1;
	}
}