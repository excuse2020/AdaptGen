class Solution {
	int[][] spiralMatrix(int n, int m, ListNode head) {
		int ans = new int[n][m];
		ListNode temp = head;
		int tr = 0;
		int br = n - 1;
		int lc = 0;
		int rc = m - 1;
		int count = 1;
		while (count <= n * m) {
			for (int i = lc; i <= rc; i++) {
				if (tr > br) {
					break;
				}
				if (temp != null) {
					ans[tr][i] = temp.val;
					temp = temp.next;
				} 
				else {
					ans[tr][i] = -1;
				}
				count++;
			}
			tr++;
			for (int i = tr; i <= br; i++) {
				if (lc > rc) {
					break;
				}
				if (temp != null) {
					ans[i][rc] = temp.val;
					temp = temp.next;
				} 
				else {
					ans[i][rc] = -1;
				}
				count++;
			}
			rc--;
			for (int i = rc; i >= lc; i--) {
				if (tr > br) {
					break;
				}
				if (temp != null) {
					ans[br][i] = temp.val;
					temp = temp.next;
				} 
				else {
					ans[br][i] = -1;
				}
				count++;
			}
			br--;
			for (int i = br; i >= tr; i--) {
				if (lc > rc) {
					break;
				}
				if (temp != null) {
					ans[i][lc] = temp.val;
					temp = temp.next;
				} 
				else {
					ans[i][lc] = -1;
				}
				count++;
			}
			lc++;
		}
		return ans;
	}
}