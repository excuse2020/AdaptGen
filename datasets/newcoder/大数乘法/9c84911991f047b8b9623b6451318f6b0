class Solution {
	String bigNumberAdd(String num1, String num2) {
		if (num1 == null || num1.length() == 0 || num2 == null || num2.length() == 0) {
			return null;
		}
		int index1 = num1.length() - 1;
		int index2 = num2.length() - 1;
		StringBuilder res = new StringBuilder();
		int carry = 0;
		while (index1 >= 0 || index2 >= 0) {
			int x = index1 >= 0 ? num1.charAt(index1--) - '0' : 0;
			int y = index2 >= 0 ? num2.charAt(index2--) - '0' : 0;
			int num = x + y;
			res.append(num % 10);
			carry = num / 10;
		}
		if (carry != 0) {
			res.append(carry);
		}
		return res.reverse().toString();
	}
	String solve(String num1, String num2) {
		if (num1 == null || num1.length() == 0 || num2 == null || num2.length() == 0) {
			return null;
		}
		if ("0".equals(num1) || "0".equals(num2)) {
			return "0";
		}
		char[] chars1 = num1.toCharArray();
		char[] chars2 = num2.toCharArray();
		String res = "0";
		int zero = 0;
		for (int i = chars2.length - 1; i >= 0; i--) {
			StringBuilder temp = new StringBuilder();
			int carry = 0;
			for (int j = 0; j < zero; j++) {
				temp.append('0');
			}
			zero++;
			int y = chars2[i] - '0';
			for (int j = chars1.length - 1; j >= 0; j--) {
				int x = chars1[j] - '0';
				int num = x * y + carry;
				temp.append(num % 10);
				carry = num / 10;
			}
			if (carry != 0) {
				temp.append(carry);
			}
			res = bigNumberAdd(res,temp.reverse().toString());
		}
		return res;
	}
}