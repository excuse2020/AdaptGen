class Solution {
	int depth_first_search(TreeNode root_node) {
		if (root_node == null) {
			return 0;
		}
		int left_subtree_sum = depth_first_search(root_node.left);
		int right_subtree_sum = depth_first_search(root_node.right);
		if (left_subtree_sum == 0) {
			root_node.left = null;
		}
		if (right_subtree_sum == 0) {
			root_node.right = null;
		}
		return (root_node.val + left_subtree_sum);
	}
	TreeNode pruneTree(TreeNode root_node) {
		int total_sum = depth_first_search(root_node);
		return ((total_sum == 0) ? (null) : (root_node));
	}
}