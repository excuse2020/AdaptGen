class Solution {
	int minEatingSpeed(int[] piles, int h) {
		int ans = 0;
		int start = 1;
		int end = 1000000000 + 1;
		while (start < end) {
			int mid = start + (end - start) / 2;
			int time = time(mid,piles);
			if (time <= h) {
				ans = mid;
				end = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return ans;
	}
	int time(int mid, int[] piles) {
		int sum = 0;
		for (int i = 0; i < piles.length; i++) {
			if (piles[i] % mid == 0) {
				sum += piles[i] / mid;
			} 
			else {
				sum += piles[i] / mid + 1;
			}
		}
		return sum;
	}
}