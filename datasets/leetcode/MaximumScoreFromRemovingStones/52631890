class Solution {
	int maximumScore(int a, int b, int c) {
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>((x, y) -> {y - x});
		maxHeap.addAll(Arrays.asList(a,b,c));
		int score = 0;
		while (maxHeap.size() > 1) {
			int remainingStonesInPile1 = maxHeap.poll() - 1;
			int remainingStonesInPile2 = maxHeap.poll() - 1;
			++score;
			if (remainingStonesInPile1 > 0) {
				maxHeap.add(remainingStonesInPile1);
			}
			if (remainingStonesInPile2 > 0) {
				maxHeap.add(remainingStonesInPile2);
			}
		}
		return score;
	}
}