class Solution {
	String removeDuplicates(String s, int k) {
		Stack<Pair<Character, Integer>> st = new Stack<>();
		for (char ch: s.toCharArray()) {	
			if (st.isEmpty()) {
				st.push(new Pair<Character, Integer>(ch, 1));
			} 
			else {
				if (ch == st.peek().getKey()) {
					Pair<Character, Integer> p = st.pop();
					st.push(new Pair<Character, Integer>(ch, p.getValue() + 1));
					if (st.peek().getValue() == k) {
						st.pop();
					}
				} 
				else {
					st.push(new Pair<Character, Integer>(ch, 1));
				}
			}
		}
		StringBuilder sb = new StringBuilder();
		while (!st.isEmpty()) {
			Pair<Character, Integer> p = st.pop();
			char a = p.getKey();
			int b = p.getValue();
			while (b-- > 0) {
				sb.append(a);
			}
		}
		return sb.reverse().toString();
	}
}