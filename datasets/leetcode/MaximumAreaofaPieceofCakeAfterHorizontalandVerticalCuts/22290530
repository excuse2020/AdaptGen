class Solution {
	int maxArea(int h, int w, int[] hCuts, int[] vCuts) {
		Arrays.sort(hCuts);
		Arrays.sort(vCuts);
		int n = hCuts.length;
		int m = vCuts.length;
		int mod = (int) 1e9 + 7;
		ArrayList<Integer> Horizontal = new ArrayList<>();
		ArrayList<Integer> Vertical = new ArrayList<>();
		Horizontal.add(hCuts[0]);
		Vertical.add(vCuts[0]);
		for (int i = 1; i < n; i++) {
			Horizontal.add((hCuts[i] - hCuts[i - 1]) % mod);
		}
		Horizontal.add((h - hCuts[n - 1] % mod));
		for (int i = 1; i < m; i++) {
			Vertical.add((vCuts[i] - vCuts[i - 1] % mod));
		}
		Vertical.add((w - vCuts[m - 1]) % mod);
		long max1 = Collections.max(Horizontal);
		long max2 = Collections.max(Vertical);
		int ans = (int) ((long) (max1 * max2) % mod);
		return ans;
	}
}