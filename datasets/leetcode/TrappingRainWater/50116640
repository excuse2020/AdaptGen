class Solution {
	int trap(int[] height) {
		int n = height.length;
		int[] smax = new int[n];
		int[] pmax = new int[n];
		smax[n - 1] = height[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			smax[i] = Math.max(smax[i + 1],height[i]);
		}
		pmax[0] = height[0];
		for (int i = 1; i < n; i++) {
			pmax[i] = Math.max(pmax[i - 1],height[i]);
		}
		int amount = 0;
		for (int i = 0; i < n; i++) {
			int lb = pmax[i];
			int rb = smax[i];
			int yb = Math.min(lb,rb);
			int contri = yb - height[i];
			if (contri > 0) {
				amount = amount + contri;
			}
		}
		return amount;
	}
}