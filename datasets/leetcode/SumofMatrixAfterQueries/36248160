class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		Set<Integer> rowVisited = new HashSet<>();
		Set<Integer> colVisited = new HashSet<>();
		long sum = 0;
		for (int i = queries.length - 1; i >= 0; i--) {
			int[] q = queries[i];
			int type = q[0];
			int index = q[1];
			int val = q[2];
			if (type == 0) {
				if (!rowVisited.contains(index)) {
					sum += (n - colVisited.size()) * val;
					rowVisited.add(index);
				}
			} 
			else {
				if (!colVisited.contains(index)) {
					sum += (n - rowVisited.size()) * val;
					colVisited.add(index);
				}
			}
		}
		return sum;
	}
}