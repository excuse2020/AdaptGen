class Solution {
	int[] applyOperations(int[] nums) {
		int n = nums.length;
		int steps = 0;
		while (steps != n - 1) {
			for (int i = steps; i < n - 1; i++) {
				if (nums[i] == nums[i + 1]) {
					nums[i] = nums[i] * 2;
					nums[i + 1] = 0;
				}
			}
			steps++;
		}
		List<Integer> l = new ArrayList<>();
		int c = 0;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 0) {
				c += 1;
			} 
			else if (nums[i] != 0) {
				l.add(nums[i]);
			}
		}
		for (int i = 0; i < c; i++) {
			l.add(0);
		}
		int[] p = new int[l.size()];
		for (int i = 0; i < l.size(); i++) {
			p[i] = l.get(i);
		}
		return p;
	}
}