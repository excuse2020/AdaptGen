class Solution {
	int[] nextPermutation(int[] nums) {
		int len = nums.length;
		int i = len - 2;
		int j = len - 1;
		int k = len - 1;
		while (i >= 0 && nums[i] >= nums[j]) {
			i--;
			j--;
		}
		if (i >= 0) {
			int l = i;
			int r = len;
			while (l < r) {
				int mid = (r + l) / 2;
				if (nums[mid] <= nums[i]) {
					r = mid;
				} 
				else {
					l = mid + 1;
				}
			}
			swap(nums,i,l - 1);
		}
		reverse(nums,j,len - 1);
		return nums;
	}
	void reverse(int[] nums, int a, int b) {
		while (a < b) {
			swap(nums,a++,b--);
		}
	}
	void swap(int[] nums, int a, int b) {
		int temp = nums[a];
		nums[a] = nums[b];
		nums[b] = temp;
	}
}