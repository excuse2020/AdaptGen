class Solution {
	int threeSumMulti(int[] arr, int target) {
		Map<Integer, Long> frequencyMapper = new HashMap<>();
		long answer = 0;
		for (int element: arr) {	
			frequencyMapper.put(element,frequencyMapper.getOrDefault(element,0l) + 1l);
		}
		for (Integer i: frequencyMapper.keySet()) {	
			for (Integer j: frequencyMapper.keySet()) {	
				int k = target - i;
				if (frequencyMapper.containsKey(k)) {
					long ifreq = frequencyMapper.get(i);
					long jfreq = frequencyMapper.get(j);
					long kfreq = frequencyMapper.get(k);
					if (i == j && j == k) {
						answer += ((ifreq) * (ifreq - 1)) / 6;
					} 
					else if (i == j && j != k) {
						answer += ((ifreq) * (ifreq - 1)) / 2 * kfreq;
					} 
					else if (i < j && j < k) {
						answer += ifreq * jfreq;
					}
				}
				answer %= 1000000007;
			}
		}
		return (int) answer;
	}
}