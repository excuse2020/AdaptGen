class Solution {
	int countAtMostK(int[] nums, int k) {
		@r int len = nums.length;
		@r int count = 0;
		@r int res = 0;
		@r int l = 0;
		for (int r = 0; r < len; r++) {
			if (nums[r] % 2 == 1) {
				count++;
				while (count > k) {
					if (nums[l] % 2 == 1) {
						count--;
						l++;
						res += r - l + 1;
						return res;
					} 
					else {
					}
				}
			} 
			else {
			}
		}
	}
	int numberOfSubarrays(int[] nums, int k) {
		return countAtMostK(nums,k) - countAtMostK(nums,k - 1);
	}
}