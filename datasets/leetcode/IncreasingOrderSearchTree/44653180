class Solution {
	Stack<TreeNode> a = new Stack<>();
	boolean chk(TreeNode x) {
		if (x == null) {
			return false;
		}
		return true;
	}
	TreeNode increasingBST(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		TreeNode node = root;
		insert(node);
		node = a.pop();
		root = node;
		TreeNode prev = root;
		int count = 0;
		while (!a.isEmpty() || node != null) {
			if (chk(node.right)) {
				insert(node.right);
			}
			TreeNode x = new TreeNode(node.val);
			if (count == 0) {
				root = x;
				prev = x;
			} 
			else {
				prev.right = x;
				prev = x;
			}
			if (a.isEmpty()) {
				break;
			}
			node = a.pop();
			count++;
		}
		return root;
	}
	void insert(TreeNode x) {
		while (x != null) {
			a.push(x);
			x = x.left;
		}
	}
}