class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		Queue<TreeNode> q = new LinkedList<>();
		List<List<Integer>> list = new ArrayList<>();
		if (root == null) {
			return list;
		}
		q.add(root);
		while (!q.isEmpty()) {
			int s = q.size();
			List<Integer> li = new ArrayList<>();
			for (int i = 0; i < s; i++) {
				TreeNode curr = q.poll();
				li.add(curr.val);
				if (curr.left != null) {
					q.add(curr.left);
				}
				if (curr.right != null) {
					q.add(curr.right);
				}
			}
			list.add(li);
		}
		Collections.reverse(list);
		return list;
	}
}