class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] result = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				result[i][j] = -1;
			}
		}
		int row_start = 0;
		int col_start = 0;
		int row_end = m - 1;
		int col_end = n - 1;
		int count = 4;
		ListNode p = head;
		while (p != null) {
			if (count == 4) {
				int ite = col_start;
				while (ite <= col_end && p != null) {
					result[row_start][ite] = p.val;
					p = p.next;
					ite++;
				}
				row_start++;
			}
			if (count == 3) {
				int ite = row_start;
				while (ite <= row_end && p != null) {
					result[ite][col_end] = p.val;
					p = p.next;
					ite++;
				}
				col_end--;
			}
			if (count == 2) {
				int ite = col_end;
				while (ite >= col_start && p != null) {
					result[row_end][ite] = p.val;
					p = p.next;
					ite--;
				}
				row_end--;
			}
			if (count == 1) {
				int ite = row_end;
				while (ite >= row_start && p != null) {
					result[ite][col_start] = p.val;
					p = p.next;
					ite--;
				}
				col_start++;
			}
			count--;
			if (count == 0) {
				count = 4;
			}
		}
		return result;
	}
}