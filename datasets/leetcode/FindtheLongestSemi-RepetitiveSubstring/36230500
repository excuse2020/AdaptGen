class Solution {
	int longestSemiRepetitiveSubstring(String s) {
		int i = 1, len = s.length(), maxLen = 1, localMax = 1, pairs = 0, lastPairIndex = -1;
		while (i < len) {
			if (pairs == 0) {
				if (s.charAt(i) == s.charAt(i - 1)) {
					pairs = 1;
					lastPairIndex = i;
				}
				localMax++;
			} 
			else {
				if (s.charAt(i) == s.charAt(i - 1)) {
					pairs = 1;
					maxLen = Math.max(maxLen,localMax);
					localMax = i - lastPairIndex + 1;
					lastPairIndex = i;
				} 
				else {
					localMax++;
				}
			}
			i++;
		}
		return Math.max(maxLen,localMax);
	}
}