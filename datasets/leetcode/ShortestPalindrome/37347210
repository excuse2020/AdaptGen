class Solution {
	String shortestPalindrome(String s) {
		int pos = new int[s.length()];
		int j = 0;
		for (int i = 1; i < s.length(); i++) {
			if (s.charAt(j) == s.charAt(i)) {
				j++;
			} 
			else {
				while (s.charAt(j) != s.charAt(i) && j > 0) {
					j = pos[j - 1];
				}
				if (s.charAt(j) == s.charAt(i)) {
					j++;
				}
			}
			pos[i] = j;
		}
		System.out.println(Arrays.toString(pos));
		j = 0;
		for (int i = s.length() - 1; i >= 0; i--) {
			if (s.charAt(i) == s.charAt(j)) {
				j++;
			} 
			else {
				while (s.charAt(i) != s.charAt(j) && j > 0) {
					j = pos[j - 1];
				}
				if (s.charAt(i) == s.charAt(j)) {
					j++;
				}
			}
		}
		String rev = (new StringBuffer(s.substring(j))).reverse().toString();
		return rev + s;
	}
}