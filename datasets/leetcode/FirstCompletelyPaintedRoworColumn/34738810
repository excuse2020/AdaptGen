class Solution {
	int firstCompleteIndex(int[] arr, int[][] mat) {
		int m = mat.length;
		int n = mat[0].length;
		boolean[][] mark = new boolean[m][n];
		int[][] map = new int[m * n][2];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				map[mat[i][j] - 1][0] = i;
				map[mat[i][j] - 1][1] = j;
			}
		}
		for (int i = 0; i < m * n; i++) {
			int[] p = map[arr[i] - 1];
			mark[p[0]][p[1]] = true;
			if (valid(mark,p[0],p[1])) {
				return i;
			}
		}
		return 0;
	}
	boolean valid(boolean[][] mark, int x, int y) {
		int m = mark.length;
		int n = mark[0].length;
		boolean hit = true;
		for (int i = 0; i < m; i++) {
			if (!mark[i][y]) {
				hit = false;
				break;
			}
		}
		if (hit) {
			return true;
		}
		for (int j = 0; j < n; j++) {
			if (!mark[x][j]) {
				return false;
			}
		}
		return true;
	}
}