class Solution {
	int[] playersWithSkill = new int[1001];
	long dividePlayers(int[] skill) {
		int len = skill.length;
		if (len == 2) {
			return skill[0] * skill[1];
		}
		int max = 1, min = 1000;
		for (int i = 0; i < len; i++) {
			int sk = skill[i];
			if (sk > max) {
				max = sk;
			}
			if (sk < min) {
				min = sk;
			}
		}
		for (int i = 0; i < 1001; i++) {
			playersWithSkill[i] = 0;
		}
		for (int i = 0; i < len; i++) {
			playersWithSkill[skill[i]]++;
		}
		long result = 0;
		int firstIdx = min;
		int lastIdx = min + (max - min) / 2;
		for (int i = firstIdx; i <= lastIdx; i++) {
			int skillOfWeakestInTeam = i;
			int skillOfStrongestInTeam = max - (i - min);
			if (playersWithSkill[skillOfWeakestInTeam] != playersWithSkill[skillOfStrongestInTeam]) {
				return -1;
			}
			int playersLeft = skillOfWeakestInTeam == skillOfStrongestInTeam ? playersWithSkill[i] / 2 : playersWithSkill[i];
			for (int j = 0; j < playersLeft; j++) {
				result += skillOfWeakestInTeam * skillOfStrongestInTeam;
			}
		}
		return result;
	}
}