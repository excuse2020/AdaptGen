class Solution {
	ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
		Queue<TreeNode> q = new LinkedList<>();
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		ArrayList<Integer> l = new ArrayList<>();
		if (pRoot == null) {
			return ans;
		}
		q.add(pRoot);
		TreeNode split = new TreeNode(0);
		q.add(split);
		while (q.size() != 1) {
			TreeNode curr = q.poll();
			if (curr == split) {
				ans.add(l);
				l = new ArrayList<>();
				q.add(split);
				continue;
			}
			l.add(curr.val);
			if (curr.left != null) {
				q.add(curr.left);
			}
			if (curr.right != null) {
				q.add(curr.right);
			}
		}
		if (l.size() != 0) {
			ans.add(l);
		}
		return ans;
	}
}