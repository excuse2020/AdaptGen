class Solution {
	int garbageCollection(String[] garbage, int[] travel) {
		int indxlastG = garbage.length - 1;
		int indxlastP = garbage.length - 1;
		int indxlastM = garbage.length - 1;
		while (indxlastP >= 0 && !garbage[indxlastP].contains("P")) {
			indxlastP--;
		}
		while (indxlastM >= 0 && !garbage[indxlastM].contains("M")) {
			indxlastM--;
		}
		while (indxlastG >= 0 && !garbage[indxlastG].contains("G")) {
			indxlastG--;
		}
		int time = garbage[0].length();
		for (int i = 1; i < garbage.length; i++) {
			if (i <= indxlastG) {
				time += travel[i - 1];
			}
			if (i <= indxlastM) {
				time += travel[i - 1];
			}
			if (i <= indxlastP) {
				time += travel[i - 1];
			}
			time += garbage[i].length();
		}
		return time;
	}
}