class Solution {
	String lcp(String s, String t) {
		int N = Math.min(s.length(),t.length());
		for (int i = 0; i < N; i++) {
			if (s.charAt(i) != t.charAt(i)) {
				return s.substring(0,i);
			}
		}
		return s.substring(0,N);
	}
	String longestDupSubstring(String S) {
		int N = S.length();
		String lrs = "";
		for (int i = 0; i < N; i++) {
			for (int j = i + 1; j < N; j++) {
				String x = lcp(S.substring(i,N),S.substring(j,N));
				if (x.length() > lrs.length()) {
					lrs = x;
				}
			}
		}
		return lrs;
	}
}