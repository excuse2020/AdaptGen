class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		int[][] dp = new int[triangle.size()][triangle.size()];
		for (int i = 0; i < triangle.size(); i++) {
			for (int j = 0; j <= i; j++) {
				if (i == 0) {
					dp[i][j] = triangle.get(i).get(j);
				} 
				else {
					if (j != 0 && j != i) {
						dp[i][j] = Math.min(dp[i - 1][j - 1],dp[i - 1][j]) + triangle.get(i).get(j);
					} 
					else {
						if (j == 0) {
							dp[i][j] = dp[i - 1][j] + triangle.get(i).get(j);
						} 
						else {
							dp[i][j] = dp[i - 1][j - 1] + triangle.get(i).get(j);
						}
					}
				}
			}
		}
		return Arrays.stream(dp[dp.length - 1]).min().getAsInt();
	}
}