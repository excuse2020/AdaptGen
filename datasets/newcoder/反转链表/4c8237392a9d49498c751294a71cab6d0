class Solution {
	ListNode ReverseList(ListNode head) {
		ListNode prev = null;
		ListNode curr = head;
		while (curr != null) {
			ListNode next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
	ListNode ReverseList(ListNode head) {
		Stack<ListNode> stack = new Stack<>();
		while (head != null) {
			stack.push(head);
			head = head.next;
		}
		if (stack.isEmpty()) {
			return null;
		}
		ListNode lastNode = stack.pop();
		ListNode newHead = lastNode;
		while (!stack.isEmpty()) {
			ListNode temp = stack.pop();
			lastNode.next = temp;
			lastNode = lastNode.next;
		}
		lastNode.next = null;
		return newHead;
	}
}