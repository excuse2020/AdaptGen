class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int count = 0;
		int n = grid.length;
		int maxOfRows = new int[n];
		int maxOfColumns = new int[n];
		for (int i = 0; i < n; i++) {
			int max = 0;
			for (int j = 0; j < n; j++) {
				if (max < grid[i][j]) {
					max = grid[i][j];
				}
			}
			maxOfRows[i] = max;
		}
		for (int j = 0; j < n; j++) {
			int max = 0;
			for (int i = 0; i < n; i++) {
				if (max < grid[i][j]) {
					max = grid[i][j];
				}
			}
			maxOfColumns[j] = max;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				count += Math.min(maxOfColumns[i],maxOfRows[j]) - grid[i][j];
			}
		}
		return count;
	}
}