class Solution {
	int numberOfPaths(int[][] grid, int l) {
		int MOD = 1_000_000_007;
		int m = grid.length, n = grid[0].length;
		int[][][] dp = new int[m][n][l];
		dp[0][0][grid[0][0] % l] = 1;
		for (int i = 1; i < m; i++) {
			for (int k = 0; k < l; k++) {
				int cur = (grid[i][0] + k) % l;
				dp[i][0][cur] = (dp[i][0][cur] + dp[i - 1][0][k]) % MOD;
			}
		}
		for (int j = 1; j < n; j++) {
			for (int k = 0; k < l; k++) {
				int cur = (grid[0][j] + k) % l;
				dp[0][j][cur] = (dp[0][j][cur] + dp[0][j - 1][k]) % MOD;
			}
		}
		for (int i = 1; i < m; i++) {
			for (int j = 1; j < n; j++) {
				for (int k = 0; k < l; k++) {
					int cur = (grid[i][j] + k) % l;
					dp[i][j][cur] = (dp[i][j][cur] + dp[i][j - 1][k]) % MOD;
					dp[i][j][cur] = (dp[i][j][cur] + dp[i - 1][j][k]) % MOD;
				}
			}
		}
		return dp[m - 1][n - 1][0];
	}
}