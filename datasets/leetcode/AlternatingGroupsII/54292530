class Solution {
	int numberOfAlternatingGroups(int[] colors, int k) {
		int n = colors.length;
		int count = 0;
		boolean isAlternating = true;
		for (int i = 0; i < k - 1; i++) {
			if (colors[i] == colors[(i + 1) % n]) {
				isAlternating = false;
				break;
			}
		}
		if (isAlternating) {
			count++;
		}
		for (int i = 1; i < n; i++) {
			int newTile = (i + k - 1) % n;
			int prevTile = (i - 1) % n;
			isAlternating &= colors[prevTile] != colors[i % n];
			isAlternating &= colors[(i + k - 2) % n] != colors[newTile];
			if (isAlternating) {
				count++;
			} 
			else {
				isAlternating = true;
				for (int j = 0; j < k - 1; j++) {
					if (colors[(i + j) % n] == colors[(i + j + 1) % n]) {
						isAlternating = false;
						break;
					}
				}
				if (isAlternating) {
					count++;
				}
			}
		}
		return count;
	}
}