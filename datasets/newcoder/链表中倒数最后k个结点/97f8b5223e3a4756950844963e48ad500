class Solution {
	ListNode FindKthToTail(ListNode pHead, int k) {
		Deque<ListNode> d = new ArrayDeque<>();
		ArrayList list = new ArrayList();
		ListNode listNode = null;
		if (pHead == null) {
			return listNode;
		} 
		else {
			while (pHead != null) {
				list.add(pHead.val);
				pHead = pHead.next;
			}
			if (k > list.size() || k <= 0) {
				return listNode;
			} 
			else {
				int index = (int) list.get(list.size() - k);
				ListNode node1 = new ListNode(index);
				d.addLast(node1);
				for (int i = list.size() - k + 1; i < list.size(); i++) {
					node1.next = new ListNode((Integer) list.get(i));
					d.addLast(node1.next);
					node1 = node1.next;
				}
				return d.pollFirst();
			}
		}
	}
}