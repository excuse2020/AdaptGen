class Solution {
	int M = (int) 1e9 + 7;
	int maxNiceDivisors(int primeFactors) {
		if (primeFactors == 1) {
			return 1;
		}
		if (primeFactors == 2) {
			return 2;
		}
		long cnt = 1;
		int pows3 = primeFactors / 3;
		int leftover = primeFactors % 3;
		if (leftover == 1) {
			cnt = (cnt * pow(3,pows3 - 1)) % M;
			cnt = (cnt * 4) % M;
		} 
		else {
			cnt = (cnt * pow(3,pows3)) % M;
		}
		if (leftover == 2) {
			cnt = (cnt * 2) % M;
		}
		return (int) (cnt % M);
	}
	long pow(int a, int b) {
		if (b == 0) {
			return 1;
		}
		long ab2 = pow(a,b / 2);
		long res = (ab2 * ab2) % M;
		if (b % 2 == 1) {
			res *= a;
		}
		return res % M;
	}
}