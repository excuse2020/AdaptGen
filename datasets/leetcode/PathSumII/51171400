class Solution {
	List<List<Integer>> l;
	void fn(int t, TreeNode r, ArrayList<Integer> ak) {
		if (r == null) {
			return;
		}
		if (r.left == null && r.right == null) {
			if (t - r.val == 0) {
				ak.add(r.val);
				l.add(new ArrayList(ak));
				ak.remove(ak.size() - 1);
			}
			return;
		}
		t -= r.val;
		ak.add(r.val);
		fn(t,r.left,ak);
		fn(t,r.right,ak);
		ak.remove(ak.size() - 1);
	}
	List<List<Integer>> pathSum(TreeNode r, int t) {
		l = new ArrayList<>();
		fn(t,r,new ArrayList<>());
		return l;
	}
}