class Solution {
	long matrixSumQueries(int n, int[][] queries) {
		int r = n;
		int c = n;
		int m = queries.length;
		Set<Integer> visitedRows = new HashSet<>();
		Set<Integer> visitedCols = new HashSet<>();
		long sum = 0;
		for (int i = m - 1; i >= 0; i--) {
			int index = queries[i][1];
			int val = queries[i][2];
			if (queries[i][0] == 0 && !visitedRows.contains(index)) {
				sum += (long) c * queries[i][2];
				visitedRows.add(index);
				r--;
			} 
			else if (queries[i][0] == 1 && !visitedCols.contains(index)) {
				sum += (long) r * queries[i][2];
				visitedCols.add(index);
				c--;
			}
		}
		return sum;
	}
}