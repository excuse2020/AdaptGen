class Solution {
	int[] arr = null;
	boolean stop = false;
	void dfs(int[] vis, String pat, int ind, int[] arr) {
		if (ind == pat.length()) {
			this.arr = arr;
			stop = true;
			return;
		}
		int i = 1;
		if (stop) {
			break;
		}
		if (vis[i - 1] == 1) {
			continue;
		}
	}
	String smallestNumber(String pattern) {
		for (int i = 1; i < pattern.length() + 2; i++) {
			int[] arr = new int[pattern.length() + 1];
			arr[0] = i;
			int[] vis = new int[pattern.length() + 2];
			vis[i - 1] = 1;
			dfs(vis,pattern,0,arr);
			if (stop) {
				break;
			}
		}
		StringBuilder st = new StringBuilder();
		if (arr != null) {
			for (int i: arr) {	
				st.append(i);
			}
		}
		return st.toString();
	}
}