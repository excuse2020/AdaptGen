class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		List<List<Integer>> list = new ArrayList<>();
		int p1 = 0;
		int p2 = 0;
		while (p1 < nums1.length && p2 < nums2.length) {
			List<Integer> l = new ArrayList<>();
			if (nums1[p1][0] == nums2[p2][0]) {
				l.add(nums1[p1][0]);
				l.add(nums1[p1][1] + nums2[p2][1]);
				list.add(l);
				p1++;
				p2++;
			} 
			else if (nums1[p1][0] < nums2[p2][0]) {
				l.add(nums1[p1][0]);
				l.add(nums1[p1][1]);
				list.add(l);
				p1++;
			} 
			else {
				l.add(nums2[p2][0]);
				l.add(nums2[p2][1]);
				list.add(l);
				p2++;
			}
		}
		while (p1 < nums1.length) {
			List<Integer> l = new ArrayList<>();
			l.add(nums1[p1][0]);
			l.add(nums1[p1][1]);
			list.add(l);
			p1++;
		}
		while (p2 < nums2.length) {
			List<Integer> l = new ArrayList<>();
			l.add(nums2[p2][0]);
			l.add(nums2[p2][1]);
			list.add(l);
			p2++;
		}
		int[][] arr = new int[list.size()][2];
		for (int i = 0; i < list.size(); i++) {
			for (int j = 0; j < 2; j++) {
				arr[i][j] = list.get(i).get(j);
			}
		}
		return arr;
	}
}