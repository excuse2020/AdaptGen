class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	int n, k;
	void backtrack(int i, ArrayList<Integer> res, int sum) {
		if (res.size() == k && sum == n) {
			ans.add(new ArrayList<Integer>(res));
			return;
		}
		if (res.size() >= k || sum >= n || i > 9) {
			return;
		}
		res.add(i);
		backtrack(i + 1,res,sum + i);
		res.remove(res.size() - 1);
		backtrack(i + 1,res,sum);
	}
	List<List<Integer>> combinationSum3(int k, int n) {
		this.n = n;
		this.k = k;
		backtrack(1,new ArrayList<Integer>(),0);
		return ans;
	}
}