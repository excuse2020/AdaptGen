class Solution {
	int area(int[][] grid, int i, int j, int count) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == 0) {
			return count;
		}
		count += grid[i][j];
		grid[i][j] = 0;
		count = Math.max(count,area(grid,i - 1,j,count));
		count = Math.max(count,area(grid,i,j + 1,count));
		count = Math.max(count,area(grid,i + 1,j,count));
		count = Math.max(count,area(grid,i,j - 1,count));
		return count;
	}
	int findMaxFish(int[][] grid) {
		int maxFish = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] > 0) {
					maxFish = Math.max(maxFish,area(grid,i,j,0));
				}
			}
		}
		return maxFish;
	}
}