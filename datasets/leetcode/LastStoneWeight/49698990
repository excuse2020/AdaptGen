class Solution {
	int lastStoneWeight(int[] stones) {
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());
		for (int i = 0; i < stones.length; i++) {
			maxHeap.offer(stones[i]);
		}
		while (maxHeap.size() >= 2) {
			int a = maxHeap.poll();
			int b = maxHeap.poll();
			if (a != b) {
				maxHeap.offer(Math.abs(a - b));
			}
		}
		return maxHeap.size() > 0 ? maxHeap.poll() : 0;
	}
}