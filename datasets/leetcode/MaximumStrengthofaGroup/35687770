class Solution {
	long maxStrength(int[] nums) {
		long answer = 1;
		int negcount = 0;
		int poscount = 0;
		int zerocount = 0;
		if (nums.length == 1) {
			return nums[0];
		}
		ArrayList<Integer> arr = new ArrayList<>();
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < 0) {
				arr.add(nums[i]);
				negcount++;
			} 
			else if (nums[i] > 0) {
				poscount++;
			} 
			else {
				zerocount++;
			}
		}
		if (zerocount == nums.length) {
			return 0;
		}
		if (poscount == 0 && negcount == 1) {
			return 0;
		}
		Collections.sort(arr);
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] == 0) {
				continue;
			}
			answer *= (long) nums[i];
		}
		if (negcount % 2 != 0) {
			answer = answer / (long) (arr.get(arr.size() - 1));
		}
		return answer;
	}
}