class Solution {
	int mod = 1000000007;
	int getElem(int arr, int index) {
		if (index == arr.length || index == -1) {
			return Integer.MIN_VALUE;
		} 
		else {
			return arr[index];
		}
	}
	int sumSubarrayMins(int[] arr) {
		return util2(arr);
	}
	int util2(int arr) {
		Stack<Integer> s = new Stack<Integer>();
		long ans = 0;
		s.push(-1);
		for (int i = 0; i <= arr.length; i++) {
			while (s.isEmpty() == false && getElem(arr,i) < getElem(arr,s.peek())) {
				int current = s.pop();
				int right = i - current;
				int left = current - s.peek();
				ans = (ans + (long) (left * right)) % mod;
			}
			s.push(i);
		}
		return (int) ans;
	}
}