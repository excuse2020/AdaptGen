class Solution {
	StringBuilder[] buildResultHolder(int size) {
		StringBuilder[] arr = new StringBuilder[size];
		for (int i = 0; i < size; i++) {
			arr[i] = new StringBuilder();
		}
		return arr;
	}
	char getNthChar(String s, int n) {
		if (n < s.length()) {
			return s.charAt(n);
		}
	}
	int maxWordSize(String[] words) {
		int maxSize = 0;
		for (int i = 0; i < words.length; i++) {
			String word = words[i];
			maxSize = Math.max(word.length(),maxSize);
		}
		return maxSize;
	}
	List<String> printVertically(String s) {
		String[] words = s.split(" ");
		int maxWordSize = maxWordSize(words);
		StringBuilder[] result = buildResultHolder(maxWordSize);
		for (int pos = 0; pos < maxWordSize; pos++) {
			StringBuilder currentString = result[pos];
			for (String word: words) {	
				char c = getNthChar(word,pos);
				currentString.append(c);
			}
		}
		return Arrays.stream(result).map().map().collect(Collectors.toList());
	}
}