class Solution {
	int uniquePathsWithObstacles(int[][] obstacleGrid) {
		int m = obstacleGrid.length;
		int n = obstacleGrid[0].length;
		int[][] ans = new int[m][n];
		if (obstacleGrid[m - 1][n - 1] == 1) {
			return 0;
		}
		for (int i = m - 1; i >= 0; i--) {
			for (int j = n - 1; j >= 0; j--) {
				if (obstacleGrid[i][j] == 1) {
					ans[i][j] = 0;
				} 
				else if (i == m - 1 && j == n - 1) {
					ans[i][j] = 1;
				} 
				else if (i == m - 1) {
					ans[i][j] += ans[i][j + 1];
				} 
				else if (j == n - 1) {
					ans[i][j] += ans[i + 1][j];
				} 
				else {
					ans[i][j] = ans[i + 1][j] + ans[i][j + 1];
				}
			}
		}
		return ans[0][0];
	}
}