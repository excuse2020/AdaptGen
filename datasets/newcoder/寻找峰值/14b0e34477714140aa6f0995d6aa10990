class Solution {
	int findPeakElement(int[] nums) {
		int length = nums.length;
		if (length == 1) {
			return 0;
		}
		if (nums[0] > nums[1]) {
			return 0;
		}
		if (nums[length - 1] > nums[length - 2]) {
			return length - 1;
		}
		int min = 1;
		int max = length - 2;
		int mid = (min + max) / 2;
		int res = peek(min,max,mid,nums);
		return res;
	}
	int peek(int min, int max, int mid, int[] nums) {
		if (min > max) {
			return -1;
		}
		if (nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1]) {
			return mid;
		} 
		else {
			int max1 = mid - 1;
			int temp = peek(min,max1,(min + max1) / 2,nums);
			if (temp != -1) {
				return temp;
			}
			int min1 = mid + 1;
			temp = peek(min1,max,(mid + 1) / 2,nums);
			if (temp != -1) {
				return temp;
			}
		}
		return -1;
	}
}