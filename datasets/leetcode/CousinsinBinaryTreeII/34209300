class Solution {
	TreeNode replaceValueInTree(TreeNode root) {
		Queue<TreeNode> q = new LinkedList<>();
		Queue<TreeNode> q2 = new LinkedList<>();
		q.offer(root);
		q2.offer(root);
		while (!q.isEmpty()) {
			int size = q.size();
			int s = 0;
			System.out.println(size);
			while (size-- > 0) {
				TreeNode p = q.poll();
				int sum = 0;
				if (p.left != null) {
					sum = sum + p.left.val;
					q.offer(p.left);
				}
				if (p.right != null) {
					sum = sum + p.right.val;
					q.offer(p.right);
				}
				s += sum;
			}
			size = q2.size();
			while (size-- > 0) {
				TreeNode p = q2.poll();
				int sum = 0;
				if (p.left != null) {
					sum = sum + p.left.val;
					q2.offer(p.left);
				}
				if (p.right != null) {
					sum = sum + p.right.val;
					q2.offer(p.right);
				}
				if (p.left != null) {
					p.left.val = s - sum;
				}
				if (p.right != null) {
					p.right.val = s - sum;
				}
			}
		}
		root.val = 0;
		return root;
	}
}