class Solution {
	int maxPerformance(int n, int[] speed, int[] efficiency, int k) {
		PriorityQueue<Integer> pq = new PriorityQueue<>();
		long tspeed = 0, res = 0;
		int mod = (int) 1e9 + 7;
		int[][] player = new int[n][2];
		for (int i = 0; i < n; i++) {
			player[i][0] = speed[i];
			player[i][1] = efficiency[i];
		}
		Arrays.sort(player,(a, b) -> {b[1] - a[1]});
		for (int i = 0; i < n; i++) {
			tspeed += player[i][0];
			pq.add(player[i][0]);
			res = Math.max(res,tspeed * (player[i][1]));
			if (pq.size() >= k) {
				tspeed -= pq.remove();
			}
		}
		return (int) (res % mod);
	}
}