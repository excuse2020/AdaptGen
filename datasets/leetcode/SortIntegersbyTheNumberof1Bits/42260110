class Solution {
	int countSetBits(int n) {
		int count = 0;
		while (n > 0) {
			count += n & 1;
			n >>= 1;
		}
		return count;
	}
	int[] sortByBits(int[] arr) {
		Map<Integer, List<Integer>> map = new HashMap<>();
		for (int i = 0; i < arr.length; i++) {
			int bits = countSetBits(arr[i]);
			if (!map.containsKey(bits)) {
				map.put(bits,new ArrayList<>());
			}
			map.get(bits).add(arr[i]);
		}
		List<Integer> result = new ArrayList<>();
		for (int bits: map.keySet()) {	
			List<Integer> values = map.get(bits);
			Collections.sort(values);
			result.addAll(values);
		}
		int[] sortedArr = new int[arr.length];
		for (int i = 0; i < result.size(); i++) {
			sortedArr[i] = result.get(i);
		}
		return sortedArr;
	}
}