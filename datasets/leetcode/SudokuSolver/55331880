class Solution {
	boolean check(char[][] board, int i, int j) {
		System.out.print(i + " ");
		for (int k = 0; k <= 8; k++) {
			if (board[i][k] == board[i][j] && j != k) {
				return false;
			}
			if (board[k][j] == board[i][j] && i != k) {
				return false;
			}
		}
		int n1 = i / 3, n2 = j / 3;
		for (int k1 = n1 * 3; k1 < n1 * 3 + 3; k1++) {
			for (int k2 = n2 * 3; k2 < n2 * 3 + 3; k2++) {
				if (board[k1][k2] == board[i][j] && i != k1 && j != k2) {
					return false;
				}
			}
		}
		return true;
	}
	boolean fill(char[][] board, int i, int j) {
	}
	void solveSudoku(char[][] board) {
		boolean bp = fill(board,0,0);
	}
}