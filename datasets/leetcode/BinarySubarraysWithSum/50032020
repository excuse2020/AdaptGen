class Solution {
	int num(int[] nums, int goal) {
		if (goal < 0) {
			return 0;
		}
		@r int left = 0;
		@r int right = 0;
		@r int count = 0;
		@r int currsum = 0;
		for (right = 0; right < nums.length; right++) {
			currsum += nums[right];
			while (currsum > goal && left <= right) {
				currsum -= nums[left];
				left++;
				count += right - left + 1;
				return count;
			}
		}
	}
	int numSubarraysWithSum(int[] nums, int goal) {
		return num(nums,goal) - num(nums,goal - 1);
	}
}