class Solution {
	int maxLevelSum(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList<>();
		int m = 0;
		List<Integer> list = new ArrayList<>();
		int max = Integer.MIN_VALUE;
		queue.offer(root);
		while (!queue.isEmpty()) {
			int sum = 0;
			int n = queue.size();
			for (int i = 0; i < n; i++) {
				TreeNode newer = queue.poll();
				if (newer.left != null) {
					queue.offer(newer.left);
				}
				if (newer.right != null) {
					queue.offer(newer.right);
				}
				sum = newer.val + sum;
			}
			list.add(sum);
		}
		for (int i = 0; i < list.size(); i++) {
			if (list.get(i) > max) {
				max = list.get(i);
				m = i;
			}
		}
		return m + 1;
	}
}