class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] rowMaxs = new int[grid.length];
		int[] colMaxs = new int[grid.length];
		for (int i = 0; i < grid.length; i++) {
			int rowMax = -1;
			for (int j = 0; j < grid.length; j++) {
				if (grid[i][j] > rowMax) {
					rowMax = grid[i][j];
				}
			}
			rowMaxs[i] = rowMax;
		}
		for (int j = 0; j < grid.length; j++) {
			int colMax = -1;
			for (int i = 0; i < grid.length; i++) {
				if (grid[i][j] > colMax) {
					colMax = grid[i][j];
				}
			}
			colMaxs[j] = colMax;
		}
		int output = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid.length; j++) {
				output += Math.min(rowMaxs[i],colMaxs[j]) - grid[i][j];
			}
		}
		return output;
	}
}