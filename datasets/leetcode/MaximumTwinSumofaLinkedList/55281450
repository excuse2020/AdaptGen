class Solution {
	ListNode Revers(ListNode head) {
		if (head == null) {
			return head;
		}
		ListNode curr = head;
		ListNode next = null;
		ListNode prev = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
	ListNode mid(ListNode head) {
		ListNode slow = head, fast = head, prev = null;
		while (fast != null && fast.next != null) {
			prev = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		return slow;
	}
	int pairSum(ListNode head) {
		ListNode a = mid(head);
		ListNode RP = Revers(a);
		int max = Integer.MIN_VALUE;
		int sum = 0;
		ListNode curr = head;
		while (RP != null) {
			sum = curr.val + RP.val;
			if (sum > max) {
				max = sum;
			}
			curr = curr.next;
			RP = RP.next;
		}
		return max;
	}
}