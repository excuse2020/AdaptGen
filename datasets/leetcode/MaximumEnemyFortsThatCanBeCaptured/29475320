class Solution {
	int captureForts(int[] forts) {
		int max = 0;
		int fortCount = 0;
		for (int i = 0; i + 1 < forts.length; i++) {
			if (forts[i] == 1) {
				fortCount = countForts(forts,i + 1,-1);
				max = Math.max(max,fortCount);
			}
			if (forts[i] == -1) {
				fortCount = countForts(forts,i + 1,1);
				max = Math.max(max,fortCount);
			}
		}
		for (int i = forts.length - 1; i - 1 >= 0; i--) {
			if (forts[i] == 1) {
				fortCount = countFortsRev(forts,i - 1,-1);
				max = Math.max(max,fortCount);
			}
			if (forts[i] == -1) {
				fortCount = countForts(forts,i - 1,1);
				max = Math.max(max,fortCount);
			}
		}
		return max;
	}
	int countForts(int[] forts, int i, int fortType) {
		int score = 0;
		while (i < forts.length) {
			if (forts[i] == fortType) {
				return score;
			}
			if (i == forts.length - 1 || forts[i] == -fortType) {
				return 0;
			}
			score++;
			i++;
		}
		return score;
	}
	int countFortsRev(int[] forts, int i, int fortType) {
		int score = 0;
		while (i >= 0) {
			if (forts[i] == fortType) {
				return score;
			}
			if (i == 0 || forts[i] == -fortType) {
				return 0;
			}
			score++;
			i--;
		}
		return score;
	}
}