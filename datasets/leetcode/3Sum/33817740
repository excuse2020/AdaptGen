class Solution {
	List<List<Integer>> threeSum(int[] nums) {
		List<List<Integer>> result = new ArrayList<>();
		int n = nums.length;
		Arrays.sort(nums);
		for (int i = 0; i < n - 2; i++) {
			if (i > 0 && nums[i] == nums[i - 1]) {
				continue;
			}
			int left = i + 1;
			int right = n - 1;
			int target = -nums[i];
			while (left < right) {
				int sum = nums[left] + nums[right];
				if (sum == target) {
					List<Integer> triplet = new ArrayList<>();
					triplet.add(nums[i]);
					triplet.add(nums[left]);
					triplet.add(nums[right]);
					result.add(triplet);
					while (left < right && nums[left] == nums[left + 1]) {
						left++;
					}
					while (left < right && nums[right] == nums[right - 1]) {
						right--;
					}
					left++;
					right--;
				} 
				else if (sum < target) {
					left++;
				} 
				else {
					right--;
				}
			}
		}
		return result;
	}
}