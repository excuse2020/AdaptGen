class Solution {
	int[] applyOperations(int[] arr) {
		int ans = new int[arr.length];
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] == arr[i + 1]) {
				arr[i] *= 2;
				arr[i + 1] = 0;
			}
		}
		optimal(arr);
		return arr;
	}
	void optimal(int arr) {
		int invalid = 0;
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] == 0 && arr[i + 1] != 0) {
				invalid = i;
				break;
			}
		}
		for (int valid = 0; valid < arr.length; valid++) {
			if (arr[valid] != 0) {
				continue;
			}
			boolean exist = false;
			int find = Math.max(invalid + 1,valid + 1);
			for (; find < arr.length; find++) {
				if (arr[find] != 0) {
					invalid = find;
					exist = true;
					break;
				}
			}
			if (!exist) {
				continue;
			}
			arr[valid] = arr[invalid];
			arr[invalid] = 0;
		}
	}
}