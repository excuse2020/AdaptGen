class Solution {
	int maxMoves(int[][] grid) {
		int dp = new int[grid.length][grid[0].length];
		int max = 0;
		for (int i = 1; i < grid[0].length; i++) {
			for (int j = 0; j < grid.length; j++) {
				if (grid[j][i - 1] < grid[j][i]) {
					if (i == 1 || dp[j][i - 1] > 0) {
						dp[j][i] = Math.max(dp[j][i],1 + dp[j][i - 1]);
					}
				}
				if (j - 1 >= 0 && grid[j - 1][i - 1] < grid[j][i]) {
					if (i == 1 || dp[j - 1][i - 1] > 0) {
						dp[j][i] = Math.max(dp[j][i],1 + dp[j - 1][i - 1]);
					}
				}
				if (j + 1 < grid.length && grid[j + 1][i - 1] < grid[j][i]) {
					if (i == 1 || dp[j + 1][i - 1] > 0) {
						dp[j][i] = Math.max(dp[j][i],1 + dp[j + 1][i - 1]);
					}
				}
				max = Math.max(max,dp[j][i]);
			}
		}
		return max;
	}
}