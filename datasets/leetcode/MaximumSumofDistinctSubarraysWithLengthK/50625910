class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		long ans = 0;
		Set<Integer> set = new HashSet<>();
		int start = 0;
		int end = 0;
		long sum = 0;
		while (end < nums.length) {
			while (start < nums.length && !set.contains(nums[start]) && set.size() < k) {
				set.add(nums[start]);
				sum += nums[start];
				start++;
			}
			if (set.size() == k) {
				ans = Math.max(ans,sum);
			}
			set.remove(nums[end]);
			sum -= nums[end];
			end++;
		}
		return ans;
	}
}