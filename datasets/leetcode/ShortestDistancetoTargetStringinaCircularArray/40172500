class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		boolean found = false;
		if (words[startIndex].equals(target)) {
			return 0;
		}
		int c = startIndex + 1, lPosition = 0;
		if (c == words.length) {
			c = 0;
		}
		while (c != startIndex) {
			if (words[c].equals(target)) {
				found = true;
				lPosition++;
				break;
			}
			lPosition++;
			c++;
			if (c == words.length) {
				c = 0;
			}
		}
		if (!found) {
			return -1;
		}
		int d = startIndex - 1, rPosition = 0;
		if (d == -1) {
			d = words.length - 1;
		}
		while (d != startIndex) {
			if (words[d].equals(target)) {
				found = true;
				rPosition++;
				break;
			}
			rPosition++;
			d--;
			if (d == -1) {
				d = words.length - 1;
			}
		}
		return Math.min(lPosition,rPosition);
	}
}