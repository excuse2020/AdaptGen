class Solution {
	boolean isPossible(int[] target) {
		if (target.length == 1) {
			return target[0] == 1;
		}
		int sum = 0;
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		for (int i = 0; i < target.length; i++) {
			sum += target[i];
			pq.add(target[i]);
		}
		while (pq.peek() != 1) {
			int temp = pq.poll();
			if (sum - temp == 1) {
				return true;
			}
			int x = temp % (sum - temp);
			sum = sum - temp + x;
			if (x == 0 || x == temp) {
				return false;
			}
			pq.add(x);
		}
		return true;
	}
}