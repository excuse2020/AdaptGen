class Solution {
	int minimumRounds(int[] tasks) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < tasks.length; i++) {
			if (map.containsKey(tasks[i])) {
				map.put(tasks[i],map.get(tasks[i]) + 1);
			} 
			else {
				map.put(tasks[i],1);
			}
		}
		int total = 0;
		for (int i = 0; i < tasks.length; i++) {
			if (map.containsKey(tasks[i])) {
				if (map.get(tasks[i]) == 1) {
					return -1;
				} 
				else if (map.get(tasks[i]) == 2) {
					total++;
				} 
				else if (map.get(tasks[i]) == 3) {
					total++;
				} 
				else {
					int rem = map.get(tasks[i]);
					if (rem % 3 == 0) {
						total += rem / 3;
					} 
					else if (rem % 3 == 1 || rem % 3 == 2) {
						total += rem / 3;
						total++;
					}
				}
				map.remove(tasks[i]);
			}
		}
		return total;
	}
}