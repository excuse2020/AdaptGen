class Solution {
	int getMoneyAmount(int n) {
		int[][] dp = new int[n + 1][n + 1];
		for (var i: dp) {	
			Arrays.fill(i,-1);
		}
		return solveMemo(1,n,dp);
	}
	int solveMemo(int start, int end, int[][] dp) {
		if (start >= end) {
			return 0;
		}
		if (dp[start][end] != -1) {
			return dp[start][end];
		}
		int ans = Integer.MAX_VALUE;
		for (int i = start; i <= end; i++) {
			ans = Math.min(ans,i + Math.max(solveMemo(start,i - 1,dp),solveMemo(i + 1,end,dp)));
		}
		return dp[start][end] = ans;
	}
	int solveRec(int start, int end) {
		if (start >= end) {
			return 0;
		}
		int ans = Integer.MAX_VALUE;
		for (int i = start; i <= end; i++) {
			ans = Math.min(ans,i + Math.max(solveRec(start,i - 1),solveRec(i + 1,end)));
		}
		return ans;
	}
}