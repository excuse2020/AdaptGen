class Solution {
	TreeNode dFSearch(TreeNode original, TreeNode cloned, TreeNode target) {
		Deque<TreeNode> stack = new LinkedList<>();
		Deque<TreeNode> stackForCloned = new LinkedList<>();
		stack.push(original);
		stackForCloned.push(cloned);
		while (!stack.isEmpty()) {
			TreeNode currentNode = stack.pop();
			TreeNode currentCloned = stackForCloned.pop();
			if (currentNode == target) {
				return currentCloned;
			}
			if (currentNode.right != null) {
				stack.push(currentNode.right);
				stackForCloned.push(currentCloned.right);
			}
			if (currentNode.left != null) {
				stack.push(currentNode.left);
				stackForCloned.push(currentCloned.left);
			}
		}
		return null;
	}
	TreeNode getTargetCopy(TreeNode original, TreeNode cloned, TreeNode target) {
		if (original == null) {
			return null;
		}
		if (original == target) {
			return cloned;
		}
		TreeNode left = getTargetCopy(original.left,cloned.left,target);
		if (left != null) {
			return left;
		}
		return getTargetCopy(original.right,cloned.right,target);
	}
}