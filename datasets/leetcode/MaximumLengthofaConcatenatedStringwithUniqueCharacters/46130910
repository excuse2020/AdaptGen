class Solution {
	boolean isValid(int mask, String s) {
		int newSet = 0;
		int i = 0;
		int charNum;
	}
	int maxLength(List<String> arr) {
		return solve(0,0,arr);
	}
	int merge(int mask, String s) {
		int newSet = 0;
		int i = 0;
		int charNum;
	}
	int solve(int idx, int mask, List<String> arr) {
		if (idx == arr.size()) {
			return 0;
		}
		int pick = 0;
		if (isValid(mask,arr.get(idx))) {
			int newMask = merge(mask,arr.get(idx));
			pick = arr.get(idx).length() + solve(idx + 1,newMask,arr);
		}
		int nonPick = solve(idx + 1,mask,arr);
		return Math.max(pick,nonPick);
	}
}