class Solution {
	List<String> map = new ArrayList<>();
	int max = 0;
	boolean isPoss(String s) {
		int o = 0;
		int c = 0;
		int i = 0;
	}
	boolean isValid(String sb) {
		LinkedList<Character> stack = new LinkedList<>();
		int i = 0;
	}
	void remove(String sb, int idx, String cr) {
		if (idx >= sb.length()) {
			if (max <= cr.length() && isValid(cr)) {
				max = Math.max(max,cr.length());
				map.add(cr);
			}
			return;
		}
		remove(sb,idx + 1,cr);
		remove(sb,idx + 1,cr + sb.charAt(idx));
	}
	List<String> removeInvalidParentheses(String s) {
		String sd = "";
	}
}