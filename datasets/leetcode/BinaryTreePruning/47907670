class Solution {
	TreeNode pruneTree(TreeNode r) {
		if (r == null) {
			return r;
		}
		TreeNode left = pruneTree(r.left);
		boolean leftBoolean = traverse(left);
		TreeNode right = pruneTree(r.right);
		boolean rightBoolean = traverse(r.right);
		if (leftBoolean) {
			r.left = left;
		} 
		else {
			r.left = null;
		}
		if (rightBoolean) {
			r.right = right;
		} 
		else {
			r.right = null;
		}
		if (!traverse(r)) {
			return null;
		}
		return r;
	}
	boolean traverse(TreeNode r) {
		if (r == null) {
			return false;
		}
		return (r.val == 1) || traverse(r.left);
	}
}