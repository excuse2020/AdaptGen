class Solution {
	int alternatingSubarray(int[] nums) {
		int maxLen = 0;
		int len = 0;
		int sum = 0;
		for (int idx = 0; idx < nums.length - 1; idx++) {
			nums[idx] = nums[idx + 1] - nums[idx];
		}
		for (int idx = 0; idx < nums.length - 1; idx++) {
			if (nums[idx] != 1 && nums[idx] != -1) {
				len = 0;
				sum = 0;
				continue;
			}
			if (nums[idx] == -1 && len == 0) {
				len = 0;
				sum = 0;
				continue;
			}
			sum = sum + nums[idx];
			if (sum <= 1 && sum >= -1) {
				len++;
				maxLen = Math.max(len,maxLen);
			} 
			else {
				len = 0;
				sum = 0;
				idx--;
			}
		}
		if (maxLen < 1) {
			return -1;
		}
		return maxLen + 1;
	}
}