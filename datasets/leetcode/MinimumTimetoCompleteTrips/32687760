class Solution {
	boolean isSufficientTime(long checkTime, int[] time, int totalTrips) {
		long totalTripsCal = 0;
		for (int i: time) {	
			totalTripsCal += checkTime / i;
		}
		if (totalTripsCal >= totalTrips) {
			return true;
		}
		return false;
	}
	long minimumTime(int[] time, int totalTrips) {
		long s = time[0];
		for (int i: time) {	
			s = Math.min(s,i);
		}
		long e = s * totalTrips;
		long ans = -1;
		while (s <= e) {
			long mid = s + (e - s) / 2;
			if (isSufficientTime(mid,time,totalTrips)) {
				ans = mid;
				e = mid - 1;
			} 
			else {
				s = mid + 1;
			}
		}
		return ans;
	}
}