class Solution {
	boolean f(TreeNode root1, TreeNode root2) {
		if (root1 == null && root2 == null) {
			return true;
		}
		if (root1 == null || root2 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		return (f(root1.left,root2.left) && f(root1.right,root2.right)) || (f(root1.left,root2.right) && f(root1.right,root2.left));
	}
	boolean flipEquiv(TreeNode root1, TreeNode root2) {
		return f(root1,root2);
	}
}