class Solution {
	int hs(ArrayList<Integer> l) {
		int n = l.size();
		int prev = l.get(0);
		int prev2 = 0;
		for (int i = 1; i < n; i++) {
			int pic = l.get(i);
			if (i > 1) {
				pic += prev2;
			}
			int nopic = 0 + prev;
			int curr = Math.max(pic,nopic);
			prev2 = prev;
			prev = curr;
		}
		return prev;
	}
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		ArrayList<Integer> l1 = new ArrayList<>();
		ArrayList<Integer> l2 = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			if (i != 0) {
				l1.add(nums[i]);
			}
			if (i != n - 1) {
				l2.add(nums[i]);
			}
		}
		return Math.max(hs(l1),hs(l2));
	}
}