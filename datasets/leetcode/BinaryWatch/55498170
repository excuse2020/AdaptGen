class Solution {
	String bString(BitSet b) {
		return String.format("%d:%02d",hours(b),minutes(b));
	}
	int hours(BitSet b) {
		int mul = 1;
		int value = 0;
		for (var i = 6; i < 10; i++) {
			value = value + (mul * (b.get(i) ? 1 : 0));
			mul = mul << 1;
		}
		return value;
	}
	int minutes(BitSet b) {
		var mul = 1;
		var value = 0;
		for (var i = 0; i < 6; i++) {
			value = value + (mul * (b.get(i) ? 1 : 0));
			mul = mul << 1;
		}
		return value;
	}
	List<String> readBinaryWatch(int turnedOn) {
		var answer = new ArrayList<String>();
		solve(turnedOn,0,new BitSet(10),answer);
		return answer;
	}
	void solve(int turnedOn, int start, BitSet b, List<String> answer) {
		if (turnedOn == 0) {
			answer.add(bString(b));
			return;
		}
		for (int i = start; i < 10; i++) {
			if (b.get(i) == true) {
				continue;
			}
			BitSet copy = (BitSet) b.clone();
			copy.set(i);
			if (hours(copy) > 11 || minutes(copy) >= 60) {
				continue;
			}
			solve(turnedOn - 1,i,copy,answer);
		}
	}
}