class Solution {
	TreeNode ans = null;
	int maxDepth = -1;
	int dfs(TreeNode root, int depth) {
		if (root == null) {
			return -1;
		}
		if (root.left == null && root.right == null) {
			if (depth > maxDepth) {
				maxDepth = depth;
				ans = root;
			}
			return depth;
		}
		int leftD = dfs(root.left,depth + 1);
		int rightD = dfs(root.right,depth + 1);
		if (leftD == maxDepth && rightD == maxDepth) {
			ans = root;
		}
		return Math.max(leftD,rightD);
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		dfs(root,0);
		return ans;
	}
}