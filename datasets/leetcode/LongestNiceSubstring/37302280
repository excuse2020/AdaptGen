class Solution {
	boolean isNice(String s) {
		Set<Character> unique = new HashSet<>();
		char[] letters = s.toCharArray();
		for (char letter: letters) {	
			unique.add(letter);
		}
		for (char letter: letters) {	
			if (!unique.contains(Character.toUpperCase(letter)) || !unique.contains(Character.toLowerCase(letter))) {
				return false;
			}
		}
		return true;
	}
	String longestNiceSubstring(String s) {
		String longestSubstring = "";
		for (int i = 0; i < s.length(); i++) {
			for (int j = i + 1; j < s.length() + 1; j++) {
				String currentSubstring = s.substring(i,j);
				if (currentSubstring.length() > longestSubstring.length() && isNice(currentSubstring)) {
					longestSubstring = currentSubstring;
				}
			}
		}
		return longestSubstring;
	}
}