class Solution {
	int[] parent = new int[140];
	int find(int x) {
		if (parent[x] != x) {
			return find(parent[x]);
		}
		return parent[x];
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		for (int i = 0; i < 140; i++) {
			parent[i] = i;
		}
		char[] hash = new char[140];
		char[] x1 = s1.toCharArray();
		char[] x2 = s2.toCharArray();
		for (int i = 0; i < x1.length; i++) {
			union(x1[i],x2[i]);
		}
		int i;
	}
	void union(int x, int y) {
		int rX = find(x);
		int rY = find(y);
		if (rX < rY) {
			parent[rY] = rX;
		} 
		else if (rY < rX) {
			parent[rX] = rY;
		}
	}
}