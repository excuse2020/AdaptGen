class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		List<List<Integer>> res = new ArrayList<>();
		helper(new ArrayList<>(),candidates,0,target,res);
		return res;
	}
	void helper(List<Integer> list, int[] arr, int i, int tar, List<List<Integer>> res) {
		if (tar == 0) {
			res.add(new ArrayList<>(list));
			return;
		}
		for (int ind = i; ind < arr.length; ind++) {
			if (ind > i && arr[ind] == arr[ind - 1]) {
				continue;
			}
			if (arr[ind] > tar) {
				break;
			}
			list.add(arr[ind]);
			helper(list,arr,ind + 1,tar - arr[ind],res);
			list.remove(list.size() - 1);
		}
	}
}