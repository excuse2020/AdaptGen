class Solution {
	int max = 0;
	TreeNode result;
	int helper(TreeNode root, int depth) {
		if (root == null) {
			return -1;
		}
		int left = helper(root.left,depth + 1);
		int right = helper(root.right,depth + 1);
		if (root.left == null && root.right == null && depth >= max) {
			max = depth;
			result = root;
			return depth;
		}
		if (left == max && right == max) {
			result = root;
		}
		return Math.max(left,right);
	}
	TreeNode lcaDeepestLeaves(TreeNode root) {
		if (root == null) {
			return null;
		}
		helper(root,0);
		return result;
	}
}