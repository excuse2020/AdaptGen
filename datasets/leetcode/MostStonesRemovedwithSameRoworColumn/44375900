class Solution {
	int removeStones(int[][] stones) {
		Set<int[]> visited = new HashSet<>();
		int count = 0;
		for (int i = 0; i < stones.length; i++) {
			if (visited.contains(stones[i])) {
				continue;
			}
			Queue<int[]> queue = new ArrayDeque<>();
			queue.add(stones[i]);
			int currCount = 0;
			while (!queue.isEmpty()) {
				int[] curr = queue.remove();
				int x = curr[0], y = curr[1];
				if (visited.contains(curr)) {
					continue;
				}
				visited.add(curr);
				currCount++;
				for (int j = i + 1; j < stones.length; j++) {
					if (visited.contains(stones[j])) {
						continue;
					}
					if (stones[j][0] == x) {
						queue.add(stones[j]);
					} 
					else if (stones[j][1] == y) {
						queue.add(stones[j]);
					}
				}
			}
			count += (currCount - 1);
		}
		return count;
	}
}