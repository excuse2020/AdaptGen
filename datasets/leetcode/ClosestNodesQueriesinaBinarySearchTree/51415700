class Solution {
	List<List<Integer>> closestNodes(TreeNode root, List<Integer> queries) {
		List<Integer> ans = new ArrayList<>();
		dfs(root,ans);
		List<List<Integer>> res = new ArrayList<>();
		for (int q: queries) {	
			int leftIndex = Collections.binarySearch(ans,q);
			if (leftIndex >= 0) {
				res.add(Arrays.asList(q,q));
			} 
			else {
				leftIndex = -leftIndex - 1;
				if (leftIndex == 0) {
					res.add(Arrays.asList(-1,ans.get(0)));
				} 
				else if (leftIndex == ans.size()) {
					res.add(Arrays.asList(ans.get(ans.size() - 1),-1));
				} 
				else {
					res.add(Arrays.asList(ans.get(leftIndex - 1),ans.get(leftIndex)));
				}
			}
		}
		return res;
	}
	void dfs(TreeNode node, List<Integer> ans) {
		if (node == null) {
			return;
		}
		dfs(node.left,ans);
		ans.add(node.val);
		dfs(node.right,ans);
	}
}