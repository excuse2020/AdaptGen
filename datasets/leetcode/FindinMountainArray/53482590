class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int start = 0;
		int end = mountainArr.length() - 1;
		while (start < end) {
			int middle = (start + end) / 2;
			if (mountainArr.get(middle) < mountainArr.get(middle + 1)) {
				start = middle + 1;
			} 
			else {
				end = middle;
			}
		}
		int peak = start;
		start = 0;
		end = peak;
		while (start <= end) {
			int middle = (start + end) / 2;
			int value = mountainArr.get(middle);
			if (value == target) {
				return middle;
			} 
			else if (value < target) {
				start = middle + 1;
			} 
			else {
				end = middle - 1;
			}
		}
		start = peak + 1;
		end = mountainArr.length() - 1;
		while (start <= end) {
			int middle = (start + end) / 2;
			int value = mountainArr.get(middle);
			if (value == target) {
				return middle;
			} 
			else if (value > target) {
				start = middle + 1;
			} 
			else {
				end = middle - 1;
			}
		}
		return -1;
	}
}