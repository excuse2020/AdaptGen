class Solution {
	boolean IsBalanced_Solution(TreeNode root) {
		return dfs(root);
	}
	boolean dfs(TreeNode node) {
		if (node == null) {
			return true;
		}
		boolean IsBalanced = false;
		if (Math.abs(height(node.left) - height(node.right)) <= 1) {
			IsBalanced = true;
		} 
		else {
			IsBalanced = false;
		}
		boolean l = dfs(node.left);
		boolean r = dfs(node.right);
		return IsBalanced && l;
	}
	int height(TreeNode node) {
		if (node == null) {
			return 0;
		}
		if (node.left == null && node.right == null) {
			return 1;
		}
		int l = height(node.left);
		int r = height(node.right);
		return Math.max(l,r) + 1;
	}
}