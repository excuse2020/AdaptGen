class Solution {
	boolean isAlienSorted(String[] words, String order) {
		Map<Character, Integer> map = new HashMap<>();
		for (int i = 0; i < order.length(); i++) {
			if (!map.containsKey(order.charAt(i))) {
				map.put(order.charAt(i),i);
			}
		}
		int cnt = words.length;
		for (int i = 0; i < cnt - 1; i++) {
			if (!isSorted(words[i],words[i + 1],map)) {
				return false;
			}
		}
		return true;
	}
	boolean isSorted(String s1, String s2, Map<Character, Integer> map) {
		int n = Math.min(s1.length(),s2.length());
		for (int i = 0; i < n; i++) {
			int order1 = map.get(s1.charAt(i));
			int order2 = map.get(s2.charAt(i));
			if (order1 < order2) {
				return true;
			} 
			else if (order1 == order2) {
				continue;
			} 
			else {
				return false;
			}
		}
		return s1.length() <= s2.length();
	}
}