class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		List<List<Integer>> list = new ArrayList<>();
		if (root == null) {
			return list;
		}
		List<Integer> list2 = new ArrayList<>();
		Queue<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		int nodeCount;
		TreeNode temp;
		while (!queue.isEmpty()) {
			nodeCount = queue.size();
			while (nodeCount > 0) {
				temp = queue.poll();
				list2.add(temp.val);
				if (temp.left != null) {
					queue.add(temp.left);
				}
				if (temp.right != null) {
					queue.add(temp.right);
				}
				nodeCount--;
			}
			list.add(new ArrayList<>(list2));
			list2.clear();
		}
		Collections.reverse(list);
		return list;
	}
}