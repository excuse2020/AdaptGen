class Solution {
	String LCS(String str1, String str2) {
		if (str1 == null || str2 == null || str1.length() == 0 || str2.length() == 0) {
			return "-1";
		}
		int str1Len = str1.length();
		int str2Len = str2.length();
		int maxLen = 0;
		int index = 0;
		int[][] dp = new int[str1Len + 1][str2Len + 1];
		for (int i = 1; i <= str1Len; i++) {
			for (int j = 1; j <= str2Len; j++) {
				if (str1.charAt(i - 1) == str2.charAt(j - 1)) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
				} 
				else {
					dp[i][j] = 0;
				}
				if (maxLen < dp[i][j]) {
					maxLen = dp[i][j];
					index = i - 1;
				}
			}
		}
		if (maxLen == 0) {
			return "-1";
		}
		return str1.substring(index - maxLen + 1,index + 1);
	}
}