class Solution {
	int cnt = 0;
	int countPairs(TreeNode root, int distance) {
		helper(root,distance);
		return cnt;
	}
	ArrayList<Integer> helper(TreeNode root, int dis) {
		ArrayList<Integer> list = new ArrayList<Integer>();
		if (root == null) {
			return list;
		}
		if (root.left == null && root.right == null) {
			list.add(1);
			return list;
		}
		ArrayList<Integer> left = helper(root.left,dis);
		ArrayList<Integer> right = helper(root.right,dis);
		for (int l: left) {	
			for (int r: right) {	
				if (l + r <= dis) {
					cnt++;
				}
			}
			if (l < dis) {
				list.add(l + 1);
			}
		}
		for (int r: right) {	
			if (r < dis) {
				list.add(r + 1);
			}
		}
		return list;
	}
}