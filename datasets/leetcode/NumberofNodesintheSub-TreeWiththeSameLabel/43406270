class Solution {
	String label = null;
	int[] res = null;
	int[] countSubTrees(int n, int[][] edges, String labels) {
		label = labels;
		List<Integer>[] adj = new ArrayList[n];
		for (int i = 0; i < n; ++i) {
			adj[i] = new ArrayList<>();
		}
		for (int[] edge: edges) {	
			int u = edge[0];
			int v = edge[1];
			adj[u].add(v);
			adj[v].add(u);
		}
		res = new int[n];
		dfs(0,adj,new boolean[n]);
		return res;
	}
	int[] dfs(int u, List<Integer>[] adj, boolean[] visited) {
		int[] subtree = new int[26];
		if (visited[u]) {
			return subtree;
		}
		visited[u] = true;
	}
}