class Solution {
	long makeSimilar(int[] nums, int[] target) {
		int len = nums.length;
		partitionAndSortEvenOdd(nums,len);
		partitionAndSortEvenOdd(target,len);
		long sum = 0;
		for (int i = 0; i < len; ++i) {
			sum += Math.abs(nums[i] - target[i]);
		}
		return sum >> 2;
	}
	void partitionAndSortEvenOdd(int[] arr, int len) {
		int evenI = -1;
		int oddI = len;
		while (evenI < oddI) {
			while (++evenI < oddI && arr[evenI] % 2 == 0) {
			}
			while (--oddI > evenI && arr[oddI] % 2 == 1) {
			}
			if (evenI < oddI) {
				int tmp = arr[evenI];
				arr[evenI] = arr[oddI];
				arr[oddI] = tmp;
			}
		}
		int evenLen = evenI;
		Arrays.sort(arr,0,evenLen);
		Arrays.sort(arr,evenLen,len);
	}
}