class Solution {
	int lenLongestFibSubseq(int[] arr) {
		int maxFibonacci = 0;
		Set<Integer> nums = new HashSet<>();
		for (int num: arr) {	
			nums.add(num);
		}
		for (int i = 0; i < arr.length - 1; i++) {
			for (int j = i + 1; j < arr.length; j++) {
				maxFibonacci = Math.max(maxFibonacci,searchForFibonacci(arr[i],arr[j],nums));
			}
		}
		return maxFibonacci;
	}
	int searchForFibonacci(int num1, int num2, Set<Integer> nums) {
		int sequence = 0;
		while (nums.contains(num1 + num2)) {
			num2 += num1;
			num1 = num2 - num1;
			if (sequence == 0) {
				sequence = 2;
			}
			sequence++;
		}
		return sequence;
	}
}