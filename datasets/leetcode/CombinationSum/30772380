class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		help(candidates,target,0,new ArrayList<>());
		return ans;
	}
	void help(int[] nums, int target, int idx, List<Integer> li) {
		if (idx >= nums.length) {
			if (target != 0) {
				return;
			}
			List<Integer> temp = new ArrayList<>(li);
			ans.add(temp);
			return;
		}
		if (nums[idx] <= target) {
			li.add(nums[idx]);
			help(nums,target - nums[idx],idx,li);
			li.remove(li.size() - 1);
			help(nums,target,idx + 1,li);
		} 
		else {
			help(nums,target,idx + 1,li);
		}
	}
}