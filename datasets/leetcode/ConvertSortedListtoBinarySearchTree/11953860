class Solution {
	List<Integer> getList(ListNode head) {
		List<Integer> list = new ArrayList();
		ListNode curr = head;
		while (curr != null) {
			list.add(curr.val);
			curr = curr.next;
		}
		return list;
	}
	TreeNode getTree(List<Integer> list, int l, int r) {
		if (l > r) {
			return null;
		}
		if (l == r) {
			return new TreeNode(list.get(l));
		}
		int mid = l + ((r - l) / 2);
		TreeNode root = new TreeNode(list.get(mid));
		root.left = getTree(list,l,mid - 1);
		root.right = getTree(list,mid + 1,r);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> list = getList(head);
		return getTree(list,0,list.size() - 1);
	}
}