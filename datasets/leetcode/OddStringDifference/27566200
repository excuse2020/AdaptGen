class Solution {
	String oddString(String[] words) {
		String result = "";
		Map<String, Integer> map = new TreeMap<>();
		Map<String, String> mapStr = new TreeMap<>();
		for (var v: words) {	
			int len = v.length();
			String str = "";
			if (len <= 3) {
				str = (v.charAt(0) - v.charAt(1)) + str;
				if (len == 3) {
					str = (v.charAt(1) - v.charAt(2)) + str;
				}
			} 
			else {
				for (int i = 0; i < len - 2; i++) {
					str = (v.charAt(i + 1) - v.charAt(i)) + str;
					str = (v.charAt(i + 2) - v.charAt(i + 1)) + str;
				}
			}
			map.put(str,map.getOrDefault(str,0) + 1);
			mapStr.put(str,v);
		}
		for (String v: map.keySet()) {	
			if (map.get(v) == 1) {
				result = mapStr.get(v);
				break;
			}
		}
		return result;
	}
}