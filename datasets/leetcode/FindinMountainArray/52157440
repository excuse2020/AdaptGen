class Solution {
	int findInMountainArray(int target, MountainArray mountainArr) {
		int s = 0, e = mountainArr.length() - 1;
		int mid = 0;
		while (s <= e) {
			mid = s + (e - s) / 2;
			if (s == e) {
				break;
			}
			if (mountainArr.get(mid) <= mountainArr.get(mid + 1)) {
				s = mid + 1;
			} 
			else {
				e = mid - 1;
			}
		}
		int ans = findtarget(mountainArr,target,0,mid);
		if (ans != -1) {
			return ans;
		}
		return findtarget(mountainArr,target,mid + 1,mountainArr.length() - 1);
	}
	int findtarget(MountainArray mountainArr, int target, int s, int e) {
		boolean value = mountainArr.get(s) < mountainArr.get(e);
		while (s <= e) {
			int mid = s + (e - s) / 2;
			if (mountainArr.get(mid) == target) {
				return mid;
			}
			if (value) {
				if (mountainArr.get(mid) < target) {
					s = mid + 1;
				} 
				else {
					e = mid - 1;
				}
			} 
			else {
				if (mountainArr.get(mid) > target) {
					s = mid + 1;
				} 
				else {
					e = mid - 1;
				}
			}
		}
		return -1;
	}
}