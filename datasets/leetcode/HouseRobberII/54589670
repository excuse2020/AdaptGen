class Solution {
	int rob(int[] nums) {
		int n = nums.length;
		if (n == 1) {
			return nums[0];
		}
		int[] arr1 = Arrays.copyOfRange(nums,1,n);
		int[] arr2 = Arrays.copyOfRange(nums,0,n - 1);
		int ans1 = solve(arr1);
		int ans2 = solve(arr2);
		return Math.max(ans1,ans2);
	}
	int solve(int[] arr) {
		int len = arr.length;
		if (len == 0) {
			return 0;
		}
		if (len == 1) {
			return arr[0];
		}
		long prev = arr[0];
		long prev2 = 0;
		for (int i = 1; i < len; i++) {
			long pick = arr[i];
			if (i > 1) {
				pick += prev2;
			}
			long nonPick = prev;
			long cur_i = Math.max(pick,nonPick);
			prev2 = prev;
			prev = cur_i;
		}
		return (int) prev;
	}
}