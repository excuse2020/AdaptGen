class Solution {
	int[] listToArr(List<Integer> list) {
		int[] arr = new int[list.size()];
		for (int i = 0; i < list.size(); i++) {
			arr[i] = list.get(i);
		}
		return arr;
	}
	void myOrder(TreeNode root, List<Integer> listPre, List<Integer> listIn, List<Integer> listPost) {
		if (root != null) {
			listPre.add(root.val);
			myOrder(root.left,listPre,listIn,listPost);
			listIn.add(root.val);
			myOrder(root.right,listPre,listIn,listPost);
			listPost.add(root.val);
		}
	}
	int[][] threeOrders(TreeNode root) {
		int[][] arr = new int[3];
		List preList = new ArrayList();
		List inList = new ArrayList();
		List postList = new ArrayList();
		myOrder(root,preList,inList,postList);
		arr[0] = listToArr(preList);
		arr[1] = listToArr(inList);
		arr[2] = listToArr(postList);
		return arr;
	}
}