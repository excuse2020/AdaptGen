class Solution {
	int[][] spiralMatrix(int m, int n, ListNode head) {
		int[][] mat = new int[m][n];
		int rowStart = 0;
		int rowEnd = m - 1;
		int colStart = 0;
		int colEnd = n - 1;
		int arr = new int[m * n];
		for (int in = 0; in < arr.length; in++) {
			arr[in] = -1;
		}
		int in = 0;
		while (head != null) {
			arr[in] = head.val;
			in++;
			head = head.next;
		}
		int c = 0;
		while (rowStart <= rowEnd && colStart <= colEnd) {
			for (int j = colStart; j <= colEnd; j++) {
				mat[rowStart][j] = arr[c];
				c++;
			}
			rowStart++;
			for (int i = rowStart; i <= rowEnd; i++) {
				mat[i][colEnd] = arr[c];
				c++;
			}
			colEnd--;
			if (rowStart <= rowEnd) {
				for (int j = colEnd; j >= colStart; j--) {
					mat[rowEnd][j] = arr[c];
					c++;
				}
				rowEnd--;
			}
			if (colStart <= colEnd) {
				for (int i = rowEnd; i >= rowStart; i--) {
					mat[i][colStart] = arr[c];
					c++;
				}
				colStart++;
			}
		}
		return mat;
	}
}