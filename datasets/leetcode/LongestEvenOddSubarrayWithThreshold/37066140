class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int r = nums.length - 1;
		int count = 0;
		int max = Integer.MIN_VALUE;
		if (nums.length == 1) {
			return (nums[0] % 2 != 0 || nums[0] > threshold) ? 0 : 1;
		}
		int i = 0;
		while (i <= r) {
			if (nums[i] <= threshold && nums[i] % 2 == 0) {
				count++;
				int j = i;
				while (j < r && nums[j] <= threshold && nums[j + 1] <= threshold) {
					if (nums[j] % 2 != nums[j + 1] % 2) {
						count++;
						j++;
					} 
					else {
						break;
					}
				}
			}
			max = Math.max(max,count);
			count = 0;
			i++;
		}
		return max;
	}
}