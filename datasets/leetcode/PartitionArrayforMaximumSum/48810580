class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int[] dp = new int[arr.length];
		int currMax = 0;
		for (int i = arr.length - 1; i >= 0; i--) {
			currMax = 0;
			for (int j = i; j <= i + k - 1 && j < arr.length; ++j) {
				currMax = arr[j] > currMax ? arr[j] : currMax;
				dp[i] = Math.max(currMax * (j - i + 1) + (j < (arr.length - 1) ? dp[j + 1] : 0),dp[i]);
			}
		}
		return dp[0];
	}
}