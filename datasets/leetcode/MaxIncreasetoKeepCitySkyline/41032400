class Solution {
	int getMaxIncrease(int x, int y, int[][] grid) {
		int maxRow = Integer.MIN_VALUE;
		int maxCol = 0;
		int i = 0;
		while (i < grid.length) {
			if (grid[i][y] > maxRow) {
				maxRow = grid[i][y];
			}
			i++;
		}
		i = 0;
		while (i < grid[0].length) {
			if (grid[x][i] > maxCol) {
				maxCol = grid[x][i];
			}
			i++;
		}
		return Math.min(maxRow,maxCol);
	}
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int sum = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				sum = sum + getMaxIncrease(i,j,grid) - grid[i][j];
			}
		}
		return sum;
	}
}