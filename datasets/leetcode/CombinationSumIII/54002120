class Solution {
	List<List<Integer>> combinationSum3(int k, int n) {
		List<List<Integer>> ans = new ArrayList<>();
		Set<List<Integer>> st = new HashSet<>();
		helper(k,n,new ArrayList<>(),new HashSet<>(),st);
		for (List<Integer> ls: st) {	
			ans.add(ls);
		}
		return ans;
	}
	void helper(int k, int n, List<Integer> ds, Set<Integer> set, Set<List<Integer>> st) {
		if (k == 0) {
			if (n == 0) {
				List<Integer> list = new ArrayList<>(ds);
				Collections.sort(list);
				st.add(list);
			}
			return;
		}
		for (int i = 1; i <= 9; i++) {
			if (!set.contains(i)) {
				ds.add(i);
				set.add(i);
				helper(k - 1,n - i,ds,set,st);
				ds.remove(ds.size() - 1);
				set.remove(i);
			}
		}
	}
}