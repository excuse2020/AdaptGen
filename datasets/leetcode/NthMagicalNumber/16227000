class Solution {
	long HCF(int x1, int x2) {
		if (x1 == 0) {
			return x2;
		}
		return HCF(x2 % x1,x1);
	}
	long LCM(int x1, int x2) {
		return x1 * x2 / HCF(x1,x2);
	}
	long getMultiples(int x1, int x2, long number) {
		return number / x1 + number / x2 - number / LCM(x1,x2);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long low = Math.min(a,b);
		long high = (long) n * Math.min(a,b);
		long MOD = (long) Math.pow(10,9) + 7;
		while (low < high) {
			long mid = low + (high - low) / 2;
			if (getMultiples(a,b,mid) < n) {
				low = mid + 1;
			} 
			else {
				high = mid;
			}
		}
		return (int) (low % MOD);
	}
}