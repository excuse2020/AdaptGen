class Solution {
	int countPairs(TreeNode root, int distance) {
		return postorder(root,distance)[11];
	}
	int[] postorder(TreeNode curr, int distance) {
		if (curr == null) {
			return new int[12];
		} 
		else if (curr.left == null && curr.right == null) {
			int[] current = new int[12];
			current[0] = 1;
			return current;
		}
		int[] left = postorder(curr.left,distance);
		int[] right = postorder(curr.right,distance);
		int[] current = new int[12];
		for (int i = 0; i < 10; i++) {
			current[i + 1] += left[i] + right[i];
		}
		current[11] += left[11] + right[11];
		for (int d1 = 0; d1 <= distance; d1++) {
			for (int d2 = 0; d2 <= distance; d2++) {
				if (2 + d1 <= distance) {
					current[11] += left[d1] * right[d2];
				}
			}
		}
		return current;
	}
}