class Solution {
	ListNode reverseBetween(ListNode head, int m, int n) {
		if (m == n) {
			return head;
		}
		ListNode Head = new ListNode(-1);
		ListNode head1 = Head;
		ListNode tail1 = head;
		Head.next = head;
		int n1 = n;
		int m1 = m - 1;
		while (m1 > 0) {
			head1 = head1.next;
			m1--;
		}
		while (n1 > 0) {
			tail1 = tail1.next;
			n1--;
		}
		ListNode head2 = null;
		ListNode cur = head1.next;
		ListNode tmp = cur;
		int num = n - m + 1;
		while (num > 0) {
			tmp = cur.next;
			if (head2 == null) {
				head2 = cur;
				cur.next = tail1;
			} 
			else {
				cur.next = head2;
				head2 = cur;
			}
			cur = tmp;
			num--;
		}
		if (head1 != null) {
			head1.next = head2;
		}
		return Head.next;
	}
}