class Solution {
	boolean canFinishAllTripsWithinDeadline(int[] time, int totalTrips, long deadline) {
		long tripsCompleted = 0;
		for (int t: time) {	
			tripsCompleted += deadline / t;
		}
		return tripsCompleted >= totalTrips;
	}
	long minimumTime(int[] time, int totalTrips) {
		int min = Arrays.stream(time).min().getAsInt();
		long low = 1;
		long high = (long) min * totalTrips;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (canFinishAllTripsWithinDeadline(time,totalTrips,mid)) {
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
}