class Solution {
	ListNode insertionSortList(ListNode head) {
		ListNode start = head;
		ArrayList<Integer> lst = new ArrayList<>();
		while (start != null) {
			lst.add(start.val);
			start = start.next;
		}
		int arr = new int[lst.size()];
		for (int i = 0; i < lst.size(); i++) {
			arr[i] = lst.get(i);
		}
		for (int i = 1; i < arr.length; i++) {
			int curr = arr[i];
			int prev = i - 1;
			while (prev >= 0 && curr < arr[prev]) {
				arr[prev + 1] = arr[prev];
				prev--;
			}
			arr[prev + 1] = curr;
		}
		ListNode rt = new ListNode(-1);
		ListNode tail = rt;
		for (int i = 0; i < arr.length; i++) {
			ListNode newNode = new ListNode(arr[i]);
			tail.next = newNode;
			tail = newNode;
		}
		return rt.next;
	}
}