class Solution {
	long maxPoints(int[][] points) {
		long maxPoints = 0;
		long[][] dp = new long[points.length][points[0].length];
		for (int i = 0; i < points[0].length; i++) {
			dp[0][i] = points[0][i];
		}
		for (int i = 1; i < dp.length; i++) {
			long[] prevDPRow = dp[i - 1];
			long[] prevDPRowPrefixMax = new long[dp[i - 1].length];
			prevDPRowPrefixMax[0] = prevDPRow[0];
			for (int j = 1; j < prevDPRow.length; j++) {
				prevDPRowPrefixMax[j] = Math.max(prevDPRowPrefixMax[j - 1] - 1,prevDPRow[j]);
			}
			long[] prevDPRowSuffixMax = new long[prevDPRow.length];
			prevDPRowSuffixMax[prevDPRowSuffixMax.length - 1] = prevDPRow[prevDPRow.length - 1];
			for (int j = prevDPRow.length - 2; j >= 0; j--) {
				prevDPRowSuffixMax[j] = Math.max(prevDPRowSuffixMax[j + 1] - 1,prevDPRow[j]);
			}
			for (int j = 0; j < dp[i].length; j++) {
				dp[i][j] = points[i][j] + Math.max(prevDPRowPrefixMax[j],prevDPRowSuffixMax[j]);
			}
		}
		long[] lastRow = dp[dp.length - 1];
		for (long totalPoints: lastRow) {	
			maxPoints = Math.max(totalPoints,maxPoints);
		}
		return maxPoints;
	}
}