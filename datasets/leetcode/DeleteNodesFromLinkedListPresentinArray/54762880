class Solution {
	boolean isPresent(int[] nums, int key) {
		int low = 0, high = nums.length - 1;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (nums[mid] == key) {
				return true;
			} 
			else if (nums[mid] < key) {
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return false;
	}
	ListNode modifiedList(int[] nums, ListNode head) {
		Arrays.sort(nums);
		while (head != null && isPresent(nums,head.val)) {
			head = head.next;
		}
		ListNode temp = head;
		while (temp.next != null) {
			if (isPresent(nums,temp.next.val)) {
				temp.next = temp.next.next;
			} 
			else {
				temp = temp.next;
			}
		}
		return head;
	}
}