class Solution {
	int MOD = (int) (Math.pow(10,9)) + 7;
	int checkRecord(int n) {
		Integer dp = new Integer[n + 1][2][3];
		return solve(n,0,0,dp);
	}
	int solve(int n, int abs, int consLate, Integer dp) {
		if (n == 0) {
			if (abs < 2 && consLate < 3) {
				return 1;
			}
			return 0;
		}
		if (abs >= 2) {
			return 0;
		}
		if (consLate >= 3) {
			return 0;
		}
		if (dp[n][abs][consLate] != null) {
			return dp[n][abs][consLate] % MOD;
		}
		int result = 0;
		result = (result + solve(n - 1,abs,0,dp)) % MOD;
		if (abs < 2) {
			result = (result + solve(n - 1,abs + 1,0,dp)) % MOD;
		}
		if (consLate < 3) {
			result = (result + solve(n - 1,abs,consLate + 1,dp)) % MOD;
		}
		return dp[n][abs][consLate] = result;
	}
}