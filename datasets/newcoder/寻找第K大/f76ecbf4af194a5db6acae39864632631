class Solution {
	int findKth(int[] a, int n, int K) {
		return quickSort(a,0,a.length - 1,K);
	}
	int partition(int[] arr, int left, int right) {
		int key = arr[left];
		while (left < right) {
			while (left = key) {
				right--;
			}
			arr[left] = arr[right];
			while (left < right && arr[left] <= key) {
				left++;
			}
			arr[right] = arr[left];
		}
		arr[left] = key;
		return left;
	}
	int quickSort(int[] arr, int left, int right, int k) {
		int p = partition(arr,left,right);
		if (p == arr.length - k) {
			return arr[p];
		} 
		else if (p < arr.length - k) {
			return quickSort(arr,p + 1,right,k);
		} 
		else {
			return quickSort(arr,left,p - 1,k);
		}
	}
}