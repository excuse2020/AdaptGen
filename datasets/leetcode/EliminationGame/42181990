class Solution {
	int helper(int begin, int last, boolean right, int diff) {
		int elements = ((last - begin) / diff) + 1;
		if (begin == last) {
			return begin;
		}
		if (elements % 2 == 0) {
			if (right) {
				System.out.println(last + " ");
				last = last - diff;
				diff = diff * 2;
				right = false;
				System.out.println(last + " ");
			} 
			else {
				System.out.println(last + " ");
				begin = begin + diff;
				diff = diff * 2;
				right = true;
				System.out.println(last + " ");
			}
		} 
		else {
			last = last - diff;
			begin = begin + diff;
			diff = diff * 2;
			right = right ? false : true;
		}
		return helper(begin,last,right,diff);
	}
	int lastRemaining(int n) {
		if (n == 1) {
			return n;
		}
		boolean right = true;
		n = n % 2 == 0 ? n : n - 1;
		int begin = 2;
		int diff = 2;
		return helper(begin,n,right,diff);
	}
}