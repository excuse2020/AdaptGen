class Solution {
	int findPermutationDifference(String s, String t) {
		HashMap<Character, Integer> map = new HashMap<>();
		int sum = 0;
		for (int i = 0; i < s.length(); i++) {
			if (map.containsKey(t.charAt(i)) && map.containsKey(s.charAt(i))) {
				int sub = 0;
				sub = Math.abs(map.get(t.charAt(i)) - i);
				sum += sub;
				sub = Math.abs(map.get(s.charAt(i)) - i);
				sum += sub;
			} 
			else if (map.containsKey(t.charAt(i)) || map.containsKey(s.charAt(i))) {
				int sub = 0;
				if (map.containsKey(t.charAt(i))) {
					sub = Math.abs(map.get(t.charAt(i)) - i);
				}
				if (map.containsKey(s.charAt(i))) {
					sub = Math.abs(map.get(s.charAt(i)) - i);
				}
				sum += sub;
			}
			map.put(s.charAt(i),i);
			map.put(t.charAt(i),i);
		}
		return sum;
	}
}