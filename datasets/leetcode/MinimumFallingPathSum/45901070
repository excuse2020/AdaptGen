class Solution {
	int minSum = Integer.MAX_VALUE;
	void dfs(int[][] matrix, int rowlen, int row, int col, int sum) {
		if (row < 0 || row >= rowlen || col < 0 || col >= rowlen) {
			return;
		}
		sum += matrix[row][col];
		if (row == rowlen - 1) {
			minSum = Math.min(minSum,sum);
			return;
		}
		dfs(matrix,rowlen,row + 1,col - 1,sum);
		dfs(matrix,rowlen,row + 1,col,sum);
		dfs(matrix,rowlen,row + 1,col + 1,sum);
	}
	int minFallingPathSum(int[][] matrix) {
		int rowlen = matrix.length;
		for (int i = 0; i < rowlen; i++) {
			dfs(matrix,rowlen,0,i,0);
		}
		return minSum;
	}
}