class Solution {
	long sumDigitDifferences(int[] nums) {
		int n = nums.length;
		if (n < 2) {
			return 0l;
		}
		int numLength = String.valueOf(nums[0]).length();
		int[][] digitCounts = new int[numLength][10];
		for (int i = 0; i < n; i++) {
			int num = nums[i];
			int pos = numLength - 1;
			while (num > 0) {
				int digit = num % 10;
				digitCounts[pos][digit]++;
				num = num / 10;
				pos--;
			}
		}
		long ans = 0l;
		for (int pos = 0; pos < numLength; pos++) {
			int count = n;
			for (int digit = 0; digit < 10; digit++) {
				int freq = digitCounts[pos][digit];
				count -= freq;
				ans = (long) ans + (long) ((long) count * (long) freq);
			}
		}
		return ans;
	}
}