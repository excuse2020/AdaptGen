class Solution {
	int findAns(int[] piles, int speed) {
		int value = 0;
		for (int i = 0; i < piles.length; i++) {
			value += Math.ceil((double) piles[i] / speed);
		}
		return value;
	}
	int minEatingSpeed(int[] piles, int h) {
		int max = 0;
		for (int i = 0; i < piles.length; i++) {
			max = Math.max(max,piles[i]);
		}
		int i = 0;
		int j = max;
		while (i <= j) {
			int mid = (i + j) / 2;
			if (findAns(piles,mid) > h) {
				i = mid + 1;
			} 
			else {
				j = mid - 1;
			}
		}
		return i;
	}
}