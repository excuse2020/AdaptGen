class Solution {
	int calculateHours(int[] arr, int perHour) {
		int totalHours = 0;
		for (int i = 0; i < arr.length; i++) {
			totalHours += Math.ceil((double) arr[i] / perHour);
		}
		return totalHours;
	}
	int maxElement(int[] arr) {
		int ans = 0;
		for (int i = 0; i < arr.length; i++) {
			if (arr[ans] < arr[i]) {
				ans = i;
			}
		}
		return arr[ans];
	}
	int minEatingSpeed(int[] piles, int h) {
		int start = 1;
		int end = maxElement(piles);
		int k = Integer.MAX_VALUE;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (h >= calculateHours(piles,mid)) {
				k = mid;
				end = mid - 1;
			} 
			else {
				start = mid + 1;
			}
		}
		return k;
	}
}