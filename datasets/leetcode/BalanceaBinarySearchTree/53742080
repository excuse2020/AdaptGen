class Solution {
	TreeNode balanceBST(TreeNode root) {
		List<Integer> nodeValues = new ArrayList<>();
		getNodes(root,nodeValues);
		return buildBST(nodeValues,0,nodeValues.size() - 1);
	}
	TreeNode buildBST(List<Integer> nodeValues, int left, int right) {
		if (left > right) {
			return null;
		}
		int mid = left + (right - left) / 2;
		return new TreeNode(nodeValues.get(mid), buildBST(nodeValues,left,mid - 1), buildBST(nodeValues,mid + 1,right));
	}
	void getNodes(TreeNode node, List<Integer> nodeValues) {
		if (node != null) {
			getNodes(node.left,nodeValues);
			nodeValues.add(node.val);
			getNodes(node.right,nodeValues);
		}
	}
}