class Solution {
	int mod = (int) 1e9 + 7;
	long gcd(long a, long b) {
		if (b == 0) {
			return a;
		}
		return gcd(b,a % b);
	}
	long lcm(long a, long b) {
		return a * b / gcd(a,b);
	}
	int nthMagicalNumber(int n, int a, int b) {
		long lcmAB = lcm(a,b);
		long l = 1;
		long r = ((long) n) * a;
		while (l + 1 < r) {
			long m = l + ((r - l) >> 1);
			long current = m / a + m / b - m / lcmAB;
			if (current < n) {
				l = m;
			} 
			else {
				r = m;
			}
		}
		return (int) (r % mod);
	}
}