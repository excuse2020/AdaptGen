class Solution {
	int minFallingPathSum(int[][] matrix) {
		Vector<Integer> prev = new Vector<>();
		for (int j = 0; j < matrix[0].length; j++) {
			prev.add(matrix[0][j]);
		}
		for (int i = 1; i < matrix.length; i++) {
			Vector<Integer> temp = new Vector<>();
			for (int j = 0; j < matrix[0].length; j++) {
				int left = (j > 0) ? prev.get(j - 1) : Integer.MAX_VALUE;
				int down = prev.get(j);
				int right = (j < matrix[0].length - 1) ? prev.get(j + 1) : Integer.MAX_VALUE;
				int min_sum = matrix[i][j] + Math.min(left,Math.min(down,right));
				temp.add(min_sum);
			}
			prev = temp;
		}
		return Collections.min(prev);
	}
}