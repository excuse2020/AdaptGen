class Solution {
	int minCostClimbingStairs(int[] cost) {
		if (cost.length == 1) {
			return cost[0];
		}
		if (cost.length == 2) {
			return Math.max(cost[0],cost[1]);
		}
		if (cost.length == 3) {
			return Math.min(cost[0] + cost[2],cost[1]);
		}
		int[] dp = new int[cost.length + 1];
		dp[0] = 0;
		dp[1] = cost[0];
		dp[2] = Math.min(cost[0],cost[1]);
		dp[3] = Math.min(cost[0] + cost[2],cost[1]);
		for (int i = 4; i < dp.length; i++) {
			dp[i] = Math.min(dp[i - 2] + cost[i - 2],dp[i - 1] + cost[i - 1]);
		}
		return dp[dp.length - 1];
	}
}