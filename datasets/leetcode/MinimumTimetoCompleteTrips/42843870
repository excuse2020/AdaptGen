class Solution {
	long minimumTime(int[] time, int totalTrips) {
		long low = 0;
		long high = 0;
		for (int i: time) {	
			high = Math.max(high,i);
		}
		high = high * totalTrips;
		long ans = 0;
		while (low <= high) {
			long mid = low + (high - low) / 2;
			if (possible(time,mid,totalTrips)) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
	boolean possible(int[] time, long mid, int totalTrips) {
		long sum = 0;
		for (int i = 0; i < time.length; i++) {
			sum += (mid / time[i]);
		}
		return sum >= totalTrips;
	}
}