class Solution {
	int maxScore(List<List<Integer>> grid) {
		int m = grid.size();
		int n = grid.get(0).size();
		int min = new int[m][n];
		for (int i = 0; i < m; i++) {
			min[i][0] = grid.get(i).get(0);
			for (int j = 1; j < n; j++) {
				min[i][j] = Math.min(min[i][j - 1],grid.get(i).get(j));
			}
		}
		for (int i = 0; i < n; i++) {
			for (int j = 1; j < m; j++) {
				min[j][i] = Math.min(min[j][i],min[j - 1][i]);
			}
		}
		int res = Integer.MIN_VALUE;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				int mini = Integer.MAX_VALUE;
				if (i - 1 >= 0) {
					mini = Math.min(mini,min[i - 1][j]);
				}
				if (j - 1 >= 0) {
					mini = Math.min(mini,min[i][j - 1]);
				}
				res = Math.max(res,grid.get(i).get(j) - mini);
			}
		}
		return res;
	}
}