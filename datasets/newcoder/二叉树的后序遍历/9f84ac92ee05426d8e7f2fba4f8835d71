class Solution {
	int[] postorderTraversal(TreeNode root) {
		List<Integer> list = new ArrayList();
		Stack<TreeNode> s = new Stack<TreeNode>();
		TreeNode pre = null;
		while (root != null || !s.isEmpty()) {
			while (root != null) {
				s.push(root);
				root = root.left;
			}
			TreeNode node = s.pop();
			if (node.right == null || node.right == pre) {
				list.add(node.val);
				pre = node;
			} 
			else {
				s.push(node);
				root = node.right;
			}
		}
		int[] res = new int[list.size()];
		for (int i = 0; i < list.size(); i++) {
			res[i] = list.get(i);
		}
		return res;
	}
}