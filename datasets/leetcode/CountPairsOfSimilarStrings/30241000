class Solution {
	boolean checkAnagram(String s1, String s2) {
		if (s1.length() != s2.length()) {
			return false;
		}
		char[] ch1 = s1.toCharArray();
		char[] ch2 = s2.toCharArray();
		Arrays.sort(ch1);
		Arrays.sort(ch2);
		return Arrays.equals(ch1,ch2);
	}
	String removeDuplicate(String s1) {
		String res = "";
		Set<Character> set = new LinkedHashSet<>();
		for (int i = 0; i < s1.length(); i++) {
			set.add(s1.charAt(i));
		}
		for (char ch: set) {	
			res += ch;
		}
		return res;
	}
	int similarPairs(String[] words) {
		int count = 0;
		for (int i = 0; i < words.length; i++) {
			String s1 = removeDuplicate(words[i]);
			for (int j = i + 1; j < words.length; j++) {
				String s2 = removeDuplicate(words[j]);
				if (checkAnagram(s1,s2)) {
					count++;
				}
			}
		}
		return count;
	}
}