class Solution {
	int calPoints(String[] operations) {
		Stack<Integer> mt = new Stack<Integer>();
		int l = operations.length;
		for (int i = 0; i < l; i++) {
			if (operations[i].equals("C")) {
				mt.pop();
			} 
			else if (operations[i].equals("D")) {
				mt.push(mt.peek() * 2);
			} 
			else if (operations[i].equals("+")) {
				int first = mt.pop();
				int second = mt.pop();
				mt.push(second);
				mt.push(first);
				mt.push(first + second);
			} 
			else {
				mt.push(Integer.parseInt(operations[i]));
			}
		}
		int l2 = mt.size();
		int sum = 0;
		for (int i = 0; i < l2; i++) {
			sum += mt.pop();
		}
		return sum;
	}
}