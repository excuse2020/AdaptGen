class Solution {
	int findOnes(int[] arr) {
		int ind = -1;
		int start = 0;
		int end = arr.length - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (arr[mid] == 1) {
				ind = mid;
				end = mid - 1;
			} 
			else if (arr[mid] < 1) {
				start = mid + 1;
			} 
			else {
				end = mid - 1;
			}
		}
		return ind;
	}
	int[] rowAndMaximumOnes(int[][] mat) {
		int max = 0;
		int count = 0;
		int[] ans = new int[2];
		for (int i = 0; i < mat.length; i++) {
			Arrays.sort(mat[i]);
			if (findOnes(mat[i]) == -1) {
				count = 0;
			} 
			else {
				count = mat[i].length - findOnes(mat[i]);
			}
			if (count > max) {
				max = count;
				ans[0] = i;
				ans[1] = max;
			}
		}
		return ans;
	}
}