class Solution {
	boolean dfs(TreeNode root) {
		Stack<TreeNode> stack = new Stack<>();
		stack.push(root);
		int uniVal = root.val;
		while (!stack.isEmpty()) {
			TreeNode current = stack.pop();
			uniVal = current.val;
			if (current != null && current.left != null && current.left.val == uniVal) {
				stack.push(current.left);
			}
			if (current != null && current.right != null && current.right.val == uniVal) {
				stack.push(current.right);
			}
			if (current != null && current.right != null && current.right.val != uniVal) {
				return false;
			}
			if (current != null && current.left != null && current.left.val != uniVal) {
				return false;
			}
		}
		return true;
	}
	boolean isUnivalTree(TreeNode root) {
		return dfs(root);
	}
}