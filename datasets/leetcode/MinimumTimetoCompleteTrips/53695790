class Solution {
	long minimumTime(int[] time, int totalTrips) {
		long low = 0;
		long ans = -1;
		Arrays.sort(time);
		long high = (long) totalTrips * time[0];
		while (low <= high) {
			System.out.println(low + " ");
			long mid = low + (high - low) / 2;
			System.out.println(mid);
			if (possibleTrips(time,mid) >= totalTrips) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
	long possibleTrips(int[] time, long givenTime) {
		long totalTrips = 0;
		int n = time.length;
		for (int i = 0; i < n; i++) {
			if (time[i] <= givenTime) {
				totalTrips += (long) givenTime / time[i];
			} 
			else {
				break;
			}
		}
		return totalTrips;
	}
}