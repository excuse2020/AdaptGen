class Solution {
	List<List<Integer>> ans = new ArrayList<>();
	List<Integer> temp = new ArrayList<>();
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		Arrays.sort(candidates);
		helper(candidates,target,0);
		return ans;
	}
	void helper(int[] candidates, int target, int idx) {
		if (target == 0) {
			ans.add(new ArrayList<>(temp));
			return;
		}
		for (int i = idx; i < candidates.length; i++) {
			if (i > idx && candidates[i] == candidates[i - 1]) {
				continue;
			}
			if (target - candidates[i] < 0) {
				break;
			}
			temp.add(candidates[i]);
			helper(candidates,target - candidates[i],i + 1);
			temp.remove(temp.size() - 1);
		}
	}
}