class Solution {
	int amount;
	List<List<Integer>> out;
	int target;
	void comb(int currSum, List<Integer> currList, int min) {
		if (currList.size() == amount) {
			if (currSum == target) {
				List<Integer> copy = new ArrayList<>(currList);
				out.add(copy);
				return;
			}
		} 
		else {
			for (int i = min; i <= 9; i++) {
				currList.add(i);
				comb(currSum + i,currList,i + 1);
				currList.remove(currList.size() - 1);
			}
		}
	}
	List<List<Integer>> combinationSum3(int k, int n) {
		target = n;
		amount = k;
		out = new LinkedList<>();
		List<Integer> currList = new ArrayList<>();
		comb(0,currList,1);
		return out;
	}
}