class Solution {
	int n;
	int helper(int[] arr, int k, int start) {
		if (start >= n) {
			return 0;
		}
		int currMax = 0;
		int ans = 0;
		int end = Math.min(start + k,n);
		for (int i = start; i < end; i++) {
			currMax = Math.max(currMax,arr[i]);
			ans = Math.max(ans,currMax * (i - start + 1) + helper(arr,k,i + 1));
		}
		return ans;
	}
	int maxSumAfterPartitioning(int[] arr, int k) {
		n = arr.length;
		return helper(arr,k,0);
	}
}