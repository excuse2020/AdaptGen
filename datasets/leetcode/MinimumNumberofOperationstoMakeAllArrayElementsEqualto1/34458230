class Solution {
	int gcd(int a, int b) {
		if (b > a) {
			return gcd(b,a);
		} 
		else if (b == 0) {
			return a;
		}
		int rem = a % b;
		return gcd(b,rem);
	}
	int minOperations(int[] nums) {
		int ones = 0;
		for (int num: nums) {	
			if (num == 1) {
				ones++;
			}
		}
		if (ones > 0) {
			return nums.length - ones;
		}
		int minLength = Integer.MAX_VALUE;
		int n = nums.length;
		for (int i = 0; i < n; i++) {
			int val = nums[i];
			for (int j = i + 1; j < n; j++) {
				val = gcd(val,nums[j]);
				if (val == 1) {
					if (j - i + 1 < minLength) {
						minLength = j - i + 1;
					}
					break;
				}
			}
		}
		if (minLength == Integer.MAX_VALUE) {
			return -1;
		}
		return n + (minLength - 2);
	}
}