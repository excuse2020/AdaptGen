class Solution {
	ListNode node;
	TreeNode helper(int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode leftSubtree = helper(start,mid - 1);
		TreeNode root = new TreeNode(node.val);
		root.left = leftSubtree;
		node = node.next;
		TreeNode rightSubtree = helper(mid + 1,end);
		root.right = rightSubtree;
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		int n = 0;
		ListNode current = head;
		node = head;
		while (current != null) {
			n++;
			current = current.next;
		}
		return helper(0,n - 1);
	}
}