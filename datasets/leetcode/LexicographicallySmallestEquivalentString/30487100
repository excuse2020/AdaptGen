class Solution {
	int[] id = new int[26];
	int find(int p) {
		int root = p;
		while (root != id[root]) {
			root = id[root];
		}
		while (p != root) {
			int next = id[p];
			id[p] = root;
			p = next;
		}
		return root;
	}
	String smallestEquivalentString(String s1, String s2, String baseStr) {
		StringBuilder result = new StringBuilder();
		for (int i = 0; i < 26; i++) {
			id[i] = i;
		}
		int i = 0;
		int p;
	}
	void unify(int p, int q) {
		int rootp = find(p);
		int rootq = find(q);
		if (rootp == rootq) {
			return;
		}
		if (rootp != rootq) {
			id[Math.max(rootp,rootq)] = Math.min(rootp,rootq);
		}
	}
}