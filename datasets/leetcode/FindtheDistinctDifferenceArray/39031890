class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		HashSet<Integer> h1 = new HashSet();
		HashSet<Integer> h2 = new HashSet();
		int n = nums.length;
		int[] p = new int[n];
		int[] s = new int[n];
		int[] ans = new int[n];
		for (int i = 0; i < n; i++) {
			if (!h1.contains(nums[i])) {
				h1.add(nums[i]);
			}
			p[i] = h1.size();
		}
		for (int i = n - 1; i >= 0; i--) {
			if (!h2.contains(nums[i])) {
				h2.add(nums[i]);
			}
			s[i] = h2.size();
		}
		for (int i = 0; i < n - 1; i++) {
			ans[i] = p[i] - s[i + 1];
		}
		ans[n - 1] = p[n - 1];
		return ans;
	}
}