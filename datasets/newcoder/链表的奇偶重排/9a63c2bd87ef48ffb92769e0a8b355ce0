class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		int len = 0;
		ListNode cur = head;
		while (cur != null) {
			cur = cur.next;
			len++;
		}
		int[] arr = new int[len];
		int id = 0;
		cur = head;
		while (cur != null) {
			arr[id++] = cur.val;
			cur = cur.next;
		}
		ListNode oddCur = new ListNode(arr[0]);
		ListNode evenCur = new ListNode(arr[1]);
		ListNode oddHead = oddCur;
		ListNode evenHead = evenCur;
		for (int i = 2; i < arr.length; i++) {
			if (i % 2 == 0) {
				oddCur.next = new ListNode(arr[i]);
				oddCur = oddCur.next;
			} 
			else {
				evenCur.next = new ListNode(arr[i]);
				evenCur = evenCur.next;
			}
		}
		oddCur.next = evenHead;
		return oddHead;
	}
}