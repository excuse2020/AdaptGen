class Solution {
	int longestAlternatingSubarray(int[] nums, int threshold) {
		int n = nums.length;
		int ans = 0;
		int prev = nums[n - 1] <= threshold ? 1 : 0;
		ans = nums[n - 1] % 2 == 0 ? prev : 0;
		for (int i = n - 2; i >= 0; i--) {
			int temp = 0;
			if (nums[i] % 2 != 0 && nums[i] % 2 != nums[i + 1] % 2 && nums[i] <= threshold) {
				temp = prev + 1;
			} 
			else {
				if (nums[i + 1] % 2 != nums[i] % 2 && nums[i] <= threshold) {
					temp = prev + 1;
				} 
				else if (nums[i] <= threshold) {
					temp = 1;
				}
			}
			prev = temp;
			if (nums[i] % 2 == 0) {
				ans = Math.max(ans,temp);
			}
		}
		return ans;
	}
}