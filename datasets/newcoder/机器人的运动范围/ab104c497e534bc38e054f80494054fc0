class Solution {
	int dfs(int threshold, int x, int y, boolean[][] visited) {
		int m = visited.length, n = visited[0].length;
		if (x < 0 || x >= m || y < 0 || y >= n || visited[x][y] || sum(x,y) > threshold) {
			return 0;
		}
		visited[x][y] = true;
		return 1 + dfs(threshold,x + 1,y,visited);
	}
	int movingCount(int threshold, int rows, int cols) {
		boolean[][] visited = new boolean[rows][cols];
		return dfs(threshold,0,0,visited);
	}
	int sum(int a, int b) {
		int ret = 0;
		while (a != 0) {
			ret += a % 10;
			a /= 10;
		}
		while (b != 0) {
			ret += b % 10;
			b /= 10;
		}
		return ret;
	}
}