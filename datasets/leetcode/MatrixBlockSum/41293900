class Solution {
	int[][] matrixBlockSum(int[][] mat, int k) {
		int ans = new int[mat.length][mat[0].length];
		for (int i = 0; i < mat.length; i++) {
			for (int j = 0; j < mat[0].length; j++) {
				ans[i][j] = sum(i,j,mat,k);
			}
		}
		return ans;
	}
	int sum(int i, int j, int[][] mat, int k) {
		int p = i - k;
		int l = j - k;
		int ie = i + k;
		int je = j + k;
		if (p < 0) {
			p = 0;
		}
		if (l < 0) {
			l = 0;
		}
		if (ie > mat.length - 1) {
			ie = mat.length - 1;
		}
		if (je > mat[0].length - 1) {
			je = mat[0].length - 1;
		}
		int ans = 0;
		for (int x = p; x <= ie; x++) {
			for (int y = l; y <= je; y++) {
				ans += mat[x][y];
			}
		}
		return ans;
	}
}