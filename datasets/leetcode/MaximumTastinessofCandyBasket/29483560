class Solution {
	boolean check(int[] price, int k, int dist) {
		int c = price[0];
		int cnt = 1;
		for (int i = 1; i < price.length; i++) {
			if (price[i] - c >= dist) {
				c = price[i];
				cnt++;
			}
			if (cnt == k) {
				return true;
			}
		}
		return false;
	}
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int low = 1;
		int high = price[price.length - 1] - price[0];
		while (low <= high) {
			int mid = (low + high) / 2;
			if (check(price,k,mid)) {
				low = mid + 1;
			} 
			else {
				high = mid - 1;
			}
		}
		return high;
	}
}