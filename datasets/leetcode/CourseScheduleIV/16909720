class Solution {
	ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
	List<Boolean> checkIfPrerequisite(int numCourses, int[][] pre, int[][] queries) {
		for (int i = 0; i < numCourses; i++) {
			adj.add(new ArrayList<Integer>());
		}
		for (int[] i: pre) {	
			int u = i[0];
			int v = i[1];
			adj.get(v).add(u);
		}
		List<Boolean> ans = new ArrayList<>();
		for (int[] q: queries) {	
			int u = q[0];
			int v = q[1];
			boolean[] vis = new boolean[numCourses];
			if (dfs(v,u,vis) == true) {
				ans.add(true);
			} 
			else {
				ans.add(false);
			}
		}
		return ans;
	}
	boolean dfs(int u, int v, boolean[] vis) {
		if (u == v) {
			return true;
		}
		vis[u] = true;
		for (int i: adj.get(u)) {	
			if (!vis[i]) {
				if (dfs(i,v,vis) == true) {
					return true;
				}
			}
		}
		return false;
	}
}