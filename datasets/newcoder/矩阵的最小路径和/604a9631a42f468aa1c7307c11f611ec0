class Solution {
	int minPathSum(int[][] matrix) {
		int n = matrix.length;
		int m = matrix[0].length;
		int[][] dp = new int[n + 1][m + 1];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (i == 0) {
					int flag1 = 0;
					for (int x = 0; x < m; x++) {
						flag1 = flag1 + matrix[0][x];
						dp[0][x] = flag1;
					}
				}
				if (j == 0) {
					int flag2 = 0;
					for (int y = 0; y < n; y++) {
						flag2 = flag2 + matrix[y][0];
						dp[y][0] = flag2;
					}
				}
				if (i != 0 && j != 0) {
					dp[i][j] = Math.min(dp[i - 1][j],dp[i][j - 1]) + matrix[i][j];
				}
			}
		}
		return dp[m - 1][n - 1];
	}
}