class Solution {
	int mappedNum(int num, int[] mapping) {
		int newNum = num == 0 ? mapping[0] : 0;
		int i = 1;
		while (num > 0) {
			int x = num % 10;
			newNum += i * mapping[x];
			i *= 10;
			num /= 10;
		}
		return newNum;
	}
	int[] sortJumbled(int[] mapping, int[] nums) {
		Integer[] numArr = Arrays.stream(nums).boxed().toArray();
		Arrays.sort(numArr,(a, b) -> {mappedNum(a,mapping) - mappedNum(b,mapping)});
		for (int i = 0; i < nums.length; i++) {
			nums[i] = numArr[i];
		}
		return nums;
	}
}