class Solution {
	boolean HasSubtree(TreeNode root1, TreeNode root2) {
		if (root2 == null || root1 == null) {
			return false;
		}
		if (isSameTree(root1,root2)) {
			return true;
		}
		boolean b1 = HasSubtree(root1.left,root2);
		boolean b2 = HasSubtree(root1.right,root2);
		return b1 || b2;
	}
	boolean isSameTree(TreeNode root1, TreeNode root2) {
		if (root2 == null) {
			return true;
		}
		if (root1 == null) {
			return false;
		}
		if (root1.val != root2.val) {
			return false;
		}
		boolean b1 = isSameTree(root1.left,root2.left);
		boolean b2 = isSameTree(root1.right,root2.right);
		return b1 && b2;
	}
}