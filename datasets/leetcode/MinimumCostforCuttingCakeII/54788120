class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		long cost = 0;
		int hcPtr = m - 2, vcPtr = n - 2, vB = 1, hB = 1;
		while (hcPtr >= 0 && vcPtr >= 0) {
			if (verticalCut[vcPtr] > horizontalCut[hcPtr]) {
				cost += verticalCut[vcPtr--] * hB;
				vB++;
			} 
			else {
				cost += horizontalCut[hcPtr--] * vB;
				hB++;
			}
		}
		while (hcPtr >= 0) {
			cost += horizontalCut[hcPtr--] * vB;
			hB++;
		}
		while (vcPtr >= 0) {
			cost += verticalCut[vcPtr--] * hB;
			vB++;
		}
		return cost;
	}
}