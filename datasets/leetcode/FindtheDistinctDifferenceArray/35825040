class Solution {
	int[] distinctDifferenceArray(int[] nums) {
		int n = nums.length;
		Map<Integer, Integer> rightSideUniqueVal = new HashMap<>();
		for (int val: nums) {	
			rightSideUniqueVal.put(val,rightSideUniqueVal.getOrDefault(val,0) + 1);
		}
		Set<Integer> leftSideUniqueVal = new HashSet<>();
		int[] result = new int[n];
		for (int i = 0; i < n; i++) {
			int val = nums[i];
			rightSideUniqueVal.put(val,rightSideUniqueVal.getOrDefault(val,0) - 1);
			if (rightSideUniqueVal.get(val) <= 0) {
				rightSideUniqueVal.remove(val);
			}
			leftSideUniqueVal.add(val);
			result[i] = leftSideUniqueVal.size() - rightSideUniqueVal.size();
		}
		return result;
	}
}