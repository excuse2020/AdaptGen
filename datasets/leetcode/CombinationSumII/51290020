class Solution {
	List<List<Integer>> combinationSum2(int[] candidates, int target) {
		int[] freq = new int[52];
		for (int c: candidates) {	
			freq[c]++;
		}
		List<List<Integer>> res = new ArrayList<>();
		combsum(res,freq,target,0,new ArrayList<>());
		return res;
	}
	void combsum(List<List<Integer>> res, int[] freq, int target, int i, List<Integer> list) {
		if (target == 0) {
			res.add(list);
			return;
		}
		while (i < 51 && freq[i] == 0) {
			i++;
		}
		if (i > target) {
			return;
		}
		if (i == 51) {
			return;
		}
		combsum(res,freq,target,i + 1,list);
		for (int a = 1; a * i <= target && a <= freq[i]; a++) {
			List<Integer> newlist = new ArrayList<>(list);
			for (int b = 0; b < a; b++) {
				newlist.add(i);
			}
			combsum(res,freq,target - (a * i),i + 1,newlist);
		}
	}
}