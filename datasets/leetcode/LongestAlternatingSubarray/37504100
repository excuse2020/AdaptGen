class Solution {
	int alternatingSubarray(int[] nums) {
		int sign = 1;
		int max = Integer.MIN_VALUE;
		ArrayList<Integer> list = new ArrayList<>();
		for (int i = 0; i <= nums.length - 1; i++) {
			int k = i;
			sign = 1;
			if (i == nums.length - 1) {
				if ((list.size() / 2) + 1 > max) {
					if (list.size() != 0) {
						max = (list.size() / 2) + 1;
					}
				}
			}
			for (int j = i + 1; j <= nums.length - 1; j++) {
				if (nums[j] - nums[k] == sign) {
					list.add(nums[j]);
					list.add(nums[k]);
					sign = -(sign);
					k++;
				} 
				else {
					if ((list.size() / 2) + 1 > max) {
						if (list.size() != 0) {
							max = (list.size() / 2) + 1;
						}
					}
					list.clear();
					break;
				}
			}
		}
		if (max == Integer.MIN_VALUE) {
			max = -1;
		}
		return max;
	}
}