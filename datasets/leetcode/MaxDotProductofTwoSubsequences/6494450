class Solution {
	int maxDotProduct(int[] nums1, int[] nums2) {
		if (nums1 == null || nums1.length == 0 || nums2 == null || nums2.length == 0) {
			return 0;
		}
		int n = nums1.length;
		int m = nums2.length;
		int[][] dp = new int[n][m];
		dp[0][0] = nums1[0] * nums2[0];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (i == 0 && j == 0) {
					continue;
				}
				int max = nums1[i] * nums2[j];
				if (j != 0) {
					max = Math.max(max,dp[i][j - 1]);
				}
				if (i != 0) {
					max = Math.max(max,dp[i - 1][j]);
				}
				if (i != 0 & j != 0) {
					max = Math.max(max,dp[i - 1][j - 1]);
					max = Math.max(max,dp[i - 1][j - 1] + nums1[i] * nums2[j]);
				}
				dp[i][j] = max;
			}
		}
		return dp[n - 1][m - 1];
	}
}