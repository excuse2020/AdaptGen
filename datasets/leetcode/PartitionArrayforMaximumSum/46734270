class Solution {
	int[] arr;
	Integer[] dp;
	int k;
	int maxSumAfterPartitioning(int[] arr, int k) {
		this.k = k;
		this.arr = arr;
		dp = new Integer[arr.length];
		return solve(0);
	}
	int solve(int idx) {
		if (idx >= arr.length) {
			return 0;
		}
		if (dp[idx] != null) {
			return dp[idx];
		}
		int res = 0;
		int mx = 0;
		for (int i = idx; i < Integer.min(arr.length,idx + k); i++) {
			mx = Integer.max(mx,arr[i]);
			res = Integer.max(res,solve(i + 1) + mx * (i - idx + 1));
		}
		return dp[idx] = res;
	}
}