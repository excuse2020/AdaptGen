class Solution {
	ArrayList<String> res = new ArrayList<>();
	ArrayList<String> Permutation(String s) {
		char[] c = s.toCharArray();
		back(c,0);
		return res;
	}
	void back(char[] c, int idx) {
		if (idx == c.length - 1) {
			res.add(String.valueOf(c));
			return;
		}
		HashSet<Character> set = new HashSet<>();
		for (int i = idx; i < c.length; i++) {
			if (set.contains(c[i])) {
				continue;
			}
			set.add(c[i]);
			swap(c,idx,i);
			back(c,idx + 1);
			swap(c,idx,i);
		}
	}
	void swap(char[] c, int idx1, int idx2) {
		if (idx1 == idx2) {
			return;
		}
		char tmp = c[idx1];
		c[idx1] = c[idx2];
		c[idx2] = tmp;
	}
}