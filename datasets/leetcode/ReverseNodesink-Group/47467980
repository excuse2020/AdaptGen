class Solution {
	int getLength(ListNode head) {
		int cnt = 0;
		ListNode temp = head;
		while (temp != null) {
			temp = temp.next;
			cnt++;
		}
		return cnt;
	}
	ListNode reverseKGroup(ListNode head, int k) {
		if (head == null) {
			return head;
		}
		ListNode backward = null;
		ListNode current = head;
		ListNode forward = null;
		int cnt = 0;
		int size = getLength(head);
		if (size < k) {
			return head;
		}
		while (cnt < k && current != null) {
			forward = current.next;
			current.next = backward;
			backward = current;
			current = forward;
			cnt++;
		}
		if (forward != null) {
			head.next = reverseKGroup(forward,k);
		}
		return backward;
	}
}