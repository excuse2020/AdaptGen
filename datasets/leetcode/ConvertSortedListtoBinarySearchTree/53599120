class Solution {
	TreeNode buildBST(List<Integer> numbers, int start, int end) {
		if (start > end) {
			return null;
		}
		int mid = start + (end - start) / 2;
		TreeNode root = new TreeNode(numbers.get(mid));
		root.left = buildBST(numbers,start,mid - 1);
		root.right = buildBST(numbers,mid + 1,end);
		return root;
	}
	TreeNode sortedListToBST(ListNode head) {
		List<Integer> numbers = new ArrayList<>();
		for (ListNode current = head; current != null; current = current.next) {
			numbers.add(current.val);
		}
		return buildBST(numbers,0,numbers.size() - 1);
	}
}