class Solution {
	String num = "";
	void dfs(String s, int pos, int cnt, ArrayList<String> ans) {
		if (cnt == 4) {
			if (pos != s.length()) {
				return;
			}
			ans.add(num);
		}
		String cur = "";
		for (int i = pos; i < pos + 3 && i < s.length(); i++) {
			cur += s.charAt(i);
			int x = Integer.parseInt(cur);
			if (x <= 255 && (cur.length() == 1 || cur.charAt(0) != '0')) {
				String temp = num;
				num += cur;
				if (cnt != 3) {
					num += '.';
				}
				dfs(s,i + 1,cnt + 1,ans);
				num = temp;
			}
		}
	}
	ArrayList<String> restoreIpAddresses(String s) {
		ArrayList<String> ans = new ArrayList<>();
		dfs(s,0,0,ans);
		return ans;
	}
}