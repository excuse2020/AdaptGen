class Solution {
	List<Integer> getDiff(String s) {
		List<Integer> l = new ArrayList<>();
		for (int i = 0; i < s.length() - 1; i++) {
			l.add(s.charAt(i + 1) - s.charAt(i));
		}
		return l;
	}
	boolean isEqual(List<Integer> l1, List<Integer> l2) {
		return l1.equals(l2);
	}
	String oddString(String[] words) {
		List<List<Integer>> diffs = new ArrayList<>();
		for (String word: words) {	
			diffs.add(getDiff(word));
		}
		for (int i = 1; i < words.length - 1; i++) {
			if (!isEqual(diffs.get(i),diffs.get(i - 1)) && isEqual(diffs.get(i),diffs.get(i + 1))) {
				return words[i - 1];
			} 
			else if (!isEqual(diffs.get(i),diffs.get(i - 1)) && !isEqual(diffs.get(i),diffs.get(i + 1))) {
				return words[i];
			}
		}
		return words[words.length - 1];
	}
}