class Solution {
	List<List<Integer>> permute(int[] nums) {
		List<List<Integer>> result = new ArrayList<>();
		List<Integer> candidates = new ArrayList<>();
		for (int num: nums) {	
			candidates.add(num);
		}
		permute(candidates,new ArrayList<>(),result);
		return result;
	}
	void permute(List<Integer> candidates, List<Integer> permutation, List<List<Integer>> result) {
		if (candidates.isEmpty()) {
			result.add(new ArrayList<>(permutation));
			return;
		}
		int n = candidates.size();
		for (int i = 0; i < n; i++) {
			int num = candidates.get(i);
			permutation.add(num);
			candidates.remove(i);
			permute(candidates,permutation,result);
			candidates.add(i,num);
			permutation.remove(permutation.size() - 1);
		}
	}
}