class Solution {
	Long dp;
	long f(int i, int parity, int[] nums, int k) {
		if (i >= nums.length) {
			return parity == 0 ? 0 : -(int)1e9;
		}
		if (dp[i][parity] != null) {
			return dp[i][parity];
		}
		long p = (nums[i] ^ k) + f(i + 1,1 - parity,nums,k);
		long np = nums[i] + f(i + 1,parity,nums,k);
		return dp[i][parity] = Math.max(p,np);
	}
	long maximumValueSum(int[] nums, int k, int[][] edges) {
		dp = new Long[nums.length][2];
		return f(0,0,nums,k);
	}
}