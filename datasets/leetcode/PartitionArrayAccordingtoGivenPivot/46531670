class Solution {
	int[] pivotArray(int[] nums, int pivot) {
		int pivotCount = (int) Arrays.stream(nums).filter((i) -> {i == pivot}).count();
		List<Integer> al = new ArrayList<>();
		int len = nums.length;
		for (int i = 0; i < len; i++) {
			int num = nums[i];
			if (num < pivot) {
				al.add(num);
			}
		}
		if (pivotCount == 1) {
			al.add(pivot);
		} 
		else {
			al.addAll(Collections.nCopies(pivotCount,pivot));
		}
		for (int i = 0; i < len; i++) {
			int num = nums[i];
			if (num > pivot) {
				al.add(num);
			}
		}
		return al.stream().mapToInt().toArray();
	}
}