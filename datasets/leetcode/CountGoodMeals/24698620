class Solution {
	int mod = (int) 1e9 + 7;
	int countPairs(int[] arr) {
		int n = arr.length;
		if (n == 1) {
			return 0;
		}
		Map<Integer, Integer> map = new HashMap<>();
		int count = 0, maxsum = sumOfmax2(arr);
		for (int i = 0; i < arr.length; i++) {
			for (int pow = 1; pow <= maxsum; pow *= 2) {
				if (map.containsKey(pow - arr[i])) {
					count += map.get(pow - arr[i]);
					count %= mod;
				}
			}
			map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
		}
		return count;
	}
	int sumOfmax2(int[] arr) {
		int max1 = arr[0], max2 = arr[0];
		for (int i: arr) {	
			if (i > max1) {
				max2 = max1;
				max1 = i;
			}
			if (i > max2) {
				max2 = i;
			}
		}
		return max1 + max2;
	}
}