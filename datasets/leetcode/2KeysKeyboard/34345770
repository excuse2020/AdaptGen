class Solution {
	boolean isprime(int n) {
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
	int minSteps(int n) {
		if (n == 1) {
			return 0;
		}
		if (isprime(n)) {
			return n;
		}
		int larger = 0;
		int smaller = 0;
		for (int i = 2; i <= n / 2; i++) {
			if (n % i == 0) {
				smaller = i;
				larger = n / i;
				break;
			}
		}
		return steps(larger,smaller);
	}
	int steps(int larger, int smaller) {
		if (isprime(larger)) {
			return (larger + smaller);
		}
		int i;
		for (i = 2; i <= larger / 2; i++) {
			if (larger % i == 0) {
				break;
			}
		}
		int ans = steps(larger / i,i);
		return ans + smaller;
	}
}