class Solution {
	int[][] foundMonotoneStack(int[] nums) {
		int[][] res = new int[nums.length][2];
		Stack<ArrayList<Integer>> stack = new Stack<>();
		for (int i = 0; i < nums.length; i++) {
			int index = i;
			int val = nums[i];
			while (!stack.isEmpty() && nums[stack.peek().get(0)] > val) {
				ArrayList<Integer> arrs = stack.pop();
				for (int arr: arrs) {	
					res[arr][0] = stack.isEmpty() ? -1 : stack.peek().get(stack.peek().size() - 1);
					res[arr][1] = index;
				}
			}
			if (stack.isEmpty()) {
				ArrayList<Integer> arrs = new ArrayList<>();
				arrs.add(index);
				stack.push(arrs);
			} 
			else {
				if (nums[stack.peek().get(0)] == val) {
					ArrayList<Integer> arrs = stack.peek();
					arrs.add(index);
				} 
				else if (nums[stack.peek().get(0)] < val) {
					ArrayList<Integer> arrs = new ArrayList<>();
					arrs.add(index);
					stack.push(arrs);
				}
			}
		}
		while (!stack.isEmpty()) {
			ArrayList<Integer> arrs = stack.pop();
			for (int arr: arrs) {	
				res[arr][0] = stack.isEmpty() ? -1 : stack.peek().get(stack.peek().size() - 1);
				res[arr][1] = -1;
			}
		}
		return res;
	}
}