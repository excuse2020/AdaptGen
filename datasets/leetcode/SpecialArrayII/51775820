class Solution {
	boolean check(int s, int e, List<Integer> ar) {
		int l = 0, r = ar.size() - 1;
		while (l <= r) {
			int mid = (l + r) / 2;
			if (ar.get(mid) >= s && ar.get(mid) < e) {
				return true;
			} 
			else if (ar.get(mid) < s) {
				l = mid + 1;
			} 
			else {
				r = mid - 1;
			}
		}
		return false;
	}
	boolean[] isArraySpecial(int[] nums, int[][] queries) {
		List<Integer> l = new ArrayList();
		for (int i = 1; i < nums.length; i++) {
			if (nums[i] % 2 == 0 && nums[i - 1] % 2 == 0) {
				l.add(i - 1);
			} 
			else if (nums[i] % 2 != 0 && nums[i - 1] % 2 != 0) {
				l.add(i - 1);
			}
		}
		boolean[] ans = new boolean[queries.length];
		for (int i = 0; i < queries.length; i++) {
			if (queries[i][0] == queries[i][1]) {
				ans[i] = true;
			} 
			else if (check(queries[i][0],queries[i][1],l)) {
				ans[i] = false;
			} 
			else {
				ans[i] = true;
			}
		}
		return ans;
	}
}