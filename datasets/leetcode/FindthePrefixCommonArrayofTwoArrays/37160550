class Solution {
	int findCommonElements(HashMap<Integer, Integer> count_A, HashMap<Integer, Integer> count_B) {
		int common_keys = 0;
		for (Map.Entry<Integer, Integer> map: count_A.entrySet()) {	
			int key = map.getKey();
			if (count_B.containsKey(key)) {
				common_keys += Math.min(count_B.get(key),map.getValue());
			}
		}
		return common_keys;
	}
	int[] findThePrefixCommonArray(int[] A, int[] B) {
		int[] result = new int[A.length];
		HashMap<Integer, Integer> count_A = new HashMap<>();
		HashMap<Integer, Integer> count_B = new HashMap<>();
		for (int i = 0; i < A.length; i++) {
			insertIntoMap(count_A,count_B,A[i],B[i]);
			result[i] = findCommonElements(count_A,count_B);
		}
		return result;
	}
	void insertIntoMap(HashMap<Integer, Integer> count_A, HashMap<Integer, Integer> count_B, int value_A, int value_B) {
		count_A.put(value_A,count_A.getOrDefault(count_A,0) + 1);
		count_B.put(value_B,count_B.getOrDefault(count_B,0) + 1);
	}
}