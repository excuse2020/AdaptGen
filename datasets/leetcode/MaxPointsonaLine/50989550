class Solution {
	int X = 0;
	int Y = 1;
	int maxPoints = 0;
	Map<Double, Integer> slopes = new HashMap<>();
	int maxPoints(int[][] points) {
		if (points.length == 1) {
			return 1;
		}
		for (int p1 = 0; p1 < points.length; p1++) {
			slopes.clear();
			for (int p2 = p1 + 1; p2 < points.length; p2++) {
				int d = (points[p2][X] - points[p1][X]);
				double m = Integer.MAX_VALUE;
				double en = (points[p2][Y] - points[p1][Y]);
				if (d != 0) {
					m = en == 0 ? 0f : en / d;
				}
				int count = slopes.getOrDefault(m,1) + 1;
				slopes.put(m,count);
				maxPoints = Math.max(maxPoints,count);
			}
		}
		return maxPoints;
	}
}