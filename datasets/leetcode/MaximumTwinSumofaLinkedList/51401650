class Solution {
	int pairSum(ListNode head) {
		int ans = Integer.MIN_VALUE;
		ListNode temp = head;
		ListNode newNode = new ListNode(head.val);
		ListNode copy = newNode;
		while (temp != null) {
			ListNode fwd = new ListNode(temp.val);
			newNode.next = fwd;
			temp = temp.next;
			newNode = newNode.next;
		}
		newNode.next = null;
		ListNode reversealNode = reverse(copy);
		temp = head;
		while (temp != null) {
			ans = Math.max(ans,temp.val + reversealNode.val);
			temp = temp.next;
			reversealNode = reversealNode.next;
		}
		return ans;
	}
	ListNode reverse(ListNode head) {
		ListNode curr = head;
		ListNode next;
		ListNode prev = null;
		while (curr != null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
		}
		return prev;
	}
}