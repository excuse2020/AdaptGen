class Solution {
	int great(int[][] nums, int num) {
		PriorityQueue<Integer> p = new PriorityQueue<>(Comparator.reverseOrder());
		for (int i = 0; i < nums.length; i++) {
			p.add(nums[i][num - 1]);
		}
		return p.poll();
	}
	int matrixSum(int[][] nums) {
		int num = nums[0].length;
		int sum = 0;
		nums = sorting(nums);
		while (num != 0) {
			sum = sum + great(nums,num);
			num--;
		}
		return sum;
	}
	int[][] sorting(int[][] nums) {
		for (int i = 0; i < nums.length; i++) {
			Arrays.sort(nums[i]);
		}
		return nums;
	}
}