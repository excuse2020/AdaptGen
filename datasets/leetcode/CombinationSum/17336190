class Solution {
	List<List<Integer>> result = null;
	List<List<Integer>> combinationSum(int[] arr, int tar) {
		result = new ArrayList<>();
		solve(arr,tar,0,new ArrayList<Integer>());
		return result;
	}
	void solve(int[] arr, int tar, int s, List<Integer> curr) {
		if (s >= arr.length) {
			if (tar == 0) {
				result.add(new ArrayList<Integer>(curr));
			}
			return;
		}
		if (arr[s] <= tar) {
			solve(arr,tar,s + 1,curr);
			curr.add(arr[s]);
			solve(arr,tar - arr[s],s,curr);
			curr.remove(curr.size() - 1);
		} 
		else {
			solve(arr,tar,s + 1,curr);
		}
	}
}