class Solution {
	boolean canEat(int x, int[] piles, int h) {
		int reqHours = 0;
		for (int b: piles) {	
			reqHours += Math.ceil((double) b / x);
			if (reqHours > h) {
				return false;
			}
		}
		return true;
	}
	int minEatingSpeed(int[] piles, int h) {
		int low = 0;
		int high = (int) 1e9 + 1;
		while (low < high) {
			int mid = low + (high - low) / 2;
			if (canEat(mid,piles,h)) {
				high = mid;
			} 
			else {
				low = mid + 1;
			}
		}
		return low;
	}
}