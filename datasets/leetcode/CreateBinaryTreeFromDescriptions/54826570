class Solution {
	TreeNode createBinaryTree(int[][] descriptions) {
		Map<Integer, TreeNode> numToNode = new HashMap<>();
		int sum = 0, child = 0;
		for (int[] desc: descriptions) {	
			if (!numToNode.containsKey(desc[0])) {
				numToNode.put(desc[0],new TreeNode(desc[0]));
				sum += desc[0];
			}
			if (!numToNode.containsKey(desc[1])) {
				numToNode.put(desc[1],new TreeNode(desc[1]));
				sum += desc[1];
			}
			child += desc[1];
			if (desc[2] == 1) {
				numToNode.get(desc[0]).left = numToNode.get(desc[1]);
			} 
			else {
				numToNode.get(desc[0]).right = numToNode.get(desc[1]);
			}
		}
		return numToNode.get(sum - child);
	}
}