class Solution {
	int minDepth(TreeNode root) {
		Queue<Pair<TreeNode, Integer>> queue = new LinkedList();
		int depth = Integer.MAX_VALUE;
		if (root == null) {
			return 0;
		}
		queue.add(new Pair(root, 1));
		while (!queue.isEmpty()) {
			Pair<TreeNode, Integer> node = queue.poll();
			if (node.getKey().left != null && node.getValue() + 1 < depth) {
				queue.add(new Pair(node.getKey().left, node.getValue() + 1));
			}
			if (node.getKey().right != null && node.getValue() + 1 < depth) {
				queue.add(new Pair(node.getKey().right, node.getValue() + 1));
			}
			if (node.getKey().right == null && node.getKey().left == null && node.getValue() < depth) {
				depth = node.getValue();
			}
		}
		return depth;
	}
}