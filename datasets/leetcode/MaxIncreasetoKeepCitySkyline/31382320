class Solution {
	int maxIncreaseKeepingSkyline(int[][] grid) {
		int[] rowMax = new int[grid[0].length];
		int[] colMax = new int[grid.length];
		int res = 0;
		for (int i = 0; i < grid.length; i++) {
			int rMax = 0;
			for (int j = 0; j < grid[i].length; j++) {
				rMax = Math.max(rMax,grid[i][j]);
				colMax[j] = Math.max(colMax[j],grid[i][j]);
			}
			rowMax[i] = rMax;
		}
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				int possibleValue = Math.min(rowMax[i],colMax[j]);
				if (possibleValue > grid[i][j]) {
					res += possibleValue - grid[i][j];
				}
			}
		}
		return res;
	}
}