class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int l1 = nums1.length;
		int l2 = nums2.length;
		int[] mergedArray = new int[l1 + l2];
		int l3 = mergedArray.length;
		for (int i = 0; i < l1; i++) {
			mergedArray[i] = nums1[i];
		}
		for (int j = 0; j < l2; j++) {
			for (int k = l1; k < l3; k++) {
				mergedArray[k] = nums2[j];
				l1++;
				break;
			}
		}
		for (int i = 0; i < l3 - 1; i++) {
			for (int j = 0; j < l3 - i; j++) {
				if (mergedArray[j] > mergedArray[j + 1]) {
					int temp = mergedArray[j];
					mergedArray[j] = mergedArray[j + 1];
					mergedArray[j + 1] = temp;
				}
			}
		}
		int start = 0;
		int end = l3 - 1;
		int mid = start + ((end - start) / 2);
		double m = mergedArray[mid];
		if (l3 % 2 == 0) {
			start = mid;
			end = mid + 1;
			m = ((mergedArray[start]) + (mergedArray[end])) / 2f;
			return m;
		}
		System.out.println(m);
		return m;
	}
}