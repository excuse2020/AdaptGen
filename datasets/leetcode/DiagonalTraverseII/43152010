class Solution {
	int[] findDiagonalOrder(List<List<Integer>> nums) {
		int row = nums.size();
		if (row == 0) {
			return new int[0];
		}
		List<Stack<Integer>> stacks = new ArrayList<>();
		for (int j = 0; j < row; j++) {
			int len = nums.get(j).size();
			for (int i = 0; i < len; i++) {
				if (stacks.size() < i + j) {
					stacks.add(new Stack());
				}
				stacks.get(i + j).add(nums.get(j).get(i));
			}
		}
		List<Integer> resLst = new ArrayList<>();
		for (Stack<Integer> stack: stacks) {	
			while (!stack.isEmpty()) {
				resLst.add(stack.pop());
			}
		}
		int[] resArray = resLst.stream().mapToInt((i) -> {i}).toArray();
		return resArray;
	}
}