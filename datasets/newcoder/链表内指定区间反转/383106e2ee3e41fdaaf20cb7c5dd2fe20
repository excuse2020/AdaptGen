class Solution {
	ListNode reverse(ListNode head) {
		ListNode pre = null;
		ListNode cur = head;
		while (cur != null) {
			ListNode next = cur.next;
			cur.next = pre;
			pre = cur;
			cur = next;
		}
		return pre;
	}
	ListNode reverseBetween(ListNode head, int m, int n) {
		ListNode pre = new ListNode(0);
		pre.next = head;
		ListNode f0 = pre;
		for (int i = 0; i < m - 1; i++) {
			f0 = f0.next;
		}
		ListNode f2 = pre;
		for (int i = 0; i < n; i++) {
			f2 = f2.next;
		}
		ListNode f1 = f0.next;
		ListNode f3 = f2.next;
		f0.next = null;
		f2.next = null;
		reverse(f1);
		f0.next = f2;
		f1.next = f3;
		return pre.next;
	}
}