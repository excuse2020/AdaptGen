class Solution {
	int GRID(int i, int j, int[][] grid, int sum) {
		if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] == 0) {
			return 0;
		}
		int temp = grid[i][j];
		grid[i][j] = 0;
		sum = temp + Math.max(GRID(i + 1,j,grid,sum),Math.max(GRID(i - 1,j,grid,sum),Math.max(GRID(i,j - 1,grid,sum),GRID(i,j + 1,grid,sum))));
		grid[i][j] = temp;
		return sum;
	}
	int getMaximumGold(int[][] grid) {
		int ans = 0;
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (grid[i][j] != 0) {
					ans = Math.max(ans,GRID(i,j,grid,0));
				}
			}
		}
		return ans;
	}
}