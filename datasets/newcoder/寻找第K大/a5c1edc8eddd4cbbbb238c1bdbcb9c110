class Solution {
	int findKth(int[] a, int n, int K) {
		quickSort(a,0,a.length - 1,K);
		for (int i = a.length - 1; i > 0; i--) {
			System.out.print("," + a[i]);
		}
		return a[K - 1];
	}
	void quickSort(int[] arr, int begin, int end, int K) {
		int BEGIN = begin;
		int END = end;
		int pivot = arr[end];
		while (end > begin) {
			while (begin < end && arr[begin] >= pivot) {
				begin++;
			}
			while (begin < end && arr[end] < pivot) {
				end--;
			}
			if (end > begin) {
				sw(arr,begin,end);
			}
		}
		if (BEGIN < begin && K - 1 <= begin - 1) {
			quickSort(arr,BEGIN,begin - 1,K);
		}
		if (end < END && K - 1 >= end) {
			quickSort(arr,end,END,K);
		}
	}
	void sw(int[] arr, int a, int b) {
		if (a == b || arr[a] == arr[b]) {
			return;
		}
		arr[a] = arr[a] ^ arr[b];
		arr[b] = arr[a] ^ arr[b];
		arr[a] = arr[a] ^ arr[b];
		System.out.println("交换了" + arr[a]);
	}
}