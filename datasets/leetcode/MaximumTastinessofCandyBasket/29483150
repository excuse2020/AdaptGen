class Solution {
	int maximumTastiness(int[] price, int k) {
		Arrays.sort(price);
		int l = price.length;
		int right = price[l - 1] - price[0];
		int left = 0;
		int ans = 0;
		while (left <= right) {
			int mid = left + (right - left) / 2;
			if (pos(mid,price,k)) {
				ans = mid;
				left = mid + 1;
			} 
			else {
				right = mid - 1;
			}
		}
		return ans;
	}
	boolean pos(int gap, int[] price, int k) {
		int count = 1;
		int last = price[0];
		int l = price.length;
		for (int ind = 1; ind < l; ind++) {
			if (price[ind] - last >= gap) {
				count++;
				last = price[ind];
			}
		}
		return count >= k;
	}
}