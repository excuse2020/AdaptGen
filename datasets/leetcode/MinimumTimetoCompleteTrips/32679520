class Solution {
	boolean isOkay(long totalTime, int[] time, long tt) {
		long countTrips = 0;
		for (int t: time) {	
			countTrips += totalTime / t;
		}
		return countTrips >= tt ? true : false;
	}
	long minimumTime(int[] time, int totalTrips) {
		long l = Long.MAX_VALUE;
		long min = Long.MAX_VALUE;
		for (int t: time) {	
			l = Math.min(l,t);
			min = Math.min(min,t);
		}
		long r = min * totalTrips;
		while (l <= r) {
			long mid = l + (r - l) / 2;
			if (isOkay(mid,time,totalTrips)) {
				r = mid - 1;
				min = mid;
			} 
			else {
				l = mid + 1;
			}
		}
		return min == Integer.MAX_VALUE ? r : min;
	}
}