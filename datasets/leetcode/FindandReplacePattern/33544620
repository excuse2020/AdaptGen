class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> ans = new ArrayList<>();
		for (String word: words) {	
			if (matched(word,pattern)) {
				ans.add(word);
			}
		}
		return ans;
	}
	boolean matched(String word, String pattern) {
		if (word.length() != pattern.length()) {
			return false;
		}
		HashMap<Character, Character> map = new HashMap<>();
		HashSet<Character> set = new HashSet<>();
		for (int i = 0; i < word.length(); i++) {
			char w = word.charAt(i), p = pattern.charAt(i);
			if ((set.contains(w) && !map.containsKey(p)) || (map.containsKey(p) && map.get(p) != w)) {
				return false;
			} 
			else {
				map.put(p,w);
				set.add(w);
			}
		}
		return true;
	}
}