class Solution {
	ArrayList<Integer> getPath(TreeNode root, int target) {
		ArrayList<Integer> path = new ArrayList<Integer>();
		TreeNode node = root;
		while (node.val != target) {
			path.add(node.val);
			if (node.val > target) {
				node = node.left;
			} 
			else {
				node = node.right;
			}
		}
		path.add(target);
		return path;
	}
	int lowestCommonAncestor(TreeNode root, int p, int q) {
		ArrayList<Integer> pPath = pPath = getPath(root,p);
		ArrayList<Integer> qPath = qPath = getPath(root,q);
		int res = 0;
		for (int i = 0; i < pPath.size() && i < qPath.size(); ++i) {
			int x = pPath.get(i);
			int y = qPath.get(i);
			if (x == y) {
				res = x;
			} 
			else {
				break;
			}
		}
		return res;
	}
}