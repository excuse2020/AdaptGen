class Solution {
	int count = 0;
	void bfs(char[][] grid, int x, int y) {
		if (x < 0 || y < 0 || x >= grid.length || y >= grid[0].length || grid[x][y] == '0') {
			return;
		}
		if (grid[x][y] == '1') {
			grid[x][y] = '0';
			if (x > 0 && grid[x - 1][y] == '1') {
				bfs(grid,x - 1,y);
			}
			if (y > 0 && grid[x][y - 1] == '1') {
				bfs(grid,x,y - 1);
			}
			if (x < grid.length - 1 && grid[x + 1][y] == '1') {
				bfs(grid,x + 1,y);
			}
			if (y < grid[0].length - 1 && grid[x][y + 1] == '1') {
				bfs(grid,x,y + 1);
			}
		}
	}
	int solve(char[][] grid) {
		for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[i].length; j++) {
				if (grid[i][j] == '1') {
					bfs(grid,i,j);
					count++;
				}
			}
		}
		return count;
	}
}