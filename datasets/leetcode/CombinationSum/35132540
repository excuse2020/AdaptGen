class Solution {
	List<List<Integer>> combinationSum(int[] candidates, int target) {
		List<List<Integer>> ans = new ArrayList<>();
		solve(candidates,new ArrayList<Integer>(),0,0,target,ans);
		return ans;
	}
	void solve(int[] a, List<Integer> al, int p, int sum, int target, List<List<Integer>> ans) {
		if (p == a.length) {
			if (sum == target) {
				ans.add(new ArrayList<>(al));
			}
			return;
		}
		if (sum + a[p] <= target) {
			al.add(a[p]);
			solve(a,al,p,sum + a[p],target,ans);
			al.remove(al.size() - 1);
		}
		solve(a,al,p + 1,sum,target,ans);
	}
}