class Solution {
	ListNode oddEvenList(ListNode head) {
		if (head == null || head.next == null || head.next.next == null) {
			return head;
		}
		ListNode result = new ListNode(-1);
		ListNode currentNode = result;
		ListNode p1 = head;
		ListNode p2 = head;
		int count = 1;
		while (p1 != null) {
			if ((count & 1) == 1) {
				currentNode.next = new ListNode(p1.val);
				currentNode = currentNode.next;
			}
			p1 = p1.next;
			count++;
		}
		count = 1;
		while (p2 != null) {
			if ((count & 1) == 0) {
				currentNode.next = new ListNode(p2.val);
				currentNode = currentNode.next;
			}
			p2 = p2.next;
			count++;
		}
		return result.next;
	}
}