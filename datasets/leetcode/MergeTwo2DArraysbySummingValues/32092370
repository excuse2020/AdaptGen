class Solution {
	int[][] mergeArrays(int[][] nums1, int[][] nums2) {
		if (nums1.length == 0) {
			return nums2;
		}
		if (nums2.length == 0) {
			return nums1;
		}
		int longLength = nums1.length + nums2.length;
		List<int[]> result = new ArrayList<>();
		int i1 = 0;
		int i2 = 0;
		int[] temp1;
		int[] temp2;
		for (int i = 0; i < longLength; i++) {
			temp1 = new int[2];
			temp2 = new int[2];
			if (i1 < nums1.length) {
				temp1 = nums1[i1];
			}
			if (i2 < nums2.length) {
				temp2 = nums2[i2];
			}
			if (temp1[0] == temp2[0] && temp1[1] == temp2[1] && temp1[0] == 0 && temp1[1] == 0) {
				break;
			}
			if (temp1[0] == 0 && temp1[1] == 0) {
				result.add(temp2);
				i2++;
				continue;
			}
			if (temp2[0] == 0 && temp2[1] == 0) {
				result.add(temp1);
				i1++;
				continue;
			}
			if (temp1[0] == temp2[0]) {
				int[] temp = new int[2];
				temp[0] = temp1[0];
				temp[1] = temp1[1] + temp2[1];
				i1++;
				i2++;
				result.add(temp);
			} 
			else if (temp1[0] > temp2[0]) {
				result.add(temp2);
				i2++;
			} 
			else {
				result.add(temp1);
				i1++;
			}
		}
		return result.toArray(new int[0]);
	}
}