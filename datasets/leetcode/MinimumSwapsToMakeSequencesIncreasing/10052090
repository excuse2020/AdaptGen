class Solution {
	int minSwap(int[] A, int[] B) {
		int n = A.length;
		int lastSwap = 1;
		int lastNoSwap = 0;
		for (int i = 1; i < n; i++) {
			int noSwap = Integer.MAX_VALUE;
			int swap = Integer.MAX_VALUE;
			if (A[i] > A[i - 1] && B[i] > B[i - 1]) {
				noSwap = Math.min(noSwap,lastNoSwap);
			}
			if (A[i] > B[i - 1] && B[i] > A[i - 1]) {
				noSwap = Math.min(noSwap,lastSwap);
			}
			if (A[i] > A[i - 1] && B[i] > B[i - 1]) {
				swap = Math.min(swap,lastSwap + 1);
			}
			if (A[i] > B[i - 1] && B[i] > A[i - 1]) {
				swap = Math.min(swap,lastNoSwap + 1);
			}
			lastNoSwap = noSwap;
			lastSwap = swap;
		}
		return Math.min(lastSwap,lastNoSwap);
	}
}