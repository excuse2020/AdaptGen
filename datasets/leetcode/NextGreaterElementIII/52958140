class Solution {
	int nextGreaterElement(int n) {
		char[] charArr = Integer.toString(n).toCharArray();
		int i = charArr.length - 2;
		while ((i >= 0) && (charArr[i] >= charArr[i + 1])) {
			i--;
		}
		if (i == -1) {
			return -1;
		}
		int j = charArr.length - 1;
		while ((j >= 0) && (charArr[j] <= charArr[i])) {
			j--;
		}
		if (j == -1) {
			return -1;
		}
		swap(charArr,i,j);
		reverse(charArr,i + 1,charArr.length - 1);
		long res = Long.parseLong(new String(charArr));
		if (res > Integer.MAX_VALUE) {
			return -1;
		} 
		else {
			return (int) res;
		}
	}
	void reverse(char[] charArr, int i, int j) {
		while (i < j) {
			swap(charArr,i,j);
			i++;
			j--;
		}
	}
	void swap(char[] charArr, int i, int j) {
		char temp = charArr[i];
		charArr[i] = charArr[j];
		charArr[j] = temp;
	}
}