class Solution {
	String ans = "";
	int count = 0;
	void getAllPermutation(int n, int k, boolean[] vis, StringBuilder s) {
		if (s.length() == n) {
			count++;
			if (count == k) {
				ans += s;
			}
			return;
		}
		if (count > k) {
			return;
		}
		for (int i = 1; i <= n; i++) {
			if (vis[i - 1]) {
				continue;
			}
			vis[i - 1] = true;
			s.append(i);
			getAllPermutation(n,k,vis,s);
			vis[i - 1] = false;
			s.deleteCharAt(s.length() - 1);
		}
	}
	String getPermutation(int n, int k) {
		boolean[] vis = new boolean[n];
		StringBuilder s = new StringBuilder("");
		getAllPermutation(n,k,vis,s);
		return ans;
	}
}