class Solution {
	int totalFruit(int[] fruits) {
		int max = 0;
		int curr = 0;
		int start = 0, end = 0;
		Map<Integer, Integer> basket = new HashMap<>();
		while (start <= end && end < fruits.length) {
			int type = fruits[end];
			int types = basket.containsKey(type) ? basket.keySet().size() : basket.keySet().size() + 1;
			if (types > 2) {
				int startFruit = fruits[start];
				basket.put(startFruit,basket.getOrDefault(startFruit,0) - 1);
				if (basket.get(startFruit) <= 0) {
					basket.remove(startFruit);
				}
				start++;
				curr--;
			} 
			else {
				basket.put(type,basket.getOrDefault(type,0) + 1);
				curr++;
				end++;
				max = Math.max(max,curr);
			}
		}
		return max;
	}
}