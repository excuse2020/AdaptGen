class Solution {
	int matrixSum(int[][] nums) {
		PriorityQueue<Integer> arr = new PriorityQueue[nums.length];
		for (int i = 0; i < nums.length; i++) {
			arr[i] = new PriorityQueue<>(Comparator.reverseOrder());
			for (int j = 0; j < nums[i].length; j++) {
				arr[i].offer(nums[i][j]);
			}
		}
		int localMax = 0, sum = 0;
		while (!arr[0].isEmpty()) {
			for (int i = 0; i < arr.length; i++) {
				int curr = arr[i].poll();
				if (localMax < curr) {
					localMax = curr;
				}
			}
			sum += localMax;
			localMax = 0;
		}
		return sum;
	}
}