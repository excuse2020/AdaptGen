class Solution {
	int helper(int[] p, int i, int[] d) {
		int n = p.length;
		if (i >= n) {
			return 0;
		}
		if (d[i] != -1) {
			return d[i];
		}
		int take = p[i] + helper(p,i + 1,d);
		int nottake = p[n - i - 1] + helper(p,i + 1,d);
		return d[i] = Math.max(take,nottake);
	}
	boolean stoneGame(int[] piles) {
		int dp = new int[piles.length];
		Arrays.fill(dp,-1);
		int alice = helper(piles,0,dp);
		int bob = helper(piles,1,dp);
		if (alice > bob) {
			return true;
		}
		return false;
	}
}