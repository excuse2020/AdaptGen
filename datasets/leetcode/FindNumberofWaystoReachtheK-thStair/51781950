class Solution {
	HashMap<String, Integer> hm = new HashMap<>();
	int solve(int start, int target, int jump, boolean r) {
		String key = start + ",";
		if (hm.containsKey(key)) {
			return hm.get(key);
		}
		if (start < 0) {
			return 0;
		}
		if (start == target) {
			int result = 1 + solve(start + (int) Math.pow(2,jump),target,jump + 1,true);
			hm.put(key,result);
			return result;
		}
		if (start - target > 1) {
			return 0;
		}
		int ans = 0;
		int nextJump = (int) Math.pow(2,jump);
		if (r) {
			ans += solve(start + nextJump,target,jump + 1,true);
			ans += solve(start - 1,target,jump,false);
		} 
		else {
			ans += solve(start + nextJump,target,jump + 1,true);
		}
		hm.put(key,ans);
		return ans;
	}
	int waysToReachStair(int k) {
		return solve(1,k,0,true);
	}
}