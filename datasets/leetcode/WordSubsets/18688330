class Solution {
	int L = 26;
	int[] count(String word) {
		int[] counts = new int[L];
		int i = 0;
		int ch;
	}
	boolean isSubset(int[] minCounts, int[] counts) {
		for (int i = 0; i < L; i++) {
			if (counts[i] < minCounts[i]) {
				return false;
			}
		}
		return true;
	}
	List<String> wordSubsets(String[] words1, String[] words2) {
		int[] minCounts = new int[L];
		for (String word: words2) {	
			int[] counts = count(word);
			for (int i = 0; i < L; i++) {
				minCounts[i] = Math.max(minCounts[i],counts[i]);
			}
		}
		List<String> res = new ArrayList<>();
		for (String word: words1) {	
			int[] counts = count(word);
			if (isSubset(minCounts,counts)) {
				res.add(word);
			}
		}
		return res;
	}
}