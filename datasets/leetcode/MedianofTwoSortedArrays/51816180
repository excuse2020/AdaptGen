class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int i = nums1.length - 1;
		int j = nums2.length - 1;
		int mIndex = (i + j) / 2;
		Boolean isEven = (i + j) % 2 == 0;
		while (i >= 0 && j >= 0) {
			if (nums1[i] > nums2[j]) {
				if ((i + j) == mIndex) {
					if (isEven) {
						if (i > 0 && nums1[i - 1] > nums2[j]) {
							return (nums1[i] + nums1[i - 1]) / 2.0;
						}
						return (nums1[i] + nums2[j]) / 2.0;
					}
					return nums1[i] / 1.0;
				}
				i--;
			} 
			else {
				if ((i + j) == mIndex) {
					if (isEven) {
						if (j > 0 && nums2[j - 1] > nums1[i]) {
							return (nums2[j] + nums2[j - 1]) / 2.0;
						}
						return (nums2[j] + nums1[i]) / 2.0;
					}
					return nums2[j] / 1.0;
				}
				j--;
			}
		}
		if (i >= mIndex) {
			if (isEven) {
				return (nums1[mIndex] + nums1[mIndex - 1]) / 2.0;
			}
			return nums1[mIndex] / 1.0;
		}
		if (j >= mIndex) {
			if (isEven) {
				return (nums2[mIndex] + nums2[mIndex - 1]) / 2.0;
			}
			return nums2[mIndex] / 1.0;
		}
		return 0.0;
	}
}