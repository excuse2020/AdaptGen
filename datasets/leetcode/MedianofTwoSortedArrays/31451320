class Solution {
	double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int m = nums1.length;
		int n = nums2.length;
		double ans;
		int[] merge = new int[m + n];
		int i = 0, j = 0, k = 0;
		while (i < m && j < n && k < (m + n)) {
			if (nums1[i] < nums2[j]) {
				merge[k++] = nums1[i];
				i++;
			} 
			else {
				merge[k++] = nums2[j];
				j++;
			}
		}
		while (i < m) {
			merge[k++] = nums1[i++];
		}
		while (j < n) {
			merge[k++] = nums2[j++];
		}
		if (((m + n) % 2) != 0) {
			ans = merge[(m + n) / 2];
		} 
		else {
			int a = merge[(m + n) / 2];
			int b = merge[(m + n - 1) / 2];
			ans = (double) (a + b) / 2;
		}
		return ans;
	}
}