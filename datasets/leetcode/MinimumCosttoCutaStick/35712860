class Solution {
	int[] cuts;
	Integer[][] memo;
	int helper(int left, int right) {
		if (right - left == 1) {
			return 0;
		}
		if (memo[left][right] != null) {
			return memo[left][right];
		}
		int res = Integer.MAX_VALUE;
		for (int cut: cuts) {	
			if (cut > left && cut < right) {
				res = Math.min(res,right - left + helper(left,cut) + helper(cut,right));
			}
		}
		return memo[left][right] = res == Integer.MAX_VALUE ? 0 : res;
	}
	int minCost(int n, int[] cuts) {
		this.cuts = cuts;
		memo = new Integer[n + 1][n + 1];
		return helper(0,n);
	}
}