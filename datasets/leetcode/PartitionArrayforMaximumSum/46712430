class Solution {
	int maxSumAfterPartitioning(int[] arr, int k) {
		int n = arr.length;
		return solve(0,arr,k,n);
	}
	int solve(int ind, int[] arr, int k, int n) {
		if (ind == arr.length) {
			return 0;
		}
		int maxEle = -1;
		int ans = -1;
		for (int i = ind; i < Math.min(n,ind + k); i++) {
			maxEle = Math.max(maxEle,arr[i]);
			int noOfEle = i - ind + 1;
			int currSum = noOfEle * maxEle;
			ans = Math.max(ans,currSum + solve(i + 1,arr,k,n));
		}
		return ans;
	}
}