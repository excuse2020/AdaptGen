class Solution {
	boolean isPalindrome(ListNode head) {
		if (head.next == null) {
			return true;
		}
		if (head.next.next == null) {
			if (head.val == head.next.val) {
				return true;
			} 
			else {
				return false;
			}
		}
		ListNode slow = head;
		ListNode fast = head;
		ListNode temp = head;
		int len = 0;
		while (fast.next != null) {
			if (fast.next.next != null) {
				fast = fast.next.next;
				slow = slow.next;
				temp = slow;
				len += 2;
			} 
			else {
				fast = fast.next;
				temp = slow.next;
				len += 1;
			}
		}
		fast = head;
		ListNode prev = null;
		while (fast != temp) {
			slow = fast.next;
			fast.next = prev;
			prev = fast;
			fast = slow;
		}
		if (len % 2 == 0) {
			temp = temp.next;
		}
		while (prev != null || temp != null) {
			if (prev.val != temp.val) {
				return false;
			} 
			else {
				prev = prev.next;
				temp = temp.next;
			}
		}
		if (prev == null && temp == null) {
			return true;
		}
		return false;
	}
}