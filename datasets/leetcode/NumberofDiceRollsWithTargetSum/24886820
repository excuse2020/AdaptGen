class Solution {
	int numRollsToTarget(int n, int k, int target) {
		int mod = (int) (1e9 + 7);
		int[][] dp = new int[n + 1][target + 1];
		return possibleWays(n,k,target,mod);
	}
	int possibleWays(int dice, int faces, int target, int mod) {
		if (target < 0) {
			return 0;
		}
		if (dice == 0 && target != 0) {
			return 0;
		}
		if (dice == 0 && target == 0) {
			return 1;
		}
		int count = 0;
		for (int i = 1; i <= faces; i++) {
			count = (count + possibleWays(dice - 1,faces,target - i,mod)) % mod;
		}
		return count;
	}
}