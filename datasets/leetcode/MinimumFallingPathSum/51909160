class Solution {
	int minFallingPathSum(int[][] matrix) {
		int[][] dp = new int[matrix.length][matrix[0].length];
		for (int[] row: dp) {	
			Arrays.fill(row,0);
		}
		int ans = 0;
		for (int i = 0; i < matrix.length; i++) {
			int min = 1000000000;
			for (int j = 0; j < matrix[0].length; j++) {
				if (i == 0) {
					dp[i][j] = matrix[i][j];
					min = Math.min(min,dp[i][j]);
					continue;
				}
				int up = matrix[i][j];
				int left = matrix[i][j], right = matrix[i][j];
				up += dp[i - 1][j];
				if (j > 0) {
					left += dp[i - 1][j - 1];
				} 
				else {
					left = 1000000000;
				}
				if (j < matrix[0].length - 1) {
					right += dp[i - 1][j + 1];
				} 
				else {
					right = 1000000000;
				}
				dp[i][j] += Math.min(left,Math.min(right,up));
				min = Math.min(min,dp[i][j]);
			}
			ans = min;
		}
		return ans;
	}
}