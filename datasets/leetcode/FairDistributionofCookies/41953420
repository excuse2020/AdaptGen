class Solution {
	int distributeCookies(int[] cookies, int k) {
		int[] list = new int[k];
		return helper(list,cookies,k,0);
	}
	int helper(int[] list, int[] cookies, int k, int i) {
		if (i == cookies.length) {
			return max(list);
		}
		int minUnFairNess = Integer.MAX_VALUE;
		for (int j = 0; j < k; j++) {
			list[j] += cookies[i];
			int ans = helper(list,cookies,k,i + 1);
			if (ans < minUnFairNess) {
				minUnFairNess = ans;
			}
			list[j] -= cookies[i];
		}
		return minUnFairNess;
	}
	int max(int[] list) {
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < list.length; i++) {
			if (list[i] > max) {
				max = list[i];
			}
		}
		return max;
	}
}