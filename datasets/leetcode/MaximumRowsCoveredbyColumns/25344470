class Solution {
	int[] masks;
	int max = 0;
	int targetColumns;
	void checkForValidity(String columnMask) {
		if (numberOfSetBits(columnMask) != targetColumns) {
			return;
		}
		int cnt = 0;
		int index = columnMask.length() - 1;
	}
	int fromArray(int[] arr) {
		int shift = arr.length - 1;
		int num = 0;
		for (int i: arr) {	
			num += i << shift--;
		}
		return num;
	}
	int maximumRows(int[][] mat, int targetColumns) {
		int rows = mat.length;
		this.masks = new int[rows];
		for (int r = 0; r < rows; r++) {
			masks[r] = fromArray(mat[r]);
		}
		this.targetColumns = targetColumns;
		rec("",0,mat[0].length);
		return max;
	}
	int numberOfSetBits(String num) {
		int cnt = 0;
		int i = 0;
	}
	void rec(String currentColumnsMask, int numberOfColumns, int totalColumns) {
		if (numberOfColumns == totalColumns) {
			checkForValidity(currentColumnsMask);
			return;
		}
		rec(currentColumnsMask + "0",numberOfColumns + 1,totalColumns);
		rec(currentColumnsMask + "1",numberOfColumns + 1,totalColumns);
	}
}