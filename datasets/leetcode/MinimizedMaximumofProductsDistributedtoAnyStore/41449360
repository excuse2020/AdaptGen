class Solution {
	int minimizedMaximum(int n, int[] quant) {
		int m = quant.length;
		int i = 0;
		int high = quant[0];
		for (i = 1; i < m; i++) {
			if (quant[i] > high) {
				high = quant[i];
			}
		}
		if (n == m) {
			return high;
		}
		int low = 1;
		int ans = -1;
		while (low <= high) {
			int mid = (low + high) / 2;
			int c = 0;
			for (i = 0; i < m; i++) {
				c += (quant[i] - 1) / mid + 1;
			}
			if (c <= n) {
				ans = mid;
				high = mid - 1;
			} 
			else {
				low = mid + 1;
			}
		}
		return ans;
	}
}