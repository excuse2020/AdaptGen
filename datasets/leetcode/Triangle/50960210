class Solution {
	int minimumTotal(List<List<Integer>> triangle) {
		if (triangle.size() == 1) {
			return triangle.get(0).get(0);
		}
		int minPath = Integer.MAX_VALUE;
		for (int i = 1; i < triangle.size(); i++) {
			for (int j = 0; j < triangle.get(i).size(); j++) {
				int a = j - 1 > -1 ? triangle.get(i).get(j) + triangle.get(i - 1).get(j - 1) : Integer.MAX_VALUE;
				int b = j < triangle.get(i - 1).size() ? triangle.get(i).get(j) + triangle.get(i - 1).get(j) : Integer.MAX_VALUE;
				triangle.get(i).set(j,Math.min(a,b));
				if (i == triangle.size() - 1) {
					minPath = Math.min(minPath,triangle.get(i).get(j));
				}
			}
		}
		return minPath;
	}
}