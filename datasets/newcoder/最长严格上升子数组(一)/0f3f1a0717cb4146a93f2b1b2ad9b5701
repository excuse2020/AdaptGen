class Solution {
	int maxSubArrayLengthTwo(int[] nums) {
		if (nums.length <= 1) {
			return nums.length;
		}
		int fMax = 1, gMax = 1, hMax = 1;
		int f = 1, g = 1, h = 1;
		int vh = 1;
		for (int i = 1; i < nums.length; i++) {
			int f_cur = (nums[i] > nums[i - 1]) ? f + 1 : 1;
			int g_curA = (nums[i] > nums[i - 1]) ? g + 1 : 1;
			int g_curB = (nums[i] > vh) ? h + 1 : 1;
			int g_cur = Math.max(g_curA,g_curB);
			int h_cur = f + 1;
			f = f_cur;
			g = g_cur;
			h = h_cur;
			vh = nums[i - 1] + 1;
			fMax = Math.max(fMax,f);
			gMax = Math.max(gMax,g);
			hMax = Math.max(hMax,h);
		}
		return Math.max(gMax,hMax);
	}
}