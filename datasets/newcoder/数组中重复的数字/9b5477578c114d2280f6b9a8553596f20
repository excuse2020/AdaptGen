class Solution {
	int duplicate(int[] nums) {
		int n = nums.length;
		if (nums == null || n <= 0) {
			return -1;
		}
		int[] newNums = Arrays.copyOf(nums,nums.length);
		Set<Integer> set = new HashSet<>();
		for (int i = 0; i < n; i++) {
			while (nums[i] != i) {
				if (nums[i] == nums[nums[i]]) {
					set.add(nums[i]);
					break;
				}
				swap(nums,i,nums[i]);
			}
		}
		for (int i = 0; i < n; i++) {
			if (set.contains(newNums[i])) {
				return newNums[i];
			}
		}
		return -1;
	}
	void swap(int[] nums, int i, int j) {
		int t = nums[i];
		nums[i] = nums[j];
		nums[j] = t;
	}
}