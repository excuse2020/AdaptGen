class Solution {
	int[] avoidFlood(int[] rains) {
		int[] answer = new int[rains.length];
		Map<Integer, Integer> fullLakes = new HashMap<>();
		TreeSet<Integer> daysToDry = new TreeSet<>();
		for (int i = 0; i < rains.length; i++) {
			if (rains[i] == 0) {
				daysToDry.add(i);
			} 
			else {
				answer[i] = -1;
				Integer index = fullLakes.put(rains[i],i);
				if (index != null) {
					if (daysToDry.isEmpty()) {
						return new int[0];
					}
					Integer nextDayToDry = daysToDry.ceiling(index);
					if (nextDayToDry == null) {
						return new int[0];
					} 
					else {
						daysToDry.remove(nextDayToDry);
						answer[nextDayToDry] = rains[i];
					}
				}
			}
		}
		daysToDry.forEach((entry) -> {answer[entry] = 1});
		return answer;
	}
}