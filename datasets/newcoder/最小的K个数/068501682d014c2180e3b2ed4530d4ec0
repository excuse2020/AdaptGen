class Solution {
	ArrayList<Integer> GetLeastNumbers_Solution(int[] input, int k) {
		quickSort(input,0,input.length - 1);
		ArrayList<Integer> result = new ArrayList<>();
		for (int i = 0; i < k; i++) {
			result.add(input[i]);
		}
		return result;
	}
	int partition(int[] A, int p, int r) {
		int x = A[r];
		int i = p - 1;
		for (int j = p; j < r; j++) {
			if (A[j] <= x) {
				swap(A,++i,j);
			}
		}
		swap(A,i + 1,r);
		return i + 1;
	}
	void quickSort(int[] A, int p, int r) {
		if (p < r) {
			int q = partition(A,p,r);
			quickSort(A,p,q - 1);
			quickSort(A,q + 1,r);
		}
	}
	void swap(int[] A, int i, int j) {
		if (A[i] != A[j]) {
			A[i] ^= A[j];
			A[j] ^= A[i];
			A[i] ^= A[j];
		}
	}
}