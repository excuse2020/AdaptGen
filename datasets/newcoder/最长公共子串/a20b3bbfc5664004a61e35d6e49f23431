class Solution {
	String LCS(String str1, String str2) {
		int tail = 0;
		int[][] dp = new int[str1.length()][str2.length()];
		if (str1.charAt(0) == str1.charAt(0)) {
			dp[0][0] = 1;
		} 
		else {
			dp[0][0] = 0;
		}
		if (str1.charAt(0) == str1.charAt(1)) {
			dp[0][1] = 1;
		} 
		else {
			dp[0][1] = 0;
		}
		if (str1.charAt(1) == str1.charAt(0)) {
			dp[1][0] = 1;
		} 
		else {
			dp[1][0] = 0;
		}
		int max = 1;
		for (int i = 1; i < str1.length(); i++) {
			for (int j = 1; j < str2.length(); j++) {
				if (str1.charAt(i) == str2.charAt(j)) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
					if (dp[i][j] > max) {
						tail = j;
						max = dp[i][j];
					}
				} 
				else {
					dp[i][j] = 0;
				}
			}
		}
		return str2.substring(tail - max + 1,tail + 1);
	}
}