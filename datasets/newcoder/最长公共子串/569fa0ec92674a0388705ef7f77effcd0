class Solution {
	String LCS(String str1, String str2) {
		int m = str1.length();
		int n = str2.length();
		if (str1 == null || m == 0 || str2 == null || n == 0) {
			return "0";
		}
		int index = 0;
		int maxLen = 0;
		int[][] dp = new int[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (str1.charAt(i) == str2.charAt(j)) {
					if (i == 0 || j == 0) {
						dp[i][j] = 1;
					} 
					else {
						dp[i][j] = dp[i - 1][j - 1] + 1;
					}
					if (maxLen < dp[i][j]) {
						maxLen = dp[i][j];
						index = j;
					}
				}
			}
		}
		if (maxLen == 0) {
			return "0";
		}
		return str2.substring(index + 1 - maxLen,index + 1);
	}
}