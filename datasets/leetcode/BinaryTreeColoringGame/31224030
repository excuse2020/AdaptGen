class Solution {
	int xKaleftsize = 0;
	int xKarightsize = 0;
	boolean btreeGameWinningMove(TreeNode root, int n, int x) {
		size(root,x);
		int theOtherside = n - (xKaleftsize + xKarightsize);
		int maxOfthree = Math.max(theOtherside,Math.max(xKaleftsize,xKarightsize));
		int rest = n - maxOfthree;
		if (maxOfthree > rest) {
			return true;
		} 
		else {
			return false;
		}
	}
	int size(TreeNode node, int x) {
		if (node == null) {
			return 0;
		}
		int ls = size(node.left,x);
		int rs = size(node.right,x);
		if (node.val == x) {
			xKaleftsize = ls;
			xKarightsize = rs;
		}
		int ts = ls + rs;
		return ts;
	}
}