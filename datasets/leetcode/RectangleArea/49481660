class Solution {
	int area(int x1, int y1, int x2, int y2) {
		return (x2 - x1) * (y2 - y1);
	}
	int computeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int overlapArea = 0;
		if (yCordinatesOverlap(ay2,ay1,by2,by1) && xCoordinatesOverlay(ax2,ax1,bx2,bx1)) {
			overlapArea = findOverlapAres(ax1,ay1,ax2,ay2,bx1,by1,bx2,by2);
		}
		return area(ax1,ay1,ax2,ay2) + area(bx1,by1,bx2,by2) - overlapArea;
	}
	int findOverlapAres(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
		int y2o = Math.min(ay2,by2);
		int y1o = Math.max(ay1,by1);
		int x2o = Math.min(ax2,bx2);
		int x1o = Math.max(ax1,bx1);
		return area(x1o,y1o,x2o,y2o);
	}
	boolean xCoordinatesOverlay(int ax2, int ax1, int bx2, int bx1) {
		return !(bx1 >= ax2 || bx2 <= ax1);
	}
	boolean yCordinatesOverlap(int ay2, int ay1, int by2, int by1) {
		return !(by2 <= ay1 || by1 >= ay2);
	}
}