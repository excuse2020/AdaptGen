class Solution {
	boolean isSafe(char board, int row, int col, char c) {
		for (int i = 0; i <= 8; i++) {
			if (board[i][col] == c) {
				return false;
			}
		}
		for (int j = 0; j <= 8; j++) {
			if (board[row][j] == c) {
				return false;
			}
		}
		int sr = (row / 3) * 3;
		int sc = (col / 3) * 3;
		for (int i = sr; i < sr + 3; i++) {
			for (int j = sc; j < sc + 3; j++) {
				if (board[i][j] == c) {
					return false;
				}
			}
		}
		return true;
	}
	boolean solveSud(char[][] board, int row, int col) {
		if (row == 9) {
			return true;
		}
		int nextRow = row;
		int nextCol = col + 1;
		if (col + 1 == 9) {
			nextRow = row + 1;
			nextCol = 0;
		}
	}
	void solveSudoku(char[][] board) {
		if (solveSud(board,0,0)) {
			return;
		}
	}
}