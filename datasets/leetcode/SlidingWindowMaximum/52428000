class Solution {
	int[] maxSlidingWindow(int[] nums, int k) {
		Deque<Integer> deque = new LinkedList<>();
		int n = nums.length;
		int[] ans = new int[n - (k - 1)];
		for (int r = 0; r < k; r++) {
			while (deque.size() > 0 && nums[deque.getLast()] < nums[r]) {
				deque.removeLast();
			}
			deque.addLast(r);
		}
		ans[0] = nums[deque.getFirst()];
		int l = 0;
		for (int r = k; r < n; r++) {
			if (l >= deque.getFirst()) {
				deque.removeFirst();
			}
			while (deque.size() > 0 && nums[deque.getLast()] < nums[r]) {
				deque.removeLast();
			}
			deque.addLast(r);
			l++;
			ans[r - (k - 1)] = nums[deque.getFirst()];
		}
		return ans;
	}
}