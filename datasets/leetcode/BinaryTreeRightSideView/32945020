class Solution {
	List<Integer> rightSideView(TreeNode root) {
		if (root == null) {
			return new LinkedList<>();
		}
		LinkedList<List<Integer>> lists = new LinkedList<>();
		Queue<TreeNode> queue = new LinkedList<>();
		TreeNode curr = root;
		queue.add(root);
		while (queue.size() > 0) {
			int size = queue.size();
			LinkedList<Integer> list = new LinkedList<>();
			while (size > 0) {
				curr = queue.poll();
				list.add(curr.val);
				if (curr.left != null) {
					queue.add(curr.left);
				}
				if (curr.right != null) {
					queue.add(curr.right);
				}
				size--;
			}
			lists.add(list);
		}
		LinkedList<Integer> res = new LinkedList<>();
		for (int i = 0; i < lists.size(); i++) {
			res.add(lists.get(i).get(lists.get(i).size() - 1));
		}
		return res;
	}
}