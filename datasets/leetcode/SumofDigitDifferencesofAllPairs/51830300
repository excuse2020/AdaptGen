class Solution {
	long sumDigitDifferences(int[] nums) {
		int n = nums.length;
		int m = String.valueOf(nums[0]).length();
		long ans = 0;
		Map<Integer, Integer> freqMp = new HashMap<>();
		for (int i = 0; i < m; i++) {
			freqMp.clear();
			for (int j = 0; j < n; j++) {
				int lastVal = nums[j] % 10;
				nums[j] = nums[j] / 10;
				freqMp.put(lastVal,freqMp.getOrDefault(lastVal,0) + 1);
			}
			for (int freq: freqMp.values()) {	
				ans += (freq * (n - freq));
			}
		}
		return ans / 2;
	}
}