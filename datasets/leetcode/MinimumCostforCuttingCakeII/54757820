class Solution {
	long minimumCost(int m, int n, int[] horizontalCut, int[] verticalCut) {
		Arrays.sort(horizontalCut);
		Arrays.sort(verticalCut);
		int hlen = horizontalCut.length;
		int vlen = verticalCut.length;
		int i = hlen - 1, j = vlen - 1;
		long res = 0;
		while (i >= 0 && j >= 0) {
			if (horizontalCut[i] >= verticalCut[j]) {
				res = res + (horizontalCut[i] * (n - j));
				i--;
			} 
			else {
				res = res + verticalCut[j] * (m - i);
				j--;
			}
		}
		while (i >= 0) {
			res = res + horizontalCut[i] * (n);
			i--;
		}
		while (j >= 0) {
			res = res + verticalCut[j] * (m);
			j--;
		}
		return res;
	}
}