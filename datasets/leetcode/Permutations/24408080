class Solution {
	List<List<Integer>> permute(int[] nums) {
		List<List<Integer>> ans = new ArrayList<>();
		ArrayList<Integer> ds = new ArrayList<>();
		boolean[] arr = new boolean[nums.length];
		printPermutations(nums,ans,arr,ds);
		return ans;
	}
	void printPermutations(int[] nums, List<List<Integer>> ans, boolean[] vis, List<Integer> ds) {
		if (ds.size() == nums.length) {
			ans.add(new ArrayList<>(ds));
			return;
		}
		for (int i = 0; i < nums.length; i++) {
			if (vis[i] == false) {
				vis[i] = true;
				ds.add(nums[i]);
				printPermutations(nums,ans,vis,ds);
				ds.remove(ds.size() - 1);
				vis[i] = false;
			}
		}
	}
}