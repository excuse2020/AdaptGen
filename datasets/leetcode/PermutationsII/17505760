class Solution {
	void getPermutations(HashSet<List<Integer>> ans, int[] nums, int index) {
		if (index == nums.length) {
			List res = new ArrayList<>();
			for (int i = 0; i < nums.length; i++) {
				res.add(nums[i]);
			}
			ans.add(res);
			return;
		}
		for (int i = index; i < nums.length; i++) {
			swap(nums,index,i);
			getPermutations(ans,nums,index + 1);
			swap(nums,index,i);
		}
	}
	List<List<Integer>> permuteUnique(int[] nums) {
		HashSet<List<Integer>> ans = new HashSet<>();
		getPermutations(ans,nums,0);
		return new ArrayList<>(ans);
	}
	void swap(int[] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
}