class Solution {
	ListNode deleteDuplicates(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}
		ListNode now = head;
		ListNode las = now;
		ListNode nex = now.next;
		while (head.next != null && head.val == head.next.val) {
			while (head.next != null && head.val == head.next.val) {
				head = head.next;
			}
			if (head.next == null) {
				return null;
			}
			if (head.val != head.next.val) {
				head = head.next;
			}
		}
		while (nex != null) {
			while (now.val == nex.val && nex.next != null) {
				nex = nex.next;
			}
			if (now.val != nex.val) {
				if (now.next == nex) {
					las = now;
					now = nex;
					nex = nex.next;
				} 
				else {
					las.next = nex;
					now = nex;
					nex = nex.next;
				}
			} 
			else {
				if (las == now) {
					return null;
				}
				las.next = null;
				return head;
			}
		}
		return head;
	}
}