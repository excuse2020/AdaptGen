class Solution {
	boolean kokoeats(int[] piles, int h, int speed) {
		int hours = 0;
		for (int i: piles) {	
			hours += (int) Math.ceil((double) i / speed);
		}
		return hours <= h;
	}
	int minEatingSpeed(int[] piles, int h) {
		int minspeed = 1;
		int maxspeed = 0;
		for (int i: piles) {	
			maxspeed = Math.max(maxspeed,i);
		}
		while (minspeed < maxspeed) {
			int mid = minspeed + (maxspeed - minspeed) / 2;
			if (kokoeats(piles,h,mid)) {
				maxspeed = mid;
			} 
			else {
				minspeed = mid + 1;
			}
		}
		return minspeed;
	}
}