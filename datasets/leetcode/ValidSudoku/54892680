class Solution {
	boolean check(char[][] board, int i, int j, char c) {
		for (int k = 0; k < 9; k++) {
			if (board[i][k] == c) {
				return false;
			}
		}
		for (int k = 0; k < 9; k++) {
			if (board[k][j] == c) {
				return false;
			}
		}
		int sr = (i / 3) * 3;
		int sc = (j / 3) * 3;
		for (int m = sr; m < sr + 3; m++) {
			for (int n = sc; n < sc + 3; n++) {
				if (board[m][n] == c) {
					return false;
				}
			}
		}
		return true;
	}
	boolean isValidSudoku(char[][] board) {
		int i = 0;
		int j = 0;
	}
}