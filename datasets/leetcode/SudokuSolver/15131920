class Solution1 {
	void solveSudoku(char[][] board) {
		if (board == null || board.length != 9 || board[0].length != 9) {
			throw new IllegalArgumentException("Input is invalid")
		}
		int[] rows = new int[9];
		int[] cols = new int[9];
		int[] boxes = new int[9];
		List<int[]> blanks = new ArrayList<>();
		int i = 0;
		int j = 0;
		char c = board[i][j];
	}
	boolean solveSudokuHelper(char[][] board, int[] rows, int[] cols, int[] boxes, List<int[]> blanks, int idx) {
		if (idx == blanks.size()) {
			return true;
		}
		int[] cell = blanks.get(idx);
		int i = cell[0];
		int j = cell[1];
		int b = 3 * (i / 3) + (j / 3);
		char c;
	}
}