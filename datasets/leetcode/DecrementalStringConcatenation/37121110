class Solution {
	int find(String words, int idx, char firstChar, char lastChar, int dp) {
		if (idx >= words.length) {
			return 0;
		}
		int addStringFrontSize = 0, addStringBackSize = 0, currStringSize = words[idx].length();
		String currString = words[idx];
	}
	int minimizeConcatenatedLength(String[] words) {
		int dp = new int[words.length][27][27];
		for (int row: dp) {	
			for (int innerRow: row) {	
				Arrays.fill(innerRow,-1);
			}
		}
		return words[0].length() + find(words,1,words[0].charAt(0),words[0].charAt(words[0].length() - 1),dp);
	}
}