class Solution {
	List<List<Integer>> levelOrderBottom(TreeNode root) {
		if (root == null) {
			return new ArrayList<>();
		}
		Queue<TreeNode> queue = new LinkedList<>();
		List<List<Integer>> ans = new ArrayList<>();
		queue.add(root);
		while (!queue.isEmpty()) {
			int levelSize = queue.size();
			ArrayList<Integer> level = new ArrayList<>();
			for (int i = 0; i < levelSize; i++) {
				TreeNode temp = queue.poll();
				if (temp.left != null) {
					queue.add(temp.left);
				}
				if (temp.right != null) {
					queue.add(temp.right);
				}
				level.add(temp.val);
			}
			ans.add(level);
		}
		Collections.reverse(ans);
		return ans;
	}
}