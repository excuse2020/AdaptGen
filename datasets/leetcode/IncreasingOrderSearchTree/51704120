class Solution {
	TreeNode increasingBST(TreeNode root) {
		if (root == null) {
			return root;
		}
		TreeNode leftNode = root.left;
		if (leftNode != null) {
			insertRootInLeftSubTree(root);
			root.left = null;
		}
		root.right = increasingBST(root.right);
		return (leftNode == null) ? root : increasingBST(leftNode);
	}
	void insertRootInLeftSubTree(TreeNode root) {
		TreeNode currNode = root.left;
		while (currNode.right != null) {
			currNode = currNode.right;
		}
		currNode.right = root;
	}
}