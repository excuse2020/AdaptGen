class Solution {
	int getHeight(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int left = getHeight(root.left) + 1;
		int right = getHeight(root.right) + 1;
		return Math.max(left,right);
	}
	TreeNode getNode(TreeNode root, int h, int H) {
		if (root == null) {
			return null;
		}
		if (h == H) {
			return root;
		}
		TreeNode left = getNode(root.left,h + 1,H);
		TreeNode right = getNode(root.right,h + 1,H);
		if (left != null && right != null) {
			return root;
		}
		return left != null ? left : right;
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		return getNode(root,1,getHeight(root));
	}
}