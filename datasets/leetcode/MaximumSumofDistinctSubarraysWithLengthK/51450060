class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		HashSet<Integer> set = new HashSet<>();
		long sum = 0;
		long max = 0;
		int i = 0;
		int j = 0;
		while (j < nums.length) {
			if (set.contains(nums[j])) {
				set.remove(nums[i]);
				sum -= nums[i];
				i++;
			} 
			else {
				set.add(nums[j]);
				sum += nums[j];
				if (j - i + 1 == k) {
					max = Math.max(max,sum);
					set.remove(nums[i]);
					sum -= nums[i];
					i++;
				}
				j++;
			}
		}
		return max;
	}
}