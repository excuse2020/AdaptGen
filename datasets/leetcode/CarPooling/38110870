class Solution {
	boolean carPooling(int[][] trips, int capacity) {
		HashMap<Integer, Integer> map = new HashMap<>();
		for (int arr: trips) {	
			int cap = arr[0];
			int src = arr[1];
			int des = arr[2];
			map.put(src,map.getOrDefault(src,0) + cap);
			map.put(des,map.getOrDefault(des,0) - cap);
		}
		PriorityQueue<Integer> q = new PriorityQueue<>();
		q.addAll(map.keySet());
		int pasng = 0;
		while (!q.isEmpty()) {
			pasng += map.get(q.remove());
			if (pasng > capacity) {
				return false;
			}
		}
		return pasng == 0;
	}
}