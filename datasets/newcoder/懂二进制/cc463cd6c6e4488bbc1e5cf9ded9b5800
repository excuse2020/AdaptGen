class Solution {
	int countBitDiff(int m, int n) {
		int tempM = Math.abs(m);
		int tenpN = Math.abs(n);
		StringBuffer sbA = new StringBuffer();
		StringBuffer sbB = new StringBuffer();
		while (tempM > 0) {
			sbA.append(tempM % 2);
			tempM = tempM / 2;
		}
		while (tenpN > 0) {
			sbB.append(tenpN % 2);
			tenpN = tenpN / 2;
		}
		int count = 0;
		int len = sbA.length() > sbB.length() ? sbA.length() : sbB.length();
		for (int i = 0; i < len; i++) {
			if (sbA.length() - 1 < i) {
				sbA.append('0');
			} 
			else if (sbB.length() - 1 < i) {
				sbB.append('0');
			}
		}
		for (int i = 0; i < len; i++) {
			if (sbA.charAt(i) != sbB.charAt(i)) {
				count++;
			}
		}
		return count;
	}
}