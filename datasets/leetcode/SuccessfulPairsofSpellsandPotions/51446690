class Solution {
	int checkPotion(int spell, int[] potions, long success) {
		int start = 0, end = potions.length - 1;
		int idx = potions.length;
		while (start <= end) {
			int mid = (start + end) / 2;
			if ((long) potions[mid] * spell >= success) {
				end = mid - 1;
				idx = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return potions.length - idx;
	}
	int[] successfulPairs(int[] spells, int[] potions, long success) {
		int[] ans = new int[spells.length];
		Arrays.sort(potions);
		for (int i = 0; i < spells.length; i++) {
			boolean enter = false;
			ans[i] = checkPotion(spells[i],potions,success);
		}
		return ans;
	}
}