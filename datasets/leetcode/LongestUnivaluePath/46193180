class Solution {
	int dfs(TreeNode root, int[] answer) {
		if (root == null) {
			return 0;
		}
		int left = dfs(root.left,answer);
		int right = dfs(root.right,answer);
		int nodes = 1, leftNodes = 0, rightNodes = 0;
		if (left != 0 && root.val == root.left.val) {
			nodes += left;
			leftNodes = left;
		}
		if (right != 0 && root.val == root.right.val) {
			nodes += right;
			rightNodes = right;
		}
		answer[0] = Math.max(answer[0],nodes - 1);
		return 1 + Math.max(leftNodes,rightNodes);
	}
	int longestUnivaluePath(TreeNode root) {
		int[] answer = new int[1];
		dfs(root,answer);
		return answer[0];
	}
}