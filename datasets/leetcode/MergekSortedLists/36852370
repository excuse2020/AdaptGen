class Solution {
	ListNode helperMerge(ListNode list1, ListNode list2) {
		ListNode dummyNode = new ListNode();
		ListNode tail = dummyNode;
		while (list1 != null && list2 != null) {
			if (list1.val < list2.val) {
				tail.next = list1;
				list1 = list1.next;
				tail = tail.next;
			} 
			else {
				tail.next = list2;
				list2 = list2.next;
				tail = tail.next;
			}
		}
		tail.next = (list1 != null) ? list1 : list2;
		return dummyNode.next;
	}
	ListNode mergeKLists(ListNode[] lists) {
		if (lists.length == 0) {
			return null;
		}
		if (lists.length == 1) {
			return lists[0];
		}
		ListNode mergedList = helperMerge(lists[0],lists[1]);
		for (int i = 2; i < lists.length; i++) {
			mergedList = helperMerge(mergedList,lists[i]);
		}
		return mergedList;
	}
}