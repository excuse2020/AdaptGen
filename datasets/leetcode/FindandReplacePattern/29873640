class Solution {
	List<String> findAndReplacePattern(String[] words, String pattern) {
		List<String> list = new ArrayList<>();
		for (int i = 0; i < words.length; i++) {
			if (isSame(words[i],pattern) == true) {
				list.add(words[i]);
			}
		}
		return list;
	}
	boolean isSame(String s1, String s2) {
		int n = s1.length();
		Map<Character, Character> mp1 = new HashMap<>();
		Map<Character, Character> mp2 = new HashMap<>();
		for (int i = 0; i < n; i++) {
			char ch1 = s1.charAt(i);
			char ch2 = s2.charAt(i);
			if (!mp1.containsKey(ch1)) {
				mp1.put(ch1,ch2);
			}
			if (!mp2.containsKey(ch2)) {
				mp2.put(ch2,ch1);
			}
			if (!mp1.get(ch1).equals(ch2) || !mp2.get(ch2).equals(ch1)) {
				return false;
			}
		}
		return true;
	}
}