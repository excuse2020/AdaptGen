class Solution {
	int maxScore(List<List<Integer>> grid) {
		int row = grid.size();
		int col = grid.get(0).size();
		int[][] dp = new int[row][col];
		for (int[] d: dp) {	
			Arrays.fill(d,Integer.MIN_VALUE);
		}
		dp[row - 1][col - 1] = grid.get(row - 1).get(col - 1);
		for (int i = row - 1; i >= 0; i--) {
			for (int j = col - 1; j >= 0; j--) {
				if (i < row - 1) {
					dp[i][j] = Math.max(dp[i][j],dp[i + 1][j]);
				}
				if (j < col - 1) {
					dp[i][j] = Math.max(dp[i][j],dp[i][j + 1]);
				}
				dp[i][j] = Math.max(dp[i][j],grid.get(i).get(j));
			}
		}
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				if (i < row - 1) {
					max = Math.max(max,dp[i + 1][j] - grid.get(i).get(j));
				}
				if (j < col - 1) {
					max = Math.max(max,dp[i][j + 1] - grid.get(i).get(j));
				}
			}
		}
		return max;
	}
}