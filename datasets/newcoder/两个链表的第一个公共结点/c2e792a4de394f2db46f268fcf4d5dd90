class Solution {
	ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
		if (pHead1 == null || pHead2 == null) {
			return null;
		}
		ListNode temp1 = pHead1;
		ListNode temp2 = pHead2;
		int Temp1Count = 0;
		int Temp2Count = 0;
		while (true) {
			if (temp1.next == null) {
				break;
			}
			temp1 = temp1.next;
			Temp1Count++;
		}
		while (true) {
			if (temp2.next == null) {
				break;
			}
			temp2 = temp2.next;
			Temp2Count++;
		}
		if (temp1.val != temp2.val) {
			return null;
		}
		ListNode minTemp = null;
		ListNode maxTemp = null;
		int minCount = 0;
		int maxCount = 0;
		if (Temp1Count < Temp2Count) {
			minTemp = pHead1;
			maxTemp = pHead2;
			minCount = Temp1Count;
			maxCount = Temp2Count;
		} 
		else {
			minTemp = pHead2;
			maxTemp = pHead1;
			minCount = Temp2Count;
			maxCount = Temp1Count;
		}
		for (int i = 0; i < maxCount - minCount; i++) {
			maxTemp = maxTemp.next;
		}
		while (maxTemp.val != minTemp.val) {
			maxTemp = maxTemp.next;
			minTemp = minTemp.next;
		}
		return maxTemp;
	}
}