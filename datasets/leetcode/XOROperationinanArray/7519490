class Solution {
	int xorOfRange(int from, int to) {
		return xorFromZeroTo(to) ^ xorFromZeroTo(from - 1);
	}
	int xorOfRangeFromZeroToN(int n) {
		int mod = n % 4;
		if (mod == 0) {
			return n;
		}
		if (mod == 1) {
			return 1;
		}
		if (mod == 2) {
			return n + 1;
		}
		if (mod == 3) {
			return 0;
		}
		return 0;
	}
	int xorOperation(int n, int start) {
		int startWithoutFirstBit = start >> 1;
		int from = startWithoutFirstBit;
		int to = startWithoutFirstBit + n - 1;
		int result = xorOfRange(from,to);
		result = result << 1;
		if ((start % 2 == 1) && (n % 2 == 1)) {
			result = result | 1;
		}
		return result;
	}
}