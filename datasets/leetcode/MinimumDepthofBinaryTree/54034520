class Solution {
	int minDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}
		Stack<TreeNode> stack = new Stack<>();
		Stack<Integer> depths = new Stack<>();
		stack.push(root);
		depths.push(1);
		int minDepth = Integer.MAX_VALUE;
		while (!stack.isEmpty()) {
			TreeNode current = stack.pop();
			int currentDepth = depths.pop();
			if (current.left == null && current.right == null) {
				minDepth = Math.min(minDepth,currentDepth);
			}
			if (current.left != null) {
				stack.push(current.left);
				depths.push(currentDepth + 1);
			}
			if (current.right != null) {
				stack.push(current.right);
				depths.push(currentDepth + 1);
			}
		}
		return minDepth;
	}
}