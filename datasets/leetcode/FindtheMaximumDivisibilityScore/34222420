class Solution {
	boolean find(int divisor, List<Integer> usedDivisors) {
		for (int usedDivisor: usedDivisors) {	
			if (divisor % usedDivisor == 0) {
				return false;
			}
		}
		return true;
	}
	int maxDivScore(int[] nums, int[] divisors) {
		Arrays.sort(divisors);
		List<Integer> usedDivisors = new ArrayList();
		int max = 0;
		int result = divisors[0];
		for (int divisor: divisors) {	
			boolean needToCheck = find(divisor,usedDivisors);
			if (!needToCheck) {
				continue;
			}
			int count = 0;
			for (int num: nums) {	
				if (num % divisor == 0) {
					count++;
				}
			}
			if (count > max) {
				result = divisor;
				max = count;
			}
			usedDivisors.add(divisor);
		}
		return result;
	}
}