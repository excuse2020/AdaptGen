class Solution {
	int[][] dp;
	int mod = 1000000007;
	int countVowelPermutation(int n) {
		Map<Character, List<Character>> map = new HashMap<>();
		prepareMap(map);
		dp = new int[26][n + 1];
		for (int[] arr: dp) {	
			Arrays.fill(arr,-1);
		}
		int count = 0;
		for (char key: map.keySet()) {	
			count += dfs(key,1,map,n) % mod;
			count %= mod;
		}
		return count;
	}
	int dfs(char node, int length, Map<Character, List<Character>> map, int n) {
		if (length == n) {
			return 1;
		}
	}
	void prepareMap(Map<Character, List<Character>> map) {
		List<Character> l1 = new ArrayList<>();
	}
}