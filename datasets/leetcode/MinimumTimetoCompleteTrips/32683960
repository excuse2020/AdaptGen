class Solution {
	long minimumTime(int[] time, int totalTrips) {
		if (time.length == 1) {
			return (long) totalTrips * time[0];
		}
		int min = time[0];
		for (int i: time) {	
			min = Math.min(i,min);
		}
		long start = 1;
		long high = (long) totalTrips * (long) min;
		while (start < high) {
			long mid = (high + start) / 2;
			long curTrip = 0;
			for (int i: time) {	
				curTrip += mid / i;
			}
			if (curTrip >= totalTrips) {
				high = mid;
			} 
			else {
				start = mid + 1;
			}
		}
		return start;
	}
}