class Solution {
	int calculateSum(int n) {
		int sum = 0;
		while (n != 0) {
			int i = n % 10;
			sum += i;
			n /= 10;
		}
		return sum;
	}
	int maximumSum(int[] nums) {
		int res = -1;
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < nums.length; i++) {
			int sumOfDig = calculateSum(nums[i]);
			if (map.containsKey(sumOfDig)) {
				res = Math.max(res,map.get(sumOfDig) + nums[i]);
				if (nums[i] > map.get(sumOfDig)) {
					map.put(sumOfDig,nums[i]);
				}
			} 
			else {
				map.put(sumOfDig,nums[i]);
			}
		}
		return res;
	}
}