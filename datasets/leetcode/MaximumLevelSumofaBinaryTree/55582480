class Solution {
	void getLevelSum(TreeNode root, int level, HashMap<Integer, Integer> hs) {
		if (root == null) {
			return;
		}
		hs.put(level,hs.getOrDefault(level,0) + root.val);
		if (root.right != null) {
			getLevelSum(root.right,level + 1,hs);
		}
		if (root.left != null) {
			getLevelSum(root.left,level + 1,hs);
		}
	}
	int maxLevelSum(TreeNode root) {
		int max = Integer.MIN_VALUE;
		int ind = 0;
		HashMap<Integer, Integer> hs = new HashMap<>();
		getLevelSum(root,1,hs);
		for (Map.Entry<Integer, Integer> k: hs.entrySet()) {	
			if (k.getValue() > max) {
				max = k.getValue();
				ind = k.getKey();
			}
		}
		return ind;
	}
}