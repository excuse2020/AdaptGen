class Solution {
	boolean checkPalindrom(int base, int num) {
		Stack<Integer> stack = new Stack<>();
		int dividend = num;
		while (num != 0) {
			int rem = num % base;
			if (stack.isEmpty() || stack.peek() != rem) {
				stack.push(rem);
			} 
			else if (stack.peek() == rem) {
				stack.pop();
			}
			num = num / base;
		}
		if (stack.isEmpty()) {
			return true;
		}
		return false;
	}
	boolean isStrictlyPalindromic(int n) {
		for (int i = 2; i <= n - 2; i++) {
			boolean ans = checkPalindrom(i,n);
			if (ans == false) {
				return ans;
			}
		}
		return true;
	}
}