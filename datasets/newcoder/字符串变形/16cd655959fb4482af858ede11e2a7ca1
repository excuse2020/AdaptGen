class Solution {
	String trans(String s, int n) {
		if (n == 0) {
			return s;
		}
		StringBuffer res = new StringBuffer();
		for (int i = 0; i < n; i++) {
			if (s.charAt(i) <= 'Z' && s.charAt(i) >= 'A') {
				res.append((char) (s.charAt(i) - 'A' + 'a'));
			} 
			else if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {
				res.append((char) (s.charAt(i) - 'a' + 'A'));
			} 
			else {
				res.append((char) (s.charAt(i)));
			}
		}
		Stack<String> temp = new Stack<String>();
		for (int i = 0; i < n; i++) {
			int j = i;
			while (j < n && res.charAt(j) != ' ') {
				j++;
			}
			temp.push((String) (res.substring(i,j)));
			i = j;
		}
		if (s.charAt(n - 1) == ' ') {
			res = new StringBuffer(" ");
		} 
		else {
			res = new StringBuffer();
		}
		while (!temp.empty()) {
			res.append(temp.peek());
			temp.pop();
			if (!temp.empty()) {
				res.append(" ");
			}
		}
		return res.toString();
	}
}