class Solution {
	boolean validateBinaryTreeNodes(int n, int[] leftChild, int[] rightChild) {
		boolean[] vis = new boolean[n];
		int[] parents = new int[n];
		Arrays.fill(parents,-1);
		for (int i = 0; i < n; i++) {
			if (leftChild[i] != -1) {
				parents[leftChild[i]] = i;
				if (vis[leftChild[i]]) {
					return false;
				}
				vis[leftChild[i]] = true;
			}
			if (rightChild[i] != -1) {
				parents[rightChild[i]] = i;
				if (vis[rightChild[i]]) {
					return false;
				}
				vis[rightChild[i]] = true;
			}
			int parent = parents[i];
			while (parent != -1) {
				parent = parents[parent];
				if (parent != -1 && (parent == rightChild[i] || parent == leftChild[i])) {
					return false;
				}
			}
		}
		boolean flag = false;
		for (boolean b: vis) {	
			if (!b) {
				if (!flag) {
					flag = true;
				} 
				else {
					return false;
				}
			}
		}
		return true;
	}
}