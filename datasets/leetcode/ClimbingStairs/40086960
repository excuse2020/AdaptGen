class Solution {
	int climbStairs(int n) {
		HashMap<Pair, Integer> map = new HashMap<>();
		int ind = n - 1, currSum = 0;
		return f(ind,currSum,n,map);
	}
	int f(int i, int currSum, int target, HashMap<Pair, Integer> map) {
		Pair key = new Pair(i, currSum);
		if (map.containsKey(key)) {
			return map.get(key);
		}
		if (currSum == target) {
			return 1;
		}
		if (i == -1) {
			if (currSum == target) {
				return 1;
			} 
			else {
				return 0;
			}
		}
		int add1 = f(i - 1,currSum + 1,target,map);
		int add2 = f(i - 1,currSum + 2,target,map);
		map.put(key,add1 + add2);
		return add1 + add2;
	}
}