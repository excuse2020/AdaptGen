class Solution {
	char findKthBit(int n, int k) {
		int[] size = new int[n];
		size[0] = 1;
		for (int i = 1; i < n; i++) {
			size[i] = 2 * size[i - 1] + 1;
		}
	}
	int findKthBit(int n, int k, int[] sizes) {
		int size = sizes[n - 1];
		if (k == 1) {
			return 0;
		}
		if (k == size / 2 + 1) {
			return 1;
		}
		if (k <= size / 2) {
			return findKthBit(n - 1,k,sizes);
		} 
		else {
			return findKthBit(n - 1,size + 1 - k,sizes) == 0 ? 1 : 0;
		}
	}
}