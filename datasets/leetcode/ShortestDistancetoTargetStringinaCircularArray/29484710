class Solution {
	int closetTarget(String[] words, String target, int startIndex) {
		int idx = startIndex;
		int n = words.length;
		if (words[idx].equals(target)) {
			return 0;
		}
		idx = (idx + 1) % n;
		int min = n + 1;
		int steps = 0;
		while (idx != startIndex) {
			String word = words[idx];
			steps++;
			if (word.equals(target)) {
				min = Math.min(min,steps);
			}
			idx = (idx + 1) % n;
		}
		idx = (startIndex - 1 + n) % n;
		steps = 0;
		while (idx != startIndex) {
			String word = words[idx];
			steps++;
			if (word.equals(target)) {
				if (min > steps) {
					return steps;
				}
			}
			idx = (idx - 1 + n) % n;
		}
		return min == n + 1 ? -1 : min;
	}
}