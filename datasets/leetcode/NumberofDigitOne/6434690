class Solution {
	int digit = 1;
	int countDigitOne(int number) {
		if (number == 0) {
			return 0;
		}
		int power = (int) Math.log10(number);
		int remainder = (int) (number % Math.pow(10,power));
		int leading = (int) (number / Math.pow(10,power));
		if (power == 0) {
			return number >= digit ? 1 : 0;
		}
		if (leading == digit) {
			return 1 + remainder;
		}
		return countForPower10Multiple(leading,power) + countDigitOne(remainder);
	}
	int countForPower10(int power) {
		return power * (int) Math.pow(10,power - 1);
	}
	int countForPower10Multiple(int coefficient, int power) {
		return (coefficient - 1) * countForPower10(power) + (10 + power) * (int) Math.pow(10,power - 1);
	}
}