class Solution {
	int MOD = 1000000007;
	int maxSubSeq(int[] nums) {
		if (nums == null || nums.length == 0) {
			return 0;
		}
		int n = nums.length;
		if (n == 1) {
			return Math.max(0,nums[0]);
		}
		int[] dp = new int[n];
		dp[0] = Math.max(0,nums[0]);
		dp[1] = Math.max(dp[0],nums[1]);
		for (int i = 2; i < n; i++) {
			dp[i] = Math.max(dp[i - 1],nums[i] + dp[i - 2]);
		}
		return dp[n - 1];
	}
	int maximumSumSubsequence(int[] nums, int[][] queries) {
		int maxSum = 0;
		for (int[] q: queries) {	
			nums[q[0]] = q[1];
			maxSum = (maxSum + maxSubSeq(nums)) % MOD;
		}
		return maxSum;
	}
}