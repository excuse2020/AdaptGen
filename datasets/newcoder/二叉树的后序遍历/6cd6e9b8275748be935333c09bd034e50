class Solution {
	int[] postorderTraversal(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		Stack<TreeNode> stack = new Stack<>();
		TreeNode pre = null;
		TreeNode temp = root;
		while (temp != null || !stack.isEmpty()) {
			while (temp != null) {
				stack.push(temp);
				temp = temp.left;
			}
			TreeNode node = stack.pop();
			if (node.right == null || pre == node.right) {
				list.add(node.val);
				pre = node;
			} 
			else {
				stack.push(node);
				temp = node.right;
			}
		}
		int len = list.size();
		int[] arr = new int[len];
		for (int i = 0; i < len; i++) {
			arr[i] = list.get(i);
		}
		return arr;
	}
}