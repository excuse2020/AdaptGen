class Solution {
	boolean isBSTL(TreeNode root, int val) {
		boolean f1 = true;
		boolean f2 = true;
		if (root.left != null) {
			if (root.left.val < root.val && root.left.val < val) {
				f1 = isBSTL(root.left,val);
			} 
			else {
				return false;
			}
		}
		if (root.right != null) {
			if (root.right.val > root.val && root.right.val < val) {
				f2 = isBSTL(root.right,val);
			} 
			else {
				return false;
			}
		}
		return f1 && f2;
	}
	boolean isBSTR(TreeNode root, int val) {
		boolean f1 = true;
		boolean f2 = true;
		if (root.left != null) {
			if (root.left.val < root.val && root.left.val > val) {
				f1 = isBSTR(root.left,val);
			} 
			else {
				return false;
			}
		}
		if (root.right != null) {
			if (root.right.val > root.val && root.right.val > val) {
				f2 = isBSTR(root.right,val);
			} 
			else {
				return false;
			}
		}
		return f1 && f2;
	}
	boolean isValidBST(TreeNode root) {
		if (root == null) {
			return true;
		}
		boolean f1 = false;
		boolean f2 = false;
		int num = root.val;
		if (root.left == null) {
			f1 = true;
		}
		if (root.left != null) {
			if (root.left.val < num) {
				f1 = isBSTL(root.left,num);
			} 
			else {
				return false;
			}
		}
		if (root.right == null) {
			f2 = true;
		}
		if (root.right != null) {
			if (root.right.val > num) {
				f2 = isBSTR(root.right,num);
			} 
			else {
				return false;
			}
		}
		return f1 && f2;
	}
}