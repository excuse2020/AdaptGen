class Solution {
	int[] countPoints(int[][] points, int[][] queries) {
		int result = new int[queries.length];
		HashMap<int[], Integer> pic = new HashMap<>();
		for (int i = 0; i < queries.length; i++) {
			result[i] = countPointsInside(queries[i][0],queries[i][1],queries[i][2],points,pic);
		}
		return result;
	}
	int countPointsInside(int x, int y, int r, int points, HashMap<int[], Integer> pic) {
		int count = 0;
		if (pic.containsKey(new int{x, y})) {
			return pic.get(new int{x, y});
		}
		for (int i = 0; i < points.length; i++) {
			int X = (int) Math.pow(x - points[i][0],2);
			int Y = (int) Math.pow(y - points[i][1],2);
			int R = r * r;
			if (X + Y - R <= 0) {
				count++;
			}
		}
		pic.put(new int{x, y},count);
		return count;
	}
}