class Solution {
	int num = 1;
	int[][] Matrix(int n) {
		int tR = 0;
		int tC = 0;
		int dR = n - 1;
		int dC = n - 1;
		int[][] matrix = new int[n][n];
		while (tR <= dR && tC <= tR) {
			process(matrix,tR++,tC++,dR--,dC--);
		}
		return matrix;
	}
	void process(int[][] matrix, int a, int b, int c, int d) {
		if (a == c) {
			for (int i = b; i <= d; i++) {
				matrix[a][i] = num;
				num++;
			}
		} 
		else if (b == d) {
			for (int i = a; i <= c; i++) {
				matrix[i][b] = num;
				num++;
			}
		} 
		else {
			int curC = b;
			int curR = a;
			while (curC != d) {
				matrix[a][curC] = num;
				num++;
				curC++;
			}
			while (curR != c) {
				matrix[curR][d] = num;
				num++;
				curR++;
			}
			while (curC != b) {
				matrix[c][curC] = num;
				num++;
				curC--;
			}
			while (curR != a) {
				matrix[curR][b] = num;
				num++;
				curR--;
			}
		}
	}
}