class Solution {
	boolean checkPossibility(int[] nums) {
		if (isSorted(nums)) {
			return true;
		}
		int[] arr = new int[nums.length];
		for (int i = 0; i < nums.length; i++) {
			arr[i] = nums[i];
		}
		int count = 0;
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] > arr[i + 1]) {
				arr[i] = arr[i + 1];
				count++;
			}
		}
		if (count == 1) {
			if (isSorted(arr)) {
				return true;
			}
		}
		int count2 = 0;
		for (int i = 0; i < nums.length - 1; i++) {
			if (nums[i] > nums[i + 1]) {
				nums[i + 1] = nums[i];
				count2++;
			}
		}
		if (count2 == 1) {
			if (isSorted(nums)) {
				return true;
			}
		}
		return false;
	}
	boolean isSorted(int[] arr) {
		for (int i = 0; i < arr.length - 1; i++) {
			if (arr[i] > arr[i + 1]) {
				return false;
			}
		}
		return true;
	}
}