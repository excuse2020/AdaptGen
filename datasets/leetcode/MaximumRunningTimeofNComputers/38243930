class Solution {
	boolean isPossible(int[] arr, long target, int n) {
		long sum = 0;
		for (int val: arr) {	
			sum += (val > target) ? target : val;
		}
		return (sum / n) >= target;
	}
	long maxRunTime(int n, int[] batteries) {
		long l = 1, r = 0;
		for (int battery: batteries) {	
			r += battery;
		}
		r /= n;
		long max = 0;
		while (l <= r) {
			long mid = l + (r - l) / 2;
			if (isPossible(batteries,mid,n)) {
				max = mid;
				l = mid + 1;
			} 
			else {
				r = mid - 1;
			}
		}
		return max;
	}
}