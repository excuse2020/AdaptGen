class Solution {
	int alternatingSubarray(int[] nums) {
		int i = 1;
		while (i < nums.length && nums[i] - nums[i - 1] != 1) {
			i++;
		}
		if (i == nums.length) {
			return -1;
		}
		int diff = nums[i] - nums[i - 1];
		i++;
		int len = 2;
		int maxLen = 2;
		while (i < nums.length) {
			if (nums[i] - nums[i - 1] == diff * -1) {
				len++;
				diff *= -1;
			} 
			else {
				while (i < nums.length && nums[i] - nums[i - 1] != 1) {
					i++;
				}
				if (i == nums.length) {
					maxLen = Math.max(maxLen,len);
					return maxLen;
				}
				diff = nums[i] - nums[i - 1];
				len = 2;
			}
			i++;
			maxLen = Math.max(maxLen,len);
		}
		return maxLen;
	}
}