class Solution {
	int f(String[][] a, int m) {
		Arrays.sort(a,(b, c) -> {(min(b,c))});
		return Integer.parseInt(a[m - 1][1]);
	}
	int min(String[] b, String[] c) {
		for (int i = 0; i < b[0].length(); i++) {
			if (b[0].charAt(i) < c[0].charAt(i)) {
				return -1;
			} 
			else if (b[0].charAt(i) > c[0].charAt(i)) {
				return 1;
			}
		}
		return Integer.parseInt(b[1]) - Integer.parseInt(c[1]);
	}
	int[] smallestTrimmedNumbers(String[] nums, int[][] q) {
		int[] ans = new int[q.length];
		for (int i = 0; i < q.length; i++) {
			String[][] num = new String[nums.length][2];
			for (int j = 0; j < num.length; j++) {
				num[j][0] = nums[j].substring(nums[0].length() - q[i][1]);
				num[j][1] = Integer.toString(j);
			}
			ans[i] = f(num,q[i][0]);
		}
		return ans;
	}
}