class Solution {
	TreeNode dNode = null;
	int max = 0;
	int findMaxDepth(TreeNode node, int depth) {
		if (node == null) {
			return depth;
		}
		int left = findMaxDepth(node.left,depth + 1);
		int right = findMaxDepth(node.right,depth + 1);
		if (left == right && max <= left) {
			max = left;
			dNode = node;
		}
		return Math.max(left,right);
	}
	TreeNode subtreeWithAllDeepest(TreeNode root) {
		if (root == null) {
			return root;
		}
		findMaxDepth(root,0);
		return dNode;
	}
}