class Solution {
	void inorder(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		inorder(root.left,list);
		list.add(root.val);
		inorder(root.right,list);
	}
	void postorder(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		postorder(root.left,list);
		postorder(root.right,list);
		list.add(root.val);
	}
	void preorder(TreeNode root, ArrayList<Integer> list) {
		if (root == null) {
			return;
		}
		list.add(root.val);
		preorder(root.left,list);
		preorder(root.right,list);
	}
	int[][] threeOrders(TreeNode root) {
		ArrayList<Integer> list = new ArrayList();
		preorder(root,list);
		int m = list.size();
		int[][] arr = new int[3][m];
		inorder(root,list);
		postorder(root,list);
		int k = 0;
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < m; j++) {
				arr[i][j] = list.get(k++);
			}
		}
		return arr;
	}
}