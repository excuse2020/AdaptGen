class Solution {
	HashMap<String, Integer> dp;
	int minCost(int n, int[] cuts) {
		dp = new HashMap<String, Integer>();
		return placeNextCut(0,n,cuts);
	}
	int placeNextCut(int start, int end, int[] cuts) {
		String key = String.valueOf(start) + "-";
		if (dp.containsKey(key)) {
			return dp.get(key);
		}
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < cuts.length; i++) {
			if (start < cuts[i] && cuts[i] < end) {
				min = Math.min(min,end - start + placeNextCut(start,cuts[i],cuts) + placeNextCut(cuts[i],end,cuts));
			}
		}
		if (min == Integer.MAX_VALUE) {
			dp.put(key,0);
		} 
		else {
			dp.put(key,min);
		}
		return dp.get(key);
	}
}