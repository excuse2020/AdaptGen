class Solution {
	long countBadPairs(int[] nums) {
		HashMap<Integer, Integer> fMap = new HashMap<>();
		int n = nums.length;
		long N = 1L * (n - 1);
		long tp = (N * (N + 1)) / 2;
		long vp = 0;
		for (int i = 0; i < n; i++) {
			int val = nums[i] - i;
			fMap.put(val,fMap.getOrDefault(val,0) + 1);
		}
		for (int i = 0; i < n; i++) {
			Integer key = nums[i] - i;
			Integer value = fMap.get(key);
			if (value >= 2) {
				vp += value - 1;
				fMap.put(key,value - 1);
			}
		}
		return tp - vp;
	}
}