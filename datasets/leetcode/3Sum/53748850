class Solution {
	List<List<Integer>> threeSum(int[] nums) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(nums);
		for (int i = 0; i < nums.length; i++) {
			if (i == 0 || (i > 0 && nums[i] != nums[i - 1])) {
				twoSum(nums,ans,i + 1,nums.length - 1,-nums[i]);
			}
		}
		return ans;
	}
	void twoSum(int[] nums, List<List<Integer>> ans, int i, int j, int target) {
		while (i < j) {
			if (nums[i] + nums[j] < target) {
				i++;
			} 
			else if (nums[i] + nums[j] > target) {
				j--;
			} 
			else {
				while (i < j && nums[i] == nums[i + 1]) {
					i++;
				}
				while (i < j && nums[j] == nums[j - 1]) {
					j--;
				}
				List<Integer> arr = new ArrayList<>();
				arr.add(-target);
				arr.add(nums[i]);
				arr.add(nums[j]);
				ans.add(arr);
				i++;
				j--;
			}
		}
	}
}