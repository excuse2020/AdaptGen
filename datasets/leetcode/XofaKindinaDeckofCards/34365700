class Solution {
	int gcd(int x, int y) {
		if (x == 0) {
			return y;
		}
		return gcd(y % x,x);
	}
	boolean hasGroupsSizeX(int[] deck) {
		if (deck.length == 1) {
			return false;
		}
		Map<Integer, Integer> map = new HashMap<>();
		for (int i = 0; i < deck.length; i++) {
			if (map.containsKey(deck[i])) {
				int value = map.get(deck[i]);
				map.put(deck[i],value + 1);
			} 
			else {
				map.put(deck[i],1);
			}
		}
		int gcd = 0;
		for (int key: map.keySet()) {	
			if (map.get(key) == 1) {
				return false;
			}
			gcd = gcd(gcd,map.get(key));
		}
		return gcd != 1;
	}
}