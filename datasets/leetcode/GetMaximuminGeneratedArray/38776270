class Solution {
	int getMaximumGenerated(int n) {
		return getMaximumGenerated3(n);
	}
	int getMaximumGenerated1(int n) {
		int max = 0;
		for (int i = 0; i <= n; i++) {
			max = Math.max(max,getVal(i));
		}
		return max;
	}
	int getMaximumGenerated2(int n) {
		int max = 0;
		int[] memo = new int[n + 1];
		for (int i = 0; i <= n; i++) {
			max = Math.max(max,getValWithMemo(i,memo));
		}
		return max;
	}
	int getMaximumGenerated3(int n) {
		int max = 0;
		int[] memo = new int[n + 1];
		for (int i = 0; i <= n; i++) {
			if (i == 0 || i == 1) {
				memo[i] = i;
			} 
			else {
				memo[i] = memo[i / 2];
				if (i % 2 != 0) {
					memo[i] += memo[i / 2 + 1];
				}
			}
			max = Math.max(max,memo[i]);
		}
		return max;
	}
	int getVal(int i) {
		if (i == 0 || i == 1) {
			return i;
		}
		int ans = getVal(i / 2);
		if (i % 2 != 0) {
			ans += getVal(i / 2 + 1);
		}
		return ans;
	}
	int getValWithMemo(int i, int[] memo) {
		if (i == 0 || i == 1) {
			return i;
		}
		if (memo[i] != 0) {
			return memo[i];
		}
		int ans = memo[i / 2] = getValWithMemo(i / 2,memo);
		if (i % 2 != 0) {
			memo[i / 2 + 1] = getValWithMemo(i / 2 + 1,memo);
			ans += memo[i / 2 + 1];
		}
		return ans;
	}
}