class Solution {
	long getdigitsum(long n) {
		long sum = 0;
		while (n > 0) {
			long temp = n % 10;
			sum += temp;
			n = n / 10;
		}
		return sum;
	}
	long makeIntegerBeautiful(long n, int target) {
		long temp = n, beautynum = 0;
		long digitsum = getdigitsum(n);
		if (digitsum <= target) {
			return 0;
		}
		for (int i = 0; i < String.valueOf(n).length(); i++) {
			long pos = (long) Math.ceil(n / Math.pow(10,i + 1)) * (long) Math.pow(10,i + 1);
			if (getdigitsum(pos) <= target) {
				return (pos - n);
			}
		}
		return -1;
	}
}