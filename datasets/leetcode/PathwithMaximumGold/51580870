class Solution {
	int getMaximumGold(int[][] arr) {
		int max = 0;
		boolean[][] visited = new boolean[arr.length][arr[0].length];
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[0].length; j++) {
				if (arr[i][j] != 0 && visited[i][j] == false) {
					max = Math.max(max,totalmaxgold(arr,i,j,visited));
				}
			}
		}
		return max;
	}
	int totalmaxgold(int[][] arr, int i, int j, boolean[][] visited) {
		if (i < 0 || j < 0 || i >= arr.length || j >= arr[0].length || visited[i][j] || arr[i][j] == 0) {
			return 0;
		}
		visited[i][j] = true;
		int gold = arr[i][j];
		int maxgold = gold;
		maxgold += Math.max(totalmaxgold(arr,i - 1,j,visited),Math.max(totalmaxgold(arr,i + 1,j,visited),Math.max(totalmaxgold(arr,i,j - 1,visited),totalmaxgold(arr,i,j + 1,visited))));
		visited[i][j] = false;
		return maxgold;
	}
}