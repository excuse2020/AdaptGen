class Solution {
	int cnt = 0;
	void dfs(TreeNode root, int[] arr) {
		arr[root.val]++;
		if (root.left == null && root.right == null) {
			int oddCount = 0;
			for (int i = 1; i <= 9; i++) {
				if (arr[i] % 2 != 0) {
					oddCount++;
					if (oddCount > 1) {
						break;
					}
				}
			}
			if (oddCount <= 1) {
				cnt++;
			}
		}
		if (root.left != null) {
			dfs(root.left,arr);
		}
		if (root.right != null) {
			dfs(root.right,arr);
		}
		arr[root.val]--;
	}
	int pseudoPalindromicPaths(TreeNode root) {
		if (root == null) {
			return 0;
		}
		int[] arr = new int[10];
		dfs(root,arr);
		return cnt;
	}
}