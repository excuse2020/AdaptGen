class Solution {
	long maximumSubarraySum(int[] nums, int k) {
		Map<Integer, Integer> map = new HashMap<>();
		int l, r;
		long maxSum = 0;
		long sum = 0;
		l = r = 0;
		for (int i = 0; i < nums.length; i++) {
			r = i;
			if (r - l + 1 > k) {
				map.remove(nums[r - k]);
				sum -= nums[r - k];
				l++;
			}
			if (map.containsKey(nums[r])) {
				l = map.get(nums[i]) + 1;
				i = l - 1;
				sum = 0;
				map.clear();
			} 
			else {
				map.put(nums[r],r);
				sum += nums[r];
				if ((r - l + 1) >= k && sum > maxSum) {
					maxSum = sum;
				}
			}
		}
		return maxSum;
	}
}