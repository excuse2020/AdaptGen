class Solution {
	TreeNode balanceBST(TreeNode root) {
		ArrayList<Integer> lis = new ArrayList<>();
		getInorder(root,lis);
		root = createBST(lis,0,lis.size() - 1);
		return root;
	}
	TreeNode createBST(ArrayList<Integer> lis, int st, int end) {
		if (st > end) {
			return null;
		}
		int mid = (st + end) / 2;
		TreeNode root = new TreeNode(lis.get(mid));
		root.left = createBST(lis,st,mid - 1);
		root.right = createBST(lis,mid + 1,end);
		return root;
	}
	void getInorder(TreeNode root, ArrayList<Integer> lis) {
		if (root == null) {
			return;
		}
		getInorder(root.left,lis);
		lis.add(root.val);
		getInorder(root.right,lis);
	}
}