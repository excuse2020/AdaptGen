class Solution {
	int answer(int n, HashMap<Integer, Integer> map) {
		if (n == 1) {
			return 0;
		}
		if (map.containsKey(n)) {
			return map.get(n);
		}
		int count = 1;
		if (n % 2 == 0) {
			return count + answer(n >> 1,map);
		}
		if (n % 2 != 0) {
			map.put(n,count + Math.min(answer(n + 1,map),answer(n - 1,map)));
			return count + Math.min(answer(n + 1,map),answer(n - 1,map));
		}
		return map.put(n,count);
	}
	int integerReplacement(int n) {
		if (n == 1) {
			return 0;
		}
		if (n == Integer.MAX_VALUE) {
			return 32;
		}
		HashMap<Integer, Integer> map = new HashMap<>();
		return answer(n,map);
	}
}