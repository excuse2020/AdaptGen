class Solution {
	TreeNode buildTree(int[] inorder, int[] postorder) {
		if (inorder.length == 0 || postorder.length == 0) {
			return null;
		}
		return help(inorder,0,inorder.length - 1,postorder,0,postorder.length - 1);
	}
	TreeNode help(int[] inorder, int k, int l, int[] postorder, int m, int n) {
		if (k > l || m > n) {
			return null;
		}
		int rootvalue = postorder[n];
		TreeNode root = new TreeNode(rootvalue);
		int j = k;
		while (inorder[j] != rootvalue) {
			j++;
		}
		int lst = j - k;
		root.left = help(inorder,k,j - 1,postorder,m,m + lst - 1);
		root.right = help(inorder,j + 1,l,postorder,m + lst,n - 1);
		return root;
	}
}