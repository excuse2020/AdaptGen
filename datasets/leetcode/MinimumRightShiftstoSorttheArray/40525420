class Solution {
	int minimumRightShifts(List<Integer> nums) {
		if (sortCheck(nums)) {
			return 0;
		}
		int n = nums.size();
		int turn = 0;
		while (n > 0) {
			int temp = nums.get(nums.size() - 1);
			for (int i = nums.size() - 1; i >= 1; i--) {
				nums.set(i,nums.get(i - 1));
			}
			nums.set(0,temp);
			turn++;
			if (sortCheck(nums)) {
				return turn;
			}
			n--;
		}
		return -1;
	}
	boolean sortCheck(List<Integer> nums) {
		for (int i = 1; i < nums.size(); i++) {
			if (nums.get(i) <= nums.get(i - 1)) {
				return false;
			}
		}
		return true;
	}
}