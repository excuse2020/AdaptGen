class Solution {
	int maxHeightOfTriangle(int red, int blue) {
		int height = 0;
		int maxByRed = solve(red,blue,0,1,1,true);
		int maxByBlue = solve(red,blue,0,1,1,false);
		return Math.max(maxByRed,maxByBlue);
	}
	int solve(int red, int blue, int height, int level, int size, boolean start) {
		if (level == 0 && start == true) {
			red--;
			height++;
			level++;
			size++;
			return solve(red,blue,height,level,size,!start);
		} 
		else if (level == 0 && start == false) {
			blue--;
			height++;
			level++;
			size++;
			return solve(red,blue,height,level,size,!start);
		}
		if (level > 0 && start == true) {
			if (blue >= size) {
				blue = blue - size;
				height++;
				level++;
				size++;
				return solve(red,blue,height,level,size,!start);
			} 
			else {
				return height;
			}
		} 
		else if (level > 0 && start == false) {
			if (red >= size) {
				red = red - size;
				height++;
				level++;
				size++;
				return solve(red,blue,height,level,size,!start);
			} 
			else {
				return height;
			}
		}
		return height;
	}
}