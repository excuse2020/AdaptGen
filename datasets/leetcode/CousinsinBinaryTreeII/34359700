class Solution {
	TreeNode replaceValueInTree(TreeNode root) {
		if (root == null) {
			return null;
		}
		List<Integer> levelSum = new ArrayList<>();
		Queue<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		int currentLevelSum = root.val;
		while (!queue.isEmpty()) {
			int size = queue.size();
			int nextLevelSum = 0;
			for (int i = 0; i < size; i++) {
				TreeNode node = queue.remove();
				node.val = currentLevelSum - node.val;
				if (node.left != null) {
					queue.add(node.left);
					nextLevelSum += node.left.val;
				}
				if (node.right != null) {
					queue.add(node.right);
					nextLevelSum += node.right.val;
				}
				if (node.left != null && node.right != null) {
					int sum = node.left.val + node.right.val;
					node.left.val = node.right.val = sum;
				}
			}
			currentLevelSum = nextLevelSum;
		}
		return root;
	}
}